/*
** ###################################################################
**     Processor:           MVF50GS10MK50
**     Compilers:           GNU C Compiler
**                          IAR ANSI C/C++ Compiler for ARM
**
**     Reference manual:    Faraday RM Rev. 1, Draft B Feb 2012
**     Version:             rev. 0.1, 2012-05-30
**
**     Abstract:
**         This header file implements peripheral memory map for MVF50GS10MK50
**         processor.
**
**     Copyright: 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
**
**     http:                 www.freescale.com
**     mail:                 support@freescale.com
**
**     Revisions:
**     - rev. 0.1 (2012-05-30)
**         Initial version
**
** ###################################################################
*/

/**
 * @file MVF50GS10MK50.h
 * @version 0.1
 * @date 2012-05-30
 * @brief Peripheral memory map for MVF50GS10MK50
 *
 * This header file implements peripheral memory map for MVF50GS10MK50 processor.
 */


/* ----------------------------------------------------------------------------
   -- MCU activation
   ---------------------------------------------------------------------------- */

/* Prevention from multiple including the same memory map */
#if !defined(MCU_MVF50GS10MK50)  /* Check if memory map has not been already included */
#define MCU_MVF50GS10MK50

/* Check if another memory map has not been also included */
#if (defined(MCU_ACTIVE))
  #error MVF50GS10MK50 memory map: There is already included another memory map. Only one memory map can be included.
#endif /* (defined(MCU_ACTIVE)) */
#define MCU_ACTIVE

#include <stdint.h>

/** Memory map major version (memory maps with equal major version number are
 * compatible) */
#define MCU_MEM_MAP_VERSION 0x0000u
/** Memory map minor version */
#define MCU_MEM_MAP_VERSION_MINOR 0x0001u


/* ----------------------------------------------------------------------------
   -- Interrupt vector numbers
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Interrupt_vector_numbers Interrupt vector numbers
 * @{
 */

/** Interrupt Number Definitions */
typedef enum {
  INT_Reset                    = 0,                /**< Reset (HardWare Interrupt) */
  INT_UndefinedInstruction     = 1,                /**< Undefined Instruction (HardWare Interrupt) */
  INT_SupervisorCall           = 2,                /**< Supervisor Call (HardWare Interrupt) */
  INT_PrefetchAbort            = 3,                /**< Prefetch Abort (HardWare Interrupt) */
  INT_DataAbort                = 4,                /**< Data Abort (HardWare Interrupt) */
  INT_ReservedHW5              = 5,                /**< Reserved (HardWare Interrupt) */
  INT_IRQ                      = 6,                /**< IRQ (HardWare Interrupt) */
  INT_FIRQ                     = 7,                /**< Fast IRQ (HardWare Interrupt) */
  INT_ReservedHW8              = 8,                /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW9              = 9,                /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW10             = 10,               /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW11             = 11,               /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW12             = 12,               /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW13             = 13,               /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW14             = 14,               /**< Reserved (HardWare Interrupt) */
  INT_ReservedHW15             = 15,               /**< Reserved (HardWare Interrupt) */
  INT_SGI0                     = 16,               /**< Software Generated Interrupt */
  INT_SGI1                     = 17,               /**< Software Generated Interrupt */
  INT_SGI2                     = 18,               /**< Software Generated Interrupt */
  INT_SGI3                     = 19,               /**< Software Generated Interrupt */
  INT_SGI4                     = 20,               /**< Software Generated Interrupt */
  INT_SGI5                     = 21,               /**< Software Generated Interrupt */
  INT_SGI6                     = 22,               /**< Software Generated Interrupt */
  INT_SGI7                     = 23,               /**< Software Generated Interrupt */
  INT_SGI8                     = 24,               /**< Software Generated Interrupt */
  INT_SGI9                     = 25,               /**< Software Generated Interrupt */
  INT_SGI10                    = 26,               /**< Software Generated Interrupt */
  INT_SGI11                    = 27,               /**< Software Generated Interrupt */
  INT_SGI12                    = 28,               /**< Software Generated Interrupt */
  INT_SGI13                    = 29,               /**< Software Generated Interrupt */
  INT_SGI14                    = 30,               /**< Software Generated Interrupt */
  INT_SGI15                    = 31,               /**< Software Generated Interrupt */
  INT_PPI0                     = 32,               /**< Private Peripheral Interrupt */
  INT_PPI1                     = 33,               /**< Private Peripheral Interrupt */
  INT_PPI2                     = 34,               /**< Private Peripheral Interrupt */
  INT_PPI3                     = 35,               /**< Private Peripheral Interrupt */
  INT_PPI4                     = 36,               /**< Private Peripheral Interrupt */
  INT_PPI5                     = 37,               /**< Private Peripheral Interrupt */
  INT_PPI6                     = 38,               /**< Private Peripheral Interrupt */
  INT_PPI7                     = 39,               /**< Private Peripheral Interrupt */
  INT_PPI8                     = 40,               /**< Private Peripheral Interrupt */
  INT_PPI9                     = 41,               /**< Private Peripheral Interrupt */
  INT_PPI10                    = 42,               /**< Private Peripheral Interrupt */
  INT_GlobalTimer              = 43,               /**< Private Peripheral Interrupt */
  INT_PPI12                    = 44,               /**< Private Peripheral Interrupt */
  INT_CoreTimer                = 45,               /**< Private Peripheral Interrupt */
  INT_CoreWatchdog             = 46,               /**< Private Peripheral Interrupt */
  INT_PPI15                    = 47,               /**< Private Peripheral Interrupt */
  INT_CPU_to_CPU_int0          = 48,               /**< Shared Peripheral Interrupt */
  INT_CPU_to_CPU_int1          = 49,               /**< Shared Peripheral Interrupt */
  INT_CPU_to_CPU_int2          = 50,               /**< Shared Peripheral Interrupt */
  INT_CPU_to_CPU_int3          = 51,               /**< Shared Peripheral Interrupt */
  INT_Directed_CA5_int0        = 52,               /**< Shared Peripheral Interrupt */
  INT_Directed_CA5_int1        = 53,               /**< Shared Peripheral Interrupt */
  INT_Directed_CA5_int2        = 54,               /**< Shared Peripheral Interrupt */
  INT_Directed_CA5_int3        = 55,               /**< Shared Peripheral Interrupt */
  INT_DMA0_Transfer_Complete   = 56,               /**< Shared Peripheral Interrupt */
  INT_DMA0_Error               = 57,               /**< Shared Peripheral Interrupt */
  INT_DMA1_Transfer_Complete   = 58,               /**< Shared Peripheral Interrupt */
  INT_DMA1_Error               = 59,               /**< Shared Peripheral Interrupt */
  INT_Reserved44               = 60,               /**< Shared Peripheral Interrupt */
  INT_Reserved45               = 61,               /**< Shared Peripheral Interrupt */
  INT_MSCM_ECC0                = 62,               /**< Shared Peripheral Interrupt */
  INT_MSCM_ECC1                = 63,               /**< Shared Peripheral Interrupt */
  INT_CSU_Alarm                = 64,               /**< Shared Peripheral Interrupt */
  INT_Reserved49               = 65,               /**< Shared Peripheral Interrupt */
  INT_MSCM_ACTZS               = 66,               /**< Shared Peripheral Interrupt */
  INT_Reserved51               = 67,               /**< Shared Peripheral Interrupt */
  INT_WDOG_A5                  = 68,               /**< Shared Peripheral Interrupt */
  INT_WDOG_M4                  = 69,               /**< Shared Peripheral Interrupt */
  INT_WDOG_SNVS                = 70,               /**< Shared Peripheral Interrupt */
  INT_CP1_Boot_Fail            = 71,               /**< Shared Peripheral Interrupt */
  INT_QuadSPI0                 = 72,               /**< Shared Peripheral Interrupt */
  INT_QuadSPI1                 = 73,               /**< Shared Peripheral Interrupt */
  INT_DRAM                     = 74,               /**< Shared Peripheral Interrupt */
  INT_SDHC0                    = 75,               /**< Shared Peripheral Interrupt */
  INT_SDHC1                    = 76,               /**< Shared Peripheral Interrupt */
  INT_Reserved61               = 77,               /**< Shared Peripheral Interrupt */
  INT_DCU0                     = 78,               /**< Shared Peripheral Interrupt */
  INT_DCU1                     = 79,               /**< Shared Peripheral Interrupt */
  INT_VIU                      = 80,               /**< Shared Peripheral Interrupt */
  INT_Reserved65               = 81,               /**< Shared Peripheral Interrupt */
  INT_GC355                    = 82,               /**< Shared Peripheral Interrupt */
  INT_RLE                      = 83,               /**< Shared Peripheral Interrupt */
  INT_LCD                      = 84,               /**< Shared Peripheral Interrupt */
  INT_Reserved69               = 85,               /**< Shared Peripheral Interrupt */
  INT_Reserved70               = 86,               /**< Shared Peripheral Interrupt */
  INT_PIT                      = 87,               /**< PIT timer interrupt (Shared Peripheral Interrupt) */
  INT_LPTimer0                 = 88,               /**< LPTimer interrupt (Shared Peripheral Interrupt) */
  INT_Reserved73               = 89,               /**< Shared Peripheral Interrupt */
  INT_FlexTimer0               = 90,               /**< FTM0 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  INT_FlexTimer1               = 91,               /**< FTM1 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  INT_FlexTimer2               = 92,               /**< FTM2 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  INT_FlexTimer3               = 93,               /**< FTM3 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  INT_Reserved78               = 94,               /**< Shared Peripheral Interrupt */
  INT_Reserved79               = 95,               /**< Shared Peripheral Interrupt */
  INT_Reserved80               = 96,               /**< Shared Peripheral Interrupt */
  INT_Reserved81               = 97,               /**< Shared Peripheral Interrupt */
  INT_USBPHY0                  = 98,               /**< Shared Peripheral Interrupt */
  INT_USBPHY1                  = 99,               /**< Shared Peripheral Interrupt */
  INT_Reserved84               = 100,              /**< Shared Peripheral Interrupt */
  INT_ADC0                     = 101,              /**< Shared Peripheral Interrupt */
  INT_ADC1                     = 102,              /**< Shared Peripheral Interrupt */
  INT_DAC0                     = 103,              /**< Shared Peripheral Interrupt */
  INT_DAC1                     = 104,              /**< Shared Peripheral Interrupt */
  INT_Reserved89               = 105,              /**< Shared Peripheral Interrupt */
  INT_FlexCAN0                 = 106,              /**< Shared Peripheral Interrupt */
  INT_FlexCAN1                 = 107,              /**< Shared Peripheral Interrupt */
  INT_MLB                      = 108,              /**< Shared Peripheral Interrupt */
  INT_UART0                    = 109,              /**< Shared Peripheral Interrupt */
  INT_UART1                    = 110,              /**< Shared Peripheral Interrupt */
  INT_UART2                    = 111,              /**< Shared Peripheral Interrupt */
  INT_UART3                    = 112,              /**< Shared Peripheral Interrupt */
  INT_UART4                    = 113,              /**< Shared Peripheral Interrupt */
  INT_UART5                    = 114,              /**< Shared Peripheral Interrupt */
  INT_DSPI0                    = 115,              /**< Shared Peripheral Interrupt */
  INT_DSPI1                    = 116,              /**< Shared Peripheral Interrupt */
  INT_DSPI2                    = 117,              /**< Shared Peripheral Interrupt */
  INT_DSPI3                    = 118,              /**< Shared Peripheral Interrupt */
  INT_I2C0                     = 119,              /**< Shared Peripheral Interrupt */
  INT_I2C1                     = 120,              /**< Shared Peripheral Interrupt */
  INT_I2C2                     = 121,              /**< Shared Peripheral Interrupt */
  INT_I2C3                     = 122,              /**< Shared Peripheral Interrupt */
  INT_USB0                     = 123,              /**< Shared Peripheral Interrupt */
  INT_USB1                     = 124,              /**< Shared Peripheral Interrupt */
  INT_Reserved109              = 125,              /**< Shared Peripheral Interrupt */
  INT_ENET_MAC0                = 126,              /**< Shared Peripheral Interrupt */
  INT_ENET_MAC1                = 127,              /**< Shared Peripheral Interrupt */
  INT_ENET_1588_Timer0         = 128,              /**< Shared Peripheral Interrupt */
  INT_ENET_1588_Timer1         = 129,              /**< Shared Peripheral Interrupt */
  INT_ENET_Switch              = 130,              /**< Shared Peripheral Interrupt */
  INT_NFC                      = 131,              /**< Shared Peripheral Interrupt */
  INT_SAI0                     = 132,              /**< Shared Peripheral Interrupt */
  INT_SAI1                     = 133,              /**< Shared Peripheral Interrupt */
  INT_SAI2                     = 134,              /**< Shared Peripheral Interrupt */
  INT_SAI3                     = 135,              /**< Shared Peripheral Interrupt */
  INT_ESAI_BIFIFO              = 136,              /**< Shared Peripheral Interrupt */
  INT_SPDIF                    = 137,              /**< Shared Peripheral Interrupt */
  INT_ASRC                     = 138,              /**< Shared Peripheral Interrupt */
  INT_CMU                      = 139,              /**< Shared Peripheral Interrupt */
  INT_WKPU0                    = 140,              /**< Shared Peripheral Interrupt */
  INT_WKPU1                    = 141,              /**< Shared Peripheral Interrupt */
  INT_CCM0                     = 142,              /**< Shared Peripheral Interrupt */
  INT_CCM1                     = 143,              /**< Shared Peripheral Interrupt */
  INT_SRC                      = 144,              /**< Shared Peripheral Interrupt */
  INT_PDB                      = 145,              /**< Shared Peripheral Interrupt */
  INT_EWM                      = 146,              /**< Shared Peripheral Interrupt */
  INT_Reserved131              = 147,              /**< Shared Peripheral Interrupt */
  INT_SNVS_Consolidated        = 148,              /**< Shared Peripheral Interrupt */
  INT_SNVS_Security            = 149,              /**< Shared Peripheral Interrupt */
  INT_CAAM                     = 150,              /**< Shared Peripheral Interrupt */
  INT_Reserved135              = 151,              /**< Shared Peripheral Interrupt */
  INT_Reserved136              = 152,              /**< Shared Peripheral Interrupt */
  INT_Reserved137              = 153,              /**< Shared Peripheral Interrupt */
  INT_Reserved138              = 154,              /**< Shared Peripheral Interrupt */
  INT_PORT0                    = 155,              /**< Shared Peripheral Interrupt */
  INT_PORT1                    = 156,              /**< Shared Peripheral Interrupt */
  INT_PORT2                    = 157,              /**< Shared Peripheral Interrupt */
  INT_PORT3                    = 158,              /**< Shared Peripheral Interrupt */
  INT_PORT4                    = 159,              /**< Shared Peripheral Interrupt */
  INT_Spurious1022             = 160,              /**< Special Interrupt */
  INT_Spurious1023             = 161               /**< Special Interrupt */
} IRQInterruptIndex;

/** Interrupt Number Definitions */
typedef enum {
  NVIC_Initial_Stack_Pointer   = 0,                /**< Initial Stack Pointer */
  NVIC_Initial_Program_Counter = 1,                /**< Initial Program Counter */
  NVIC_NMI                     = 2,                /**< Non-maskable Interrupt (NMI) */
  NVIC_Hard_Fault              = 3,                /**< Hard Fault */
  NVIC_Mem_Manage_Fault        = 4,                /**< MemManage Fault */
  NVIC_Bus_Fault               = 5,                /**< Bus Fault */
  NVIC_Usage_Fault             = 6,                /**< Usage Fault */
  NVIC_Reserved7               = 7,                /**< Reserved interrupt 7 */
  NVIC_Reserved8               = 8,                /**< Reserved interrupt 8 */
  NVIC_Reserved9               = 9,                /**< Reserved interrupt 9 */
  NVIC_Reserved10              = 10,               /**< Reserved interrupt 10 */
  NVIC_SVCall                  = 11,               /**< Supervisor call (SVCall) */
  NVIC_DebugMonitor            = 12,               /**< Debug Monitor */
  NVIC_Reserved13              = 13,               /**< Reserved interrupt 13 */
  NVIC_PendableSrvReq          = 14,               /**< Pendable request for system service (PendableSrvReq) */
  NVIC_SysTick                 = 15,               /**< SysTick Interrupt */
  NVIC_CPU_to_CPU_int0         = 16,               /**< Shared Peripheral Interrupt */
  NVIC_CPU_to_CPU_int1         = 17,               /**< Shared Peripheral Interrupt */
  NVIC_CPU_to_CPU_int2         = 18,               /**< Shared Peripheral Interrupt */
  NVIC_CPU_to_CPU_int3         = 19,               /**< Shared Peripheral Interrupt */
  NVIC_Directed_CM4_int0       = 20,               /**< Shared Peripheral Interrupt */
  NVIC_Directed_CM4_int1       = 21,               /**< Shared Peripheral Interrupt */
  NVIC_Directed_CM4_int2       = 22,               /**< Shared Peripheral Interrupt */
  NVIC_Directed_CM4_int3       = 23,               /**< Shared Peripheral Interrupt */
  NVIC_DMA0_Transfer_Complete  = 24,               /**< Shared Peripheral Interrupt */
  NVIC_DMA0_Error              = 25,               /**< Shared Peripheral Interrupt */
  NVIC_DMA1_Transfer_Complete  = 26,               /**< Shared Peripheral Interrupt */
  NVIC_DMA1_Error              = 27,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved28              = 28,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved29              = 29,               /**< Shared Peripheral Interrupt */
  NVIC_MSCM_ECC0               = 30,               /**< Shared Peripheral Interrupt */
  NVIC_MSCM_ECC1               = 31,               /**< Shared Peripheral Interrupt */
  NVIC_CSU_Alarm               = 32,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved33              = 33,               /**< Shared Peripheral Interrupt */
  NVIC_MSCM_ACTZS              = 34,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved35              = 35,               /**< Shared Peripheral Interrupt */
  NVIC_WDOG_A5                 = 36,               /**< Shared Peripheral Interrupt */
  NVIC_WDOG_M4                 = 37,               /**< Shared Peripheral Interrupt */
  NVIC_WDOG_SNVS               = 38,               /**< Shared Peripheral Interrupt */
  NVIC_CP1_Boot_Fail           = 39,               /**< Shared Peripheral Interrupt */
  NVIC_QuadSPI0                = 40,               /**< Shared Peripheral Interrupt */
  NVIC_QuadSPI1                = 41,               /**< Shared Peripheral Interrupt */
  NVIC_DRAM                    = 42,               /**< Shared Peripheral Interrupt */
  NVIC_SDHC0                   = 43,               /**< Shared Peripheral Interrupt */
  NVIC_SDHC1                   = 44,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved45              = 45,               /**< Shared Peripheral Interrupt */
  NVIC_DCU0                    = 46,               /**< Shared Peripheral Interrupt */
  NVIC_DCU1                    = 47,               /**< Shared Peripheral Interrupt */
  NVIC_VIU                     = 48,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved49              = 49,               /**< Shared Peripheral Interrupt */
  NVIC_GC355                   = 50,               /**< Shared Peripheral Interrupt */
  NVIC_RLE                     = 51,               /**< Shared Peripheral Interrupt */
  NVIC_LCD                     = 52,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved53              = 53,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved54              = 54,               /**< Shared Peripheral Interrupt */
  NVIC_PIT                     = 55,               /**< Shared Peripheral Interrupt */
  NVIC_LPTimer0                = 56,               /**< LPTimer interrupt (Shared Peripheral Interrupt) */
  NVIC_Reserved57              = 57,               /**< Shared Peripheral Interrupt */
  NVIC_FlexTimer0              = 58,               /**< FTM0 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  NVIC_FlexTimer1              = 59,               /**< FTM1 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  NVIC_FlexTimer2              = 60,               /**< FTM2 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  NVIC_FlexTimer3              = 61,               /**< FTM3 fault, overflow and channels interrupt (Shared Peripheral Interrupt) */
  NVIC_Reserved62              = 62,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved63              = 63,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved64              = 64,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved65              = 65,               /**< Shared Peripheral Interrupt */
  NVIC_USBPHY0                 = 66,               /**< Shared Peripheral Interrupt */
  NVIC_USBPHY1                 = 67,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved68              = 68,               /**< Shared Peripheral Interrupt */
  NVIC_ADC0                    = 69,               /**< Shared Peripheral Interrupt */
  NVIC_ADC1                    = 70,               /**< Shared Peripheral Interrupt */
  NVIC_DAC0                    = 71,               /**< Shared Peripheral Interrupt */
  NVIC_DAC1                    = 72,               /**< Shared Peripheral Interrupt */
  NVIC_Reserved73              = 73,               /**< Shared Peripheral Interrupt */
  NVIC_FlexCAN0                = 74,               /**< Shared Peripheral Interrupt */
  NVIC_FlexCAN1                = 75,               /**< Shared Peripheral Interrupt */
  NVIC_MLB                     = 76,               /**< Shared Peripheral Interrupt */
  NVIC_UART0                   = 77,               /**< Shared Peripheral Interrupt */
  NVIC_UART1                   = 78,               /**< Shared Peripheral Interrupt */
  NVIC_UART2                   = 79,               /**< Shared Peripheral Interrupt */
  NVIC_UART3                   = 80,               /**< Shared Peripheral Interrupt */
  NVIC_UART4                   = 81,               /**< Shared Peripheral Interrupt */
  NVIC_UART5                   = 82,               /**< Shared Peripheral Interrupt */
  NVIC_DSPI0                   = 83,               /**< Shared Peripheral Interrupt */
  NVIC_DSPI1                   = 84,               /**< Shared Peripheral Interrupt */
  NVIC_DSPI2                   = 85,               /**< Shared Peripheral Interrupt */
  NVIC_DSPI3                   = 86,               /**< Shared Peripheral Interrupt */
  NVIC_I2C0                    = 87,               /**< Shared Peripheral Interrupt */
  NVIC_I2C1                    = 88,               /**< Shared Peripheral Interrupt */
  NVIC_I2C2                    = 89,               /**< Shared Peripheral Interrupt */
  NVIC_I2C3                    = 90,               /**< Shared Peripheral Interrupt */
  NVIC_USBO                    = 91,               /**< Shared Peripheral Interrupt */
  NVIC_USB1                    = 92,               /**< Shared Peripheral Interrupt */
  NVIC_ENET_MAC0               = 94,               /**< Shared Peripheral Interrupt */
  NVIC_ENET_MAC1               = 95,               /**< Shared Peripheral Interrupt */
  NVIC_ENET_1588_Timer0        = 96,               /**< Shared Peripheral Interrupt */
  NVIC_ENET_1588_Timer1        = 97,               /**< Shared Peripheral Interrupt */
  NVIC_ENET_Switch             = 98,               /**< Shared Peripheral Interrupt */
  NVIC_NFC                     = 99,               /**< Shared Peripheral Interrupt */
  NVIC_SAI0                    = 100,              /**< Shared Peripheral Interrupt */
  NVIC_SAI1                    = 101,              /**< Shared Peripheral Interrupt */
  NVIC_SAI2                    = 102,              /**< Shared Peripheral Interrupt */
  NVIC_SAI3                    = 103,              /**< Shared Peripheral Interrupt */
  NVIC_ESAI_BIFIFO             = 104,              /**< Shared Peripheral Interrupt */
  NVIC_SPDIF                   = 105,              /**< Shared Peripheral Interrupt */
  NVIC_ASRC                    = 106,              /**< Shared Peripheral Interrupt */
  NVIC_CMU                     = 107,              /**< Shared Peripheral Interrupt */
  NVIC_WKPU0                   = 108,              /**< Shared Peripheral Interrupt */
  NVIC_WKPU1                   = 109,              /**< Shared Peripheral Interrupt */
  NVIC_CCM0                    = 110,              /**< Shared Peripheral Interrupt */
  NVIC_CCM1                    = 111,              /**< Shared Peripheral Interrupt */
  NVIC_SRC                     = 112,              /**< Shared Peripheral Interrupt */
  NVIC_PDB                     = 113,              /**< Shared Peripheral Interrupt */
  NVIC_EWM                     = 114,              /**< Shared Peripheral Interrupt */
  NVIC_Reserved115             = 115,              /**< Shared Peripheral Interrupt */
  NVIC_SNVS_Consolidated       = 116,              /**< Shared Peripheral Interrupt */
  NVIC_SNVS_Security           = 117,              /**< Shared Peripheral Interrupt */
  NVIC_CAAM                    = 118,              /**< Shared Peripheral Interrupt */
  NVIC_Reserved119             = 119,              /**< Shared Peripheral Interrupt */
  NVIC_Reserved120             = 120,              /**< Shared Peripheral Interrupt */
  NVIC_Reserved121             = 121,              /**< Shared Peripheral Interrupt */
  NVIC_Reserved122             = 122,              /**< Shared Peripheral Interrupt */
  NVIC_PORT0                   = 123,              /**< Shared Peripheral Interrupt */
  NVIC_PORT1                   = 124,              /**< Shared Peripheral Interrupt */
  NVIC_PORT2                   = 125,              /**< Shared Peripheral Interrupt */
  NVIC_PORT3                   = 126,              /**< Shared Peripheral Interrupt */
  NVIC_PORT4                   = 127,              /**< Shared Peripheral Interrupt */
} NVICInterruptIndex;

/**
 * @}
 */ /* end of group Interrupt_vector_numbers */


/* ----------------------------------------------------------------------------
   -- Peripheral type defines
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Peripheral_defines Peripheral type defines
 * @{
 */


/*
** Start of section using anonymous unions
*/

#if defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION)
  #pragma push
  #pragma anon_unions
#else
  #error Not supported compiler type
#endif

/* ----------------------------------------------------------------------------
   -- ADC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ADC_Peripheral ADC
 * @{
 */

/** ADC - Peripheral register structure */
typedef struct ADC_MemMap {
  uint32_t HC1;                                    /**< Control register for hardware triggers, offset: 0x0 */
  uint32_t HC2;                                    /**< Control register for hardware triggers, offset: 0x4 */
  uint32_t HS;                                     /**< Status register for HW triggers, offset: 0x8 */
  uint32_t R1;                                     /**< Data result register for HW triggers, offset: 0xC */
  uint32_t R2;                                     /**< Data result register for HW triggers, offset: 0x10 */
  uint32_t CFG;                                    /**< Configuration register, offset: 0x14 */
  uint32_t GC;                                     /**< General control register, offset: 0x18 */
  uint32_t GS;                                     /**< General status register, offset: 0x1C */
  uint32_t CV;                                     /**< Compare value register, offset: 0x20 */
  uint32_t OFS;                                    /**< Offset correction value register, offset: 0x24 */
  uint32_t CAL;                                    /**< Calibration value register, offset: 0x28 */
  uint8_t RESERVED_0[4];
  uint32_t PCTL;                                   /**< Pin control register, offset: 0x30 */
} volatile *ADC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ADC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ADC_Register_Accessor_Macros ADC - Register accessor macros
 * @{
 */


/* ADC - Register accessors */
#define ADC_HC1_REG(base)                        ((base)->HC1)
#define ADC_HC2_REG(base)                        ((base)->HC2)
#define ADC_HS_REG(base)                         ((base)->HS)
#define ADC_R1_REG(base)                         ((base)->R1)
#define ADC_R2_REG(base)                         ((base)->R2)
#define ADC_CFG_REG(base)                        ((base)->CFG)
#define ADC_GC_REG(base)                         ((base)->GC)
#define ADC_GS_REG(base)                         ((base)->GS)
#define ADC_CV_REG(base)                         ((base)->CV)
#define ADC_OFS_REG(base)                        ((base)->OFS)
#define ADC_CAL_REG(base)                        ((base)->CAL)
#define ADC_PCTL_REG(base)                       ((base)->PCTL)

/**
 * @}
 */ /* end of group ADC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ADC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ADC_Register_Masks ADC Register Masks
 * @{
 */

/* HC1 Bit Fields */
#define ADC_HC1_ADCH1_MASK                       0x1Fu
#define ADC_HC1_ADCH1_SHIFT                      0
#define ADC_HC1_ADCH1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_HC1_ADCH1_SHIFT))&ADC_HC1_ADCH1_MASK)
#define ADC_HC1_AIEN1_MASK                       0x80u
#define ADC_HC1_AIEN1_SHIFT                      7
/* HC2 Bit Fields */
#define ADC_HC2_ADCH2_MASK                       0x1Fu
#define ADC_HC2_ADCH2_SHIFT                      0
#define ADC_HC2_ADCH2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_HC2_ADCH2_SHIFT))&ADC_HC2_ADCH2_MASK)
#define ADC_HC2_AIEN2_MASK                       0x80u
#define ADC_HC2_AIEN2_SHIFT                      7
/* HS Bit Fields */
#define ADC_HS_COCO1_MASK                        0x1u
#define ADC_HS_COCO1_SHIFT                       0
#define ADC_HS_COCO2_MASK                        0x2u
#define ADC_HS_COCO2_SHIFT                       1
/* R1 Bit Fields */
#define ADC_R1_D_MASK                            0xFFFu
#define ADC_R1_D_SHIFT                           0
#define ADC_R1_D(x)                              (((uint32_t)(((uint32_t)(x))<<ADC_R1_D_SHIFT))&ADC_R1_D_MASK)
/* R2 Bit Fields */
#define ADC_R2_D_MASK                            0xFFFu
#define ADC_R2_D_SHIFT                           0
#define ADC_R2_D(x)                              (((uint32_t)(((uint32_t)(x))<<ADC_R2_D_SHIFT))&ADC_R2_D_MASK)
/* CFG Bit Fields */
#define ADC_CFG_ADICLK_MASK                      0x3u
#define ADC_CFG_ADICLK_SHIFT                     0
#define ADC_CFG_ADICLK(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CFG_ADICLK_SHIFT))&ADC_CFG_ADICLK_MASK)
#define ADC_CFG_MODE_MASK                        0xCu
#define ADC_CFG_MODE_SHIFT                       2
#define ADC_CFG_MODE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_CFG_MODE_SHIFT))&ADC_CFG_MODE_MASK)
#define ADC_CFG_ADLSMP_MASK                      0x10u
#define ADC_CFG_ADLSMP_SHIFT                     4
#define ADC_CFG_ADIV_MASK                        0x60u
#define ADC_CFG_ADIV_SHIFT                       5
#define ADC_CFG_ADIV(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_CFG_ADIV_SHIFT))&ADC_CFG_ADIV_MASK)
#define ADC_CFG_ADLPC_MASK                       0x80u
#define ADC_CFG_ADLPC_SHIFT                      7
#define ADC_CFG_ADSTS_MASK                       0x300u
#define ADC_CFG_ADSTS_SHIFT                      8
#define ADC_CFG_ADSTS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CFG_ADSTS_SHIFT))&ADC_CFG_ADSTS_MASK)
#define ADC_CFG_ADHSC_MASK                       0x400u
#define ADC_CFG_ADHSC_SHIFT                      10
#define ADC_CFG_REFSEL_MASK                      0x1800u
#define ADC_CFG_REFSEL_SHIFT                     11
#define ADC_CFG_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CFG_REFSEL_SHIFT))&ADC_CFG_REFSEL_MASK)
#define ADC_CFG_ADTRG_MASK                       0x2000u
#define ADC_CFG_ADTRG_SHIFT                      13
#define ADC_CFG_AVGS_MASK                        0xC000u
#define ADC_CFG_AVGS_SHIFT                       14
#define ADC_CFG_AVGS(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_CFG_AVGS_SHIFT))&ADC_CFG_AVGS_MASK)
#define ADC_CFG_OVWREN_MASK                      0x10000u
#define ADC_CFG_OVWREN_SHIFT                     16
/* GC Bit Fields */
#define ADC_GC_ADACKEN_MASK                      0x1u
#define ADC_GC_ADACKEN_SHIFT                     0
#define ADC_GC_DMAEN_MASK                        0x2u
#define ADC_GC_DMAEN_SHIFT                       1
#define ADC_GC_ACREN_MASK                        0x4u
#define ADC_GC_ACREN_SHIFT                       2
#define ADC_GC_ACFGT_MASK                        0x8u
#define ADC_GC_ACFGT_SHIFT                       3
#define ADC_GC_ACFE_MASK                         0x10u
#define ADC_GC_ACFE_SHIFT                        4
#define ADC_GC_AVGE_MASK                         0x20u
#define ADC_GC_AVGE_SHIFT                        5
#define ADC_GC_ADCO_MASK                         0x40u
#define ADC_GC_ADCO_SHIFT                        6
#define ADC_GC_CAL_MASK                          0x80u
#define ADC_GC_CAL_SHIFT                         7
/* GS Bit Fields */
#define ADC_GS_ADACT_MASK                        0x1u
#define ADC_GS_ADACT_SHIFT                       0
#define ADC_GS_CALF_MASK                         0x2u
#define ADC_GS_CALF_SHIFT                        1
#define ADC_GS_AWKST_MASK                        0x4u
#define ADC_GS_AWKST_SHIFT                       2
/* CV Bit Fields */
#define ADC_CV_CV1_MASK                          0xFFFu
#define ADC_CV_CV1_SHIFT                         0
#define ADC_CV_CV1(x)                            (((uint32_t)(((uint32_t)(x))<<ADC_CV_CV1_SHIFT))&ADC_CV_CV1_MASK)
#define ADC_CV_CV2_MASK                          0xFFF0000u
#define ADC_CV_CV2_SHIFT                         16
#define ADC_CV_CV2(x)                            (((uint32_t)(((uint32_t)(x))<<ADC_CV_CV2_SHIFT))&ADC_CV_CV2_MASK)
/* OFS Bit Fields */
#define ADC_OFS_OFS_MASK                         0xFFFu
#define ADC_OFS_OFS_SHIFT                        0
#define ADC_OFS_OFS(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_OFS_OFS_SHIFT))&ADC_OFS_OFS_MASK)
#define ADC_OFS_SIGN_MASK                        0x1000u
#define ADC_OFS_SIGN_SHIFT                       12
/* CAL Bit Fields */
#define ADC_CAL_CAL_CODE_MASK                    0xFu
#define ADC_CAL_CAL_CODE_SHIFT                   0
#define ADC_CAL_CAL_CODE(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CAL_CAL_CODE_SHIFT))&ADC_CAL_CAL_CODE_MASK)
/* PCTL Bit Fields */
#define ADC_PCTL_ADPC0_MASK                      0x1u
#define ADC_PCTL_ADPC0_SHIFT                     0
#define ADC_PCTL_ADPC1_MASK                      0x2u
#define ADC_PCTL_ADPC1_SHIFT                     1
#define ADC_PCTL_ADPC2_MASK                      0x4u
#define ADC_PCTL_ADPC2_SHIFT                     2
#define ADC_PCTL_ADPC3_MASK                      0x8u
#define ADC_PCTL_ADPC3_SHIFT                     3
#define ADC_PCTL_ADPC4_MASK                      0x10u
#define ADC_PCTL_ADPC4_SHIFT                     4
#define ADC_PCTL_ADPC5_MASK                      0x20u
#define ADC_PCTL_ADPC5_SHIFT                     5
#define ADC_PCTL_ADPC6_MASK                      0x40u
#define ADC_PCTL_ADPC6_SHIFT                     6
#define ADC_PCTL_ADPC7_MASK                      0x80u
#define ADC_PCTL_ADPC7_SHIFT                     7
#define ADC_PCTL_ADPC8_MASK                      0x100u
#define ADC_PCTL_ADPC8_SHIFT                     8
#define ADC_PCTL_ADPC9_MASK                      0x200u
#define ADC_PCTL_ADPC9_SHIFT                     9
#define ADC_PCTL_ADPC10_MASK                     0x400u
#define ADC_PCTL_ADPC10_SHIFT                    10
#define ADC_PCTL_ADPC11_MASK                     0x800u
#define ADC_PCTL_ADPC11_SHIFT                    11
#define ADC_PCTL_ADPC12_MASK                     0x1000u
#define ADC_PCTL_ADPC12_SHIFT                    12
#define ADC_PCTL_ADPC13_MASK                     0x2000u
#define ADC_PCTL_ADPC13_SHIFT                    13
#define ADC_PCTL_ADPC14_MASK                     0x4000u
#define ADC_PCTL_ADPC14_SHIFT                    14
#define ADC_PCTL_ADPC15_MASK                     0x8000u
#define ADC_PCTL_ADPC15_SHIFT                    15
#define ADC_PCTL_ADPC16_MASK                     0x10000u
#define ADC_PCTL_ADPC16_SHIFT                    16
#define ADC_PCTL_ADPC17_MASK                     0x20000u
#define ADC_PCTL_ADPC17_SHIFT                    17
#define ADC_PCTL_ADPC18_MASK                     0x40000u
#define ADC_PCTL_ADPC18_SHIFT                    18
#define ADC_PCTL_ADPC19_MASK                     0x80000u
#define ADC_PCTL_ADPC19_SHIFT                    19
#define ADC_PCTL_ADPC20_MASK                     0x100000u
#define ADC_PCTL_ADPC20_SHIFT                    20
#define ADC_PCTL_ADPC21_MASK                     0x200000u
#define ADC_PCTL_ADPC21_SHIFT                    21
#define ADC_PCTL_ADPC22_MASK                     0x400000u
#define ADC_PCTL_ADPC22_SHIFT                    22
#define ADC_PCTL_ADPC23_MASK                     0x800000u
#define ADC_PCTL_ADPC23_SHIFT                    23

/**
 * @}
 */ /* end of group ADC_Register_Masks */


/* ADC - Peripheral instance base addresses */
/** Peripheral ADC0 base pointer */
#define ADC0_BASE_PTR                            ((ADC_MemMapPtr)0x4003B000u)
/** Peripheral ADC1 base pointer */
#define ADC1_BASE_PTR                            ((ADC_MemMapPtr)0x400BB000u)
/** Array initializer of ADC peripheral base pointers */
#define ADC_BASE_PTRS                            { ADC0_BASE_PTR, ADC1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- ADC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ADC_Register_Accessor_Macros ADC - Register accessor macros
 * @{
 */


/* ADC - Register instance definitions */
/* ADC0 */
#define ADC0_HC1                                 ADC_HC1_REG(ADC0_BASE_PTR)
#define ADC0_HC2                                 ADC_HC2_REG(ADC0_BASE_PTR)
#define ADC0_HS                                  ADC_HS_REG(ADC0_BASE_PTR)
#define ADC0_R1                                  ADC_R1_REG(ADC0_BASE_PTR)
#define ADC0_R2                                  ADC_R2_REG(ADC0_BASE_PTR)
#define ADC0_CFG                                 ADC_CFG_REG(ADC0_BASE_PTR)
#define ADC0_GC                                  ADC_GC_REG(ADC0_BASE_PTR)
#define ADC0_GS                                  ADC_GS_REG(ADC0_BASE_PTR)
#define ADC0_CV                                  ADC_CV_REG(ADC0_BASE_PTR)
#define ADC0_OFS                                 ADC_OFS_REG(ADC0_BASE_PTR)
#define ADC0_CAL                                 ADC_CAL_REG(ADC0_BASE_PTR)
#define ADC0_PCTL                                ADC_PCTL_REG(ADC0_BASE_PTR)
/* ADC1 */
#define ADC1_HC1                                 ADC_HC1_REG(ADC1_BASE_PTR)
#define ADC1_HC2                                 ADC_HC2_REG(ADC1_BASE_PTR)
#define ADC1_HS                                  ADC_HS_REG(ADC1_BASE_PTR)
#define ADC1_R1                                  ADC_R1_REG(ADC1_BASE_PTR)
#define ADC1_R2                                  ADC_R2_REG(ADC1_BASE_PTR)
#define ADC1_CFG                                 ADC_CFG_REG(ADC1_BASE_PTR)
#define ADC1_GC                                  ADC_GC_REG(ADC1_BASE_PTR)
#define ADC1_GS                                  ADC_GS_REG(ADC1_BASE_PTR)
#define ADC1_CV                                  ADC_CV_REG(ADC1_BASE_PTR)
#define ADC1_OFS                                 ADC_OFS_REG(ADC1_BASE_PTR)
#define ADC1_CAL                                 ADC_CAL_REG(ADC1_BASE_PTR)
#define ADC1_PCTL                                ADC_PCTL_REG(ADC1_BASE_PTR)

/**
 * @}
 */ /* end of group ADC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group ADC_Peripheral */


/* ----------------------------------------------------------------------------
   -- AFE
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup AFE_Peripheral AFE
 * @{
 */

/** AFE - Peripheral register structure */
typedef struct AFE_MemMap {
  uint32_t MISC_ID;                                /**< Misc. ID, offset: 0x0 */
  uint32_t PDBUF;                                  /**< Power Down Buffers, offset: 0x4 */
  uint32_t SWRST;                                  /**< Software Reset, offset: 0x8 */
  uint8_t RESERVED_0[12];
  uint32_t BGREG;                                  /**< Band Gap, offset: 0x18 */
  uint8_t RESERVED_1[996];
  uint32_t ACCESSAR_ID;                            /**< Accessar ID, offset: 0x400 */
  uint32_t PDADC;                                  /**< Power Down ADC, offset: 0x404 */
  uint32_t PDSARH;                                 /**< Power Down SAR High, offset: 0x408 */
  uint32_t PDSARL;                                 /**< Power Down SAR Low, offset: 0x40C */
  uint32_t PDADCRFH;                               /**< Power Down ADC Ref. High, offset: 0x410 */
  uint32_t PDADCRFL;                               /**< Power Down ADC Ref. Low, offset: 0x414 */
  uint8_t RESERVED_2[4];
  uint32_t ADCGN;                                  /**< ADC Gain, offset: 0x41C */
  uint8_t RESERVED_3[20];
  uint32_t REFTRIML;                               /**< ADC Ref Trim Low, offset: 0x434 */
  uint32_t REFTRIMH;                               /**< ADC Ref Trim High, offset: 0x438 */
  uint8_t RESERVED_4[12];
  uint32_t DLYALG;                                 /**< Delay Loop Calculated Data, offset: 0x448 */
  uint32_t DACAMP;                                 /**< Clamp DAC Trim, offset: 0x44C */
  uint8_t RESERVED_5[4];
  uint32_t CLMPDAT;                                /**< Clamp DAC Data, offset: 0x454 */
  uint32_t CLMPAMP;                                /**< Clamp DAC Control, offset: 0x458 */
  uint32_t CLAMP;                                  /**< Clamp Control, offset: 0x45C */
  uint32_t INPBUF;                                 /**< Input Buffer, offset: 0x460 */
  uint32_t INPFLT;                                 /**< Analog Input Filter, offset: 0x464 */
  uint32_t ADCDGN;                                 /**< ADC Digital Gain, offset: 0x468 */
  uint32_t OFFDRV;                                 /**< Off-Chip Drive, offset: 0x46C */
  uint8_t RESERVED_6[912];
  uint32_t ACC_ID;                                 /**< Acc ID, offset: 0x800 */
  uint8_t RESERVED_7[4];
  uint32_t ASAREG;                                 /**< ADC Sample Acquisition, offset: 0x808 */
  uint8_t RESERVED_8[4];
  uint32_t ASCREG;                                 /**< ADC Sample Compensation, offset: 0x810 */
  uint32_t BLCREG;                                 /**< Block Level Control Register, offset: 0x814 */
  uint8_t RESERVED_9[12];
  uint32_t AOCREG0;                                /**< ADC Operation Controller 0, offset: 0x824 */
} volatile *AFE_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- AFE - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup AFE_Register_Accessor_Macros AFE - Register accessor macros
 * @{
 */


/* AFE - Register accessors */
#define AFE_MISC_ID_REG(base)                    ((base)->MISC_ID)
#define AFE_PDBUF_REG(base)                      ((base)->PDBUF)
#define AFE_SWRST_REG(base)                      ((base)->SWRST)
#define AFE_BGREG_REG(base)                      ((base)->BGREG)
#define AFE_ACCESSAR_ID_REG(base)                ((base)->ACCESSAR_ID)
#define AFE_PDADC_REG(base)                      ((base)->PDADC)
#define AFE_PDSARH_REG(base)                     ((base)->PDSARH)
#define AFE_PDSARL_REG(base)                     ((base)->PDSARL)
#define AFE_PDADCRFH_REG(base)                   ((base)->PDADCRFH)
#define AFE_PDADCRFL_REG(base)                   ((base)->PDADCRFL)
#define AFE_ADCGN_REG(base)                      ((base)->ADCGN)
#define AFE_REFTRIML_REG(base)                   ((base)->REFTRIML)
#define AFE_REFTRIMH_REG(base)                   ((base)->REFTRIMH)
#define AFE_DLYALG_REG(base)                     ((base)->DLYALG)
#define AFE_DACAMP_REG(base)                     ((base)->DACAMP)
#define AFE_CLMPDAT_REG(base)                    ((base)->CLMPDAT)
#define AFE_CLMPAMP_REG(base)                    ((base)->CLMPAMP)
#define AFE_CLAMP_REG(base)                      ((base)->CLAMP)
#define AFE_INPBUF_REG(base)                     ((base)->INPBUF)
#define AFE_INPFLT_REG(base)                     ((base)->INPFLT)
#define AFE_ADCDGN_REG(base)                     ((base)->ADCDGN)
#define AFE_OFFDRV_REG(base)                     ((base)->OFFDRV)
#define AFE_ACC_ID_REG(base)                     ((base)->ACC_ID)
#define AFE_ASAREG_REG(base)                     ((base)->ASAREG)
#define AFE_ASCREG_REG(base)                     ((base)->ASCREG)
#define AFE_BLCREG_REG(base)                     ((base)->BLCREG)
#define AFE_AOCREG0_REG(base)                    ((base)->AOCREG0)

/**
 * @}
 */ /* end of group AFE_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- AFE Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup AFE_Register_Masks AFE Register Masks
 * @{
 */

/* MISC_ID Bit Fields */
#define AFE_MISC_ID_misc_id_MASK                 0xFFu
#define AFE_MISC_ID_misc_id_SHIFT                0
#define AFE_MISC_ID_misc_id(x)                   (((uint32_t)(((uint32_t)(x))<<AFE_MISC_ID_misc_id_SHIFT))&AFE_MISC_ID_misc_id_MASK)
/* PDBUF Bit Fields */
#define AFE_PDBUF_acafe_pd_n_MASK                0x1u
#define AFE_PDBUF_acafe_pd_n_SHIFT               0
#define AFE_PDBUF_bgr_bgr_pd_n_MASK              0x2u
#define AFE_PDBUF_bgr_bgr_pd_n_SHIFT             1
#define AFE_PDBUF_bgr_pd_n_MASK                  0x4u
#define AFE_PDBUF_bgr_pd_n_SHIFT                 2
/* SWRST Bit Fields */
#define AFE_SWRST_sysclk_sw_rst_n_MASK           0x1u
#define AFE_SWRST_sysclk_sw_rst_n_SHIFT          0
#define AFE_SWRST_adc_proc_clk_sw_rst_n_MASK     0x4u
#define AFE_SWRST_adc_proc_clk_sw_rst_n_SHIFT    2
#define AFE_SWRST_acafe_sw_rst_n_MASK            0x8u
#define AFE_SWRST_acafe_sw_rst_n_SHIFT           3
/* BGREG Bit Fields */
#define AFE_BGREG_bgr_trimlevel_MASK             0xFu
#define AFE_BGREG_bgr_trimlevel_SHIFT            0
#define AFE_BGREG_bgr_trimlevel(x)               (((uint32_t)(((uint32_t)(x))<<AFE_BGREG_bgr_trimlevel_SHIFT))&AFE_BGREG_bgr_trimlevel_MASK)
/* ACCESSAR_ID Bit Fields */
#define AFE_ACCESSAR_ID_accessar_id_MASK         0xFFu
#define AFE_ACCESSAR_ID_accessar_id_SHIFT        0
#define AFE_ACCESSAR_ID_accessar_id(x)           (((uint32_t)(((uint32_t)(x))<<AFE_ACCESSAR_ID_accessar_id_SHIFT))&AFE_ACCESSAR_ID_accessar_id_MASK)
/* PDADC Bit Fields */
#define AFE_PDADC_dlyloop_pd_n_MASK              0x2u
#define AFE_PDADC_dlyloop_pd_n_SHIFT             1
#define AFE_PDADC_adc_dlyloop_dac_pd_n_MASK      0x4u
#define AFE_PDADC_adc_dlyloop_dac_pd_n_SHIFT     2
#define AFE_PDADC_adc_iref_pd_n_MASK             0x8u
#define AFE_PDADC_adc_iref_pd_n_SHIFT            3
#define AFE_PDADC_clamp_pd_n_MASK                0x10u
#define AFE_PDADC_clamp_pd_n_SHIFT               4
/* PDSARH Bit Fields */
#define AFE_PDSARH_adc_pd_n_MASK                 0x1u
#define AFE_PDSARH_adc_pd_n_SHIFT                0
/* PDSARL Bit Fields */
#define AFE_PDSARL_adc_pd_n_MASK                 0xFFu
#define AFE_PDSARL_adc_pd_n_SHIFT                0
#define AFE_PDSARL_adc_pd_n(x)                   (((uint32_t)(((uint32_t)(x))<<AFE_PDSARL_adc_pd_n_SHIFT))&AFE_PDSARL_adc_pd_n_MASK)
/* PDADCRFH Bit Fields */
#define AFE_PDADCRFH_adcref_refbufslice_pd_n_MASK 0x1u
#define AFE_PDADCRFH_adcref_refbufslice_pd_n_SHIFT 0
/* PDADCRFL Bit Fields */
#define AFE_PDADCRFL_adcref_refbufslice_pd_n_MASK 0xFFu
#define AFE_PDADCRFL_adcref_refbufslice_pd_n_SHIFT 0
#define AFE_PDADCRFL_adcref_refbufslice_pd_n(x)  (((uint32_t)(((uint32_t)(x))<<AFE_PDADCRFL_adcref_refbufslice_pd_n_SHIFT))&AFE_PDADCRFL_adcref_refbufslice_pd_n_MASK)
/* ADCGN Bit Fields */
#define AFE_ADCGN_adc_gain_MASK                  0xFu
#define AFE_ADCGN_adc_gain_SHIFT                 0
#define AFE_ADCGN_adc_gain(x)                    (((uint32_t)(((uint32_t)(x))<<AFE_ADCGN_adc_gain_SHIFT))&AFE_ADCGN_adc_gain_MASK)
/* REFTRIML Bit Fields */
#define AFE_REFTRIML_adcref_reftrim08_MASK       0x3u
#define AFE_REFTRIML_adcref_reftrim08_SHIFT      0
#define AFE_REFTRIML_adcref_reftrim08(x)         (((uint32_t)(((uint32_t)(x))<<AFE_REFTRIML_adcref_reftrim08_SHIFT))&AFE_REFTRIML_adcref_reftrim08_MASK)
#define AFE_REFTRIML_adcref_reftrim04_MASK       0xCu
#define AFE_REFTRIML_adcref_reftrim04_SHIFT      2
#define AFE_REFTRIML_adcref_reftrim04(x)         (((uint32_t)(((uint32_t)(x))<<AFE_REFTRIML_adcref_reftrim04_SHIFT))&AFE_REFTRIML_adcref_reftrim04_MASK)
#define AFE_REFTRIML_adcref_reftrim02_MASK       0x30u
#define AFE_REFTRIML_adcref_reftrim02_SHIFT      4
#define AFE_REFTRIML_adcref_reftrim02(x)         (((uint32_t)(((uint32_t)(x))<<AFE_REFTRIML_adcref_reftrim02_SHIFT))&AFE_REFTRIML_adcref_reftrim02_MASK)
#define AFE_REFTRIML_adcref_reftrimop_MASK       0xC0u
#define AFE_REFTRIML_adcref_reftrimop_SHIFT      6
#define AFE_REFTRIML_adcref_reftrimop(x)         (((uint32_t)(((uint32_t)(x))<<AFE_REFTRIML_adcref_reftrimop_SHIFT))&AFE_REFTRIML_adcref_reftrimop_MASK)
/* REFTRIMH Bit Fields */
#define AFE_REFTRIMH_adcref_reftrim_MASK         0xFu
#define AFE_REFTRIMH_adcref_reftrim_SHIFT        0
#define AFE_REFTRIMH_adcref_reftrim(x)           (((uint32_t)(((uint32_t)(x))<<AFE_REFTRIMH_adcref_reftrim_SHIFT))&AFE_REFTRIMH_adcref_reftrim_MASK)
/* DLYALG Bit Fields */
#define AFE_DLYALG_dlyloop_calculateddata_MASK   0x7Fu
#define AFE_DLYALG_dlyloop_calculateddata_SHIFT  0
#define AFE_DLYALG_dlyloop_calculateddata(x)     (((uint32_t)(((uint32_t)(x))<<AFE_DLYALG_dlyloop_calculateddata_SHIFT))&AFE_DLYALG_dlyloop_calculateddata_MASK)
/* DACAMP Bit Fields */
#define AFE_DACAMP_clampdac_trim_MASK            0xFu
#define AFE_DACAMP_clampdac_trim_SHIFT           0
#define AFE_DACAMP_clampdac_trim(x)              (((uint32_t)(((uint32_t)(x))<<AFE_DACAMP_clampdac_trim_SHIFT))&AFE_DACAMP_clampdac_trim_MASK)
/* CLMPDAT Bit Fields */
#define AFE_CLMPDAT_clampdac_data_MASK           0xFFu
#define AFE_CLMPDAT_clampdac_data_SHIFT          0
#define AFE_CLMPDAT_clampdac_data(x)             (((uint32_t)(((uint32_t)(x))<<AFE_CLMPDAT_clampdac_data_SHIFT))&AFE_CLMPDAT_clampdac_data_MASK)
/* CLMPAMP Bit Fields */
#define AFE_CLMPAMP_clamp_dacdata_extra_MASK     0x7u
#define AFE_CLMPAMP_clamp_dacdata_extra_SHIFT    0
#define AFE_CLMPAMP_clamp_dacdata_extra(x)       (((uint32_t)(((uint32_t)(x))<<AFE_CLMPAMP_clamp_dacdata_extra_SHIFT))&AFE_CLMPAMP_clamp_dacdata_extra_MASK)
#define AFE_CLMPAMP_clamp_dacdata_weight_MASK    0x18u
#define AFE_CLMPAMP_clamp_dacdata_weight_SHIFT   3
#define AFE_CLMPAMP_clamp_dacdata_weight(x)      (((uint32_t)(((uint32_t)(x))<<AFE_CLMPAMP_clamp_dacdata_weight_SHIFT))&AFE_CLMPAMP_clamp_dacdata_weight_MASK)
#define AFE_CLMPAMP_clamp_updn_reg_override_MASK 0x20u
#define AFE_CLMPAMP_clamp_updn_reg_override_SHIFT 5
#define AFE_CLMPAMP_clamp_current_reg_override_MASK 0x40u
#define AFE_CLMPAMP_clamp_current_reg_override_SHIFT 6
/* CLAMP Bit Fields */
#define AFE_CLAMP_nclamp_powersave_MASK          0x1u
#define AFE_CLAMP_nclamp_powersave_SHIFT         0
#define AFE_CLAMP_clamp_ipen_reg_MASK            0x4u
#define AFE_CLAMP_clamp_ipen_reg_SHIFT           2
#define AFE_CLAMP_clamp_inen_reg_MASK            0x8u
#define AFE_CLAMP_clamp_inen_reg_SHIFT           3
#define AFE_CLAMP_clamp_lowcurrmode_MASK         0x10u
#define AFE_CLAMP_clamp_lowcurrmode_SHIFT        4
#define AFE_CLAMP_clamp_irefselect_MASK          0x20u
#define AFE_CLAMP_clamp_irefselect_SHIFT         5
#define AFE_CLAMP_clamp_up_down_polarity_MASK    0x40u
#define AFE_CLAMP_clamp_up_down_polarity_SHIFT   6
#define AFE_CLAMP_clamp_pwm_mode_MASK            0x80u
#define AFE_CLAMP_clamp_pwm_mode_SHIFT           7
/* INPBUF Bit Fields */
#define AFE_INPBUF_buff_en_ri_MASK               0x1u
#define AFE_INPBUF_buff_en_ri_SHIFT              0
#define AFE_INPBUF_buff_en_cm_MASK               0x4u
#define AFE_INPBUF_buff_en_cm_SHIFT              2
#define AFE_INPBUF_mux_buffer_bp_en_MASK         0x8u
#define AFE_INPBUF_mux_buffer_bp_en_SHIFT        3
#define AFE_INPBUF_mux_buffer_15m_en_MASK        0x10u
#define AFE_INPBUF_mux_buffer_15m_en_SHIFT       4
#define AFE_INPBUF_mux_clampen_MASK              0x20u
#define AFE_INPBUF_mux_clampen_SHIFT             5
/* INPFLT Bit Fields */
#define AFE_INPFLT_mux_pdcurrentmirror_MASK      0x1u
#define AFE_INPFLT_mux_pdcurrentmirror_SHIFT     0
#define AFE_INPFLT_mux_filter_15m_en_MASK        0x2u
#define AFE_INPFLT_mux_filter_15m_en_SHIFT       1
#define AFE_INPFLT_mux_filterbypass_MASK         0x4u
#define AFE_INPFLT_mux_filterbypass_SHIFT        2
#define AFE_INPFLT_mux_enlf_MASK                 0x78u
#define AFE_INPFLT_mux_enlf_SHIFT                3
#define AFE_INPFLT_mux_enlf(x)                   (((uint32_t)(((uint32_t)(x))<<AFE_INPFLT_mux_enlf_SHIFT))&AFE_INPFLT_mux_enlf_MASK)
/* ADCDGN Bit Fields */
#define AFE_ADCDGN_adc_digital_gain_MASK         0x3Fu
#define AFE_ADCDGN_adc_digital_gain_SHIFT        0
#define AFE_ADCDGN_adc_digital_gain(x)           (((uint32_t)(((uint32_t)(x))<<AFE_ADCDGN_adc_digital_gain_SHIFT))&AFE_ADCDGN_adc_digital_gain_MASK)
#define AFE_ADCDGN_adc_digital_gain_bypass_MASK  0x40u
#define AFE_ADCDGN_adc_digital_gain_bypass_SHIFT 6
/* OFFDRV Bit Fields */
#define AFE_OFFDRV_input_pulldown_en_MASK        0xF0u
#define AFE_OFFDRV_input_pulldown_en_SHIFT       4
#define AFE_OFFDRV_input_pulldown_en(x)          (((uint32_t)(((uint32_t)(x))<<AFE_OFFDRV_input_pulldown_en_SHIFT))&AFE_OFFDRV_input_pulldown_en_MASK)
/* ACC_ID Bit Fields */
#define AFE_ACC_ID_acc_id_MASK                   0xFFu
#define AFE_ACC_ID_acc_id_SHIFT                  0
#define AFE_ACC_ID_acc_id(x)                     (((uint32_t)(((uint32_t)(x))<<AFE_ACC_ID_acc_id_SHIFT))&AFE_ACC_ID_acc_id_MASK)
/* ASAREG Bit Fields */
#define AFE_ASAREG_asa_reg3_MASK                 0x2u
#define AFE_ASAREG_asa_reg3_SHIFT                1
#define AFE_ASAREG_asa_reg5_MASK                 0x4u
#define AFE_ASAREG_asa_reg5_SHIFT                2
#define AFE_ASAREG_asa_reg9_MASK                 0x8u
#define AFE_ASAREG_asa_reg9_SHIFT                3
#define AFE_ASAREG_asa_reg_MASK                  0xE0u
#define AFE_ASAREG_asa_reg_SHIFT                 5
#define AFE_ASAREG_asa_reg(x)                    (((uint32_t)(((uint32_t)(x))<<AFE_ASAREG_asa_reg_SHIFT))&AFE_ASAREG_asa_reg_MASK)
/* ASCREG Bit Fields */
#define AFE_ASCREG_asc_reg_MASK                  0x1u
#define AFE_ASCREG_asc_reg_SHIFT                 0
/* BLCREG Bit Fields */
#define AFE_BLCREG_en_bypass_MASK                0x1u
#define AFE_BLCREG_en_bypass_SHIFT               0
#define AFE_BLCREG_start_cal_MASK                0x2u
#define AFE_BLCREG_start_cal_SHIFT               1
/* AOCREG0 Bit Fields */
#define AFE_AOCREG0_start_cal_MASK               0x1u
#define AFE_AOCREG0_start_cal_SHIFT              0

/**
 * @}
 */ /* end of group AFE_Register_Masks */


/* AFE - Peripheral instance base addresses */
/** Peripheral AFE base pointer */
#define AFE_BASE_PTR                             ((AFE_MemMapPtr)0x400C7000u)
/** Array initializer of AFE peripheral base pointers */
#define AFE_BASE_PTRS                            { AFE_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- AFE - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup AFE_Register_Accessor_Macros AFE - Register accessor macros
 * @{
 */


/* AFE - Register instance definitions */
/* AFE */
#define AFE_MISC_ID                              AFE_MISC_ID_REG(AFE_BASE_PTR)
#define AFE_PDBUF                                AFE_PDBUF_REG(AFE_BASE_PTR)
#define AFE_SWRST                                AFE_SWRST_REG(AFE_BASE_PTR)
#define AFE_BGREG                                AFE_BGREG_REG(AFE_BASE_PTR)
#define AFE_ACCESSAR_ID                          AFE_ACCESSAR_ID_REG(AFE_BASE_PTR)
#define AFE_PDADC                                AFE_PDADC_REG(AFE_BASE_PTR)
#define AFE_PDSARH                               AFE_PDSARH_REG(AFE_BASE_PTR)
#define AFE_PDSARL                               AFE_PDSARL_REG(AFE_BASE_PTR)
#define AFE_PDADCRFH                             AFE_PDADCRFH_REG(AFE_BASE_PTR)
#define AFE_PDADCRFL                             AFE_PDADCRFL_REG(AFE_BASE_PTR)
#define AFE_ADCGN                                AFE_ADCGN_REG(AFE_BASE_PTR)
#define AFE_REFTRIML                             AFE_REFTRIML_REG(AFE_BASE_PTR)
#define AFE_REFTRIMH                             AFE_REFTRIMH_REG(AFE_BASE_PTR)
#define AFE_DLYALG                               AFE_DLYALG_REG(AFE_BASE_PTR)
#define AFE_DACAMP                               AFE_DACAMP_REG(AFE_BASE_PTR)
#define AFE_CLMPDAT                              AFE_CLMPDAT_REG(AFE_BASE_PTR)
#define AFE_CLMPAMP                              AFE_CLMPAMP_REG(AFE_BASE_PTR)
#define AFE_CLAMP                                AFE_CLAMP_REG(AFE_BASE_PTR)
#define AFE_INPBUF                               AFE_INPBUF_REG(AFE_BASE_PTR)
#define AFE_INPFLT                               AFE_INPFLT_REG(AFE_BASE_PTR)
#define AFE_ADCDGN                               AFE_ADCDGN_REG(AFE_BASE_PTR)
#define AFE_OFFDRV                               AFE_OFFDRV_REG(AFE_BASE_PTR)
#define AFE_ACC_ID                               AFE_ACC_ID_REG(AFE_BASE_PTR)
#define AFE_ASAREG                               AFE_ASAREG_REG(AFE_BASE_PTR)
#define AFE_ASCREG                               AFE_ASCREG_REG(AFE_BASE_PTR)
#define AFE_BLCREG                               AFE_BLCREG_REG(AFE_BASE_PTR)
#define AFE_AOCREG0                              AFE_AOCREG0_REG(AFE_BASE_PTR)

/**
 * @}
 */ /* end of group AFE_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group AFE_Peripheral */


/* ----------------------------------------------------------------------------
   -- ASRC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ASRC_Peripheral ASRC
 * @{
 */

/** ASRC - Peripheral register structure */
typedef struct ASRC_MemMap {
  uint32_t ASRCTR;                                 /**< ASRC Control Register, offset: 0x0 */
  uint32_t ASRIER;                                 /**< ASRC Interrupt Enable Register, offset: 0x4 */
  uint8_t RESERVED_0[4];
  uint32_t ASRCNCR;                                /**< ASRC Channel Number Configuration Register, offset: 0xC */
  uint32_t ASRCFG;                                 /**< ASRC Filter Configuration Status Register, offset: 0x10 */
  uint32_t ASRCSR;                                 /**< ASRC Clock Source Register, offset: 0x14 */
  uint32_t ASRCDR1;                                /**< ASRC Clock Divider Register 1, offset: 0x18 */
  uint32_t ASRCDR2;                                /**< ASRC Clock Divider Register 2, offset: 0x1C */
  uint32_t ASRSTR;                                 /**< ASRC Status Register, offset: 0x20 */
  uint8_t RESERVED_1[28];
  uint32_t ASRPMn[5];                              /**< ASRC Parameter Register n, array offset: 0x40, array step: 0x4 */
  uint32_t ASRTFR1;                                /**< ASRC ASRC Task Queue FIFO Register 1, offset: 0x54 */
  uint8_t RESERVED_2[4];
  uint32_t ASRCCR;                                 /**< ASRC Channel Counter Register, offset: 0x5C */
  union {                                          /* offset: 0x60 */
    struct {                                         /* offset: 0x60, array step: 0x8 */
      uint32_t ASRDI;                                  /**< ASRC Data Input Register for Pair x, array offset: 0x60, array step: 0x8 */
      uint8_t RESERVED_0[4];
    } ASRDI[3];
    struct {                                         /* offset: 0x60 */
      uint8_t RESERVED_0[4];
      struct {                                         /* offset: 0x64, array step: 0x8 */
        uint32_t ASRDO;                                  /**< ASRC Data Output Register for Pair x, array offset: 0x64, array step: 0x8 */
        uint8_t RESERVED_0[4];
      } ASRDO[3];
    } OUTPUT;
  };
  uint8_t RESERVED_3[4];
  uint32_t ASRIDRHA;                               /**< ASRC Ideal Ratio for Pair A-High Part, offset: 0x80 */
  uint32_t ASRIDRLA;                               /**< ASRC Ideal Ratio for Pair A -Low Part, offset: 0x84 */
  uint32_t ASRIDRHB;                               /**< ASRC Ideal Ratio for Pair B-High Part, offset: 0x88 */
  uint32_t ASRIDRLB;                               /**< ASRC Ideal Ratio for Pair B-Low Part, offset: 0x8C */
  uint32_t ASRIDRHC;                               /**< ASRC Ideal Ratio for Pair C-High Part, offset: 0x90 */
  uint32_t ASRIDRLC;                               /**< ASRC Ideal Ratio for Pair C-Low Part, offset: 0x94 */
  uint32_t ASR76K;                                 /**< ASRC 76kHz Period in terms of ASRC processing clock, offset: 0x98 */
  uint32_t ASR56K;                                 /**< ASRC 56kHz Period in terms of ASRC processing clock, offset: 0x9C */
  uint32_t ASRMCRA;                                /**< ASRC Misc Control Register for Pair A, offset: 0xA0 */
  uint32_t ASRFSTA;                                /**< ASRC FIFO Status Register for Pair A, offset: 0xA4 */
  uint32_t ASRMCRB;                                /**< ASRC Misc Control Register for Pair B, offset: 0xA8 */
  uint32_t ASRFSTB;                                /**< ASRC FIFO Status Register for Pair B, offset: 0xAC */
  uint32_t ASRMCRC;                                /**< ASRC Misc Control Register for Pair C, offset: 0xB0 */
  uint32_t ASRFSTC;                                /**< ASRC FIFO Status Register for Pair C, offset: 0xB4 */
  uint8_t RESERVED_4[8];
  uint32_t ASRMCR1[3];                             /**< ASRC Misc Control Register 1 for Pair X, array offset: 0xC0, array step: 0x4 */
} volatile *ASRC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ASRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ASRC_Register_Accessor_Macros ASRC - Register accessor macros
 * @{
 */


/* ASRC - Register accessors */
#define ASRC_ASRCTR_REG(base)                    ((base)->ASRCTR)
#define ASRC_ASRIER_REG(base)                    ((base)->ASRIER)
#define ASRC_ASRCNCR_REG(base)                   ((base)->ASRCNCR)
#define ASRC_ASRCFG_REG(base)                    ((base)->ASRCFG)
#define ASRC_ASRCSR_REG(base)                    ((base)->ASRCSR)
#define ASRC_ASRCDR1_REG(base)                   ((base)->ASRCDR1)
#define ASRC_ASRCDR2_REG(base)                   ((base)->ASRCDR2)
#define ASRC_ASRSTR_REG(base)                    ((base)->ASRSTR)
#define ASRC_ASRPMn_REG(base,index)              ((base)->ASRPMn[index])
#define ASRC_ASRTFR1_REG(base)                   ((base)->ASRTFR1)
#define ASRC_ASRCCR_REG(base)                    ((base)->ASRCCR)
#define ASRC_ASRDI_REG(base,index2)              ((base)->ASRDI[index2].ASRDI)
#define ASRC_ASRDO_REG(base,index2)              ((base)->OUTPUT.ASRDO[index2].ASRDO)
#define ASRC_ASRIDRHA_REG(base)                  ((base)->ASRIDRHA)
#define ASRC_ASRIDRLA_REG(base)                  ((base)->ASRIDRLA)
#define ASRC_ASRIDRHB_REG(base)                  ((base)->ASRIDRHB)
#define ASRC_ASRIDRLB_REG(base)                  ((base)->ASRIDRLB)
#define ASRC_ASRIDRHC_REG(base)                  ((base)->ASRIDRHC)
#define ASRC_ASRIDRLC_REG(base)                  ((base)->ASRIDRLC)
#define ASRC_ASR76K_REG(base)                    ((base)->ASR76K)
#define ASRC_ASR56K_REG(base)                    ((base)->ASR56K)
#define ASRC_ASRMCRA_REG(base)                   ((base)->ASRMCRA)
#define ASRC_ASRFSTA_REG(base)                   ((base)->ASRFSTA)
#define ASRC_ASRMCRB_REG(base)                   ((base)->ASRMCRB)
#define ASRC_ASRFSTB_REG(base)                   ((base)->ASRFSTB)
#define ASRC_ASRMCRC_REG(base)                   ((base)->ASRMCRC)
#define ASRC_ASRFSTC_REG(base)                   ((base)->ASRFSTC)
#define ASRC_ASRMCR1_REG(base,index)             ((base)->ASRMCR1[index])

/**
 * @}
 */ /* end of group ASRC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ASRC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ASRC_Register_Masks ASRC Register Masks
 * @{
 */

/* ASRCTR Bit Fields */
#define ASRC_ASRCTR_ASRCEN_MASK                  0x1u
#define ASRC_ASRCTR_ASRCEN_SHIFT                 0
#define ASRC_ASRCTR_ASREA_MASK                   0x2u
#define ASRC_ASRCTR_ASREA_SHIFT                  1
#define ASRC_ASRCTR_ASREB_MASK                   0x4u
#define ASRC_ASRCTR_ASREB_SHIFT                  2
#define ASRC_ASRCTR_ASREC_MASK                   0x8u
#define ASRC_ASRCTR_ASREC_SHIFT                  3
#define ASRC_ASRCTR_SRST_MASK                    0x10u
#define ASRC_ASRCTR_SRST_SHIFT                   4
#define ASRC_ASRCTR_IDRA_MASK                    0x2000u
#define ASRC_ASRCTR_IDRA_SHIFT                   13
#define ASRC_ASRCTR_USRA_MASK                    0x4000u
#define ASRC_ASRCTR_USRA_SHIFT                   14
#define ASRC_ASRCTR_IDRB_MASK                    0x8000u
#define ASRC_ASRCTR_IDRB_SHIFT                   15
#define ASRC_ASRCTR_USRB_MASK                    0x10000u
#define ASRC_ASRCTR_USRB_SHIFT                   16
#define ASRC_ASRCTR_IDRC_MASK                    0x20000u
#define ASRC_ASRCTR_IDRC_SHIFT                   17
#define ASRC_ASRCTR_USRC_MASK                    0x40000u
#define ASRC_ASRCTR_USRC_SHIFT                   18
#define ASRC_ASRCTR_ATSA_MASK                    0x100000u
#define ASRC_ASRCTR_ATSA_SHIFT                   20
#define ASRC_ASRCTR_ATSB_MASK                    0x200000u
#define ASRC_ASRCTR_ATSB_SHIFT                   21
#define ASRC_ASRCTR_ATSC_MASK                    0x400000u
#define ASRC_ASRCTR_ATSC_SHIFT                   22
/* ASRIER Bit Fields */
#define ASRC_ASRIER_ADIEA_MASK                   0x1u
#define ASRC_ASRIER_ADIEA_SHIFT                  0
#define ASRC_ASRIER_ADIEB_MASK                   0x2u
#define ASRC_ASRIER_ADIEB_SHIFT                  1
#define ASRC_ASRIER_ADIEC_MASK                   0x4u
#define ASRC_ASRIER_ADIEC_SHIFT                  2
#define ASRC_ASRIER_ADOEA_MASK                   0x8u
#define ASRC_ASRIER_ADOEA_SHIFT                  3
#define ASRC_ASRIER_ADOEB_MASK                   0x10u
#define ASRC_ASRIER_ADOEB_SHIFT                  4
#define ASRC_ASRIER_ADOEC_MASK                   0x20u
#define ASRC_ASRIER_ADOEC_SHIFT                  5
#define ASRC_ASRIER_AOLIE_MASK                   0x40u
#define ASRC_ASRIER_AOLIE_SHIFT                  6
#define ASRC_ASRIER_AFPWE_MASK                   0x80u
#define ASRC_ASRIER_AFPWE_SHIFT                  7
/* ASRCNCR Bit Fields */
#define ASRC_ASRCNCR_ANCA_MASK                   0xFu
#define ASRC_ASRCNCR_ANCA_SHIFT                  0
#define ASRC_ASRCNCR_ANCA(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCNCR_ANCA_SHIFT))&ASRC_ASRCNCR_ANCA_MASK)
#define ASRC_ASRCNCR_ANCB_MASK                   0xF0u
#define ASRC_ASRCNCR_ANCB_SHIFT                  4
#define ASRC_ASRCNCR_ANCB(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCNCR_ANCB_SHIFT))&ASRC_ASRCNCR_ANCB_MASK)
#define ASRC_ASRCNCR_ANCC_MASK                   0xF00u
#define ASRC_ASRCNCR_ANCC_SHIFT                  8
#define ASRC_ASRCNCR_ANCC(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCNCR_ANCC_SHIFT))&ASRC_ASRCNCR_ANCC_MASK)
/* ASRCFG Bit Fields */
#define ASRC_ASRCFG_PREMODA_MASK                 0xC0u
#define ASRC_ASRCFG_PREMODA_SHIFT                6
#define ASRC_ASRCFG_PREMODA(x)                   (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_PREMODA_SHIFT))&ASRC_ASRCFG_PREMODA_MASK)
#define ASRC_ASRCFG_POSTMODA_MASK                0x300u
#define ASRC_ASRCFG_POSTMODA_SHIFT               8
#define ASRC_ASRCFG_POSTMODA(x)                  (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_POSTMODA_SHIFT))&ASRC_ASRCFG_POSTMODA_MASK)
#define ASRC_ASRCFG_PREMODB_MASK                 0xC00u
#define ASRC_ASRCFG_PREMODB_SHIFT                10
#define ASRC_ASRCFG_PREMODB(x)                   (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_PREMODB_SHIFT))&ASRC_ASRCFG_PREMODB_MASK)
#define ASRC_ASRCFG_POSTMODB_MASK                0x3000u
#define ASRC_ASRCFG_POSTMODB_SHIFT               12
#define ASRC_ASRCFG_POSTMODB(x)                  (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_POSTMODB_SHIFT))&ASRC_ASRCFG_POSTMODB_MASK)
#define ASRC_ASRCFG_PREMODC_MASK                 0xC000u
#define ASRC_ASRCFG_PREMODC_SHIFT                14
#define ASRC_ASRCFG_PREMODC(x)                   (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_PREMODC_SHIFT))&ASRC_ASRCFG_PREMODC_MASK)
#define ASRC_ASRCFG_POSTMODC_MASK                0x30000u
#define ASRC_ASRCFG_POSTMODC_SHIFT               16
#define ASRC_ASRCFG_POSTMODC(x)                  (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCFG_POSTMODC_SHIFT))&ASRC_ASRCFG_POSTMODC_MASK)
#define ASRC_ASRCFG_NDPRA_MASK                   0x40000u
#define ASRC_ASRCFG_NDPRA_SHIFT                  18
#define ASRC_ASRCFG_NDPRB_MASK                   0x80000u
#define ASRC_ASRCFG_NDPRB_SHIFT                  19
#define ASRC_ASRCFG_NDPRC_MASK                   0x100000u
#define ASRC_ASRCFG_NDPRC_SHIFT                  20
#define ASRC_ASRCFG_INIRQA_MASK                  0x200000u
#define ASRC_ASRCFG_INIRQA_SHIFT                 21
#define ASRC_ASRCFG_INIRQB_MASK                  0x400000u
#define ASRC_ASRCFG_INIRQB_SHIFT                 22
#define ASRC_ASRCFG_INIRQC_MASK                  0x800000u
#define ASRC_ASRCFG_INIRQC_SHIFT                 23
/* ASRCSR Bit Fields */
#define ASRC_ASRCSR_AICSA_MASK                   0xFu
#define ASRC_ASRCSR_AICSA_SHIFT                  0
#define ASRC_ASRCSR_AICSA(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AICSA_SHIFT))&ASRC_ASRCSR_AICSA_MASK)
#define ASRC_ASRCSR_AICSB_MASK                   0xF0u
#define ASRC_ASRCSR_AICSB_SHIFT                  4
#define ASRC_ASRCSR_AICSB(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AICSB_SHIFT))&ASRC_ASRCSR_AICSB_MASK)
#define ASRC_ASRCSR_AICSC_MASK                   0xF00u
#define ASRC_ASRCSR_AICSC_SHIFT                  8
#define ASRC_ASRCSR_AICSC(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AICSC_SHIFT))&ASRC_ASRCSR_AICSC_MASK)
#define ASRC_ASRCSR_AOCSA_MASK                   0xF000u
#define ASRC_ASRCSR_AOCSA_SHIFT                  12
#define ASRC_ASRCSR_AOCSA(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AOCSA_SHIFT))&ASRC_ASRCSR_AOCSA_MASK)
#define ASRC_ASRCSR_AOCSB_MASK                   0xF0000u
#define ASRC_ASRCSR_AOCSB_SHIFT                  16
#define ASRC_ASRCSR_AOCSB(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AOCSB_SHIFT))&ASRC_ASRCSR_AOCSB_MASK)
#define ASRC_ASRCSR_AOCSC_MASK                   0xF00000u
#define ASRC_ASRCSR_AOCSC_SHIFT                  20
#define ASRC_ASRCSR_AOCSC(x)                     (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCSR_AOCSC_SHIFT))&ASRC_ASRCSR_AOCSC_MASK)
/* ASRCDR1 Bit Fields */
#define ASRC_ASRCDR1_AICPA_MASK                  0x7u
#define ASRC_ASRCDR1_AICPA_SHIFT                 0
#define ASRC_ASRCDR1_AICPA(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AICPA_SHIFT))&ASRC_ASRCDR1_AICPA_MASK)
#define ASRC_ASRCDR1_AICDA_MASK                  0x38u
#define ASRC_ASRCDR1_AICDA_SHIFT                 3
#define ASRC_ASRCDR1_AICDA(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AICDA_SHIFT))&ASRC_ASRCDR1_AICDA_MASK)
#define ASRC_ASRCDR1_AICPB_MASK                  0x1C0u
#define ASRC_ASRCDR1_AICPB_SHIFT                 6
#define ASRC_ASRCDR1_AICPB(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AICPB_SHIFT))&ASRC_ASRCDR1_AICPB_MASK)
#define ASRC_ASRCDR1_AICDB_MASK                  0xE00u
#define ASRC_ASRCDR1_AICDB_SHIFT                 9
#define ASRC_ASRCDR1_AICDB(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AICDB_SHIFT))&ASRC_ASRCDR1_AICDB_MASK)
#define ASRC_ASRCDR1_AOCPA_MASK                  0x7000u
#define ASRC_ASRCDR1_AOCPA_SHIFT                 12
#define ASRC_ASRCDR1_AOCPA(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AOCPA_SHIFT))&ASRC_ASRCDR1_AOCPA_MASK)
#define ASRC_ASRCDR1_AOCDA_MASK                  0x38000u
#define ASRC_ASRCDR1_AOCDA_SHIFT                 15
#define ASRC_ASRCDR1_AOCDA(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AOCDA_SHIFT))&ASRC_ASRCDR1_AOCDA_MASK)
#define ASRC_ASRCDR1_AOCPB_MASK                  0x1C0000u
#define ASRC_ASRCDR1_AOCPB_SHIFT                 18
#define ASRC_ASRCDR1_AOCPB(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AOCPB_SHIFT))&ASRC_ASRCDR1_AOCPB_MASK)
#define ASRC_ASRCDR1_AOCDB_MASK                  0xE00000u
#define ASRC_ASRCDR1_AOCDB_SHIFT                 21
#define ASRC_ASRCDR1_AOCDB(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR1_AOCDB_SHIFT))&ASRC_ASRCDR1_AOCDB_MASK)
/* ASRCDR2 Bit Fields */
#define ASRC_ASRCDR2_AICPC_MASK                  0x7u
#define ASRC_ASRCDR2_AICPC_SHIFT                 0
#define ASRC_ASRCDR2_AICPC(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR2_AICPC_SHIFT))&ASRC_ASRCDR2_AICPC_MASK)
#define ASRC_ASRCDR2_AICDC_MASK                  0x38u
#define ASRC_ASRCDR2_AICDC_SHIFT                 3
#define ASRC_ASRCDR2_AICDC(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR2_AICDC_SHIFT))&ASRC_ASRCDR2_AICDC_MASK)
#define ASRC_ASRCDR2_AOCPC_MASK                  0x1C0u
#define ASRC_ASRCDR2_AOCPC_SHIFT                 6
#define ASRC_ASRCDR2_AOCPC(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR2_AOCPC_SHIFT))&ASRC_ASRCDR2_AOCPC_MASK)
#define ASRC_ASRCDR2_AOCDC_MASK                  0xE00u
#define ASRC_ASRCDR2_AOCDC_SHIFT                 9
#define ASRC_ASRCDR2_AOCDC(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCDR2_AOCDC_SHIFT))&ASRC_ASRCDR2_AOCDC_MASK)
/* ASRSTR Bit Fields */
#define ASRC_ASRSTR_AIDEA_MASK                   0x1u
#define ASRC_ASRSTR_AIDEA_SHIFT                  0
#define ASRC_ASRSTR_AIDEB_MASK                   0x2u
#define ASRC_ASRSTR_AIDEB_SHIFT                  1
#define ASRC_ASRSTR_AIDEC_MASK                   0x4u
#define ASRC_ASRSTR_AIDEC_SHIFT                  2
#define ASRC_ASRSTR_AODFA_MASK                   0x8u
#define ASRC_ASRSTR_AODFA_SHIFT                  3
#define ASRC_ASRSTR_AODFB_MASK                   0x10u
#define ASRC_ASRSTR_AODFB_SHIFT                  4
#define ASRC_ASRSTR_AODFC_MASK                   0x20u
#define ASRC_ASRSTR_AODFC_SHIFT                  5
#define ASRC_ASRSTR_AOLE_MASK                    0x40u
#define ASRC_ASRSTR_AOLE_SHIFT                   6
#define ASRC_ASRSTR_FPWT_MASK                    0x80u
#define ASRC_ASRSTR_FPWT_SHIFT                   7
#define ASRC_ASRSTR_AIDUA_MASK                   0x100u
#define ASRC_ASRSTR_AIDUA_SHIFT                  8
#define ASRC_ASRSTR_AIDUB_MASK                   0x200u
#define ASRC_ASRSTR_AIDUB_SHIFT                  9
#define ASRC_ASRSTR_AIDUC_MASK                   0x400u
#define ASRC_ASRSTR_AIDUC_SHIFT                  10
#define ASRC_ASRSTR_AODOA_MASK                   0x800u
#define ASRC_ASRSTR_AODOA_SHIFT                  11
#define ASRC_ASRSTR_AODOB_MASK                   0x1000u
#define ASRC_ASRSTR_AODOB_SHIFT                  12
#define ASRC_ASRSTR_AODOC_MASK                   0x2000u
#define ASRC_ASRSTR_AODOC_SHIFT                  13
#define ASRC_ASRSTR_AIOLA_MASK                   0x4000u
#define ASRC_ASRSTR_AIOLA_SHIFT                  14
#define ASRC_ASRSTR_AIOLB_MASK                   0x8000u
#define ASRC_ASRSTR_AIOLB_SHIFT                  15
#define ASRC_ASRSTR_AIOLC_MASK                   0x10000u
#define ASRC_ASRSTR_AIOLC_SHIFT                  16
#define ASRC_ASRSTR_AOOLA_MASK                   0x20000u
#define ASRC_ASRSTR_AOOLA_SHIFT                  17
#define ASRC_ASRSTR_AOOLB_MASK                   0x40000u
#define ASRC_ASRSTR_AOOLB_SHIFT                  18
#define ASRC_ASRSTR_AOOLC_MASK                   0x80000u
#define ASRC_ASRSTR_AOOLC_SHIFT                  19
#define ASRC_ASRSTR_ATQOL_MASK                   0x100000u
#define ASRC_ASRSTR_ATQOL_SHIFT                  20
#define ASRC_ASRSTR_DSLCNT_MASK                  0x200000u
#define ASRC_ASRSTR_DSLCNT_SHIFT                 21
/* ASRPMn Bit Fields */
#define ASRC_ASRPMn_PARAMETER_VALUE_MASK         0xFFFFFFu
#define ASRC_ASRPMn_PARAMETER_VALUE_SHIFT        0
#define ASRC_ASRPMn_PARAMETER_VALUE(x)           (((uint32_t)(((uint32_t)(x))<<ASRC_ASRPMn_PARAMETER_VALUE_SHIFT))&ASRC_ASRPMn_PARAMETER_VALUE_MASK)
/* ASRTFR1 Bit Fields */
#define ASRC_ASRTFR1_TF_BASE_MASK                0x1FC0u
#define ASRC_ASRTFR1_TF_BASE_SHIFT               6
#define ASRC_ASRTFR1_TF_BASE(x)                  (((uint32_t)(((uint32_t)(x))<<ASRC_ASRTFR1_TF_BASE_SHIFT))&ASRC_ASRTFR1_TF_BASE_MASK)
#define ASRC_ASRTFR1_TF_FILL_MASK                0xFE000u
#define ASRC_ASRTFR1_TF_FILL_SHIFT               13
#define ASRC_ASRTFR1_TF_FILL(x)                  (((uint32_t)(((uint32_t)(x))<<ASRC_ASRTFR1_TF_FILL_SHIFT))&ASRC_ASRTFR1_TF_FILL_MASK)
/* ASRCCR Bit Fields */
#define ASRC_ASRCCR_ACIA_MASK                    0xFu
#define ASRC_ASRCCR_ACIA_SHIFT                   0
#define ASRC_ASRCCR_ACIA(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACIA_SHIFT))&ASRC_ASRCCR_ACIA_MASK)
#define ASRC_ASRCCR_ACIB_MASK                    0xF0u
#define ASRC_ASRCCR_ACIB_SHIFT                   4
#define ASRC_ASRCCR_ACIB(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACIB_SHIFT))&ASRC_ASRCCR_ACIB_MASK)
#define ASRC_ASRCCR_ACIC_MASK                    0xF00u
#define ASRC_ASRCCR_ACIC_SHIFT                   8
#define ASRC_ASRCCR_ACIC(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACIC_SHIFT))&ASRC_ASRCCR_ACIC_MASK)
#define ASRC_ASRCCR_ACOA_MASK                    0xF000u
#define ASRC_ASRCCR_ACOA_SHIFT                   12
#define ASRC_ASRCCR_ACOA(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACOA_SHIFT))&ASRC_ASRCCR_ACOA_MASK)
#define ASRC_ASRCCR_ACOB_MASK                    0xF0000u
#define ASRC_ASRCCR_ACOB_SHIFT                   16
#define ASRC_ASRCCR_ACOB(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACOB_SHIFT))&ASRC_ASRCCR_ACOB_MASK)
#define ASRC_ASRCCR_ACOC_MASK                    0xF00000u
#define ASRC_ASRCCR_ACOC_SHIFT                   20
#define ASRC_ASRCCR_ACOC(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRCCR_ACOC_SHIFT))&ASRC_ASRCCR_ACOC_MASK)
/* ASRDI Bit Fields */
#define ASRC_ASRDI_DATA_MASK                     0xFFFFFFu
#define ASRC_ASRDI_DATA_SHIFT                    0
#define ASRC_ASRDI_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<ASRC_ASRDI_DATA_SHIFT))&ASRC_ASRDI_DATA_MASK)
/* ASRDO Bit Fields */
#define ASRC_ASRDO_DATA_MASK                     0xFFFFFFu
#define ASRC_ASRDO_DATA_SHIFT                    0
#define ASRC_ASRDO_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<ASRC_ASRDO_DATA_SHIFT))&ASRC_ASRDO_DATA_MASK)
/* ASRIDRHA Bit Fields */
#define ASRC_ASRIDRHA_IDRATIOA_MASK              0xFFu
#define ASRC_ASRIDRHA_IDRATIOA_SHIFT             0
#define ASRC_ASRIDRHA_IDRATIOA(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRHA_IDRATIOA_SHIFT))&ASRC_ASRIDRHA_IDRATIOA_MASK)
/* ASRIDRLA Bit Fields */
#define ASRC_ASRIDRLA_IDRATIOA_MASK              0xFFFFFFu
#define ASRC_ASRIDRLA_IDRATIOA_SHIFT             0
#define ASRC_ASRIDRLA_IDRATIOA(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRLA_IDRATIOA_SHIFT))&ASRC_ASRIDRLA_IDRATIOA_MASK)
/* ASRIDRHB Bit Fields */
#define ASRC_ASRIDRHB_IDRATIOB_MASK              0xFFu
#define ASRC_ASRIDRHB_IDRATIOB_SHIFT             0
#define ASRC_ASRIDRHB_IDRATIOB(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRHB_IDRATIOB_SHIFT))&ASRC_ASRIDRHB_IDRATIOB_MASK)
/* ASRIDRLB Bit Fields */
#define ASRC_ASRIDRLB_IDRATIOB_MASK              0xFFFFFFu
#define ASRC_ASRIDRLB_IDRATIOB_SHIFT             0
#define ASRC_ASRIDRLB_IDRATIOB(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRLB_IDRATIOB_SHIFT))&ASRC_ASRIDRLB_IDRATIOB_MASK)
/* ASRIDRHC Bit Fields */
#define ASRC_ASRIDRHC_IDRATIOC_MASK              0xFFu
#define ASRC_ASRIDRHC_IDRATIOC_SHIFT             0
#define ASRC_ASRIDRHC_IDRATIOC(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRHC_IDRATIOC_SHIFT))&ASRC_ASRIDRHC_IDRATIOC_MASK)
/* ASRIDRLC Bit Fields */
#define ASRC_ASRIDRLC_IDRATIOC_MASK              0xFFFFFFu
#define ASRC_ASRIDRLC_IDRATIOC_SHIFT             0
#define ASRC_ASRIDRLC_IDRATIOC(x)                (((uint32_t)(((uint32_t)(x))<<ASRC_ASRIDRLC_IDRATIOC_SHIFT))&ASRC_ASRIDRLC_IDRATIOC_MASK)
/* ASR76K Bit Fields */
#define ASRC_ASR76K_ASR76K_MASK                  0x1FFFFu
#define ASRC_ASR76K_ASR76K_SHIFT                 0
#define ASRC_ASR76K_ASR76K(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASR76K_ASR76K_SHIFT))&ASRC_ASR76K_ASR76K_MASK)
/* ASR56K Bit Fields */
#define ASRC_ASR56K_ASR56K_MASK                  0x1FFFFu
#define ASRC_ASR56K_ASR56K_SHIFT                 0
#define ASRC_ASR56K_ASR56K(x)                    (((uint32_t)(((uint32_t)(x))<<ASRC_ASR56K_ASR56K_SHIFT))&ASRC_ASR56K_ASR56K_MASK)
/* ASRMCRA Bit Fields */
#define ASRC_ASRMCRA_INFIFO_THRESHOLDA_MASK      0x3Fu
#define ASRC_ASRMCRA_INFIFO_THRESHOLDA_SHIFT     0
#define ASRC_ASRMCRA_INFIFO_THRESHOLDA(x)        (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRA_INFIFO_THRESHOLDA_SHIFT))&ASRC_ASRMCRA_INFIFO_THRESHOLDA_MASK)
#define ASRC_ASRMCRA_RSYNOFA_MASK                0x400u
#define ASRC_ASRMCRA_RSYNOFA_SHIFT               10
#define ASRC_ASRMCRA_RSYNIFA_MASK                0x800u
#define ASRC_ASRMCRA_RSYNIFA_SHIFT               11
#define ASRC_ASRMCRA_OUTFIFO_THRESHOLDA_MASK     0x3F000u
#define ASRC_ASRMCRA_OUTFIFO_THRESHOLDA_SHIFT    12
#define ASRC_ASRMCRA_OUTFIFO_THRESHOLDA(x)       (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRA_OUTFIFO_THRESHOLDA_SHIFT))&ASRC_ASRMCRA_OUTFIFO_THRESHOLDA_MASK)
#define ASRC_ASRMCRA_BYPASSPOLYA_MASK            0x100000u
#define ASRC_ASRMCRA_BYPASSPOLYA_SHIFT           20
#define ASRC_ASRMCRA_BUFSTALLA_MASK              0x200000u
#define ASRC_ASRMCRA_BUFSTALLA_SHIFT             21
#define ASRC_ASRMCRA_EXTTHRSHA_MASK              0x400000u
#define ASRC_ASRMCRA_EXTTHRSHA_SHIFT             22
#define ASRC_ASRMCRA_ZEROBUFA_MASK               0x800000u
#define ASRC_ASRMCRA_ZEROBUFA_SHIFT              23
/* ASRFSTA Bit Fields */
#define ASRC_ASRFSTA_INFIFO_FILLA_MASK           0x7Fu
#define ASRC_ASRFSTA_INFIFO_FILLA_SHIFT          0
#define ASRC_ASRFSTA_INFIFO_FILLA(x)             (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTA_INFIFO_FILLA_SHIFT))&ASRC_ASRFSTA_INFIFO_FILLA_MASK)
#define ASRC_ASRFSTA_IAEA_MASK                   0x800u
#define ASRC_ASRFSTA_IAEA_SHIFT                  11
#define ASRC_ASRFSTA_OUTFIFO_FILLA_MASK          0x7F000u
#define ASRC_ASRFSTA_OUTFIFO_FILLA_SHIFT         12
#define ASRC_ASRFSTA_OUTFIFO_FILLA(x)            (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTA_OUTFIFO_FILLA_SHIFT))&ASRC_ASRFSTA_OUTFIFO_FILLA_MASK)
#define ASRC_ASRFSTA_OAFA_MASK                   0x800000u
#define ASRC_ASRFSTA_OAFA_SHIFT                  23
/* ASRMCRB Bit Fields */
#define ASRC_ASRMCRB_INFIFO_THRESHOLDB_MASK      0x3Fu
#define ASRC_ASRMCRB_INFIFO_THRESHOLDB_SHIFT     0
#define ASRC_ASRMCRB_INFIFO_THRESHOLDB(x)        (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRB_INFIFO_THRESHOLDB_SHIFT))&ASRC_ASRMCRB_INFIFO_THRESHOLDB_MASK)
#define ASRC_ASRMCRB_RSYNOFB_MASK                0x400u
#define ASRC_ASRMCRB_RSYNOFB_SHIFT               10
#define ASRC_ASRMCRB_RSYNIFB_MASK                0x800u
#define ASRC_ASRMCRB_RSYNIFB_SHIFT               11
#define ASRC_ASRMCRB_OUTFIFO_THRESHOLDB_MASK     0x3F000u
#define ASRC_ASRMCRB_OUTFIFO_THRESHOLDB_SHIFT    12
#define ASRC_ASRMCRB_OUTFIFO_THRESHOLDB(x)       (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRB_OUTFIFO_THRESHOLDB_SHIFT))&ASRC_ASRMCRB_OUTFIFO_THRESHOLDB_MASK)
#define ASRC_ASRMCRB_BYPASSPOLYB_MASK            0x100000u
#define ASRC_ASRMCRB_BYPASSPOLYB_SHIFT           20
#define ASRC_ASRMCRB_BUFSTALLB_MASK              0x200000u
#define ASRC_ASRMCRB_BUFSTALLB_SHIFT             21
#define ASRC_ASRMCRB_EXTTHRSHB_MASK              0x400000u
#define ASRC_ASRMCRB_EXTTHRSHB_SHIFT             22
#define ASRC_ASRMCRB_ZEROBUFB_MASK               0x800000u
#define ASRC_ASRMCRB_ZEROBUFB_SHIFT              23
/* ASRFSTB Bit Fields */
#define ASRC_ASRFSTB_INFIFO_FILLB_MASK           0x7Fu
#define ASRC_ASRFSTB_INFIFO_FILLB_SHIFT          0
#define ASRC_ASRFSTB_INFIFO_FILLB(x)             (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTB_INFIFO_FILLB_SHIFT))&ASRC_ASRFSTB_INFIFO_FILLB_MASK)
#define ASRC_ASRFSTB_IAEB_MASK                   0x800u
#define ASRC_ASRFSTB_IAEB_SHIFT                  11
#define ASRC_ASRFSTB_OUTFIFO_FILLB_MASK          0x7F000u
#define ASRC_ASRFSTB_OUTFIFO_FILLB_SHIFT         12
#define ASRC_ASRFSTB_OUTFIFO_FILLB(x)            (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTB_OUTFIFO_FILLB_SHIFT))&ASRC_ASRFSTB_OUTFIFO_FILLB_MASK)
#define ASRC_ASRFSTB_OAFB_MASK                   0x800000u
#define ASRC_ASRFSTB_OAFB_SHIFT                  23
/* ASRMCRC Bit Fields */
#define ASRC_ASRMCRC_INFIFO_THRESHOLDC_MASK      0x3Fu
#define ASRC_ASRMCRC_INFIFO_THRESHOLDC_SHIFT     0
#define ASRC_ASRMCRC_INFIFO_THRESHOLDC(x)        (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRC_INFIFO_THRESHOLDC_SHIFT))&ASRC_ASRMCRC_INFIFO_THRESHOLDC_MASK)
#define ASRC_ASRMCRC_RSYNOFC_MASK                0x400u
#define ASRC_ASRMCRC_RSYNOFC_SHIFT               10
#define ASRC_ASRMCRC_RSYNIFC_MASK                0x800u
#define ASRC_ASRMCRC_RSYNIFC_SHIFT               11
#define ASRC_ASRMCRC_OUTFIFO_THRESHOLDC_MASK     0x3F000u
#define ASRC_ASRMCRC_OUTFIFO_THRESHOLDC_SHIFT    12
#define ASRC_ASRMCRC_OUTFIFO_THRESHOLDC(x)       (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCRC_OUTFIFO_THRESHOLDC_SHIFT))&ASRC_ASRMCRC_OUTFIFO_THRESHOLDC_MASK)
#define ASRC_ASRMCRC_BYPASSPOLYC_MASK            0x100000u
#define ASRC_ASRMCRC_BYPASSPOLYC_SHIFT           20
#define ASRC_ASRMCRC_BUFSTALLC_MASK              0x200000u
#define ASRC_ASRMCRC_BUFSTALLC_SHIFT             21
#define ASRC_ASRMCRC_EXTTHRSHC_MASK              0x400000u
#define ASRC_ASRMCRC_EXTTHRSHC_SHIFT             22
#define ASRC_ASRMCRC_ZEROBUFC_MASK               0x800000u
#define ASRC_ASRMCRC_ZEROBUFC_SHIFT              23
/* ASRFSTC Bit Fields */
#define ASRC_ASRFSTC_INFIFO_FILLC_MASK           0x7Fu
#define ASRC_ASRFSTC_INFIFO_FILLC_SHIFT          0
#define ASRC_ASRFSTC_INFIFO_FILLC(x)             (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTC_INFIFO_FILLC_SHIFT))&ASRC_ASRFSTC_INFIFO_FILLC_MASK)
#define ASRC_ASRFSTC_IAEC_MASK                   0x800u
#define ASRC_ASRFSTC_IAEC_SHIFT                  11
#define ASRC_ASRFSTC_OUTFIFO_FILLC_MASK          0x7F000u
#define ASRC_ASRFSTC_OUTFIFO_FILLC_SHIFT         12
#define ASRC_ASRFSTC_OUTFIFO_FILLC(x)            (((uint32_t)(((uint32_t)(x))<<ASRC_ASRFSTC_OUTFIFO_FILLC_SHIFT))&ASRC_ASRFSTC_OUTFIFO_FILLC_MASK)
#define ASRC_ASRFSTC_OAFC_MASK                   0x800000u
#define ASRC_ASRFSTC_OAFC_SHIFT                  23
/* ASRMCR1 Bit Fields */
#define ASRC_ASRMCR1_OW16_MASK                   0x1u
#define ASRC_ASRMCR1_OW16_SHIFT                  0
#define ASRC_ASRMCR1_OSGN_MASK                   0x2u
#define ASRC_ASRMCR1_OSGN_SHIFT                  1
#define ASRC_ASRMCR1_OMSB_MASK                   0x4u
#define ASRC_ASRMCR1_OMSB_SHIFT                  2
#define ASRC_ASRMCR1_IMSB_MASK                   0x100u
#define ASRC_ASRMCR1_IMSB_SHIFT                  8
#define ASRC_ASRMCR1_IWD_MASK                    0xE00u
#define ASRC_ASRMCR1_IWD_SHIFT                   9
#define ASRC_ASRMCR1_IWD(x)                      (((uint32_t)(((uint32_t)(x))<<ASRC_ASRMCR1_IWD_SHIFT))&ASRC_ASRMCR1_IWD_MASK)

/**
 * @}
 */ /* end of group ASRC_Register_Masks */


/* ASRC - Peripheral instance base addresses */
/** Peripheral ASRC base pointer */
#define ASRC_BASE_PTR                            ((ASRC_MemMapPtr)0x40060000u)
/** Array initializer of ASRC peripheral base pointers */
#define ASRC_BASE_PTRS                           { ASRC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- ASRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ASRC_Register_Accessor_Macros ASRC - Register accessor macros
 * @{
 */


/* ASRC - Register instance definitions */
/* ASRC */
#define ASRC_ASRCTR                              ASRC_ASRCTR_REG(ASRC_BASE_PTR)
#define ASRC_ASRIER                              ASRC_ASRIER_REG(ASRC_BASE_PTR)
#define ASRC_ASRCNCR                             ASRC_ASRCNCR_REG(ASRC_BASE_PTR)
#define ASRC_ASRCFG                              ASRC_ASRCFG_REG(ASRC_BASE_PTR)
#define ASRC_ASRCSR                              ASRC_ASRCSR_REG(ASRC_BASE_PTR)
#define ASRC_ASRCDR1                             ASRC_ASRCDR1_REG(ASRC_BASE_PTR)
#define ASRC_ASRCDR2                             ASRC_ASRCDR2_REG(ASRC_BASE_PTR)
#define ASRC_ASRSTR                              ASRC_ASRSTR_REG(ASRC_BASE_PTR)
#define ASRC_ASRPMn1                             ASRC_ASRPMn_REG(ASRC_BASE_PTR,0)
#define ASRC_ASRPMn2                             ASRC_ASRPMn_REG(ASRC_BASE_PTR,1)
#define ASRC_ASRPMn3                             ASRC_ASRPMn_REG(ASRC_BASE_PTR,2)
#define ASRC_ASRPMn4                             ASRC_ASRPMn_REG(ASRC_BASE_PTR,3)
#define ASRC_ASRPMn5                             ASRC_ASRPMn_REG(ASRC_BASE_PTR,4)
#define ASRC_ASRTFR1                             ASRC_ASRTFR1_REG(ASRC_BASE_PTR)
#define ASRC_ASRCCR                              ASRC_ASRCCR_REG(ASRC_BASE_PTR)
#define ASRC_ASRDIA                              ASRC_ASRDI_REG(ASRC_BASE_PTR,0)
#define ASRC_ASRDOA                              ASRC_ASRDO_REG(ASRC_BASE_PTR,0)
#define ASRC_ASRDIB                              ASRC_ASRDI_REG(ASRC_BASE_PTR,1)
#define ASRC_ASRDOB                              ASRC_ASRDO_REG(ASRC_BASE_PTR,1)
#define ASRC_ASRDIC                              ASRC_ASRDI_REG(ASRC_BASE_PTR,2)
#define ASRC_ASRDOC                              ASRC_ASRDO_REG(ASRC_BASE_PTR,2)
#define ASRC_ASRIDRHA                            ASRC_ASRIDRHA_REG(ASRC_BASE_PTR)
#define ASRC_ASRIDRLA                            ASRC_ASRIDRLA_REG(ASRC_BASE_PTR)
#define ASRC_ASRIDRHB                            ASRC_ASRIDRHB_REG(ASRC_BASE_PTR)
#define ASRC_ASRIDRLB                            ASRC_ASRIDRLB_REG(ASRC_BASE_PTR)
#define ASRC_ASRIDRHC                            ASRC_ASRIDRHC_REG(ASRC_BASE_PTR)
#define ASRC_ASRIDRLC                            ASRC_ASRIDRLC_REG(ASRC_BASE_PTR)
#define ASRC_ASR76K                              ASRC_ASR76K_REG(ASRC_BASE_PTR)
#define ASRC_ASR56K                              ASRC_ASR56K_REG(ASRC_BASE_PTR)
#define ASRC_ASRMCRA                             ASRC_ASRMCRA_REG(ASRC_BASE_PTR)
#define ASRC_ASRFSTA                             ASRC_ASRFSTA_REG(ASRC_BASE_PTR)
#define ASRC_ASRMCRB                             ASRC_ASRMCRB_REG(ASRC_BASE_PTR)
#define ASRC_ASRFSTB                             ASRC_ASRFSTB_REG(ASRC_BASE_PTR)
#define ASRC_ASRMCRC                             ASRC_ASRMCRC_REG(ASRC_BASE_PTR)
#define ASRC_ASRFSTC                             ASRC_ASRFSTC_REG(ASRC_BASE_PTR)
#define ASRC_ASRMCR1A                            ASRC_ASRMCR1_REG(ASRC_BASE_PTR,0)
#define ASRC_ASRMCR1B                            ASRC_ASRMCR1_REG(ASRC_BASE_PTR,1)
#define ASRC_ASRMCR1C                            ASRC_ASRMCR1_REG(ASRC_BASE_PTR,2)

/* ASRC - Register array accessors */
#define ASRC_ASRPMn(index)                       ASRC_ASRPMn_REG(ASRC_BASE_PTR,index)
#define ASRC_ASRDI(index2)                       ASRC_ASRDI_REG(ASRC_BASE_PTR,index2)
#define ASRC_ASRDO(index2)                       ASRC_ASRDO_REG(ASRC_BASE_PTR,index2)
#define ASRC_ASRMCR1(index)                      ASRC_ASRMCR1_REG(ASRC_BASE_PTR,index)

/**
 * @}
 */ /* end of group ASRC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group ASRC_Peripheral */


/* ----------------------------------------------------------------------------
   -- Anadig
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Anadig_Peripheral Anadig
 * @{
 */

/** Anadig - Peripheral register structure */
typedef struct Anadig_MemMap {
  uint8_t RESERVED_0[16];
  uint32_t PLL3_CTRL;                              /**< PLL3 Control register, offset: 0x10 */
  uint8_t RESERVED_1[12];
  uint32_t PLL7_CTRL;                              /**< PLL7 Control register, offset: 0x20 */
  uint8_t RESERVED_2[12];
  uint32_t PLL2_CTRL;                              /**< PLL2 Control register, offset: 0x30 */
  uint8_t RESERVED_3[12];
  uint32_t PLL2_SS;                                /**< PLL2 Spread Spectrum definition register, offset: 0x40 */
  uint8_t RESERVED_4[12];
  uint32_t PLL2_NUM;                               /**< PLL2 Numerator definition register, offset: 0x50 */
  uint8_t RESERVED_5[12];
  uint32_t PLL2_DENOM;                             /**< PLL2 Denominator definition register, offset: 0x60 */
  uint8_t RESERVED_6[12];
  uint32_t PLL4_CTRL;                              /**< PLL4 Control register, offset: 0x70 */
  uint8_t RESERVED_7[12];
  uint32_t PLL4_NUM;                               /**< PLL4 Numerator register, offset: 0x80 */
  uint8_t RESERVED_8[12];
  uint32_t PLL4_DENOM;                             /**< PLL4 Denominator register, offset: 0x90 */
  uint8_t RESERVED_9[12];
  uint32_t PLL6_CTRL;                              /**< PLL6 Control register, offset: 0xA0 */
  uint8_t RESERVED_10[12];
  uint32_t PLL6_NUM;                               /**< PLL6 Numerator register, offset: 0xB0 */
  uint8_t RESERVED_11[12];
  uint32_t PLL6_DENOM;                             /**< PLL6 Denominator register, offset: 0xC0 */
  uint8_t RESERVED_12[28];
  uint32_t PLL5_CTRL;                              /**< PLL5 Control register, offset: 0xE0 */
  uint8_t RESERVED_13[12];
  uint32_t PLL_PFD_480_USB0;                       /**< Anadig PFD 480 USB0 definition register, offset: 0xF0 */
  uint8_t RESERVED_14[12];
  uint32_t PLL_PFD_528;                            /**< Anadig PFD 528 definition register, offset: 0x100 */
  uint8_t RESERVED_15[12];
  uint32_t REG_1P1;                                /**< Anadig Regulator 1P1 definition register, offset: 0x110 */
  uint8_t RESERVED_16[12];
  uint32_t REG_3P0;                                /**< Anadig Regulator 3P0 definition register, offset: 0x120 */
  uint8_t RESERVED_17[12];
  uint32_t REG_2P5;                                /**< Anadig Regulator 2P5 definition register, offset: 0x130 */
  uint8_t RESERVED_18[28];
  uint32_t ANA_MISC0;                              /**< Anadig Analog Miscellaneous definition register, offset: 0x150 */
  uint8_t RESERVED_19[12];
  uint32_t ANA_MISC1;                              /**< Anadig Analog Miscellaneous definition register, offset: 0x160 */
  uint8_t RESERVED_20[60];
  uint32_t USB0_VBUS_DETECT;                       /**< USB0 Vbus Detect control register, offset: 0x1A0 */
  uint8_t RESERVED_21[12];
  uint32_t USB0_CHRG_DETECT;                       /**< USB0 Charger Detect control register, offset: 0x1B0 */
  uint8_t RESERVED_22[12];
  uint32_t USB0_VBUS_DETECT_STATUS;                /**< USB0 Vbus Detect STS definition register, offset: 0x1C0 */
  uint8_t RESERVED_23[12];
  uint32_t CHRG_DETECT_STATUS;                     /**< USB0 Charger Detect STS definition register, offset: 0x1D0 */
  uint8_t RESERVED_24[12];
  uint32_t USB0_LOOPBACK;                          /**< USB0 Loopback register, offset: 0x1E0 */
  uint8_t RESERVED_25[12];
  uint32_t USB0_MISC;                              /**< USB0 Miscellaneous definition register, offset: 0x1F0 */
  uint8_t RESERVED_26[12];
  uint32_t USB1_VBUS_DETECT;                       /**< USB1 Vbus Detect control register, offset: 0x200 */
  uint8_t RESERVED_27[12];
  uint32_t USB1_CHRG_DETECT;                       /**< Anadig USB1Charger Detect control register, offset: 0x210 */
  uint8_t RESERVED_28[12];
  uint32_t USB1_VBUS_DETECT_STATUS;                /**< USB1 Vbus Detect STS definition register, offset: 0x220 */
  uint8_t RESERVED_29[12];
  uint32_t USB1_CHRG_DETECT_STATUS;                /**< USB1 Charger Detect STS definition register, offset: 0x230 */
  uint8_t RESERVED_30[12];
  uint32_t USB1_LOOPBACK;                          /**< USB1 Loopback register, offset: 0x240 */
  uint8_t RESERVED_31[12];
  uint32_t USB1_MISC;                              /**< USB1 Miscellaneous definition register, offset: 0x250 */
  uint8_t RESERVED_32[12];
  uint32_t ANADIG_DIGPROG;                         /**< Anadig Digital Program register, offset: 0x260 */
  uint8_t RESERVED_33[12];
  uint32_t PLL1_CTRL;                              /**< PLL1 Control register, offset: 0x270 */
  uint8_t RESERVED_34[12];
  uint32_t PLL1_SS;                                /**< PLL1 Spread Spectrum register, offset: 0x280 */
  uint8_t RESERVED_35[12];
  uint32_t PLL1_NUM;                               /**< PLL1 Numerator register, offset: 0x290 */
  uint8_t RESERVED_36[12];
  uint32_t PLL1_DENOM;                             /**< PLL1 Denominator register, offset: 0x2A0 */
  uint8_t RESERVED_37[12];
  uint32_t PFD_528_SYS;                            /**< Anadig PFD 528 System definition register, offset: 0x2B0 */
  uint8_t RESERVED_38[12];
  uint32_t PLL_LOCK;                               /**< Anadig PLL Lock register, offset: 0x2C0 */
} volatile *Anadig_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- Anadig - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Anadig_Register_Accessor_Macros Anadig - Register accessor macros
 * @{
 */


/* Anadig - Register accessors */
#define Anadig_PLL3_CTRL_REG(base)               ((base)->PLL3_CTRL)
#define Anadig_PLL7_CTRL_REG(base)               ((base)->PLL7_CTRL)
#define Anadig_PLL2_CTRL_REG(base)               ((base)->PLL2_CTRL)
#define Anadig_PLL2_SS_REG(base)                 ((base)->PLL2_SS)
#define Anadig_PLL2_NUM_REG(base)                ((base)->PLL2_NUM)
#define Anadig_PLL2_DENOM_REG(base)              ((base)->PLL2_DENOM)
#define Anadig_PLL4_CTRL_REG(base)               ((base)->PLL4_CTRL)
#define Anadig_PLL4_NUM_REG(base)                ((base)->PLL4_NUM)
#define Anadig_PLL4_DENOM_REG(base)              ((base)->PLL4_DENOM)
#define Anadig_PLL6_CTRL_REG(base)               ((base)->PLL6_CTRL)
#define Anadig_PLL6_NUM_REG(base)                ((base)->PLL6_NUM)
#define Anadig_PLL6_DENOM_REG(base)              ((base)->PLL6_DENOM)
#define Anadig_PLL5_CTRL_REG(base)               ((base)->PLL5_CTRL)
#define Anadig_PLL_PFD_480_USB0_REG(base)        ((base)->PLL_PFD_480_USB0)
#define Anadig_PLL_PFD_528_REG(base)             ((base)->PLL_PFD_528)
#define Anadig_REG_1P1_REG(base)                 ((base)->REG_1P1)
#define Anadig_REG_3P0_REG(base)                 ((base)->REG_3P0)
#define Anadig_REG_2P5_REG(base)                 ((base)->REG_2P5)
#define Anadig_ANA_MISC0_REG(base)               ((base)->ANA_MISC0)
#define Anadig_ANA_MISC1_REG(base)               ((base)->ANA_MISC1)
#define Anadig_USB0_VBUS_DETECT_REG(base)        ((base)->USB0_VBUS_DETECT)
#define Anadig_USB0_CHRG_DETECT_REG(base)        ((base)->USB0_CHRG_DETECT)
#define Anadig_USB0_VBUS_DETECT_STATUS_REG(base) ((base)->USB0_VBUS_DETECT_STATUS)
#define Anadig_CHRG_DETECT_STATUS_REG(base)      ((base)->CHRG_DETECT_STATUS)
#define Anadig_USB0_LOOPBACK_REG(base)           ((base)->USB0_LOOPBACK)
#define Anadig_USB0_MISC_REG(base)               ((base)->USB0_MISC)
#define Anadig_USB1_VBUS_DETECT_REG(base)        ((base)->USB1_VBUS_DETECT)
#define Anadig_USB1_CHRG_DETECT_REG(base)        ((base)->USB1_CHRG_DETECT)
#define Anadig_USB1_VBUS_DETECT_STATUS_REG(base) ((base)->USB1_VBUS_DETECT_STATUS)
#define Anadig_USB1_CHRG_DETECT_STATUS_REG(base) ((base)->USB1_CHRG_DETECT_STATUS)
#define Anadig_USB1_LOOPBACK_REG(base)           ((base)->USB1_LOOPBACK)
#define Anadig_USB1_MISC_REG(base)               ((base)->USB1_MISC)
#define Anadig_ANADIG_DIGPROG_REG(base)          ((base)->ANADIG_DIGPROG)
#define Anadig_PLL1_CTRL_REG(base)               ((base)->PLL1_CTRL)
#define Anadig_PLL1_SS_REG(base)                 ((base)->PLL1_SS)
#define Anadig_PLL1_NUM_REG(base)                ((base)->PLL1_NUM)
#define Anadig_PLL1_DENOM_REG(base)              ((base)->PLL1_DENOM)
#define Anadig_PFD_528_SYS_REG(base)             ((base)->PFD_528_SYS)
#define Anadig_PLL_LOCK_REG(base)                ((base)->PLL_LOCK)

/**
 * @}
 */ /* end of group Anadig_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- Anadig Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Anadig_Register_Masks Anadig Register Masks
 * @{
 */

/* PLL3_CTRL Bit Fields */
#define Anadig_PLL3_CTRL_DIV_SELECT_MASK         0x1u
#define Anadig_PLL3_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL3_CTRL_EN_USB_CLKS_MASK        0x40u
#define Anadig_PLL3_CTRL_EN_USB_CLKS_SHIFT       6
#define Anadig_PLL3_CTRL_POWER_MASK              0x1000u
#define Anadig_PLL3_CTRL_POWER_SHIFT             12
#define Anadig_PLL3_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL3_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL3_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL3_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL3_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL3_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL3_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL3_CTRL_LOCK_SHIFT              31
/* PLL7_CTRL Bit Fields */
#define Anadig_PLL7_CTRL_DIV_SELECT_MASK         0x1u
#define Anadig_PLL7_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL7_CTRL_EN_USB_CLKS_MASK        0x40u
#define Anadig_PLL7_CTRL_EN_USB_CLKS_SHIFT       6
#define Anadig_PLL7_CTRL_POWER_MASK              0x1000u
#define Anadig_PLL7_CTRL_POWER_SHIFT             12
#define Anadig_PLL7_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL7_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL7_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL7_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL7_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL7_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL7_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL7_CTRL_LOCK_SHIFT              31
/* PLL2_CTRL Bit Fields */
#define Anadig_PLL2_CTRL_DIV_SELECT_MASK         0x1u
#define Anadig_PLL2_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL2_CTRL_POWERDOWN_MASK          0x1000u
#define Anadig_PLL2_CTRL_POWERDOWN_SHIFT         12
#define Anadig_PLL2_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL2_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL2_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL2_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL2_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL2_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL2_CTRL_DITHER_ENABLE_MASK      0x20000u
#define Anadig_PLL2_CTRL_DITHER_ENABLE_SHIFT     17
#define Anadig_PLL2_CTRL_PFD_OFFSET_EN_MASK      0x40000u
#define Anadig_PLL2_CTRL_PFD_OFFSET_EN_SHIFT     18
#define Anadig_PLL2_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL2_CTRL_LOCK_SHIFT              31
/* PLL2_SS Bit Fields */
#define Anadig_PLL2_SS_STEP_MASK                 0x7FFFu
#define Anadig_PLL2_SS_STEP_SHIFT                0
#define Anadig_PLL2_SS_STEP(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL2_SS_STEP_SHIFT))&Anadig_PLL2_SS_STEP_MASK)
#define Anadig_PLL2_SS_ENABLE_MASK               0x8000u
#define Anadig_PLL2_SS_ENABLE_SHIFT              15
#define Anadig_PLL2_SS_STOP_MASK                 0xFFFF0000u
#define Anadig_PLL2_SS_STOP_SHIFT                16
#define Anadig_PLL2_SS_STOP(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL2_SS_STOP_SHIFT))&Anadig_PLL2_SS_STOP_MASK)
/* PLL2_NUM Bit Fields */
#define Anadig_PLL2_NUM_A_MASK                   0x3FFFFFFFu
#define Anadig_PLL2_NUM_A_SHIFT                  0
#define Anadig_PLL2_NUM_A(x)                     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL2_NUM_A_SHIFT))&Anadig_PLL2_NUM_A_MASK)
/* PLL2_DENOM Bit Fields */
#define Anadig_PLL2_DENOM_B_MASK                 0x3FFFFFFFu
#define Anadig_PLL2_DENOM_B_SHIFT                0
#define Anadig_PLL2_DENOM_B(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL2_DENOM_B_SHIFT))&Anadig_PLL2_DENOM_B_MASK)
/* PLL4_CTRL Bit Fields */
#define Anadig_PLL4_CTRL_DIV_SELECT_MASK         0x7Fu
#define Anadig_PLL4_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL4_CTRL_DIV_SELECT(x)           (((uint32_t)(((uint32_t)(x))<<Anadig_PLL4_CTRL_DIV_SELECT_SHIFT))&Anadig_PLL4_CTRL_DIV_SELECT_MASK)
#define Anadig_PLL4_CTRL_POWERDOWN_MASK          0x1000u
#define Anadig_PLL4_CTRL_POWERDOWN_SHIFT         12
#define Anadig_PLL4_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL4_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL4_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL4_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL4_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL4_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL4_CTRL_DITHER_ENABLE_MASK      0x20000u
#define Anadig_PLL4_CTRL_DITHER_ENABLE_SHIFT     17
#define Anadig_PLL4_CTRL_PFD_OFFSET_EN_MASK      0x40000u
#define Anadig_PLL4_CTRL_PFD_OFFSET_EN_SHIFT     18
#define Anadig_PLL4_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL4_CTRL_LOCK_SHIFT              31
/* PLL4_NUM Bit Fields */
#define Anadig_PLL4_NUM_A_MASK                   0x3FFFFFFFu
#define Anadig_PLL4_NUM_A_SHIFT                  0
#define Anadig_PLL4_NUM_A(x)                     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL4_NUM_A_SHIFT))&Anadig_PLL4_NUM_A_MASK)
/* PLL4_DENOM Bit Fields */
#define Anadig_PLL4_DENOM_B_MASK                 0x3FFFFFFFu
#define Anadig_PLL4_DENOM_B_SHIFT                0
#define Anadig_PLL4_DENOM_B(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL4_DENOM_B_SHIFT))&Anadig_PLL4_DENOM_B_MASK)
/* PLL6_CTRL Bit Fields */
#define Anadig_PLL6_CTRL_DIV_SELECT_MASK         0x7Fu
#define Anadig_PLL6_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL6_CTRL_DIV_SELECT(x)           (((uint32_t)(((uint32_t)(x))<<Anadig_PLL6_CTRL_DIV_SELECT_SHIFT))&Anadig_PLL6_CTRL_DIV_SELECT_MASK)
#define Anadig_PLL6_CTRL_POWERDOWN_MASK          0x1000u
#define Anadig_PLL6_CTRL_POWERDOWN_SHIFT         12
#define Anadig_PLL6_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL6_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL6_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL6_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL6_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL6_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL6_CTRL_DITHER_ENABLE_MASK      0x20000u
#define Anadig_PLL6_CTRL_DITHER_ENABLE_SHIFT     17
#define Anadig_PLL6_CTRL_PFD_OFFSET_EN_MASK      0x40000u
#define Anadig_PLL6_CTRL_PFD_OFFSET_EN_SHIFT     18
#define Anadig_PLL6_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL6_CTRL_LOCK_SHIFT              31
/* PLL6_NUM Bit Fields */
#define Anadig_PLL6_NUM_A_MASK                   0x3FFFFFFFu
#define Anadig_PLL6_NUM_A_SHIFT                  0
#define Anadig_PLL6_NUM_A(x)                     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL6_NUM_A_SHIFT))&Anadig_PLL6_NUM_A_MASK)
/* PLL6_DENOM Bit Fields */
#define Anadig_PLL6_DENOM_B_MASK                 0x3FFFFFFFu
#define Anadig_PLL6_DENOM_B_SHIFT                0
#define Anadig_PLL6_DENOM_B(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL6_DENOM_B_SHIFT))&Anadig_PLL6_DENOM_B_MASK)
/* PLL5_CTRL Bit Fields */
#define Anadig_PLL5_CTRL_DIV_SELECT_MASK         0x3u
#define Anadig_PLL5_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL5_CTRL_DIV_SELECT(x)           (((uint32_t)(((uint32_t)(x))<<Anadig_PLL5_CTRL_DIV_SELECT_SHIFT))&Anadig_PLL5_CTRL_DIV_SELECT_MASK)
#define Anadig_PLL5_CTRL_POWERDOWN_MASK          0x1000u
#define Anadig_PLL5_CTRL_POWERDOWN_SHIFT         12
#define Anadig_PLL5_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL5_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL5_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL5_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL5_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL5_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL5_CTRL_DITHER_ENABLE_MASK      0x20000u
#define Anadig_PLL5_CTRL_DITHER_ENABLE_SHIFT     17
#define Anadig_PLL5_CTRL_PFD_OFFSET_EN_MASK      0x40000u
#define Anadig_PLL5_CTRL_PFD_OFFSET_EN_SHIFT     18
#define Anadig_PLL5_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL5_CTRL_LOCK_SHIFT              31
/* PLL_PFD_480_USB0 Bit Fields */
#define Anadig_PLL_PFD_480_USB0_PFD1_FRAC_MASK   0x3Fu
#define Anadig_PLL_PFD_480_USB0_PFD1_FRAC_SHIFT  0
#define Anadig_PLL_PFD_480_USB0_PFD1_FRAC(x)     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_480_USB0_PFD1_FRAC_SHIFT))&Anadig_PLL_PFD_480_USB0_PFD1_FRAC_MASK)
#define Anadig_PLL_PFD_480_USB0_PFD1_STABLE_MASK 0x40u
#define Anadig_PLL_PFD_480_USB0_PFD1_STABLE_SHIFT 6
#define Anadig_PLL_PFD_480_USB0_PFD1_CLKGATE_MASK 0x80u
#define Anadig_PLL_PFD_480_USB0_PFD1_CLKGATE_SHIFT 7
#define Anadig_PLL_PFD_480_USB0_PFD2_FRAC_MASK   0x3F00u
#define Anadig_PLL_PFD_480_USB0_PFD2_FRAC_SHIFT  8
#define Anadig_PLL_PFD_480_USB0_PFD2_FRAC(x)     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_480_USB0_PFD2_FRAC_SHIFT))&Anadig_PLL_PFD_480_USB0_PFD2_FRAC_MASK)
#define Anadig_PLL_PFD_480_USB0_PFD2_STABLE_MASK 0x4000u
#define Anadig_PLL_PFD_480_USB0_PFD2_STABLE_SHIFT 14
#define Anadig_PLL_PFD_480_USB0_PFD2_CLKGATE_MASK 0x8000u
#define Anadig_PLL_PFD_480_USB0_PFD2_CLKGATE_SHIFT 15
#define Anadig_PLL_PFD_480_USB0_PFD3_FRAC_MASK   0x3F0000u
#define Anadig_PLL_PFD_480_USB0_PFD3_FRAC_SHIFT  16
#define Anadig_PLL_PFD_480_USB0_PFD3_FRAC(x)     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_480_USB0_PFD3_FRAC_SHIFT))&Anadig_PLL_PFD_480_USB0_PFD3_FRAC_MASK)
#define Anadig_PLL_PFD_480_USB0_PFD3_STABLE_MASK 0x400000u
#define Anadig_PLL_PFD_480_USB0_PFD3_STABLE_SHIFT 22
#define Anadig_PLL_PFD_480_USB0_PFD3_CLKGATE_MASK 0x800000u
#define Anadig_PLL_PFD_480_USB0_PFD3_CLKGATE_SHIFT 23
#define Anadig_PLL_PFD_480_USB0_PFD4_FRAC_MASK   0x3F000000u
#define Anadig_PLL_PFD_480_USB0_PFD4_FRAC_SHIFT  24
#define Anadig_PLL_PFD_480_USB0_PFD4_FRAC(x)     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_480_USB0_PFD4_FRAC_SHIFT))&Anadig_PLL_PFD_480_USB0_PFD4_FRAC_MASK)
#define Anadig_PLL_PFD_480_USB0_PFD4_STABLE_MASK 0x40000000u
#define Anadig_PLL_PFD_480_USB0_PFD4_STABLE_SHIFT 30
#define Anadig_PLL_PFD_480_USB0_PFD4_CLKGATE_MASK 0x80000000u
#define Anadig_PLL_PFD_480_USB0_PFD4_CLKGATE_SHIFT 31
/* PLL_PFD_528 Bit Fields */
#define Anadig_PLL_PFD_528_PFD1_FRAC_MASK        0x3Fu
#define Anadig_PLL_PFD_528_PFD1_FRAC_SHIFT       0
#define Anadig_PLL_PFD_528_PFD1_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_528_PFD1_FRAC_SHIFT))&Anadig_PLL_PFD_528_PFD1_FRAC_MASK)
#define Anadig_PLL_PFD_528_PFD1_STABLE_MASK      0x40u
#define Anadig_PLL_PFD_528_PFD1_STABLE_SHIFT     6
#define Anadig_PLL_PFD_528_PFD1_CLKGATE_MASK     0x80u
#define Anadig_PLL_PFD_528_PFD1_CLKGATE_SHIFT    7
#define Anadig_PLL_PFD_528_PFD2_FRAC_MASK        0x3F00u
#define Anadig_PLL_PFD_528_PFD2_FRAC_SHIFT       8
#define Anadig_PLL_PFD_528_PFD2_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_528_PFD2_FRAC_SHIFT))&Anadig_PLL_PFD_528_PFD2_FRAC_MASK)
#define Anadig_PLL_PFD_528_PFD2_STABLE_MASK      0x4000u
#define Anadig_PLL_PFD_528_PFD2_STABLE_SHIFT     14
#define Anadig_PLL_PFD_528_PFD2_CLKGATE_MASK     0x8000u
#define Anadig_PLL_PFD_528_PFD2_CLKGATE_SHIFT    15
#define Anadig_PLL_PFD_528_PFD3_FRAC_MASK        0x3F0000u
#define Anadig_PLL_PFD_528_PFD3_FRAC_SHIFT       16
#define Anadig_PLL_PFD_528_PFD3_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_528_PFD3_FRAC_SHIFT))&Anadig_PLL_PFD_528_PFD3_FRAC_MASK)
#define Anadig_PLL_PFD_528_PFD3_STABLE_MASK      0x400000u
#define Anadig_PLL_PFD_528_PFD3_STABLE_SHIFT     22
#define Anadig_PLL_PFD_528_PFD3_CLKGATE_MASK     0x800000u
#define Anadig_PLL_PFD_528_PFD3_CLKGATE_SHIFT    23
#define Anadig_PLL_PFD_528_PFD4_FRAC_MASK        0x3F000000u
#define Anadig_PLL_PFD_528_PFD4_FRAC_SHIFT       24
#define Anadig_PLL_PFD_528_PFD4_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PLL_PFD_528_PFD4_FRAC_SHIFT))&Anadig_PLL_PFD_528_PFD4_FRAC_MASK)
#define Anadig_PLL_PFD_528_PFD4_STABLE_MASK      0x40000000u
#define Anadig_PLL_PFD_528_PFD4_STABLE_SHIFT     30
#define Anadig_PLL_PFD_528_PFD4_CLKGATE_MASK     0x80000000u
#define Anadig_PLL_PFD_528_PFD4_CLKGATE_SHIFT    31
/* REG_1P1 Bit Fields */
#define Anadig_REG_1P1_ENABLE_LINREG_MASK        0x1u
#define Anadig_REG_1P1_ENABLE_LINREG_SHIFT       0
#define Anadig_REG_1P1_ENABLE_BO_MASK            0x2u
#define Anadig_REG_1P1_ENABLE_BO_SHIFT           1
#define Anadig_REG_1P1_ENABLE_ILIMIT_MASK        0x4u
#define Anadig_REG_1P1_ENABLE_ILIMIT_SHIFT       2
#define Anadig_REG_1P1_ENABLE_PULLDOWN_MASK      0x8u
#define Anadig_REG_1P1_ENABLE_PULLDOWN_SHIFT     3
#define Anadig_REG_1P1_BO_VDD1P1_MASK            0x10000u
#define Anadig_REG_1P1_BO_VDD1P1_SHIFT           16
#define Anadig_REG_1P1_OK_VDD1P1_MASK            0x20000u
#define Anadig_REG_1P1_OK_VDD1P1_SHIFT           17
/* REG_3P0 Bit Fields */
#define Anadig_REG_3P0_ENABLE_LINREG_MASK        0x1u
#define Anadig_REG_3P0_ENABLE_LINREG_SHIFT       0
#define Anadig_REG_3P0_ENABLE_BO_MASK            0x2u
#define Anadig_REG_3P0_ENABLE_BO_SHIFT           1
#define Anadig_REG_3P0_ENABLE_ILIMIT_MASK        0x4u
#define Anadig_REG_3P0_ENABLE_ILIMIT_SHIFT       2
#define Anadig_REG_3P0_REG_3P0_VBUS_SEL_MASK     0x80u
#define Anadig_REG_3P0_REG_3P0_VBUS_SEL_SHIFT    7
#define Anadig_REG_3P0_BO_VDD3P0_MASK            0x10000u
#define Anadig_REG_3P0_BO_VDD3P0_SHIFT           16
#define Anadig_REG_3P0_OK_VDD3P0_MASK            0x20000u
#define Anadig_REG_3P0_OK_VDD3P0_SHIFT           17
/* REG_2P5 Bit Fields */
#define Anadig_REG_2P5_ENABLE_LINREG_MASK        0x1u
#define Anadig_REG_2P5_ENABLE_LINREG_SHIFT       0
#define Anadig_REG_2P5_ENABLE_BO_MASK            0x2u
#define Anadig_REG_2P5_ENABLE_BO_SHIFT           1
#define Anadig_REG_2P5_ENABLE_ILIMIT_MASK        0x4u
#define Anadig_REG_2P5_ENABLE_ILIMIT_SHIFT       2
#define Anadig_REG_2P5_ENABLE_PULLDOWN_MASK      0x8u
#define Anadig_REG_2P5_ENABLE_PULLDOWN_SHIFT     3
#define Anadig_REG_2P5_BO_VDD2P5_MASK            0x10000u
#define Anadig_REG_2P5_BO_VDD2P5_SHIFT           16
#define Anadig_REG_2P5_OK_VDD2P5_MASK            0x20000u
#define Anadig_REG_2P5_OK_VDD2P5_SHIFT           17
#define Anadig_REG_2P5_ENABLE_WEAK_LINREG_MASK   0x40000u
#define Anadig_REG_2P5_ENABLE_WEAK_LINREG_SHIFT  18
/* ANA_MISC0 Bit Fields */
#define Anadig_ANA_MISC0_REFTOP_PWD_MASK         0x1u
#define Anadig_ANA_MISC0_REFTOP_PWD_SHIFT        0
#define Anadig_ANA_MISC0_REFTOP_PWDVBGUP_MASK    0x2u
#define Anadig_ANA_MISC0_REFTOP_PWDVBGUP_SHIFT   1
#define Anadig_ANA_MISC0_REFTOP_LOWPOWER_MASK    0x4u
#define Anadig_ANA_MISC0_REFTOP_LOWPOWER_SHIFT   2
#define Anadig_ANA_MISC0_REFTOP_SELBIASOFF_MASK  0x8u
#define Anadig_ANA_MISC0_REFTOP_SELBIASOFF_SHIFT 3
#define Anadig_ANA_MISC0_REFTOP_VBGUP_MASK       0x80u
#define Anadig_ANA_MISC0_REFTOP_VBGUP_SHIFT      7
#define Anadig_ANA_MISC0_STOP_MODE_CONFIG_MASK   0x1000u
#define Anadig_ANA_MISC0_STOP_MODE_CONFIG_SHIFT  12
#define Anadig_ANA_MISC0_CLK_24M_IRC_XTAL_SEL_MASK 0x2000u
#define Anadig_ANA_MISC0_CLK_24M_IRC_XTAL_SEL_SHIFT 13
#define Anadig_ANA_MISC0_OSC_XTALOK_MASK         0x10000u
#define Anadig_ANA_MISC0_OSC_XTALOK_SHIFT        16
#define Anadig_ANA_MISC0_OSC_XTALOK_EN_MASK      0x20000u
#define Anadig_ANA_MISC0_OSC_XTALOK_EN_SHIFT     17
/* ANA_MISC1 Bit Fields */
#define Anadig_ANA_MISC1_LVDSCLK1_OBEN_MASK      0x400u
#define Anadig_ANA_MISC1_LVDSCLK1_OBEN_SHIFT     10
#define Anadig_ANA_MISC1_LVDSCLK1_IBEN_MASK      0x1000u
#define Anadig_ANA_MISC1_LVDSCLK1_IBEN_SHIFT     12
#define Anadig_ANA_MISC1_IRQ_TEMPSENSE_MASK      0x20000000u
#define Anadig_ANA_MISC1_IRQ_TEMPSENSE_SHIFT     29
#define Anadig_ANA_MISC1_IRQ_ANA_BO_MASK         0x40000000u
#define Anadig_ANA_MISC1_IRQ_ANA_BO_SHIFT        30
/* USB0_VBUS_DETECT Bit Fields */
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_THRESH_MASK 0x7u
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_THRESH_SHIFT 0
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_THRESH(x) (((uint32_t)(((uint32_t)(x))<<Anadig_USB0_VBUS_DETECT_VBUSVALID_THRESH_SHIFT))&Anadig_USB0_VBUS_DETECT_VBUSVALID_THRESH_MASK)
#define Anadig_USB0_VBUS_DETECT_VBUS_OVERRIDE_EN_MASK 0x8u
#define Anadig_USB0_VBUS_DETECT_VBUS_OVERRIDE_EN_SHIFT 3
#define Anadig_USB0_VBUS_DETECT_SESSEND_OVERRIDE_MASK 0x10u
#define Anadig_USB0_VBUS_DETECT_SESSEND_OVERRIDE_SHIFT 4
#define Anadig_USB0_VBUS_DETECT_BVALID_OVERRIDE_MASK 0x20u
#define Anadig_USB0_VBUS_DETECT_BVALID_OVERRIDE_SHIFT 5
#define Anadig_USB0_VBUS_DETECT_AVALID_OVERRIDE_MASK 0x40u
#define Anadig_USB0_VBUS_DETECT_AVALID_OVERRIDE_SHIFT 6
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_OVERRIDE_MASK 0x80u
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_OVERRIDE_SHIFT 7
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_TO_B_MASK 0x40000u
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_TO_B_SHIFT 18
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_PWRUP_CMPS_MASK 0x100000u
#define Anadig_USB0_VBUS_DETECT_VBUSVALID_PWRUP_CMPS_SHIFT 20
#define Anadig_USB0_VBUS_DETECT_DISCHARGE_VBUS_MASK 0x4000000u
#define Anadig_USB0_VBUS_DETECT_DISCHARGE_VBUS_SHIFT 26
#define Anadig_USB0_VBUS_DETECT_CHARGE_VBUS_MASK 0x8000000u
#define Anadig_USB0_VBUS_DETECT_CHARGE_VBUS_SHIFT 27
#define Anadig_USB0_VBUS_DETECT_EN_CHARGER_RESISTOR_MASK 0x80000000u
#define Anadig_USB0_VBUS_DETECT_EN_CHARGER_RESISTOR_SHIFT 31
/* USB0_CHRG_DETECT Bit Fields */
#define Anadig_USB0_CHRG_DETECT_FORCE_DETECT_MASK 0x1u
#define Anadig_USB0_CHRG_DETECT_FORCE_DETECT_SHIFT 0
#define Anadig_USB0_CHRG_DETECT_CHK_CONTACT_MASK 0x40000u
#define Anadig_USB0_CHRG_DETECT_CHK_CONTACT_SHIFT 18
#define Anadig_USB0_CHRG_DETECT_CHK_CHRG_B_MASK  0x80000u
#define Anadig_USB0_CHRG_DETECT_CHK_CHRG_B_SHIFT 19
#define Anadig_USB0_CHRG_DETECT_EN_B_MASK        0x100000u
#define Anadig_USB0_CHRG_DETECT_EN_B_SHIFT       20
#define Anadig_USB0_CHRG_DETECT_CHRG_DET_STATUS_MASK 0x200000u
#define Anadig_USB0_CHRG_DETECT_CHRG_DET_STATUS_SHIFT 21
#define Anadig_USB0_CHRG_DETECT_CHRG_DET_CTRL_MASK 0x400000u
#define Anadig_USB0_CHRG_DETECT_CHRG_DET_CTRL_SHIFT 22
/* USB0_VBUS_DETECT_STATUS Bit Fields */
#define Anadig_USB0_VBUS_DETECT_STATUS_SESSEND_MASK 0x1u
#define Anadig_USB0_VBUS_DETECT_STATUS_SESSEND_SHIFT 0
#define Anadig_USB0_VBUS_DETECT_STATUS_BVALID_MASK 0x2u
#define Anadig_USB0_VBUS_DETECT_STATUS_BVALID_SHIFT 1
#define Anadig_USB0_VBUS_DETECT_STATUS_AVALID_MASK 0x4u
#define Anadig_USB0_VBUS_DETECT_STATUS_AVALID_SHIFT 2
#define Anadig_USB0_VBUS_DETECT_STATUS_VBUS_VALID_MASK 0x8u
#define Anadig_USB0_VBUS_DETECT_STATUS_VBUS_VALID_SHIFT 3
/* CHRG_DETECT_STATUS Bit Fields */
#define Anadig_CHRG_DETECT_STATUS_PLUG_CONTACT_MASK 0x1u
#define Anadig_CHRG_DETECT_STATUS_PLUG_CONTACT_SHIFT 0
#define Anadig_CHRG_DETECT_STATUS_CHRG_DETECTED_MASK 0x2u
#define Anadig_CHRG_DETECT_STATUS_CHRG_DETECTED_SHIFT 1
#define Anadig_CHRG_DETECT_STATUS_DM_STATE_MASK  0x4u
#define Anadig_CHRG_DETECT_STATUS_DM_STATE_SHIFT 2
#define Anadig_CHRG_DETECT_STATUS_DP_STATE_MASK  0x8u
#define Anadig_CHRG_DETECT_STATUS_DP_STATE_SHIFT 3
/* USB0_LOOPBACK Bit Fields */
#define Anadig_USB0_LOOPBACK_UTMI_TESTSTART_MASK 0x1u
#define Anadig_USB0_LOOPBACK_UTMI_TESTSTART_SHIFT 0
#define Anadig_USB0_LOOPBACK_UTMI_DIG_TST0_MASK  0x2u
#define Anadig_USB0_LOOPBACK_UTMI_DIG_TST0_SHIFT 1
#define Anadig_USB0_LOOPBACK_UTMI_DIG_TST1_MASK  0x4u
#define Anadig_USB0_LOOPBACK_UTMI_DIG_TST1_SHIFT 2
#define Anadig_USB0_LOOPBACK_TSTI_TX_HS_MODE_MASK 0x8u
#define Anadig_USB0_LOOPBACK_TSTI_TX_HS_MODE_SHIFT 3
#define Anadig_USB0_LOOPBACK_TSTI_TX_LS_MODE_MASK 0x10u
#define Anadig_USB0_LOOPBACK_TSTI_TX_LS_MODE_SHIFT 4
#define Anadig_USB0_LOOPBACK_TSTI_TX_EN_MASK     0x20u
#define Anadig_USB0_LOOPBACK_TSTI_TX_EN_SHIFT    5
#define Anadig_USB0_LOOPBACK_TSTI_TX_HIZ_MASK    0x40u
#define Anadig_USB0_LOOPBACK_TSTI_TX_HIZ_SHIFT   6
#define Anadig_USB0_LOOPBACK_UTMO_DIG_TST0_MASK  0x80u
#define Anadig_USB0_LOOPBACK_UTMO_DIG_TST0_SHIFT 7
#define Anadig_USB0_LOOPBACK_UTMO_DIG_TST1_MASK  0x100u
#define Anadig_USB0_LOOPBACK_UTMO_DIG_TST1_SHIFT 8
/* USB0_MISC Bit Fields */
#define Anadig_USB0_MISC_HS_USE_EXTERNAL_R_MASK  0x1u
#define Anadig_USB0_MISC_HS_USE_EXTERNAL_R_SHIFT 0
#define Anadig_USB0_MISC_EN_DEGLITCH_MASK        0x2u
#define Anadig_USB0_MISC_EN_DEGLITCH_SHIFT       1
#define Anadig_USB0_MISC_EN_CLK_TO_UTMI_MASK     0x40000000u
#define Anadig_USB0_MISC_EN_CLK_TO_UTMI_SHIFT    30
/* USB1_VBUS_DETECT Bit Fields */
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_THRESH_MASK 0x7u
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_THRESH_SHIFT 0
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_THRESH(x) (((uint32_t)(((uint32_t)(x))<<Anadig_USB1_VBUS_DETECT_VBUSVALID_THRESH_SHIFT))&Anadig_USB1_VBUS_DETECT_VBUSVALID_THRESH_MASK)
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_TO_B_MASK 0x40000u
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_TO_B_SHIFT 18
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_PWRUP_CMPS_MASK 0x100000u
#define Anadig_USB1_VBUS_DETECT_VBUSVALID_PWRUP_CMPS_SHIFT 20
#define Anadig_USB1_VBUS_DETECT_DISCHARGE_VBUS_MASK 0x4000000u
#define Anadig_USB1_VBUS_DETECT_DISCHARGE_VBUS_SHIFT 26
#define Anadig_USB1_VBUS_DETECT_CHARGE_VBUS_MASK 0x8000000u
#define Anadig_USB1_VBUS_DETECT_CHARGE_VBUS_SHIFT 27
#define Anadig_USB1_VBUS_DETECT_EN_CHARGER_RESISTOR_MASK 0x80000000u
#define Anadig_USB1_VBUS_DETECT_EN_CHARGER_RESISTOR_SHIFT 31
/* USB1_CHRG_DETECT Bit Fields */
#define Anadig_USB1_CHRG_DETECT_FORCE_DETECT_MASK 0x1u
#define Anadig_USB1_CHRG_DETECT_FORCE_DETECT_SHIFT 0
#define Anadig_USB1_CHRG_DETECT_CHK_CONTACT_MASK 0x40000u
#define Anadig_USB1_CHRG_DETECT_CHK_CONTACT_SHIFT 18
#define Anadig_USB1_CHRG_DETECT_CHK_CHRG_B_MASK  0x80000u
#define Anadig_USB1_CHRG_DETECT_CHK_CHRG_B_SHIFT 19
#define Anadig_USB1_CHRG_DETECT_EN_B_MASK        0x100000u
#define Anadig_USB1_CHRG_DETECT_EN_B_SHIFT       20
#define Anadig_USB1_CHRG_DETECT_CHRG_DET_STATUS_MASK 0x200000u
#define Anadig_USB1_CHRG_DETECT_CHRG_DET_STATUS_SHIFT 21
#define Anadig_USB1_CHRG_DETECT_CHRG_DET_CTRL_MASK 0x400000u
#define Anadig_USB1_CHRG_DETECT_CHRG_DET_CTRL_SHIFT 22
/* USB1_VBUS_DETECT_STATUS Bit Fields */
#define Anadig_USB1_VBUS_DETECT_STATUS_SESSEND_MASK 0x1u
#define Anadig_USB1_VBUS_DETECT_STATUS_SESSEND_SHIFT 0
#define Anadig_USB1_VBUS_DETECT_STATUS_BVALID_MASK 0x2u
#define Anadig_USB1_VBUS_DETECT_STATUS_BVALID_SHIFT 1
#define Anadig_USB1_VBUS_DETECT_STATUS_AVALID_MASK 0x4u
#define Anadig_USB1_VBUS_DETECT_STATUS_AVALID_SHIFT 2
#define Anadig_USB1_VBUS_DETECT_STATUS_VBUS_VALID_MASK 0x8u
#define Anadig_USB1_VBUS_DETECT_STATUS_VBUS_VALID_SHIFT 3
/* USB1_CHRG_DETECT_STATUS Bit Fields */
#define Anadig_USB1_CHRG_DETECT_STATUS_PLUG_CONTACT_MASK 0x1u
#define Anadig_USB1_CHRG_DETECT_STATUS_PLUG_CONTACT_SHIFT 0
#define Anadig_USB1_CHRG_DETECT_STATUS_CHRG_DETECTED_MASK 0x2u
#define Anadig_USB1_CHRG_DETECT_STATUS_CHRG_DETECTED_SHIFT 1
#define Anadig_USB1_CHRG_DETECT_STATUS_DM_STATE_MASK 0x4u
#define Anadig_USB1_CHRG_DETECT_STATUS_DM_STATE_SHIFT 2
#define Anadig_USB1_CHRG_DETECT_STATUS_DP_STATE_MASK 0x8u
#define Anadig_USB1_CHRG_DETECT_STATUS_DP_STATE_SHIFT 3
/* USB1_LOOPBACK Bit Fields */
#define Anadig_USB1_LOOPBACK_UTMI_TESTSTART_MASK 0x1u
#define Anadig_USB1_LOOPBACK_UTMI_TESTSTART_SHIFT 0
#define Anadig_USB1_LOOPBACK_UTMI_DIG_TST0_MASK  0x2u
#define Anadig_USB1_LOOPBACK_UTMI_DIG_TST0_SHIFT 1
#define Anadig_USB1_LOOPBACK_UTMI_DIG_TST1_MASK  0x4u
#define Anadig_USB1_LOOPBACK_UTMI_DIG_TST1_SHIFT 2
#define Anadig_USB1_LOOPBACK_TSTI_TX_HS_MODE_MASK 0x8u
#define Anadig_USB1_LOOPBACK_TSTI_TX_HS_MODE_SHIFT 3
#define Anadig_USB1_LOOPBACK_TSTI_TX_LS_MODE_MASK 0x10u
#define Anadig_USB1_LOOPBACK_TSTI_TX_LS_MODE_SHIFT 4
#define Anadig_USB1_LOOPBACK_TSTI_TX_EN_MASK     0x20u
#define Anadig_USB1_LOOPBACK_TSTI_TX_EN_SHIFT    5
#define Anadig_USB1_LOOPBACK_TI_TX_HIZ_MASK      0x40u
#define Anadig_USB1_LOOPBACK_TI_TX_HIZ_SHIFT     6
#define Anadig_USB1_LOOPBACK_UTMO_DIG_TST0_MASK  0x80u
#define Anadig_USB1_LOOPBACK_UTMO_DIG_TST0_SHIFT 7
#define Anadig_USB1_LOOPBACK_UTMO_DIG_TST1_MASK  0x100u
#define Anadig_USB1_LOOPBACK_UTMO_DIG_TST1_SHIFT 8
/* USB1_MISC Bit Fields */
#define Anadig_USB1_MISC_HS_USE_EXTERNAL_R_MASK  0x1u
#define Anadig_USB1_MISC_HS_USE_EXTERNAL_R_SHIFT 0
#define Anadig_USB1_MISC_EN_DEGLITCH_MASK        0x2u
#define Anadig_USB1_MISC_EN_DEGLITCH_SHIFT       1
#define Anadig_USB1_MISC_EN_CLK_TO_UTMI_MASK     0x40000000u
#define Anadig_USB1_MISC_EN_CLK_TO_UTMI_SHIFT    30
/* ANADIG_DIGPROG Bit Fields */
#define Anadig_ANADIG_DIGPROG_MINOR_MASK         0xFFu
#define Anadig_ANADIG_DIGPROG_MINOR_SHIFT        0
#define Anadig_ANADIG_DIGPROG_MINOR(x)           (((uint32_t)(((uint32_t)(x))<<Anadig_ANADIG_DIGPROG_MINOR_SHIFT))&Anadig_ANADIG_DIGPROG_MINOR_MASK)
#define Anadig_ANADIG_DIGPROG_MAJOR_MASK         0xFFFF00u
#define Anadig_ANADIG_DIGPROG_MAJOR_SHIFT        8
#define Anadig_ANADIG_DIGPROG_MAJOR(x)           (((uint32_t)(((uint32_t)(x))<<Anadig_ANADIG_DIGPROG_MAJOR_SHIFT))&Anadig_ANADIG_DIGPROG_MAJOR_MASK)
/* PLL1_CTRL Bit Fields */
#define Anadig_PLL1_CTRL_DIV_SELECT_MASK         0x1u
#define Anadig_PLL1_CTRL_DIV_SELECT_SHIFT        0
#define Anadig_PLL1_CTRL_POWERDOWN_MASK          0x1000u
#define Anadig_PLL1_CTRL_POWERDOWN_SHIFT         12
#define Anadig_PLL1_CTRL_ENABLE_MASK             0x2000u
#define Anadig_PLL1_CTRL_ENABLE_SHIFT            13
#define Anadig_PLL1_CTRL_BYPASS_CLK_SRC_MASK     0x4000u
#define Anadig_PLL1_CTRL_BYPASS_CLK_SRC_SHIFT    14
#define Anadig_PLL1_CTRL_BYPASS_MASK             0x10000u
#define Anadig_PLL1_CTRL_BYPASS_SHIFT            16
#define Anadig_PLL1_CTRL_DITHER_ENABLE_MASK      0x20000u
#define Anadig_PLL1_CTRL_DITHER_ENABLE_SHIFT     17
#define Anadig_PLL1_CTRL_PFD_OFFSET_EN_MASK      0x40000u
#define Anadig_PLL1_CTRL_PFD_OFFSET_EN_SHIFT     18
#define Anadig_PLL1_CTRL_LOCK_MASK               0x80000000u
#define Anadig_PLL1_CTRL_LOCK_SHIFT              31
/* PLL1_SS Bit Fields */
#define Anadig_PLL1_SS_STEP_MASK                 0x7FFFu
#define Anadig_PLL1_SS_STEP_SHIFT                0
#define Anadig_PLL1_SS_STEP(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL1_SS_STEP_SHIFT))&Anadig_PLL1_SS_STEP_MASK)
#define Anadig_PLL1_SS_ENABLE_MASK               0x8000u
#define Anadig_PLL1_SS_ENABLE_SHIFT              15
#define Anadig_PLL1_SS_STOP_MASK                 0xFFFF0000u
#define Anadig_PLL1_SS_STOP_SHIFT                16
#define Anadig_PLL1_SS_STOP(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL1_SS_STOP_SHIFT))&Anadig_PLL1_SS_STOP_MASK)
/* PLL1_NUM Bit Fields */
#define Anadig_PLL1_NUM_A_MASK                   0x3FFFFFFFu
#define Anadig_PLL1_NUM_A_SHIFT                  0
#define Anadig_PLL1_NUM_A(x)                     (((uint32_t)(((uint32_t)(x))<<Anadig_PLL1_NUM_A_SHIFT))&Anadig_PLL1_NUM_A_MASK)
/* PLL1_DENOM Bit Fields */
#define Anadig_PLL1_DENOM_B_MASK                 0x3FFFFFFFu
#define Anadig_PLL1_DENOM_B_SHIFT                0
#define Anadig_PLL1_DENOM_B(x)                   (((uint32_t)(((uint32_t)(x))<<Anadig_PLL1_DENOM_B_SHIFT))&Anadig_PLL1_DENOM_B_MASK)
/* PFD_528_SYS Bit Fields */
#define Anadig_PFD_528_SYS_PFD1_FRAC_MASK        0x3Fu
#define Anadig_PFD_528_SYS_PFD1_FRAC_SHIFT       0
#define Anadig_PFD_528_SYS_PFD1_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PFD_528_SYS_PFD1_FRAC_SHIFT))&Anadig_PFD_528_SYS_PFD1_FRAC_MASK)
#define Anadig_PFD_528_SYS_PFD1_STABLE_MASK      0x40u
#define Anadig_PFD_528_SYS_PFD1_STABLE_SHIFT     6
#define Anadig_PFD_528_SYS_PFD1_CLKGATE_MASK     0x80u
#define Anadig_PFD_528_SYS_PFD1_CLKGATE_SHIFT    7
#define Anadig_PFD_528_SYS_PFD2_FRAC_MASK        0x3F00u
#define Anadig_PFD_528_SYS_PFD2_FRAC_SHIFT       8
#define Anadig_PFD_528_SYS_PFD2_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PFD_528_SYS_PFD2_FRAC_SHIFT))&Anadig_PFD_528_SYS_PFD2_FRAC_MASK)
#define Anadig_PFD_528_SYS_PFD2_STABLE_MASK      0x4000u
#define Anadig_PFD_528_SYS_PFD2_STABLE_SHIFT     14
#define Anadig_PFD_528_SYS_PFD2_CLKGATE_MASK     0x8000u
#define Anadig_PFD_528_SYS_PFD2_CLKGATE_SHIFT    15
#define Anadig_PFD_528_SYS_PFD3_FRAC_MASK        0x3F0000u
#define Anadig_PFD_528_SYS_PFD3_FRAC_SHIFT       16
#define Anadig_PFD_528_SYS_PFD3_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PFD_528_SYS_PFD3_FRAC_SHIFT))&Anadig_PFD_528_SYS_PFD3_FRAC_MASK)
#define Anadig_PFD_528_SYS_PFD3_STABLE_MASK      0x400000u
#define Anadig_PFD_528_SYS_PFD3_STABLE_SHIFT     22
#define Anadig_PFD_528_SYS_PFD3_CLKGATE_MASK     0x800000u
#define Anadig_PFD_528_SYS_PFD3_CLKGATE_SHIFT    23
#define Anadig_PFD_528_SYS_PFD4_FRAC_MASK        0x3F000000u
#define Anadig_PFD_528_SYS_PFD4_FRAC_SHIFT       24
#define Anadig_PFD_528_SYS_PFD4_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<Anadig_PFD_528_SYS_PFD4_FRAC_SHIFT))&Anadig_PFD_528_SYS_PFD4_FRAC_MASK)
#define Anadig_PFD_528_SYS_PFD4_STABLE_MASK      0x40000000u
#define Anadig_PFD_528_SYS_PFD4_STABLE_SHIFT     30
#define Anadig_PFD_528_SYS_PFD4_CLKGATE_MASK     0x80000000u
#define Anadig_PFD_528_SYS_PFD4_CLKGATE_SHIFT    31
/* PLL_LOCK Bit Fields */
#define Anadig_PLL_LOCK_PLL_USB1_LOCK_MASK       0x1u
#define Anadig_PLL_LOCK_PLL_USB1_LOCK_SHIFT      0
#define Anadig_PLL_LOCK_PLL_USB0_LOCK_MASK       0x2u
#define Anadig_PLL_LOCK_PLL_USB0_LOCK_SHIFT      1
#define Anadig_PLL_LOCK_PLL_ENET_LOCK_MASK       0x4u
#define Anadig_PLL_LOCK_PLL_ENET_LOCK_SHIFT      2
#define Anadig_PLL_LOCK_PLL_VIDEO_LOCK_MASK      0x8u
#define Anadig_PLL_LOCK_PLL_VIDEO_LOCK_SHIFT     3
#define Anadig_PLL_LOCK_PLL_AUDIO_LOCK_MASK      0x10u
#define Anadig_PLL_LOCK_PLL_AUDIO_LOCK_SHIFT     4
#define Anadig_PLL_LOCK_PLL_528_LOCK_MASK        0x20u
#define Anadig_PLL_LOCK_PLL_528_LOCK_SHIFT       5
#define Anadig_PLL_LOCK_PLL_528_SYS_LOCK_MASK    0x40u
#define Anadig_PLL_LOCK_PLL_528_SYS_LOCK_SHIFT   6

/**
 * @}
 */ /* end of group Anadig_Register_Masks */


/* Anadig - Peripheral instance base addresses */
/** Peripheral Anadig base pointer */
#define Anadig_BASE_PTR                          ((Anadig_MemMapPtr)0x40050000u)
/** Array initializer of Anadig peripheral base pointers */
#define Anadig_BASE_PTRS                         { Anadig_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- Anadig - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Anadig_Register_Accessor_Macros Anadig - Register accessor macros
 * @{
 */


/* Anadig - Register instance definitions */
/* Anadig */
#define Anadig_PLL3_CTRL                         Anadig_PLL3_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL7_CTRL                         Anadig_PLL7_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL2_CTRL                         Anadig_PLL2_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL2_SS                           Anadig_PLL2_SS_REG(Anadig_BASE_PTR)
#define Anadig_PLL2_NUM                          Anadig_PLL2_NUM_REG(Anadig_BASE_PTR)
#define Anadig_PLL2_DENOM                        Anadig_PLL2_DENOM_REG(Anadig_BASE_PTR)
#define Anadig_PLL4_CTRL                         Anadig_PLL4_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL4_NUM                          Anadig_PLL4_NUM_REG(Anadig_BASE_PTR)
#define Anadig_PLL4_DENOM                        Anadig_PLL4_DENOM_REG(Anadig_BASE_PTR)
#define Anadig_PLL6_CTRL                         Anadig_PLL6_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL6_NUM                          Anadig_PLL6_NUM_REG(Anadig_BASE_PTR)
#define Anadig_PLL6_DENOM                        Anadig_PLL6_DENOM_REG(Anadig_BASE_PTR)
#define Anadig_PLL5_CTRL                         Anadig_PLL5_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL_PFD_480_USB0                  Anadig_PLL_PFD_480_USB0_REG(Anadig_BASE_PTR)
#define Anadig_PLL_PFD_528                       Anadig_PLL_PFD_528_REG(Anadig_BASE_PTR)
#define Anadig_REG_1P1                           Anadig_REG_1P1_REG(Anadig_BASE_PTR)
#define Anadig_REG_3P0                           Anadig_REG_3P0_REG(Anadig_BASE_PTR)
#define Anadig_REG_2P5                           Anadig_REG_2P5_REG(Anadig_BASE_PTR)
#define Anadig_ANA_MISC0                         Anadig_ANA_MISC0_REG(Anadig_BASE_PTR)
#define Anadig_ANA_MISC1                         Anadig_ANA_MISC1_REG(Anadig_BASE_PTR)
#define Anadig_USB0_VBUS_DETECT                  Anadig_USB0_VBUS_DETECT_REG(Anadig_BASE_PTR)
#define Anadig_USB0_CHRG_DETECT                  Anadig_USB0_CHRG_DETECT_REG(Anadig_BASE_PTR)
#define Anadig_USB0_VBUS_DETECT_STATUS           Anadig_USB0_VBUS_DETECT_STATUS_REG(Anadig_BASE_PTR)
#define Anadig_CHRG_DETECT_STATUS                Anadig_CHRG_DETECT_STATUS_REG(Anadig_BASE_PTR)
#define Anadig_USB0_LOOPBACK                     Anadig_USB0_LOOPBACK_REG(Anadig_BASE_PTR)
#define Anadig_USB0_MISC                         Anadig_USB0_MISC_REG(Anadig_BASE_PTR)
#define Anadig_USB1_VBUS_DETECT                  Anadig_USB1_VBUS_DETECT_REG(Anadig_BASE_PTR)
#define Anadig_USB1_CHRG_DETECT                  Anadig_USB1_CHRG_DETECT_REG(Anadig_BASE_PTR)
#define Anadig_USB1_VBUS_DETECT_STATUS           Anadig_USB1_VBUS_DETECT_STATUS_REG(Anadig_BASE_PTR)
#define Anadig_USB1_CHRG_DETECT_STATUS           Anadig_USB1_CHRG_DETECT_STATUS_REG(Anadig_BASE_PTR)
#define Anadig_USB1_LOOPBACK                     Anadig_USB1_LOOPBACK_REG(Anadig_BASE_PTR)
#define Anadig_USB1_MISC                         Anadig_USB1_MISC_REG(Anadig_BASE_PTR)
#define Anadig_ANADIG_DIGPROG                    Anadig_ANADIG_DIGPROG_REG(Anadig_BASE_PTR)
#define Anadig_PLL1_CTRL                         Anadig_PLL1_CTRL_REG(Anadig_BASE_PTR)
#define Anadig_PLL1_SS                           Anadig_PLL1_SS_REG(Anadig_BASE_PTR)
#define Anadig_PLL1_NUM                          Anadig_PLL1_NUM_REG(Anadig_BASE_PTR)
#define Anadig_PLL1_DENOM                        Anadig_PLL1_DENOM_REG(Anadig_BASE_PTR)
#define Anadig_PFD_528_SYS                       Anadig_PFD_528_SYS_REG(Anadig_BASE_PTR)
#define Anadig_PLL_LOCK                          Anadig_PLL_LOCK_REG(Anadig_BASE_PTR)

/**
 * @}
 */ /* end of group Anadig_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group Anadig_Peripheral */


/* ----------------------------------------------------------------------------
   -- CAN
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CAN_Peripheral CAN
 * @{
 */

/** CAN - Peripheral register structure */
typedef struct CAN_MemMap {
  uint32_t MCR;                                    /**< Module Configuration Register, offset: 0x0 */
  uint32_t CTRL1;                                  /**< Control 1 register, offset: 0x4 */
  uint32_t TIMER;                                  /**< Free Running Timer, offset: 0x8 */
  uint8_t RESERVED_0[4];
  uint32_t RXMGMASK;                               /**< Rx Mailboxes Global Mask Register, offset: 0x10 */
  uint32_t RX14MASK;                               /**< Rx 14 Mask register, offset: 0x14 */
  uint32_t RX15MASK;                               /**< Rx 15 Mask register, offset: 0x18 */
  uint32_t ECR;                                    /**< Error Counter, offset: 0x1C */
  uint32_t ESR1;                                   /**< Error and Status 1 register, offset: 0x20 */
  uint32_t IMASK2;                                 /**< Interrupt Masks 2 register, offset: 0x24 */
  uint32_t IMASK1;                                 /**< Interrupt Masks 1 register, offset: 0x28 */
  uint32_t IFLAG2;                                 /**< Interrupt Flags 2 register, offset: 0x2C */
  uint32_t IFLAG1;                                 /**< Interrupt Flags 1 register, offset: 0x30 */
  uint32_t CTRL2;                                  /**< Control 2 register, offset: 0x34 */
  uint32_t ESR2;                                   /**< Error and Status 2 register, offset: 0x38 */
  uint8_t RESERVED_1[8];
  uint32_t CRCR;                                   /**< CRC Register, offset: 0x44 */
  uint32_t RXFGMASK;                               /**< Rx FIFO Global Mask register, offset: 0x48 */
  uint32_t RXFIR;                                  /**< Rx FIFO Information Register, offset: 0x4C */
  uint8_t RESERVED_2[48];
  struct {                                         /* offset: 0x80, array step: 0x10 */
    uint32_t CS;                                     /**< Message Buffer 0 CS Register..Message Buffer 15 CS Register, array offset: 0x80, array step: 0x10 */
    uint32_t ID;                                     /**< Message Buffer 0 ID Register..Message Buffer 15 ID Register, array offset: 0x84, array step: 0x10 */
    uint32_t WORD0;                                  /**< Message Buffer 0 WORD0 Register..Message Buffer 15 WORD0 Register, array offset: 0x88, array step: 0x10 */
    uint32_t WORD1;                                  /**< Message Buffer 0 WORD1 Register..Message Buffer 15 WORD1 Register, array offset: 0x8C, array step: 0x10 */
  } MB[16];
  uint8_t RESERVED_3[1792];
  uint32_t RXIMR[64];                              /**< Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 */
  uint8_t RESERVED_4[352];
  uint32_t MECR;                                   /**< Memory Error Control Register, offset: 0xAE0 */
  uint32_t ERRIAR;                                 /**< Error Injection Address Register, offset: 0xAE4 */
  uint32_t ERRIDPR;                                /**< Error Injection Data Pattern Register, offset: 0xAE8 */
  uint32_t ERRIPPR;                                /**< Error Injection Parity Pattern Register, offset: 0xAEC */
  uint32_t RERRAR;                                 /**< Error Report Address Register, offset: 0xAF0 */
  uint32_t RERRDR;                                 /**< Error Report Data Register, offset: 0xAF4 */
  uint32_t RERRSYNR;                               /**< Error Report Syndrome Register, offset: 0xAF8 */
  uint32_t ERRSR;                                  /**< Error Status Register, offset: 0xAFC */
} volatile *CAN_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CAN - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CAN_Register_Accessor_Macros CAN - Register accessor macros
 * @{
 */


/* CAN - Register accessors */
#define CAN_MCR_REG(base)                        ((base)->MCR)
#define CAN_CTRL1_REG(base)                      ((base)->CTRL1)
#define CAN_TIMER_REG(base)                      ((base)->TIMER)
#define CAN_RXMGMASK_REG(base)                   ((base)->RXMGMASK)
#define CAN_RX14MASK_REG(base)                   ((base)->RX14MASK)
#define CAN_RX15MASK_REG(base)                   ((base)->RX15MASK)
#define CAN_ECR_REG(base)                        ((base)->ECR)
#define CAN_ESR1_REG(base)                       ((base)->ESR1)
#define CAN_IMASK2_REG(base)                     ((base)->IMASK2)
#define CAN_IMASK1_REG(base)                     ((base)->IMASK1)
#define CAN_IFLAG2_REG(base)                     ((base)->IFLAG2)
#define CAN_IFLAG1_REG(base)                     ((base)->IFLAG1)
#define CAN_CTRL2_REG(base)                      ((base)->CTRL2)
#define CAN_ESR2_REG(base)                       ((base)->ESR2)
#define CAN_CRCR_REG(base)                       ((base)->CRCR)
#define CAN_RXFGMASK_REG(base)                   ((base)->RXFGMASK)
#define CAN_RXFIR_REG(base)                      ((base)->RXFIR)
#define CAN_CS_REG(base,index)                   ((base)->MB[index].CS)
#define CAN_ID_REG(base,index)                   ((base)->MB[index].ID)
#define CAN_WORD0_REG(base,index)                ((base)->MB[index].WORD0)
#define CAN_WORD1_REG(base,index)                ((base)->MB[index].WORD1)
#define CAN_RXIMR_REG(base,index)                ((base)->RXIMR[index])
#define CAN_MECR_REG(base)                       ((base)->MECR)
#define CAN_ERRIAR_REG(base)                     ((base)->ERRIAR)
#define CAN_ERRIDPR_REG(base)                    ((base)->ERRIDPR)
#define CAN_ERRIPPR_REG(base)                    ((base)->ERRIPPR)
#define CAN_RERRAR_REG(base)                     ((base)->RERRAR)
#define CAN_RERRDR_REG(base)                     ((base)->RERRDR)
#define CAN_RERRSYNR_REG(base)                   ((base)->RERRSYNR)
#define CAN_ERRSR_REG(base)                      ((base)->ERRSR)

/**
 * @}
 */ /* end of group CAN_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CAN Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CAN_Register_Masks CAN Register Masks
 * @{
 */

/* MCR Bit Fields */
#define CAN_MCR_MAXMB_MASK                       0x7Fu
#define CAN_MCR_MAXMB_SHIFT                      0
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK)
#define CAN_MCR_IDAM_MASK                        0x300u
#define CAN_MCR_IDAM_SHIFT                       8
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK)
#define CAN_MCR_AEN_MASK                         0x1000u
#define CAN_MCR_AEN_SHIFT                        12
#define CAN_MCR_LPRIOEN_MASK                     0x2000u
#define CAN_MCR_LPRIOEN_SHIFT                    13
#define CAN_MCR_IRMQ_MASK                        0x10000u
#define CAN_MCR_IRMQ_SHIFT                       16
#define CAN_MCR_SRXDIS_MASK                      0x20000u
#define CAN_MCR_SRXDIS_SHIFT                     17
#define CAN_MCR_LPMACK_MASK                      0x100000u
#define CAN_MCR_LPMACK_SHIFT                     20
#define CAN_MCR_WRNEN_MASK                       0x200000u
#define CAN_MCR_WRNEN_SHIFT                      21
#define CAN_MCR_SUPV_MASK                        0x800000u
#define CAN_MCR_SUPV_SHIFT                       23
#define CAN_MCR_FRZACK_MASK                      0x1000000u
#define CAN_MCR_FRZACK_SHIFT                     24
#define CAN_MCR_SOFTRST_MASK                     0x2000000u
#define CAN_MCR_SOFTRST_SHIFT                    25
#define CAN_MCR_NOTRDY_MASK                      0x8000000u
#define CAN_MCR_NOTRDY_SHIFT                     27
#define CAN_MCR_HALT_MASK                        0x10000000u
#define CAN_MCR_HALT_SHIFT                       28
#define CAN_MCR_RFEN_MASK                        0x20000000u
#define CAN_MCR_RFEN_SHIFT                       29
#define CAN_MCR_FRZ_MASK                         0x40000000u
#define CAN_MCR_FRZ_SHIFT                        30
#define CAN_MCR_MDIS_MASK                        0x80000000u
#define CAN_MCR_MDIS_SHIFT                       31
/* CTRL1 Bit Fields */
#define CAN_CTRL1_PROPSEG_MASK                   0x7u
#define CAN_CTRL1_PROPSEG_SHIFT                  0
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK)
#define CAN_CTRL1_LOM_MASK                       0x8u
#define CAN_CTRL1_LOM_SHIFT                      3
#define CAN_CTRL1_LBUF_MASK                      0x10u
#define CAN_CTRL1_LBUF_SHIFT                     4
#define CAN_CTRL1_TSYN_MASK                      0x20u
#define CAN_CTRL1_TSYN_SHIFT                     5
#define CAN_CTRL1_BOFFREC_MASK                   0x40u
#define CAN_CTRL1_BOFFREC_SHIFT                  6
#define CAN_CTRL1_SMP_MASK                       0x80u
#define CAN_CTRL1_SMP_SHIFT                      7
#define CAN_CTRL1_RWRNMSK_MASK                   0x400u
#define CAN_CTRL1_RWRNMSK_SHIFT                  10
#define CAN_CTRL1_TWRNMSK_MASK                   0x800u
#define CAN_CTRL1_TWRNMSK_SHIFT                  11
#define CAN_CTRL1_LPB_MASK                       0x1000u
#define CAN_CTRL1_LPB_SHIFT                      12
#define CAN_CTRL1_CLKSRC_MASK                    0x2000u
#define CAN_CTRL1_CLKSRC_SHIFT                   13
#define CAN_CTRL1_ERRMSK_MASK                    0x4000u
#define CAN_CTRL1_ERRMSK_SHIFT                   14
#define CAN_CTRL1_BOFFMSK_MASK                   0x8000u
#define CAN_CTRL1_BOFFMSK_SHIFT                  15
#define CAN_CTRL1_PSEG2_MASK                     0x70000u
#define CAN_CTRL1_PSEG2_SHIFT                    16
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK)
#define CAN_CTRL1_PSEG1_MASK                     0x380000u
#define CAN_CTRL1_PSEG1_SHIFT                    19
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK)
#define CAN_CTRL1_RJW_MASK                       0xC00000u
#define CAN_CTRL1_RJW_SHIFT                      22
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK)
#define CAN_CTRL1_PRESDIV_MASK                   0xFF000000u
#define CAN_CTRL1_PRESDIV_SHIFT                  24
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK)
/* TIMER Bit Fields */
#define CAN_TIMER_TIMER_MASK                     0xFFFFu
#define CAN_TIMER_TIMER_SHIFT                    0
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK)
/* RXMGMASK Bit Fields */
#define CAN_RXMGMASK_MG_MASK                     0xFFFFFFFFu
#define CAN_RXMGMASK_MG_SHIFT                    0
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK)
/* RX14MASK Bit Fields */
#define CAN_RX14MASK_RX14M_MASK                  0xFFFFFFFFu
#define CAN_RX14MASK_RX14M_SHIFT                 0
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK)
/* RX15MASK Bit Fields */
#define CAN_RX15MASK_RX15M_MASK                  0xFFFFFFFFu
#define CAN_RX15MASK_RX15M_SHIFT                 0
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK)
/* ECR Bit Fields */
#define CAN_ECR_TXERRCNT_MASK                    0xFFu
#define CAN_ECR_TXERRCNT_SHIFT                   0
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK)
#define CAN_ECR_RXERRCNT_MASK                    0xFF00u
#define CAN_ECR_RXERRCNT_SHIFT                   8
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK)
/* ESR1 Bit Fields */
#define CAN_ESR1_ERRINT_MASK                     0x2u
#define CAN_ESR1_ERRINT_SHIFT                    1
#define CAN_ESR1_BOFFINT_MASK                    0x4u
#define CAN_ESR1_BOFFINT_SHIFT                   2
#define CAN_ESR1_RX_MASK                         0x8u
#define CAN_ESR1_RX_SHIFT                        3
#define CAN_ESR1_FLTCONF_MASK                    0x30u
#define CAN_ESR1_FLTCONF_SHIFT                   4
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK)
#define CAN_ESR1_TX_MASK                         0x40u
#define CAN_ESR1_TX_SHIFT                        6
#define CAN_ESR1_IDLE_MASK                       0x80u
#define CAN_ESR1_IDLE_SHIFT                      7
#define CAN_ESR1_RXWRN_MASK                      0x100u
#define CAN_ESR1_RXWRN_SHIFT                     8
#define CAN_ESR1_TXWRN_MASK                      0x200u
#define CAN_ESR1_TXWRN_SHIFT                     9
#define CAN_ESR1_STFERR_MASK                     0x400u
#define CAN_ESR1_STFERR_SHIFT                    10
#define CAN_ESR1_FRMERR_MASK                     0x800u
#define CAN_ESR1_FRMERR_SHIFT                    11
#define CAN_ESR1_CRCERR_MASK                     0x1000u
#define CAN_ESR1_CRCERR_SHIFT                    12
#define CAN_ESR1_ACKERR_MASK                     0x2000u
#define CAN_ESR1_ACKERR_SHIFT                    13
#define CAN_ESR1_BIT0ERR_MASK                    0x4000u
#define CAN_ESR1_BIT0ERR_SHIFT                   14
#define CAN_ESR1_BIT1ERR_MASK                    0x8000u
#define CAN_ESR1_BIT1ERR_SHIFT                   15
#define CAN_ESR1_RWRNINT_MASK                    0x10000u
#define CAN_ESR1_RWRNINT_SHIFT                   16
#define CAN_ESR1_TWRNINT_MASK                    0x20000u
#define CAN_ESR1_TWRNINT_SHIFT                   17
#define CAN_ESR1_SYNCH_MASK                      0x40000u
#define CAN_ESR1_SYNCH_SHIFT                     18
/* IMASK2 Bit Fields */
#define CAN_IMASK2_BUFHM_MASK                    0xFFFFFFFFu
#define CAN_IMASK2_BUFHM_SHIFT                   0
#define CAN_IMASK2_BUFHM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK2_BUFHM_SHIFT))&CAN_IMASK2_BUFHM_MASK)
/* IMASK1 Bit Fields */
#define CAN_IMASK1_BUFLM_MASK                    0xFFFFFFFFu
#define CAN_IMASK1_BUFLM_SHIFT                   0
#define CAN_IMASK1_BUFLM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUFLM_SHIFT))&CAN_IMASK1_BUFLM_MASK)
/* IFLAG2 Bit Fields */
#define CAN_IFLAG2_BUFHI_MASK                    0xFFFFFFFFu
#define CAN_IFLAG2_BUFHI_SHIFT                   0
#define CAN_IFLAG2_BUFHI(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG2_BUFHI_SHIFT))&CAN_IFLAG2_BUFHI_MASK)
/* IFLAG1 Bit Fields */
#define CAN_IFLAG1_BUF4TO0I_MASK                 0x1Fu
#define CAN_IFLAG1_BUF4TO0I_SHIFT                0
#define CAN_IFLAG1_BUF4TO0I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO0I_SHIFT))&CAN_IFLAG1_BUF4TO0I_MASK)
#define CAN_IFLAG1_BUF5I_MASK                    0x20u
#define CAN_IFLAG1_BUF5I_SHIFT                   5
#define CAN_IFLAG1_BUF6I_MASK                    0x40u
#define CAN_IFLAG1_BUF6I_SHIFT                   6
#define CAN_IFLAG1_BUF7I_MASK                    0x80u
#define CAN_IFLAG1_BUF7I_SHIFT                   7
#define CAN_IFLAG1_BUF31TO8I_MASK                0xFFFFFF00u
#define CAN_IFLAG1_BUF31TO8I_SHIFT               8
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK)
/* CTRL2 Bit Fields */
#define CAN_CTRL2_EACEN_MASK                     0x10000u
#define CAN_CTRL2_EACEN_SHIFT                    16
#define CAN_CTRL2_RRS_MASK                       0x20000u
#define CAN_CTRL2_RRS_SHIFT                      17
#define CAN_CTRL2_MRP_MASK                       0x40000u
#define CAN_CTRL2_MRP_SHIFT                      18
#define CAN_CTRL2_TASD_MASK                      0xF80000u
#define CAN_CTRL2_TASD_SHIFT                     19
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK)
#define CAN_CTRL2_RFFN_MASK                      0xF000000u
#define CAN_CTRL2_RFFN_SHIFT                     24
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK)
#define CAN_CTRL2_WRMFRZ_MASK                    0x10000000u
#define CAN_CTRL2_WRMFRZ_SHIFT                   28
#define CAN_CTRL2_ECRWRE_MASK                    0x20000000u
#define CAN_CTRL2_ECRWRE_SHIFT                   29
/* ESR2 Bit Fields */
#define CAN_ESR2_IMB_MASK                        0x2000u
#define CAN_ESR2_IMB_SHIFT                       13
#define CAN_ESR2_VPS_MASK                        0x4000u
#define CAN_ESR2_VPS_SHIFT                       14
#define CAN_ESR2_LPTM_MASK                       0x7F0000u
#define CAN_ESR2_LPTM_SHIFT                      16
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK)
/* CRCR Bit Fields */
#define CAN_CRCR_TXCRC_MASK                      0x7FFFu
#define CAN_CRCR_TXCRC_SHIFT                     0
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK)
#define CAN_CRCR_MBCRC_MASK                      0x7F0000u
#define CAN_CRCR_MBCRC_SHIFT                     16
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK)
/* RXFGMASK Bit Fields */
#define CAN_RXFGMASK_FGM_MASK                    0xFFFFFFFFu
#define CAN_RXFGMASK_FGM_SHIFT                   0
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK)
/* RXFIR Bit Fields */
#define CAN_RXFIR_IDHIT_MASK                     0x1FFu
#define CAN_RXFIR_IDHIT_SHIFT                    0
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK)
/* CS Bit Fields */
#define CAN_CS_TIME_STAMP_MASK                   0xFFFFu
#define CAN_CS_TIME_STAMP_SHIFT                  0
#define CAN_CS_TIME_STAMP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CS_TIME_STAMP_SHIFT))&CAN_CS_TIME_STAMP_MASK)
#define CAN_CS_DLC_MASK                          0xF0000u
#define CAN_CS_DLC_SHIFT                         16
#define CAN_CS_DLC(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_DLC_SHIFT))&CAN_CS_DLC_MASK)
#define CAN_CS_RTR_MASK                          0x100000u
#define CAN_CS_RTR_SHIFT                         20
#define CAN_CS_IDE_MASK                          0x200000u
#define CAN_CS_IDE_SHIFT                         21
#define CAN_CS_SRR_MASK                          0x400000u
#define CAN_CS_SRR_SHIFT                         22
#define CAN_CS_CODE_MASK                         0xF000000u
#define CAN_CS_CODE_SHIFT                        24
#define CAN_CS_CODE(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CS_CODE_SHIFT))&CAN_CS_CODE_MASK)
/* ID Bit Fields */
#define CAN_ID_EXT_MASK                          0x3FFFFu
#define CAN_ID_EXT_SHIFT                         0
#define CAN_ID_EXT(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_EXT_SHIFT))&CAN_ID_EXT_MASK)
#define CAN_ID_STD_MASK                          0x1FFC0000u
#define CAN_ID_STD_SHIFT                         18
#define CAN_ID_STD(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_STD_SHIFT))&CAN_ID_STD_MASK)
#define CAN_ID_PRIO_MASK                         0xE0000000u
#define CAN_ID_PRIO_SHIFT                        29
#define CAN_ID_PRIO(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ID_PRIO_SHIFT))&CAN_ID_PRIO_MASK)
/* WORD0 Bit Fields */
#define CAN_WORD0_DATA_BYTE_3_MASK               0xFFu
#define CAN_WORD0_DATA_BYTE_3_SHIFT              0
#define CAN_WORD0_DATA_BYTE_3(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_3_SHIFT))&CAN_WORD0_DATA_BYTE_3_MASK)
#define CAN_WORD0_DATA_BYTE_2_MASK               0xFF00u
#define CAN_WORD0_DATA_BYTE_2_SHIFT              8
#define CAN_WORD0_DATA_BYTE_2(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_2_SHIFT))&CAN_WORD0_DATA_BYTE_2_MASK)
#define CAN_WORD0_DATA_BYTE_1_MASK               0xFF0000u
#define CAN_WORD0_DATA_BYTE_1_SHIFT              16
#define CAN_WORD0_DATA_BYTE_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_1_SHIFT))&CAN_WORD0_DATA_BYTE_1_MASK)
#define CAN_WORD0_DATA_BYTE_0_MASK               0xFF000000u
#define CAN_WORD0_DATA_BYTE_0_SHIFT              24
#define CAN_WORD0_DATA_BYTE_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_0_SHIFT))&CAN_WORD0_DATA_BYTE_0_MASK)
/* WORD1 Bit Fields */
#define CAN_WORD1_DATA_BYTE_7_MASK               0xFFu
#define CAN_WORD1_DATA_BYTE_7_SHIFT              0
#define CAN_WORD1_DATA_BYTE_7(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_7_SHIFT))&CAN_WORD1_DATA_BYTE_7_MASK)
#define CAN_WORD1_DATA_BYTE_6_MASK               0xFF00u
#define CAN_WORD1_DATA_BYTE_6_SHIFT              8
#define CAN_WORD1_DATA_BYTE_6(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_6_SHIFT))&CAN_WORD1_DATA_BYTE_6_MASK)
#define CAN_WORD1_DATA_BYTE_5_MASK               0xFF0000u
#define CAN_WORD1_DATA_BYTE_5_SHIFT              16
#define CAN_WORD1_DATA_BYTE_5(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_5_SHIFT))&CAN_WORD1_DATA_BYTE_5_MASK)
#define CAN_WORD1_DATA_BYTE_4_MASK               0xFF000000u
#define CAN_WORD1_DATA_BYTE_4_SHIFT              24
#define CAN_WORD1_DATA_BYTE_4(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_4_SHIFT))&CAN_WORD1_DATA_BYTE_4_MASK)
/* RXIMR Bit Fields */
#define CAN_RXIMR_MI_MASK                        0xFFFFFFFFu
#define CAN_RXIMR_MI_SHIFT                       0
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK)
/* MECR Bit Fields */
#define CAN_MECR_NCEFAFRZ_MASK                   0x80u
#define CAN_MECR_NCEFAFRZ_SHIFT                  7
#define CAN_MECR_ECCDIS_MASK                     0x100u
#define CAN_MECR_ECCDIS_SHIFT                    8
#define CAN_MECR_RERRDIS_MASK                    0x200u
#define CAN_MECR_RERRDIS_SHIFT                   9
#define CAN_MECR_EXTERRIE_MASK                   0x2000u
#define CAN_MECR_EXTERRIE_SHIFT                  13
#define CAN_MECR_FAERRIE_MASK                    0x4000u
#define CAN_MECR_FAERRIE_SHIFT                   14
#define CAN_MECR_HAERRIE_MASK                    0x8000u
#define CAN_MECR_HAERRIE_SHIFT                   15
#define CAN_MECR_CEI_MSK_MASK                    0x10000u
#define CAN_MECR_CEI_MSK_SHIFT                   16
#define CAN_MECR_FANCEI_MSK_MASK                 0x40000u
#define CAN_MECR_FANCEI_MSK_SHIFT                18
#define CAN_MECR_HANCEI_MSK_MASK                 0x80000u
#define CAN_MECR_HANCEI_MSK_SHIFT                19
#define CAN_MECR_ECRWRDIS_MASK                   0x80000000u
#define CAN_MECR_ECRWRDIS_SHIFT                  31
/* ERRIAR Bit Fields */
#define CAN_ERRIAR_INJADDR_MASK                  0x3FFCu
#define CAN_ERRIAR_INJADDR_SHIFT                 2
#define CAN_ERRIAR_INJADDR(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIAR_INJADDR_SHIFT))&CAN_ERRIAR_INJADDR_MASK)
/* ERRIDPR Bit Fields */
#define CAN_ERRIDPR_DFLIP_MASK                   0xFFFFFFFFu
#define CAN_ERRIDPR_DFLIP_SHIFT                  0
#define CAN_ERRIDPR_DFLIP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_ERRIDPR_DFLIP_SHIFT))&CAN_ERRIDPR_DFLIP_MASK)
/* ERRIPPR Bit Fields */
#define CAN_ERRIPPR_PFLIP0_MASK                  0x1Fu
#define CAN_ERRIPPR_PFLIP0_SHIFT                 0
#define CAN_ERRIPPR_PFLIP0(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP0_SHIFT))&CAN_ERRIPPR_PFLIP0_MASK)
#define CAN_ERRIPPR_PFLIP1_MASK                  0x1F00u
#define CAN_ERRIPPR_PFLIP1_SHIFT                 8
#define CAN_ERRIPPR_PFLIP1(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP1_SHIFT))&CAN_ERRIPPR_PFLIP1_MASK)
#define CAN_ERRIPPR_PFLIP2_MASK                  0x1F0000u
#define CAN_ERRIPPR_PFLIP2_SHIFT                 16
#define CAN_ERRIPPR_PFLIP2(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP2_SHIFT))&CAN_ERRIPPR_PFLIP2_MASK)
#define CAN_ERRIPPR_PFLIP3_MASK                  0x1F000000u
#define CAN_ERRIPPR_PFLIP3_SHIFT                 24
#define CAN_ERRIPPR_PFLIP3(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_ERRIPPR_PFLIP3_SHIFT))&CAN_ERRIPPR_PFLIP3_MASK)
/* RERRAR Bit Fields */
#define CAN_RERRAR_ERRADDR_MASK                  0x3FFFu
#define CAN_RERRAR_ERRADDR_SHIFT                 0
#define CAN_RERRAR_ERRADDR(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRAR_ERRADDR_SHIFT))&CAN_RERRAR_ERRADDR_MASK)
#define CAN_RERRAR_SAID_MASK                     0x70000u
#define CAN_RERRAR_SAID_SHIFT                    16
#define CAN_RERRAR_SAID(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RERRAR_SAID_SHIFT))&CAN_RERRAR_SAID_MASK)
#define CAN_RERRAR_NCE_MASK                      0x1000000u
#define CAN_RERRAR_NCE_SHIFT                     24
/* RERRDR Bit Fields */
#define CAN_RERRDR_RDATA_MASK                    0xFFFFFFFFu
#define CAN_RERRDR_RDATA_SHIFT                   0
#define CAN_RERRDR_RDATA(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RERRDR_RDATA_SHIFT))&CAN_RERRDR_RDATA_MASK)
/* RERRSYNR Bit Fields */
#define CAN_RERRSYNR_SYND0_MASK                  0x1Fu
#define CAN_RERRSYNR_SYND0_SHIFT                 0
#define CAN_RERRSYNR_SYND0(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND0_SHIFT))&CAN_RERRSYNR_SYND0_MASK)
#define CAN_RERRSYNR_BE0_MASK                    0x80u
#define CAN_RERRSYNR_BE0_SHIFT                   7
#define CAN_RERRSYNR_SYND1_MASK                  0x1F00u
#define CAN_RERRSYNR_SYND1_SHIFT                 8
#define CAN_RERRSYNR_SYND1(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND1_SHIFT))&CAN_RERRSYNR_SYND1_MASK)
#define CAN_RERRSYNR_BE1_MASK                    0x8000u
#define CAN_RERRSYNR_BE1_SHIFT                   15
#define CAN_RERRSYNR_SYND2_MASK                  0x1F0000u
#define CAN_RERRSYNR_SYND2_SHIFT                 16
#define CAN_RERRSYNR_SYND2(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND2_SHIFT))&CAN_RERRSYNR_SYND2_MASK)
#define CAN_RERRSYNR_BE2_MASK                    0x800000u
#define CAN_RERRSYNR_BE2_SHIFT                   23
#define CAN_RERRSYNR_SYND3_MASK                  0x1F000000u
#define CAN_RERRSYNR_SYND3_SHIFT                 24
#define CAN_RERRSYNR_SYND3(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RERRSYNR_SYND3_SHIFT))&CAN_RERRSYNR_SYND3_MASK)
#define CAN_RERRSYNR_BE3_MASK                    0x80000000u
#define CAN_RERRSYNR_BE3_SHIFT                   31
/* ERRSR Bit Fields */
#define CAN_ERRSR_CEIOF_MASK                     0x1u
#define CAN_ERRSR_CEIOF_SHIFT                    0
#define CAN_ERRSR_FANCEIOF_MASK                  0x4u
#define CAN_ERRSR_FANCEIOF_SHIFT                 2
#define CAN_ERRSR_HANCEIOF_MASK                  0x8u
#define CAN_ERRSR_HANCEIOF_SHIFT                 3
#define CAN_ERRSR_CEIF_MASK                      0x10000u
#define CAN_ERRSR_CEIF_SHIFT                     16
#define CAN_ERRSR_FANCEIF_MASK                   0x40000u
#define CAN_ERRSR_FANCEIF_SHIFT                  18
#define CAN_ERRSR_HANCEIF_MASK                   0x80000u
#define CAN_ERRSR_HANCEIF_SHIFT                  19

/**
 * @}
 */ /* end of group CAN_Register_Masks */


/* CAN - Peripheral instance base addresses */
/** Peripheral CAN0 base pointer */
#define CAN0_BASE_PTR                            ((CAN_MemMapPtr)0x40020000u)
/** Peripheral CAN1 base pointer */
#define CAN1_BASE_PTR                            ((CAN_MemMapPtr)0x400D4000u)
/** Array initializer of CAN peripheral base pointers */
#define CAN_BASE_PTRS                            { CAN0_BASE_PTR, CAN1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- CAN - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CAN_Register_Accessor_Macros CAN - Register accessor macros
 * @{
 */


/* CAN - Register instance definitions */
/* CAN0 */
#define CAN0_MCR                                 CAN_MCR_REG(CAN0_BASE_PTR)
#define CAN0_CTRL1                               CAN_CTRL1_REG(CAN0_BASE_PTR)
#define CAN0_TIMER                               CAN_TIMER_REG(CAN0_BASE_PTR)
#define CAN0_RXMGMASK                            CAN_RXMGMASK_REG(CAN0_BASE_PTR)
#define CAN0_RX14MASK                            CAN_RX14MASK_REG(CAN0_BASE_PTR)
#define CAN0_RX15MASK                            CAN_RX15MASK_REG(CAN0_BASE_PTR)
#define CAN0_ECR                                 CAN_ECR_REG(CAN0_BASE_PTR)
#define CAN0_ESR1                                CAN_ESR1_REG(CAN0_BASE_PTR)
#define CAN0_IMASK2                              CAN_IMASK2_REG(CAN0_BASE_PTR)
#define CAN0_IMASK1                              CAN_IMASK1_REG(CAN0_BASE_PTR)
#define CAN0_IFLAG2                              CAN_IFLAG2_REG(CAN0_BASE_PTR)
#define CAN0_IFLAG1                              CAN_IFLAG1_REG(CAN0_BASE_PTR)
#define CAN0_CTRL2                               CAN_CTRL2_REG(CAN0_BASE_PTR)
#define CAN0_ESR2                                CAN_ESR2_REG(CAN0_BASE_PTR)
#define CAN0_CRCR                                CAN_CRCR_REG(CAN0_BASE_PTR)
#define CAN0_RXFGMASK                            CAN_RXFGMASK_REG(CAN0_BASE_PTR)
#define CAN0_RXFIR                               CAN_RXFIR_REG(CAN0_BASE_PTR)
#define CAN0_CS0                                 CAN_CS_REG(CAN0_BASE_PTR,0)
#define CAN0_ID0                                 CAN_ID_REG(CAN0_BASE_PTR,0)
#define CAN0_WORD00                              CAN_WORD0_REG(CAN0_BASE_PTR,0)
#define CAN0_WORD10                              CAN_WORD1_REG(CAN0_BASE_PTR,0)
#define CAN0_CS1                                 CAN_CS_REG(CAN0_BASE_PTR,1)
#define CAN0_ID1                                 CAN_ID_REG(CAN0_BASE_PTR,1)
#define CAN0_WORD01                              CAN_WORD0_REG(CAN0_BASE_PTR,1)
#define CAN0_WORD11                              CAN_WORD1_REG(CAN0_BASE_PTR,1)
#define CAN0_CS2                                 CAN_CS_REG(CAN0_BASE_PTR,2)
#define CAN0_ID2                                 CAN_ID_REG(CAN0_BASE_PTR,2)
#define CAN0_WORD02                              CAN_WORD0_REG(CAN0_BASE_PTR,2)
#define CAN0_WORD12                              CAN_WORD1_REG(CAN0_BASE_PTR,2)
#define CAN0_CS3                                 CAN_CS_REG(CAN0_BASE_PTR,3)
#define CAN0_ID3                                 CAN_ID_REG(CAN0_BASE_PTR,3)
#define CAN0_WORD03                              CAN_WORD0_REG(CAN0_BASE_PTR,3)
#define CAN0_WORD13                              CAN_WORD1_REG(CAN0_BASE_PTR,3)
#define CAN0_CS4                                 CAN_CS_REG(CAN0_BASE_PTR,4)
#define CAN0_ID4                                 CAN_ID_REG(CAN0_BASE_PTR,4)
#define CAN0_WORD04                              CAN_WORD0_REG(CAN0_BASE_PTR,4)
#define CAN0_WORD14                              CAN_WORD1_REG(CAN0_BASE_PTR,4)
#define CAN0_CS5                                 CAN_CS_REG(CAN0_BASE_PTR,5)
#define CAN0_ID5                                 CAN_ID_REG(CAN0_BASE_PTR,5)
#define CAN0_WORD05                              CAN_WORD0_REG(CAN0_BASE_PTR,5)
#define CAN0_WORD15                              CAN_WORD1_REG(CAN0_BASE_PTR,5)
#define CAN0_CS6                                 CAN_CS_REG(CAN0_BASE_PTR,6)
#define CAN0_ID6                                 CAN_ID_REG(CAN0_BASE_PTR,6)
#define CAN0_WORD06                              CAN_WORD0_REG(CAN0_BASE_PTR,6)
#define CAN0_WORD16                              CAN_WORD1_REG(CAN0_BASE_PTR,6)
#define CAN0_CS7                                 CAN_CS_REG(CAN0_BASE_PTR,7)
#define CAN0_ID7                                 CAN_ID_REG(CAN0_BASE_PTR,7)
#define CAN0_WORD07                              CAN_WORD0_REG(CAN0_BASE_PTR,7)
#define CAN0_WORD17                              CAN_WORD1_REG(CAN0_BASE_PTR,7)
#define CAN0_CS8                                 CAN_CS_REG(CAN0_BASE_PTR,8)
#define CAN0_ID8                                 CAN_ID_REG(CAN0_BASE_PTR,8)
#define CAN0_WORD08                              CAN_WORD0_REG(CAN0_BASE_PTR,8)
#define CAN0_WORD18                              CAN_WORD1_REG(CAN0_BASE_PTR,8)
#define CAN0_CS9                                 CAN_CS_REG(CAN0_BASE_PTR,9)
#define CAN0_ID9                                 CAN_ID_REG(CAN0_BASE_PTR,9)
#define CAN0_WORD09                              CAN_WORD0_REG(CAN0_BASE_PTR,9)
#define CAN0_WORD19                              CAN_WORD1_REG(CAN0_BASE_PTR,9)
#define CAN0_CS10                                CAN_CS_REG(CAN0_BASE_PTR,10)
#define CAN0_ID10                                CAN_ID_REG(CAN0_BASE_PTR,10)
#define CAN0_WORD010                             CAN_WORD0_REG(CAN0_BASE_PTR,10)
#define CAN0_WORD110                             CAN_WORD1_REG(CAN0_BASE_PTR,10)
#define CAN0_CS11                                CAN_CS_REG(CAN0_BASE_PTR,11)
#define CAN0_ID11                                CAN_ID_REG(CAN0_BASE_PTR,11)
#define CAN0_WORD011                             CAN_WORD0_REG(CAN0_BASE_PTR,11)
#define CAN0_WORD111                             CAN_WORD1_REG(CAN0_BASE_PTR,11)
#define CAN0_CS12                                CAN_CS_REG(CAN0_BASE_PTR,12)
#define CAN0_ID12                                CAN_ID_REG(CAN0_BASE_PTR,12)
#define CAN0_WORD012                             CAN_WORD0_REG(CAN0_BASE_PTR,12)
#define CAN0_WORD112                             CAN_WORD1_REG(CAN0_BASE_PTR,12)
#define CAN0_CS13                                CAN_CS_REG(CAN0_BASE_PTR,13)
#define CAN0_ID13                                CAN_ID_REG(CAN0_BASE_PTR,13)
#define CAN0_WORD013                             CAN_WORD0_REG(CAN0_BASE_PTR,13)
#define CAN0_WORD113                             CAN_WORD1_REG(CAN0_BASE_PTR,13)
#define CAN0_CS14                                CAN_CS_REG(CAN0_BASE_PTR,14)
#define CAN0_ID14                                CAN_ID_REG(CAN0_BASE_PTR,14)
#define CAN0_WORD014                             CAN_WORD0_REG(CAN0_BASE_PTR,14)
#define CAN0_WORD114                             CAN_WORD1_REG(CAN0_BASE_PTR,14)
#define CAN0_CS15                                CAN_CS_REG(CAN0_BASE_PTR,15)
#define CAN0_ID15                                CAN_ID_REG(CAN0_BASE_PTR,15)
#define CAN0_WORD015                             CAN_WORD0_REG(CAN0_BASE_PTR,15)
#define CAN0_WORD115                             CAN_WORD1_REG(CAN0_BASE_PTR,15)
#define CAN0_RXIMR0                              CAN_RXIMR_REG(CAN0_BASE_PTR,0)
#define CAN0_RXIMR1                              CAN_RXIMR_REG(CAN0_BASE_PTR,1)
#define CAN0_RXIMR2                              CAN_RXIMR_REG(CAN0_BASE_PTR,2)
#define CAN0_RXIMR3                              CAN_RXIMR_REG(CAN0_BASE_PTR,3)
#define CAN0_RXIMR4                              CAN_RXIMR_REG(CAN0_BASE_PTR,4)
#define CAN0_RXIMR5                              CAN_RXIMR_REG(CAN0_BASE_PTR,5)
#define CAN0_RXIMR6                              CAN_RXIMR_REG(CAN0_BASE_PTR,6)
#define CAN0_RXIMR7                              CAN_RXIMR_REG(CAN0_BASE_PTR,7)
#define CAN0_RXIMR8                              CAN_RXIMR_REG(CAN0_BASE_PTR,8)
#define CAN0_RXIMR9                              CAN_RXIMR_REG(CAN0_BASE_PTR,9)
#define CAN0_RXIMR10                             CAN_RXIMR_REG(CAN0_BASE_PTR,10)
#define CAN0_RXIMR11                             CAN_RXIMR_REG(CAN0_BASE_PTR,11)
#define CAN0_RXIMR12                             CAN_RXIMR_REG(CAN0_BASE_PTR,12)
#define CAN0_RXIMR13                             CAN_RXIMR_REG(CAN0_BASE_PTR,13)
#define CAN0_RXIMR14                             CAN_RXIMR_REG(CAN0_BASE_PTR,14)
#define CAN0_RXIMR15                             CAN_RXIMR_REG(CAN0_BASE_PTR,15)
#define CAN0_RXIMR16                             CAN_RXIMR_REG(CAN0_BASE_PTR,16)
#define CAN0_RXIMR17                             CAN_RXIMR_REG(CAN0_BASE_PTR,17)
#define CAN0_RXIMR18                             CAN_RXIMR_REG(CAN0_BASE_PTR,18)
#define CAN0_RXIMR19                             CAN_RXIMR_REG(CAN0_BASE_PTR,19)
#define CAN0_RXIMR20                             CAN_RXIMR_REG(CAN0_BASE_PTR,20)
#define CAN0_RXIMR21                             CAN_RXIMR_REG(CAN0_BASE_PTR,21)
#define CAN0_RXIMR22                             CAN_RXIMR_REG(CAN0_BASE_PTR,22)
#define CAN0_RXIMR23                             CAN_RXIMR_REG(CAN0_BASE_PTR,23)
#define CAN0_RXIMR24                             CAN_RXIMR_REG(CAN0_BASE_PTR,24)
#define CAN0_RXIMR25                             CAN_RXIMR_REG(CAN0_BASE_PTR,25)
#define CAN0_RXIMR26                             CAN_RXIMR_REG(CAN0_BASE_PTR,26)
#define CAN0_RXIMR27                             CAN_RXIMR_REG(CAN0_BASE_PTR,27)
#define CAN0_RXIMR28                             CAN_RXIMR_REG(CAN0_BASE_PTR,28)
#define CAN0_RXIMR29                             CAN_RXIMR_REG(CAN0_BASE_PTR,29)
#define CAN0_RXIMR30                             CAN_RXIMR_REG(CAN0_BASE_PTR,30)
#define CAN0_RXIMR31                             CAN_RXIMR_REG(CAN0_BASE_PTR,31)
#define CAN0_RXIMR32                             CAN_RXIMR_REG(CAN0_BASE_PTR,32)
#define CAN0_RXIMR33                             CAN_RXIMR_REG(CAN0_BASE_PTR,33)
#define CAN0_RXIMR34                             CAN_RXIMR_REG(CAN0_BASE_PTR,34)
#define CAN0_RXIMR35                             CAN_RXIMR_REG(CAN0_BASE_PTR,35)
#define CAN0_RXIMR36                             CAN_RXIMR_REG(CAN0_BASE_PTR,36)
#define CAN0_RXIMR37                             CAN_RXIMR_REG(CAN0_BASE_PTR,37)
#define CAN0_RXIMR38                             CAN_RXIMR_REG(CAN0_BASE_PTR,38)
#define CAN0_RXIMR39                             CAN_RXIMR_REG(CAN0_BASE_PTR,39)
#define CAN0_RXIMR40                             CAN_RXIMR_REG(CAN0_BASE_PTR,40)
#define CAN0_RXIMR41                             CAN_RXIMR_REG(CAN0_BASE_PTR,41)
#define CAN0_RXIMR42                             CAN_RXIMR_REG(CAN0_BASE_PTR,42)
#define CAN0_RXIMR43                             CAN_RXIMR_REG(CAN0_BASE_PTR,43)
#define CAN0_RXIMR44                             CAN_RXIMR_REG(CAN0_BASE_PTR,44)
#define CAN0_RXIMR45                             CAN_RXIMR_REG(CAN0_BASE_PTR,45)
#define CAN0_RXIMR46                             CAN_RXIMR_REG(CAN0_BASE_PTR,46)
#define CAN0_RXIMR47                             CAN_RXIMR_REG(CAN0_BASE_PTR,47)
#define CAN0_RXIMR48                             CAN_RXIMR_REG(CAN0_BASE_PTR,48)
#define CAN0_RXIMR49                             CAN_RXIMR_REG(CAN0_BASE_PTR,49)
#define CAN0_RXIMR50                             CAN_RXIMR_REG(CAN0_BASE_PTR,50)
#define CAN0_RXIMR51                             CAN_RXIMR_REG(CAN0_BASE_PTR,51)
#define CAN0_RXIMR52                             CAN_RXIMR_REG(CAN0_BASE_PTR,52)
#define CAN0_RXIMR53                             CAN_RXIMR_REG(CAN0_BASE_PTR,53)
#define CAN0_RXIMR54                             CAN_RXIMR_REG(CAN0_BASE_PTR,54)
#define CAN0_RXIMR55                             CAN_RXIMR_REG(CAN0_BASE_PTR,55)
#define CAN0_RXIMR56                             CAN_RXIMR_REG(CAN0_BASE_PTR,56)
#define CAN0_RXIMR57                             CAN_RXIMR_REG(CAN0_BASE_PTR,57)
#define CAN0_RXIMR58                             CAN_RXIMR_REG(CAN0_BASE_PTR,58)
#define CAN0_RXIMR59                             CAN_RXIMR_REG(CAN0_BASE_PTR,59)
#define CAN0_RXIMR60                             CAN_RXIMR_REG(CAN0_BASE_PTR,60)
#define CAN0_RXIMR61                             CAN_RXIMR_REG(CAN0_BASE_PTR,61)
#define CAN0_RXIMR62                             CAN_RXIMR_REG(CAN0_BASE_PTR,62)
#define CAN0_RXIMR63                             CAN_RXIMR_REG(CAN0_BASE_PTR,63)
#define CAN0_MECR                                CAN_MECR_REG(CAN0_BASE_PTR)
#define CAN0_ERRIAR                              CAN_ERRIAR_REG(CAN0_BASE_PTR)
#define CAN0_ERRIDPR                             CAN_ERRIDPR_REG(CAN0_BASE_PTR)
#define CAN0_ERRIPPR                             CAN_ERRIPPR_REG(CAN0_BASE_PTR)
#define CAN0_RERRAR                              CAN_RERRAR_REG(CAN0_BASE_PTR)
#define CAN0_RERRDR                              CAN_RERRDR_REG(CAN0_BASE_PTR)
#define CAN0_RERRSYNR                            CAN_RERRSYNR_REG(CAN0_BASE_PTR)
#define CAN0_ERRSR                               CAN_ERRSR_REG(CAN0_BASE_PTR)
/* CAN1 */
#define CAN1_MCR                                 CAN_MCR_REG(CAN1_BASE_PTR)
#define CAN1_CTRL1                               CAN_CTRL1_REG(CAN1_BASE_PTR)
#define CAN1_TIMER                               CAN_TIMER_REG(CAN1_BASE_PTR)
#define CAN1_RXMGMASK                            CAN_RXMGMASK_REG(CAN1_BASE_PTR)
#define CAN1_RX14MASK                            CAN_RX14MASK_REG(CAN1_BASE_PTR)
#define CAN1_RX15MASK                            CAN_RX15MASK_REG(CAN1_BASE_PTR)
#define CAN1_ECR                                 CAN_ECR_REG(CAN1_BASE_PTR)
#define CAN1_ESR1                                CAN_ESR1_REG(CAN1_BASE_PTR)
#define CAN1_IMASK2                              CAN_IMASK2_REG(CAN1_BASE_PTR)
#define CAN1_IMASK1                              CAN_IMASK1_REG(CAN1_BASE_PTR)
#define CAN1_IFLAG2                              CAN_IFLAG2_REG(CAN1_BASE_PTR)
#define CAN1_IFLAG1                              CAN_IFLAG1_REG(CAN1_BASE_PTR)
#define CAN1_CTRL2                               CAN_CTRL2_REG(CAN1_BASE_PTR)
#define CAN1_ESR2                                CAN_ESR2_REG(CAN1_BASE_PTR)
#define CAN1_CRCR                                CAN_CRCR_REG(CAN1_BASE_PTR)
#define CAN1_RXFGMASK                            CAN_RXFGMASK_REG(CAN1_BASE_PTR)
#define CAN1_RXFIR                               CAN_RXFIR_REG(CAN1_BASE_PTR)
#define CAN1_CS0                                 CAN_CS_REG(CAN1_BASE_PTR,0)
#define CAN1_ID0                                 CAN_ID_REG(CAN1_BASE_PTR,0)
#define CAN1_WORD00                              CAN_WORD0_REG(CAN1_BASE_PTR,0)
#define CAN1_WORD10                              CAN_WORD1_REG(CAN1_BASE_PTR,0)
#define CAN1_CS1                                 CAN_CS_REG(CAN1_BASE_PTR,1)
#define CAN1_ID1                                 CAN_ID_REG(CAN1_BASE_PTR,1)
#define CAN1_WORD01                              CAN_WORD0_REG(CAN1_BASE_PTR,1)
#define CAN1_WORD11                              CAN_WORD1_REG(CAN1_BASE_PTR,1)
#define CAN1_CS2                                 CAN_CS_REG(CAN1_BASE_PTR,2)
#define CAN1_ID2                                 CAN_ID_REG(CAN1_BASE_PTR,2)
#define CAN1_WORD02                              CAN_WORD0_REG(CAN1_BASE_PTR,2)
#define CAN1_WORD12                              CAN_WORD1_REG(CAN1_BASE_PTR,2)
#define CAN1_CS3                                 CAN_CS_REG(CAN1_BASE_PTR,3)
#define CAN1_ID3                                 CAN_ID_REG(CAN1_BASE_PTR,3)
#define CAN1_WORD03                              CAN_WORD0_REG(CAN1_BASE_PTR,3)
#define CAN1_WORD13                              CAN_WORD1_REG(CAN1_BASE_PTR,3)
#define CAN1_CS4                                 CAN_CS_REG(CAN1_BASE_PTR,4)
#define CAN1_ID4                                 CAN_ID_REG(CAN1_BASE_PTR,4)
#define CAN1_WORD04                              CAN_WORD0_REG(CAN1_BASE_PTR,4)
#define CAN1_WORD14                              CAN_WORD1_REG(CAN1_BASE_PTR,4)
#define CAN1_CS5                                 CAN_CS_REG(CAN1_BASE_PTR,5)
#define CAN1_ID5                                 CAN_ID_REG(CAN1_BASE_PTR,5)
#define CAN1_WORD05                              CAN_WORD0_REG(CAN1_BASE_PTR,5)
#define CAN1_WORD15                              CAN_WORD1_REG(CAN1_BASE_PTR,5)
#define CAN1_CS6                                 CAN_CS_REG(CAN1_BASE_PTR,6)
#define CAN1_ID6                                 CAN_ID_REG(CAN1_BASE_PTR,6)
#define CAN1_WORD06                              CAN_WORD0_REG(CAN1_BASE_PTR,6)
#define CAN1_WORD16                              CAN_WORD1_REG(CAN1_BASE_PTR,6)
#define CAN1_CS7                                 CAN_CS_REG(CAN1_BASE_PTR,7)
#define CAN1_ID7                                 CAN_ID_REG(CAN1_BASE_PTR,7)
#define CAN1_WORD07                              CAN_WORD0_REG(CAN1_BASE_PTR,7)
#define CAN1_WORD17                              CAN_WORD1_REG(CAN1_BASE_PTR,7)
#define CAN1_CS8                                 CAN_CS_REG(CAN1_BASE_PTR,8)
#define CAN1_ID8                                 CAN_ID_REG(CAN1_BASE_PTR,8)
#define CAN1_WORD08                              CAN_WORD0_REG(CAN1_BASE_PTR,8)
#define CAN1_WORD18                              CAN_WORD1_REG(CAN1_BASE_PTR,8)
#define CAN1_CS9                                 CAN_CS_REG(CAN1_BASE_PTR,9)
#define CAN1_ID9                                 CAN_ID_REG(CAN1_BASE_PTR,9)
#define CAN1_WORD09                              CAN_WORD0_REG(CAN1_BASE_PTR,9)
#define CAN1_WORD19                              CAN_WORD1_REG(CAN1_BASE_PTR,9)
#define CAN1_CS10                                CAN_CS_REG(CAN1_BASE_PTR,10)
#define CAN1_ID10                                CAN_ID_REG(CAN1_BASE_PTR,10)
#define CAN1_WORD010                             CAN_WORD0_REG(CAN1_BASE_PTR,10)
#define CAN1_WORD110                             CAN_WORD1_REG(CAN1_BASE_PTR,10)
#define CAN1_CS11                                CAN_CS_REG(CAN1_BASE_PTR,11)
#define CAN1_ID11                                CAN_ID_REG(CAN1_BASE_PTR,11)
#define CAN1_WORD011                             CAN_WORD0_REG(CAN1_BASE_PTR,11)
#define CAN1_WORD111                             CAN_WORD1_REG(CAN1_BASE_PTR,11)
#define CAN1_CS12                                CAN_CS_REG(CAN1_BASE_PTR,12)
#define CAN1_ID12                                CAN_ID_REG(CAN1_BASE_PTR,12)
#define CAN1_WORD012                             CAN_WORD0_REG(CAN1_BASE_PTR,12)
#define CAN1_WORD112                             CAN_WORD1_REG(CAN1_BASE_PTR,12)
#define CAN1_CS13                                CAN_CS_REG(CAN1_BASE_PTR,13)
#define CAN1_ID13                                CAN_ID_REG(CAN1_BASE_PTR,13)
#define CAN1_WORD013                             CAN_WORD0_REG(CAN1_BASE_PTR,13)
#define CAN1_WORD113                             CAN_WORD1_REG(CAN1_BASE_PTR,13)
#define CAN1_CS14                                CAN_CS_REG(CAN1_BASE_PTR,14)
#define CAN1_ID14                                CAN_ID_REG(CAN1_BASE_PTR,14)
#define CAN1_WORD014                             CAN_WORD0_REG(CAN1_BASE_PTR,14)
#define CAN1_WORD114                             CAN_WORD1_REG(CAN1_BASE_PTR,14)
#define CAN1_CS15                                CAN_CS_REG(CAN1_BASE_PTR,15)
#define CAN1_ID15                                CAN_ID_REG(CAN1_BASE_PTR,15)
#define CAN1_WORD015                             CAN_WORD0_REG(CAN1_BASE_PTR,15)
#define CAN1_WORD115                             CAN_WORD1_REG(CAN1_BASE_PTR,15)
#define CAN1_RXIMR0                              CAN_RXIMR_REG(CAN1_BASE_PTR,0)
#define CAN1_RXIMR1                              CAN_RXIMR_REG(CAN1_BASE_PTR,1)
#define CAN1_RXIMR2                              CAN_RXIMR_REG(CAN1_BASE_PTR,2)
#define CAN1_RXIMR3                              CAN_RXIMR_REG(CAN1_BASE_PTR,3)
#define CAN1_RXIMR4                              CAN_RXIMR_REG(CAN1_BASE_PTR,4)
#define CAN1_RXIMR5                              CAN_RXIMR_REG(CAN1_BASE_PTR,5)
#define CAN1_RXIMR6                              CAN_RXIMR_REG(CAN1_BASE_PTR,6)
#define CAN1_RXIMR7                              CAN_RXIMR_REG(CAN1_BASE_PTR,7)
#define CAN1_RXIMR8                              CAN_RXIMR_REG(CAN1_BASE_PTR,8)
#define CAN1_RXIMR9                              CAN_RXIMR_REG(CAN1_BASE_PTR,9)
#define CAN1_RXIMR10                             CAN_RXIMR_REG(CAN1_BASE_PTR,10)
#define CAN1_RXIMR11                             CAN_RXIMR_REG(CAN1_BASE_PTR,11)
#define CAN1_RXIMR12                             CAN_RXIMR_REG(CAN1_BASE_PTR,12)
#define CAN1_RXIMR13                             CAN_RXIMR_REG(CAN1_BASE_PTR,13)
#define CAN1_RXIMR14                             CAN_RXIMR_REG(CAN1_BASE_PTR,14)
#define CAN1_RXIMR15                             CAN_RXIMR_REG(CAN1_BASE_PTR,15)
#define CAN1_RXIMR16                             CAN_RXIMR_REG(CAN1_BASE_PTR,16)
#define CAN1_RXIMR17                             CAN_RXIMR_REG(CAN1_BASE_PTR,17)
#define CAN1_RXIMR18                             CAN_RXIMR_REG(CAN1_BASE_PTR,18)
#define CAN1_RXIMR19                             CAN_RXIMR_REG(CAN1_BASE_PTR,19)
#define CAN1_RXIMR20                             CAN_RXIMR_REG(CAN1_BASE_PTR,20)
#define CAN1_RXIMR21                             CAN_RXIMR_REG(CAN1_BASE_PTR,21)
#define CAN1_RXIMR22                             CAN_RXIMR_REG(CAN1_BASE_PTR,22)
#define CAN1_RXIMR23                             CAN_RXIMR_REG(CAN1_BASE_PTR,23)
#define CAN1_RXIMR24                             CAN_RXIMR_REG(CAN1_BASE_PTR,24)
#define CAN1_RXIMR25                             CAN_RXIMR_REG(CAN1_BASE_PTR,25)
#define CAN1_RXIMR26                             CAN_RXIMR_REG(CAN1_BASE_PTR,26)
#define CAN1_RXIMR27                             CAN_RXIMR_REG(CAN1_BASE_PTR,27)
#define CAN1_RXIMR28                             CAN_RXIMR_REG(CAN1_BASE_PTR,28)
#define CAN1_RXIMR29                             CAN_RXIMR_REG(CAN1_BASE_PTR,29)
#define CAN1_RXIMR30                             CAN_RXIMR_REG(CAN1_BASE_PTR,30)
#define CAN1_RXIMR31                             CAN_RXIMR_REG(CAN1_BASE_PTR,31)
#define CAN1_RXIMR32                             CAN_RXIMR_REG(CAN1_BASE_PTR,32)
#define CAN1_RXIMR33                             CAN_RXIMR_REG(CAN1_BASE_PTR,33)
#define CAN1_RXIMR34                             CAN_RXIMR_REG(CAN1_BASE_PTR,34)
#define CAN1_RXIMR35                             CAN_RXIMR_REG(CAN1_BASE_PTR,35)
#define CAN1_RXIMR36                             CAN_RXIMR_REG(CAN1_BASE_PTR,36)
#define CAN1_RXIMR37                             CAN_RXIMR_REG(CAN1_BASE_PTR,37)
#define CAN1_RXIMR38                             CAN_RXIMR_REG(CAN1_BASE_PTR,38)
#define CAN1_RXIMR39                             CAN_RXIMR_REG(CAN1_BASE_PTR,39)
#define CAN1_RXIMR40                             CAN_RXIMR_REG(CAN1_BASE_PTR,40)
#define CAN1_RXIMR41                             CAN_RXIMR_REG(CAN1_BASE_PTR,41)
#define CAN1_RXIMR42                             CAN_RXIMR_REG(CAN1_BASE_PTR,42)
#define CAN1_RXIMR43                             CAN_RXIMR_REG(CAN1_BASE_PTR,43)
#define CAN1_RXIMR44                             CAN_RXIMR_REG(CAN1_BASE_PTR,44)
#define CAN1_RXIMR45                             CAN_RXIMR_REG(CAN1_BASE_PTR,45)
#define CAN1_RXIMR46                             CAN_RXIMR_REG(CAN1_BASE_PTR,46)
#define CAN1_RXIMR47                             CAN_RXIMR_REG(CAN1_BASE_PTR,47)
#define CAN1_RXIMR48                             CAN_RXIMR_REG(CAN1_BASE_PTR,48)
#define CAN1_RXIMR49                             CAN_RXIMR_REG(CAN1_BASE_PTR,49)
#define CAN1_RXIMR50                             CAN_RXIMR_REG(CAN1_BASE_PTR,50)
#define CAN1_RXIMR51                             CAN_RXIMR_REG(CAN1_BASE_PTR,51)
#define CAN1_RXIMR52                             CAN_RXIMR_REG(CAN1_BASE_PTR,52)
#define CAN1_RXIMR53                             CAN_RXIMR_REG(CAN1_BASE_PTR,53)
#define CAN1_RXIMR54                             CAN_RXIMR_REG(CAN1_BASE_PTR,54)
#define CAN1_RXIMR55                             CAN_RXIMR_REG(CAN1_BASE_PTR,55)
#define CAN1_RXIMR56                             CAN_RXIMR_REG(CAN1_BASE_PTR,56)
#define CAN1_RXIMR57                             CAN_RXIMR_REG(CAN1_BASE_PTR,57)
#define CAN1_RXIMR58                             CAN_RXIMR_REG(CAN1_BASE_PTR,58)
#define CAN1_RXIMR59                             CAN_RXIMR_REG(CAN1_BASE_PTR,59)
#define CAN1_RXIMR60                             CAN_RXIMR_REG(CAN1_BASE_PTR,60)
#define CAN1_RXIMR61                             CAN_RXIMR_REG(CAN1_BASE_PTR,61)
#define CAN1_RXIMR62                             CAN_RXIMR_REG(CAN1_BASE_PTR,62)
#define CAN1_RXIMR63                             CAN_RXIMR_REG(CAN1_BASE_PTR,63)
#define CAN1_MECR                                CAN_MECR_REG(CAN1_BASE_PTR)
#define CAN1_ERRIAR                              CAN_ERRIAR_REG(CAN1_BASE_PTR)
#define CAN1_ERRIDPR                             CAN_ERRIDPR_REG(CAN1_BASE_PTR)
#define CAN1_ERRIPPR                             CAN_ERRIPPR_REG(CAN1_BASE_PTR)
#define CAN1_RERRAR                              CAN_RERRAR_REG(CAN1_BASE_PTR)
#define CAN1_RERRDR                              CAN_RERRDR_REG(CAN1_BASE_PTR)
#define CAN1_RERRSYNR                            CAN_RERRSYNR_REG(CAN1_BASE_PTR)
#define CAN1_ERRSR                               CAN_ERRSR_REG(CAN1_BASE_PTR)

/* CAN - Register array accessors */
#define CAN0_CS(index)                           CAN_CS_REG(CAN0_BASE_PTR,index)
#define CAN1_CS(index)                           CAN_CS_REG(CAN1_BASE_PTR,index)
#define CAN0_ID(index)                           CAN_ID_REG(CAN0_BASE_PTR,index)
#define CAN1_ID(index)                           CAN_ID_REG(CAN1_BASE_PTR,index)
#define CAN0_WORD0(index)                        CAN_WORD0_REG(CAN0_BASE_PTR,index)
#define CAN1_WORD0(index)                        CAN_WORD0_REG(CAN1_BASE_PTR,index)
#define CAN0_WORD1(index)                        CAN_WORD1_REG(CAN0_BASE_PTR,index)
#define CAN1_WORD1(index)                        CAN_WORD1_REG(CAN1_BASE_PTR,index)
#define CAN0_RXIMR(index)                        CAN_RXIMR_REG(CAN0_BASE_PTR,index)
#define CAN1_RXIMR(index)                        CAN_RXIMR_REG(CAN1_BASE_PTR,index)

/**
 * @}
 */ /* end of group CAN_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group CAN_Peripheral */


/* ----------------------------------------------------------------------------
   -- CCM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CCM_Peripheral CCM
 * @{
 */

/** CCM - Peripheral register structure */
typedef struct CCM_MemMap {
  uint32_t CCR;                                    /**< CCM Control Register, offset: 0x0 */
  uint32_t CSR;                                    /**< CCM Status Register, offset: 0x4 */
  uint32_t CCSR;                                   /**< CCM Clock Switcher Register, offset: 0x8 */
  uint32_t CACRR;                                  /**< CCM ARM Clock Root Register, offset: 0xC */
  uint32_t CSCMR1;                                 /**< CCM Serial Clock Multiplexer Register 1, offset: 0x10 */
  uint32_t CSCDR1;                                 /**< CCM Serial Clock Divider Register 1, offset: 0x14 */
  uint32_t CSCDR2;                                 /**< CCM Serial Clock Divider Register 2, offset: 0x18 */
  uint32_t CSCDR3;                                 /**< CCM Serial Clock Divider Register 3, offset: 0x1C */
  uint32_t CSCMR2;                                 /**< CCM Serial Clock Multiplexer Register 2, offset: 0x20 */
  uint32_t CSCDR4;                                 /**< CCM Serial Clock Divider Register 4, offset: 0x24 */
  uint32_t CTOR;                                   /**< CCM Testing Observability Register, offset: 0x28 */
  uint32_t CLPCR;                                  /**< CCM Low Power Control Register, offset: 0x2C */
  uint32_t CISR;                                   /**< CCM Interrupt Status Register, offset: 0x30 */
  uint32_t CIMR;                                   /**< CCM Interrupt Mask Register, offset: 0x34 */
  uint32_t CCOSR;                                  /**< CCM Clock Output Source Register, offset: 0x38 */
  uint32_t CGPR;                                   /**< CCM General Purpose Register, offset: 0x3C */
  uint32_t CCGR0;                                  /**< CCM Clock Gating Register, offset: 0x40 */
  uint32_t CCGR1;                                  /**< CCM Clock Gating Register, offset: 0x44 */
  uint32_t CCGR2;                                  /**< CCM Clock Gating Register, offset: 0x48 */
  uint32_t CCGR3;                                  /**< CCM Clock Gating Register, offset: 0x4C */
  uint32_t CCGR4;                                  /**< CCM Clock Gating Register, offset: 0x50 */
  uint32_t CCGR5;                                  /**< CCM Clock Gating Register, offset: 0x54 */
  uint32_t CCGR6;                                  /**< CCM Clock Gating Register, offset: 0x58 */
  uint32_t CCGR7;                                  /**< CCM Clock Gating Register, offset: 0x5C */
  uint32_t CCGR8;                                  /**< CCM Clock Gating Register, offset: 0x60 */
  uint32_t CCGR9;                                  /**< CCM Clock Gating Register, offset: 0x64 */
  uint32_t CCGR10;                                 /**< CCM Clock Gating Register, offset: 0x68 */
  uint32_t CCGR11;                                 /**< CCM Clock Gating Register, offset: 0x6C */
  uint32_t CMEOR0;                                 /**< CCM Module Enable Override Register, offset: 0x70 */
  uint32_t CMEOR1;                                 /**< CCM Module Enable Override Register, offset: 0x74 */
  uint32_t CMEOR2;                                 /**< CCM Module Enable Override Register, offset: 0x78 */
  uint32_t CMEOR3;                                 /**< CCM Module Enable Override Register, offset: 0x7C */
  uint32_t CMEOR4;                                 /**< CCM Module Enable Override Register, offset: 0x80 */
  uint32_t CMEOR5;                                 /**< CCM Module Enable Override Register, offset: 0x84 */
  uint32_t CPPDSR;                                 /**< CCM PLL PFD Disable Status Register, offset: 0x88 */
  uint32_t CCOWR;                                  /**< CCM CORE Wakeup Register, offset: 0x8C */
  uint32_t CCPGR0;                                 /**< CCM Platform Clock Gating Register, offset: 0x90 */
  uint32_t CCPGR1;                                 /**< CCM Platform Clock Gating Register, offset: 0x94 */
  uint32_t CCPGR2;                                 /**< CCM Platform Clock Gating Register, offset: 0x98 */
  uint32_t CCPGR3;                                 /**< CCM Platform Clock Gating Register, offset: 0x9C */
} volatile *CCM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CCM_Register_Accessor_Macros CCM - Register accessor macros
 * @{
 */


/* CCM - Register accessors */
#define CCM_CCR_REG(base)                        ((base)->CCR)
#define CCM_CSR_REG(base)                        ((base)->CSR)
#define CCM_CCSR_REG(base)                       ((base)->CCSR)
#define CCM_CACRR_REG(base)                      ((base)->CACRR)
#define CCM_CSCMR1_REG(base)                     ((base)->CSCMR1)
#define CCM_CSCDR1_REG(base)                     ((base)->CSCDR1)
#define CCM_CSCDR2_REG(base)                     ((base)->CSCDR2)
#define CCM_CSCDR3_REG(base)                     ((base)->CSCDR3)
#define CCM_CSCMR2_REG(base)                     ((base)->CSCMR2)
#define CCM_CSCDR4_REG(base)                     ((base)->CSCDR4)
#define CCM_CTOR_REG(base)                       ((base)->CTOR)
#define CCM_CLPCR_REG(base)                      ((base)->CLPCR)
#define CCM_CISR_REG(base)                       ((base)->CISR)
#define CCM_CIMR_REG(base)                       ((base)->CIMR)
#define CCM_CCOSR_REG(base)                      ((base)->CCOSR)
#define CCM_CCGR_REG(base)                       ((base)->CGPR)
#define CCM_CCGR0_REG(base)                      ((base)->CCGR0)
#define CCM_CCGR1_REG(base)                      ((base)->CCGR1)
#define CCM_CCGR2_REG(base)                      ((base)->CCGR2)
#define CCM_CCGR3_REG(base)                      ((base)->CCGR3)
#define CCM_CCGR4_REG(base)                      ((base)->CCGR4)
#define CCM_CCGR5_REG(base)                      ((base)->CCGR5)
#define CCM_CCGR6_REG(base)                      ((base)->CCGR6)
#define CCM_CCGR7_REG(base)                      ((base)->CCGR7)
#define CCM_CCGR8_REG(base)                      ((base)->CCGR8)
#define CCM_CCGR9_REG(base)                      ((base)->CCGR9)
#define CCM_CCGR10_REG(base)                     ((base)->CCGR10)
#define CCM_CCGR11_REG(base)                     ((base)->CCGR11)
#define CCM_CMEOR0_REG(base)                     ((base)->CMEOR0)
#define CCM_CMEOR1_REG(base)                     ((base)->CMEOR1)
#define CCM_CMEOR2_REG(base)                     ((base)->CMEOR2)
#define CCM_CMEOR3_REG(base)                     ((base)->CMEOR3)
#define CCM_CMEOR4_REG(base)                     ((base)->CMEOR4)
#define CCM_CMEOR5_REG(base)                     ((base)->CMEOR5)
#define CCM_CPPDSR_REG(base)                     ((base)->CPPDSR)
#define CCM_CCOWR_REG(base)                      ((base)->CCOWR)
#define CCM_CCPGR0_REG(base)                     ((base)->CCPGR0)
#define CCM_CCPGR1_REG(base)                     ((base)->CCPGR1)
#define CCM_CCPGR2_REG(base)                     ((base)->CCPGR2)
#define CCM_CCPGR3_REG(base)                     ((base)->CCPGR3)

/**
 * @}
 */ /* end of group CCM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CCM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CCM_Register_Masks CCM Register Masks
 * @{
 */

/* CCR Bit Fields */
#define CCM_CCR_OSCNT_MASK                       0xFFu
#define CCM_CCR_OSCNT_SHIFT                      0
#define CCM_CCR_OSCNT(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCR_OSCNT_SHIFT))&CCM_CCR_OSCNT_MASK)
#define CCM_CCR_FXOSC_EN_MASK                    0x1000u
#define CCM_CCR_FXOSC_EN_SHIFT                   12
#define CCM_CCR_FIRC_EN_MASK                     0x10000u
#define CCM_CCR_FIRC_EN_SHIFT                    16
/* CSR Bit Fields */
#define CCM_CSR_FXOSC_RDY_MASK                   0x20u
#define CCM_CSR_FXOSC_RDY_SHIFT                  5
/* CCSR Bit Fields */
#define CCM_CCSR_SYS_CLK_SEL_MASK                0x7u
#define CCM_CCSR_SYS_CLK_SEL_SHIFT               0
#define CCM_CCSR_SYS_CLK_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<CCM_CCSR_SYS_CLK_SEL_SHIFT))&CCM_CCSR_SYS_CLK_SEL_MASK)
#define CCM_CCSR_SLOW_CLK_SEL_MASK               0x10u
#define CCM_CCSR_SLOW_CLK_SEL_SHIFT              4
#define CCM_CCSR_FAST_CLK_SEL_MASK               0x20u
#define CCM_CCSR_FAST_CLK_SEL_SHIFT              5
#define CCM_CCSR_DDRC_CLK_SEL_MASK               0x40u
#define CCM_CCSR_DDRC_CLK_SEL_SHIFT              6
#define CCM_CCSR_PLL1_PFD1_EN_MASK               0x100u
#define CCM_CCSR_PLL1_PFD1_EN_SHIFT              8
#define CCM_CCSR_PLL1_PFD2_EN_MASK               0x200u
#define CCM_CCSR_PLL1_PFD2_EN_SHIFT              9
#define CCM_CCSR_PLL1_PFD3_EN_MASK               0x400u
#define CCM_CCSR_PLL1_PFD3_EN_SHIFT              10
#define CCM_CCSR_PLL1_PFD4_EN_MASK               0x800u
#define CCM_CCSR_PLL1_PFD4_EN_SHIFT              11
#define CCM_CCSR_PLL2_PFD1_EN_MASK               0x1000u
#define CCM_CCSR_PLL2_PFD1_EN_SHIFT              12
#define CCM_CCSR_PLL2_PFD2_EN_MASK               0x2000u
#define CCM_CCSR_PLL2_PFD2_EN_SHIFT              13
#define CCM_CCSR_PLL2_PFD3_EN_MASK               0x4000u
#define CCM_CCSR_PLL2_PFD3_EN_SHIFT              14
#define CCM_CCSR_PLL2_PFD4_EN_MASK               0x8000u
#define CCM_CCSR_PLL2_PFD4_EN_SHIFT              15
#define CCM_CCSR_PLL1_PFD_CLK_SEL_MASK           0x70000u
#define CCM_CCSR_PLL1_PFD_CLK_SEL_SHIFT          16
#define CCM_CCSR_PLL1_PFD_CLK_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CCSR_PLL1_PFD_CLK_SEL_SHIFT))&CCM_CCSR_PLL1_PFD_CLK_SEL_MASK)
#define CCM_CCSR_PLL2_PFD_CLK_SEL_MASK           0x380000u
#define CCM_CCSR_PLL2_PFD_CLK_SEL_SHIFT          19
#define CCM_CCSR_PLL2_PFD_CLK_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CCSR_PLL2_PFD_CLK_SEL_SHIFT))&CCM_CCSR_PLL2_PFD_CLK_SEL_MASK)
#define CCM_CCSR_DAP_EN_MASK                     0x1000000u
#define CCM_CCSR_DAP_EN_SHIFT                    24
#define CCM_CCSR_PLL3_PFD1_EN_MASK               0x10000000u
#define CCM_CCSR_PLL3_PFD1_EN_SHIFT              28
#define CCM_CCSR_PLL3_PFD2_EN_MASK               0x20000000u
#define CCM_CCSR_PLL3_PFD2_EN_SHIFT              29
#define CCM_CCSR_PLL3_PFD3_EN_MASK               0x40000000u
#define CCM_CCSR_PLL3_PFD3_EN_SHIFT              30
#define CCM_CCSR_PLL3_PFD4_EN_MASK               0x80000000u
#define CCM_CCSR_PLL3_PFD4_EN_SHIFT              31
/* CACRR Bit Fields */
#define CCM_CACRR_ARM_CLK_DIV_MASK               0x7u
#define CCM_CACRR_ARM_CLK_DIV_SHIFT              0
#define CCM_CACRR_ARM_CLK_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_ARM_CLK_DIV_SHIFT))&CCM_CACRR_ARM_CLK_DIV_MASK)
#define CCM_CACRR_BUS_CLK_DIV_MASK               0x38u
#define CCM_CACRR_BUS_CLK_DIV_SHIFT              3
#define CCM_CACRR_BUS_CLK_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_BUS_CLK_DIV_SHIFT))&CCM_CACRR_BUS_CLK_DIV_MASK)
#define CCM_CACRR_PLL4_CLK_DIV_MASK              0x1C0u
#define CCM_CACRR_PLL4_CLK_DIV_SHIFT             6
#define CCM_CACRR_PLL4_CLK_DIV(x)                (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_PLL4_CLK_DIV_SHIFT))&CCM_CACRR_PLL4_CLK_DIV_MASK)
#define CCM_CACRR_IPG_CLK_DIV_MASK               0x1800u
#define CCM_CACRR_IPG_CLK_DIV_SHIFT              11
#define CCM_CACRR_IPG_CLK_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_IPG_CLK_DIV_SHIFT))&CCM_CACRR_IPG_CLK_DIV_MASK)
#define CCM_CACRR_PLL1_PFD_CLK_DIV_MASK          0x30000u
#define CCM_CACRR_PLL1_PFD_CLK_DIV_SHIFT         16
#define CCM_CACRR_PLL1_PFD_CLK_DIV(x)            (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_PLL1_PFD_CLK_DIV_SHIFT))&CCM_CACRR_PLL1_PFD_CLK_DIV_MASK)
#define CCM_CACRR_PLL3_CLK_DIV_MASK              0x100000u
#define CCM_CACRR_PLL3_CLK_DIV_SHIFT             20
#define CCM_CACRR_PLL6_CLK_DIV_MASK              0x200000u
#define CCM_CACRR_PLL6_CLK_DIV_SHIFT             21
#define CCM_CACRR_FLEX_CLK_DIV_MASK              0x1C00000u
#define CCM_CACRR_FLEX_CLK_DIV_SHIFT             22
#define CCM_CACRR_FLEX_CLK_DIV(x)                (((uint32_t)(((uint32_t)(x))<<CCM_CACRR_FLEX_CLK_DIV_SHIFT))&CCM_CACRR_FLEX_CLK_DIV_MASK)
/* CSCMR1 Bit Fields */
#define CCM_CSCMR1_SAI0_CLK_SEL_MASK             0x3u
#define CCM_CSCMR1_SAI0_CLK_SEL_SHIFT            0
#define CCM_CSCMR1_SAI0_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_SAI0_CLK_SEL_SHIFT))&CCM_CSCMR1_SAI0_CLK_SEL_MASK)
#define CCM_CSCMR1_SAI1_CLK_SEL_MASK             0xCu
#define CCM_CSCMR1_SAI1_CLK_SEL_SHIFT            2
#define CCM_CSCMR1_SAI1_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_SAI1_CLK_SEL_SHIFT))&CCM_CSCMR1_SAI1_CLK_SEL_MASK)
#define CCM_CSCMR1_SAI2_CLK_SEL_MASK             0x30u
#define CCM_CSCMR1_SAI2_CLK_SEL_SHIFT            4
#define CCM_CSCMR1_SAI2_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_SAI2_CLK_SEL_SHIFT))&CCM_CSCMR1_SAI2_CLK_SEL_MASK)
#define CCM_CSCMR1_SAI3_CLK_SEL_MASK             0xC0u
#define CCM_CSCMR1_SAI3_CLK_SEL_SHIFT            6
#define CCM_CSCMR1_SAI3_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_SAI3_CLK_SEL_SHIFT))&CCM_CSCMR1_SAI3_CLK_SEL_MASK)
#define CCM_CSCMR1_VADC_CLK_SEL_MASK             0x300u
#define CCM_CSCMR1_VADC_CLK_SEL_SHIFT            8
#define CCM_CSCMR1_VADC_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_VADC_CLK_SEL_SHIFT))&CCM_CSCMR1_VADC_CLK_SEL_MASK)
#define CCM_CSCMR1_SPDIF_CLK_SEL_MASK            0xC00u
#define CCM_CSCMR1_SPDIF_CLK_SEL_SHIFT           10
#define CCM_CSCMR1_SPDIF_CLK_SEL(x)              (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_SPDIF_CLK_SEL_SHIFT))&CCM_CSCMR1_SPDIF_CLK_SEL_MASK)
#define CCM_CSCMR1_NFC_CLK_SEL_MASK              0x3000u
#define CCM_CSCMR1_NFC_CLK_SEL_SHIFT             12
#define CCM_CSCMR1_NFC_CLK_SEL(x)                (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_NFC_CLK_SEL_SHIFT))&CCM_CSCMR1_NFC_CLK_SEL_MASK)
#define CCM_CSCMR1_GPU_CLK_SEL_MASK              0x4000u
#define CCM_CSCMR1_GPU_CLK_SEL_SHIFT             14
#define CCM_CSCMR1_ESDHC0_CLK_SEL_MASK           0x30000u
#define CCM_CSCMR1_ESDHC0_CLK_SEL_SHIFT          16
#define CCM_CSCMR1_ESDHC0_CLK_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_ESDHC0_CLK_SEL_SHIFT))&CCM_CSCMR1_ESDHC0_CLK_SEL_MASK)
#define CCM_CSCMR1_ESDHC1_CLK_SEL_MASK           0xC0000u
#define CCM_CSCMR1_ESDHC1_CLK_SEL_SHIFT          18
#define CCM_CSCMR1_ESDHC1_CLK_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_ESDHC1_CLK_SEL_SHIFT))&CCM_CSCMR1_ESDHC1_CLK_SEL_MASK)
#define CCM_CSCMR1_ESAI_CLK_SEL_MASK             0x300000u
#define CCM_CSCMR1_ESAI_CLK_SEL_SHIFT            20
#define CCM_CSCMR1_ESAI_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_ESAI_CLK_SEL_SHIFT))&CCM_CSCMR1_ESAI_CLK_SEL_MASK)
#define CCM_CSCMR1_QSPI0_CLK_SEL_MASK            0xC00000u
#define CCM_CSCMR1_QSPI0_CLK_SEL_SHIFT           22
#define CCM_CSCMR1_QSPI0_CLK_SEL(x)              (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_QSPI0_CLK_SEL_SHIFT))&CCM_CSCMR1_QSPI0_CLK_SEL_MASK)
#define CCM_CSCMR1_QSPI1_CLK_SEL_MASK            0x3000000u
#define CCM_CSCMR1_QSPI1_CLK_SEL_SHIFT           24
#define CCM_CSCMR1_QSPI1_CLK_SEL(x)              (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR1_QSPI1_CLK_SEL_SHIFT))&CCM_CSCMR1_QSPI1_CLK_SEL_MASK)
#define CCM_CSCMR1_DCU0_CLK_SEL_MASK             0x10000000u
#define CCM_CSCMR1_DCU0_CLK_SEL_SHIFT            28
#define CCM_CSCMR1_DCU1_CLK_SEL_MASK             0x20000000u
#define CCM_CSCMR1_DCU1_CLK_SEL_SHIFT            29
/* CSCDR1 Bit Fields */
#define CCM_CSCDR1_SAI0_DIV_MASK                 0xFu
#define CCM_CSCDR1_SAI0_DIV_SHIFT                0
#define CCM_CSCDR1_SAI0_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR1_SAI0_DIV_SHIFT))&CCM_CSCDR1_SAI0_DIV_MASK)
#define CCM_CSCDR1_SAI1_DIV_MASK                 0xF0u
#define CCM_CSCDR1_SAI1_DIV_SHIFT                4
#define CCM_CSCDR1_SAI1_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR1_SAI1_DIV_SHIFT))&CCM_CSCDR1_SAI1_DIV_MASK)
#define CCM_CSCDR1_SAI2_DIV_MASK                 0xF00u
#define CCM_CSCDR1_SAI2_DIV_SHIFT                8
#define CCM_CSCDR1_SAI2_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR1_SAI2_DIV_SHIFT))&CCM_CSCDR1_SAI2_DIV_MASK)
#define CCM_CSCDR1_SAI3_DIV_MASK                 0xF000u
#define CCM_CSCDR1_SAI3_DIV_SHIFT                12
#define CCM_CSCDR1_SAI3_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR1_SAI3_DIV_SHIFT))&CCM_CSCDR1_SAI3_DIV_MASK)
#define CCM_CSCDR1_SAI0_EN_MASK                  0x10000u
#define CCM_CSCDR1_SAI0_EN_SHIFT                 16
#define CCM_CSCDR1_SAI1_EN_MASK                  0x20000u
#define CCM_CSCDR1_SAI1_EN_SHIFT                 17
#define CCM_CSCDR1_SAI2_EN_MASK                  0x40000u
#define CCM_CSCDR1_SAI2_EN_SHIFT                 18
#define CCM_CSCDR1_SAI3_EN_MASK                  0x80000u
#define CCM_CSCDR1_SAI3_EN_SHIFT                 19
#define CCM_CSCDR1_VADC_DIV_MASK                 0x300000u
#define CCM_CSCDR1_VADC_DIV_SHIFT                20
#define CCM_CSCDR1_VADC_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR1_VADC_DIV_SHIFT))&CCM_CSCDR1_VADC_DIV_MASK)
#define CCM_CSCDR1_VADC_EN_MASK                  0x400000u
#define CCM_CSCDR1_VADC_EN_SHIFT                 22
#define CCM_CSCDR1_ENET_TS_EN_MASK               0x800000u
#define CCM_CSCDR1_ENET_TS_EN_SHIFT              23
#define CCM_CSCDR1_RMII_CLK_EN_MASK              0x1000000u
#define CCM_CSCDR1_RMII_CLK_EN_SHIFT             24
#define CCM_CSCDR1_FTM0_CLK_EN_MASK              0x2000000u
#define CCM_CSCDR1_FTM0_CLK_EN_SHIFT             25
#define CCM_CSCDR1_FTM1_CLK_EN_MASK              0x4000000u
#define CCM_CSCDR1_FTM1_CLK_EN_SHIFT             26
#define CCM_CSCDR1_FTM2_CLK_EN_MASK              0x8000000u
#define CCM_CSCDR1_FTM2_CLK_EN_SHIFT             27
#define CCM_CSCDR1_FTM3_CLK_EN_MASK              0x10000000u
#define CCM_CSCDR1_FTM3_CLK_EN_SHIFT             28
/* CSCDR2 Bit Fields */
#define CCM_CSCDR2_SPDIF_DIV_MASK                0xFu
#define CCM_CSCDR2_SPDIF_DIV_SHIFT               0
#define CCM_CSCDR2_SPDIF_DIV(x)                  (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR2_SPDIF_DIV_SHIFT))&CCM_CSCDR2_SPDIF_DIV_MASK)
#define CCM_CSCDR2_NFC_FRAC_DIV_MASK             0xF0u
#define CCM_CSCDR2_NFC_FRAC_DIV_SHIFT            4
#define CCM_CSCDR2_NFC_FRAC_DIV(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR2_NFC_FRAC_DIV_SHIFT))&CCM_CSCDR2_NFC_FRAC_DIV_MASK)
#define CCM_CSCDR2_SPDIF_EN_MASK                 0x100u
#define CCM_CSCDR2_SPDIF_EN_SHIFT                8
#define CCM_CSCDR2_NFC_EN_MASK                   0x200u
#define CCM_CSCDR2_NFC_EN_SHIFT                  9
#define CCM_CSCDR2_GPU_EN_MASK                   0x400u
#define CCM_CSCDR2_GPU_EN_SHIFT                  10
#define CCM_CSCDR2_CAN0_EN_MASK                  0x800u
#define CCM_CSCDR2_CAN0_EN_SHIFT                 11
#define CCM_CSCDR2_CAN1_EN_MASK                  0x1000u
#define CCM_CSCDR2_CAN1_EN_SHIFT                 12
#define CCM_CSCDR2_NFC_FRAC_DIV_EN_MASK          0x2000u
#define CCM_CSCDR2_NFC_FRAC_DIV_EN_SHIFT         13
#define CCM_CSCDR2_NFC_CLK_INV_MASK              0x4000u
#define CCM_CSCDR2_NFC_CLK_INV_SHIFT             14
#define CCM_CSCDR2_ESDHC0_DIV_MASK               0xF0000u
#define CCM_CSCDR2_ESDHC0_DIV_SHIFT              16
#define CCM_CSCDR2_ESDHC0_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR2_ESDHC0_DIV_SHIFT))&CCM_CSCDR2_ESDHC0_DIV_MASK)
#define CCM_CSCDR2_ESDHC1_DIV_MASK               0xF00000u
#define CCM_CSCDR2_ESDHC1_DIV_SHIFT              20
#define CCM_CSCDR2_ESDHC1_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR2_ESDHC1_DIV_SHIFT))&CCM_CSCDR2_ESDHC1_DIV_MASK)
#define CCM_CSCDR2_ESAI_DIV_MASK                 0xF000000u
#define CCM_CSCDR2_ESAI_DIV_SHIFT                24
#define CCM_CSCDR2_ESAI_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR2_ESAI_DIV_SHIFT))&CCM_CSCDR2_ESAI_DIV_MASK)
#define CCM_CSCDR2_ESDHC0_EN_MASK                0x10000000u
#define CCM_CSCDR2_ESDHC0_EN_SHIFT               28
#define CCM_CSCDR2_ESDHC1_EN_MASK                0x20000000u
#define CCM_CSCDR2_ESDHC1_EN_SHIFT               29
#define CCM_CSCDR2_ESAI_EN_MASK                  0x40000000u
#define CCM_CSCDR2_ESAI_EN_SHIFT                 30
/* CSCDR3 Bit Fields */
#define CCM_CSCDR3_QSPI0_X4_DIV_MASK             0x3u
#define CCM_CSCDR3_QSPI0_X4_DIV_SHIFT            0
#define CCM_CSCDR3_QSPI0_X4_DIV(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_QSPI0_X4_DIV_SHIFT))&CCM_CSCDR3_QSPI0_X4_DIV_MASK)
#define CCM_CSCDR3_QSPI0_X2_DIV_MASK             0x4u
#define CCM_CSCDR3_QSPI0_X2_DIV_SHIFT            2
#define CCM_CSCDR3_QSPI0_DIV_MASK                0x8u
#define CCM_CSCDR3_QSPI0_DIV_SHIFT               3
#define CCM_CSCDR3_QSPI0_EN_MASK                 0x10u
#define CCM_CSCDR3_QSPI0_EN_SHIFT                4
#define CCM_CSCDR3_QSPI1_X4_DIV_MASK             0x300u
#define CCM_CSCDR3_QSPI1_X4_DIV_SHIFT            8
#define CCM_CSCDR3_QSPI1_X4_DIV(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_QSPI1_X4_DIV_SHIFT))&CCM_CSCDR3_QSPI1_X4_DIV_MASK)
#define CCM_CSCDR3_QSPI1_X2_DIV_MASK             0x400u
#define CCM_CSCDR3_QSPI1_X2_DIV_SHIFT            10
#define CCM_CSCDR3_QSPI1_DIV_MASK                0x800u
#define CCM_CSCDR3_QSPI1_DIV_SHIFT               11
#define CCM_CSCDR3_QSPI1_EN_MASK                 0x1000u
#define CCM_CSCDR3_QSPI1_EN_SHIFT                12
#define CCM_CSCDR3_NFC_PRE_DIV_MASK              0xE000u
#define CCM_CSCDR3_NFC_PRE_DIV_SHIFT             13
#define CCM_CSCDR3_NFC_PRE_DIV(x)                (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_NFC_PRE_DIV_SHIFT))&CCM_CSCDR3_NFC_PRE_DIV_MASK)
#define CCM_CSCDR3_DCU0_DIV_MASK                 0x70000u
#define CCM_CSCDR3_DCU0_DIV_SHIFT                16
#define CCM_CSCDR3_DCU0_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_DCU0_DIV_SHIFT))&CCM_CSCDR3_DCU0_DIV_MASK)
#define CCM_CSCDR3_DCU0_EN_MASK                  0x80000u
#define CCM_CSCDR3_DCU0_EN_SHIFT                 19
#define CCM_CSCDR3_DCU1_DIV_MASK                 0x700000u
#define CCM_CSCDR3_DCU1_DIV_SHIFT                20
#define CCM_CSCDR3_DCU1_DIV(x)                   (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_DCU1_DIV_SHIFT))&CCM_CSCDR3_DCU1_DIV_MASK)
#define CCM_CSCDR3_DCU1_EN_MASK                  0x800000u
#define CCM_CSCDR3_DCU1_EN_SHIFT                 23
#define CCM_CSCDR3_TRACE_DIV_MASK                0x3000000u
#define CCM_CSCDR3_TRACE_DIV_SHIFT               24
#define CCM_CSCDR3_TRACE_DIV(x)                  (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR3_TRACE_DIV_SHIFT))&CCM_CSCDR3_TRACE_DIV_MASK)
#define CCM_CSCDR3_TRACE_EN_MASK                 0x4000000u
#define CCM_CSCDR3_TRACE_EN_SHIFT                26
#define CCM_CSCDR3_SWO_DIV_MASK                  0x8000000u
#define CCM_CSCDR3_SWO_DIV_SHIFT                 27
#define CCM_CSCDR3_SWO_EN_MASK                   0x10000000u
#define CCM_CSCDR3_SWO_EN_SHIFT                  28
/* CSCMR2 Bit Fields */
#define CCM_CSCMR2_ENET_TS_CLK_SEL_MASK          0x7u
#define CCM_CSCMR2_ENET_TS_CLK_SEL_SHIFT         0
#define CCM_CSCMR2_ENET_TS_CLK_SEL(x)            (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_ENET_TS_CLK_SEL_SHIFT))&CCM_CSCMR2_ENET_TS_CLK_SEL_MASK)
#define CCM_CSCMR2_RMII_CLK_SEL_MASK             0x30u
#define CCM_CSCMR2_RMII_CLK_SEL_SHIFT            4
#define CCM_CSCMR2_RMII_CLK_SEL(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_RMII_CLK_SEL_SHIFT))&CCM_CSCMR2_RMII_CLK_SEL_MASK)
#define CCM_CSCMR2_FTM0_EXT_CLK_SEL_MASK         0xC0u
#define CCM_CSCMR2_FTM0_EXT_CLK_SEL_SHIFT        6
#define CCM_CSCMR2_FTM0_EXT_CLK_SEL(x)           (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_FTM0_EXT_CLK_SEL_SHIFT))&CCM_CSCMR2_FTM0_EXT_CLK_SEL_MASK)
#define CCM_CSCMR2_FTM1_EXT_CLK_SEL_MASK         0x300u
#define CCM_CSCMR2_FTM1_EXT_CLK_SEL_SHIFT        8
#define CCM_CSCMR2_FTM1_EXT_CLK_SEL(x)           (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_FTM1_EXT_CLK_SEL_SHIFT))&CCM_CSCMR2_FTM1_EXT_CLK_SEL_MASK)
#define CCM_CSCMR2_FTM2_EXT_CLK_SEL_MASK         0xC00u
#define CCM_CSCMR2_FTM2_EXT_CLK_SEL_SHIFT        10
#define CCM_CSCMR2_FTM2_EXT_CLK_SEL(x)           (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_FTM2_EXT_CLK_SEL_SHIFT))&CCM_CSCMR2_FTM2_EXT_CLK_SEL_MASK)
#define CCM_CSCMR2_FTM3_EXT_CLK_SEL_MASK         0x3000u
#define CCM_CSCMR2_FTM3_EXT_CLK_SEL_SHIFT        12
#define CCM_CSCMR2_FTM3_EXT_CLK_SEL(x)           (((uint32_t)(((uint32_t)(x))<<CCM_CSCMR2_FTM3_EXT_CLK_SEL_SHIFT))&CCM_CSCMR2_FTM3_EXT_CLK_SEL_MASK)
#define CCM_CSCMR2_FTM0_FIX_CLK_SEL_MASK         0x4000u
#define CCM_CSCMR2_FTM0_FIX_CLK_SEL_SHIFT        14
#define CCM_CSCMR2_FTM1_FIX_CLK_SEL_MASK         0x8000u
#define CCM_CSCMR2_FTM1_FIX_CLK_SEL_SHIFT        15
#define CCM_CSCMR2_FTM2_FIX_CLK_SEL_MASK         0x10000u
#define CCM_CSCMR2_FTM2_FIX_CLK_SEL_SHIFT        16
#define CCM_CSCMR2_FTM3_FIX_CLK_SEL_MASK         0x20000u
#define CCM_CSCMR2_FTM3_FIX_CLK_SEL_SHIFT        17
#define CCM_CSCMR2_TRACE_CLK_SEL_MASK            0x40000u
#define CCM_CSCMR2_TRACE_CLK_SEL_SHIFT           18
#define CCM_CSCMR2_SWO_CLK_SEL_MASK              0x80000u
#define CCM_CSCMR2_SWO_CLK_SEL_SHIFT             19
/* CSCDR4 Bit Fields */
#define CCM_CSCDR4_SNVS_CLK_DIV_MASK             0x7Fu
#define CCM_CSCDR4_SNVS_CLK_DIV_SHIFT            0
#define CCM_CSCDR4_SNVS_CLK_DIV(x)               (((uint32_t)(((uint32_t)(x))<<CCM_CSCDR4_SNVS_CLK_DIV_SHIFT))&CCM_CSCDR4_SNVS_CLK_DIV_MASK)
/* CTOR Bit Fields */
#define CCM_CTOR_OBS_OUTPUT_0_SEL_MASK           0x1Fu
#define CCM_CTOR_OBS_OUTPUT_0_SEL_SHIFT          0
#define CCM_CTOR_OBS_OUTPUT_0_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CTOR_OBS_OUTPUT_0_SEL_SHIFT))&CCM_CTOR_OBS_OUTPUT_0_SEL_MASK)
#define CCM_CTOR_OBS_OUTPUT_1_SEL_MASK           0x3E0u
#define CCM_CTOR_OBS_OUTPUT_1_SEL_SHIFT          5
#define CCM_CTOR_OBS_OUTPUT_1_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CTOR_OBS_OUTPUT_1_SEL_SHIFT))&CCM_CTOR_OBS_OUTPUT_1_SEL_MASK)
#define CCM_CTOR_OBS_OUTPUT_2_SEL_MASK           0x7C00u
#define CCM_CTOR_OBS_OUTPUT_2_SEL_SHIFT          10
#define CCM_CTOR_OBS_OUTPUT_2_SEL(x)             (((uint32_t)(((uint32_t)(x))<<CCM_CTOR_OBS_OUTPUT_2_SEL_SHIFT))&CCM_CTOR_OBS_OUTPUT_2_SEL_MASK)
#define CCM_CTOR_OBS_EN_MASK                     0x8000u
#define CCM_CTOR_OBS_EN_SHIFT                    15
/* CLPCR Bit Fields */
#define CCM_CLPCR_ARM_CLK_LPM_MASK               0x20u
#define CCM_CLPCR_ARM_CLK_LPM_SHIFT              5
#define CCM_CLPCR_SBYOS_MASK                     0x40u
#define CCM_CLPCR_SBYOS_SHIFT                    6
#define CCM_CLPCR_DIS_REF_OSC_MASK               0x80u
#define CCM_CLPCR_DIS_REF_OSC_SHIFT              7
#define CCM_CLPCR_ANATOP_STOP_MODE_MASK          0x100u
#define CCM_CLPCR_ANATOP_STOP_MODE_SHIFT         8
#define CCM_CLPCR_FXOSC_PWRDWN_MASK              0x800u
#define CCM_CLPCR_FXOSC_PWRDWN_SHIFT             11
#define CCM_CLPCR_M_CORE0_WFI_MASK               0x400000u
#define CCM_CLPCR_M_CORE0_WFI_SHIFT              22
#define CCM_CLPCR_M_CORE1_WFI_MASK               0x800000u
#define CCM_CLPCR_M_CORE1_WFI_SHIFT              23
#define CCM_CLPCR_M_SCU_IDLE_MASK                0x1000000u
#define CCM_CLPCR_M_SCU_IDLE_SHIFT               24
#define CCM_CLPCR_M_L2CC_IDLE_MASK               0x2000000u
#define CCM_CLPCR_M_L2CC_IDLE_SHIFT              25
/* CISR Bit Fields */
#define CCM_CISR_LRF_PLL1_MASK                   0x1u
#define CCM_CISR_LRF_PLL1_SHIFT                  0
#define CCM_CISR_LRF_PLL2_MASK                   0x2u
#define CCM_CISR_LRF_PLL2_SHIFT                  1
#define CCM_CISR_LRF_PLL3_MASK                   0x4u
#define CCM_CISR_LRF_PLL3_SHIFT                  2
#define CCM_CISR_LRF_PLL4_MASK                   0x8u
#define CCM_CISR_LRF_PLL4_SHIFT                  3
#define CCM_CISR_FXOSC_RDY_MASK                  0x40u
#define CCM_CISR_FXOSC_RDY_SHIFT                 6
/* CIMR Bit Fields */
#define CCM_CIMR_M_LRF_PLL1_MASK                 0x1u
#define CCM_CIMR_M_LRF_PLL1_SHIFT                0
#define CCM_CIMR_M_LRF_PLL2_MASK                 0x2u
#define CCM_CIMR_M_LRF_PLL2_SHIFT                1
#define CCM_CIMR_M_LRF_PLL3_MASK                 0x4u
#define CCM_CIMR_M_LRF_PLL3_SHIFT                2
#define CCM_CIMR_M_LRF_PLL4_MASK                 0x8u
#define CCM_CIMR_M_LRF_PLL4_SHIFT                3
#define CCM_CIMR_M_FXOSC_READY_MASK              0x40u
#define CCM_CIMR_M_FXOSC_READY_SHIFT             6
/* CCOSR Bit Fields */
#define CCM_CCOSR_CKO1_SEL_MASK                  0x3Fu
#define CCM_CCOSR_CKO1_SEL_SHIFT                 0
#define CCM_CCOSR_CKO1_SEL(x)                    (((uint32_t)(((uint32_t)(x))<<CCM_CCOSR_CKO1_SEL_SHIFT))&CCM_CCOSR_CKO1_SEL_MASK)
#define CCM_CCOSR_CKO1_DIV_MASK                  0x3C0u
#define CCM_CCOSR_CKO1_DIV_SHIFT                 6
#define CCM_CCOSR_CKO1_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<CCM_CCOSR_CKO1_DIV_SHIFT))&CCM_CCOSR_CKO1_DIV_MASK)
#define CCM_CCOSR_CKO1_EN_MASK                   0x400u
#define CCM_CCOSR_CKO1_EN_SHIFT                  10
#define CCM_CCOSR_CKO2_SEL_MASK                  0x3F0000u
#define CCM_CCOSR_CKO2_SEL_SHIFT                 16
#define CCM_CCOSR_CKO2_SEL(x)                    (((uint32_t)(((uint32_t)(x))<<CCM_CCOSR_CKO2_SEL_SHIFT))&CCM_CCOSR_CKO2_SEL_MASK)
#define CCM_CCOSR_CKO2_DIV_MASK                  0x3C00000u
#define CCM_CCOSR_CKO2_DIV_SHIFT                 22
#define CCM_CCOSR_CKO2_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<CCM_CCOSR_CKO2_DIV_SHIFT))&CCM_CCOSR_CKO2_DIV_MASK)
#define CCM_CCOSR_CKO2_EN_MASK                   0x4000000u
#define CCM_CCOSR_CKO2_EN_SHIFT                  26
/* CGPR Bit Fields*/
#define CCM_CGPR_FS_ENABLE_MASK                  0x1u
#define CCM_CGPR_FS_ENABLE_SHIFT                 0
#define CCM_CGPR_QSPIn_ACCZ_MASK                 0x2u
#define CCM_CGPR_QSPIn_ACCZ_SHIFT                2
/* CCGR0 Bit Fields */
#define CCM_CCGR0_CG0_MASK                       0x3u
#define CCM_CCGR0_CG0_SHIFT                      0
#define CCM_CCGR0_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG0_SHIFT))&CCM_CCGR0_CG0_MASK)
#define CCM_CCGR0_CG1_MASK                       0xCu
#define CCM_CCGR0_CG1_SHIFT                      2
#define CCM_CCGR0_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG1_SHIFT))&CCM_CCGR0_CG1_MASK)
#define CCM_CCGR0_CG2_MASK                       0x30u
#define CCM_CCGR0_CG2_SHIFT                      4
#define CCM_CCGR0_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG2_SHIFT))&CCM_CCGR0_CG2_MASK)
#define CCM_CCGR0_CG3_MASK                       0xC0u
#define CCM_CCGR0_CG3_SHIFT                      6
#define CCM_CCGR0_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG3_SHIFT))&CCM_CCGR0_CG3_MASK)
#define CCM_CCGR0_CG4_MASK                       0x300u
#define CCM_CCGR0_CG4_SHIFT                      8
#define CCM_CCGR0_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG4_SHIFT))&CCM_CCGR0_CG4_MASK)
#define CCM_CCGR0_CG5_MASK                       0xC00u
#define CCM_CCGR0_CG5_SHIFT                      10
#define CCM_CCGR0_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG5_SHIFT))&CCM_CCGR0_CG5_MASK)
#define CCM_CCGR0_CG6_MASK                       0x3000u
#define CCM_CCGR0_CG6_SHIFT                      12
#define CCM_CCGR0_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG6_SHIFT))&CCM_CCGR0_CG6_MASK)
#define CCM_CCGR0_CG7_MASK                       0xC000u
#define CCM_CCGR0_CG7_SHIFT                      14
#define CCM_CCGR0_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG7_SHIFT))&CCM_CCGR0_CG7_MASK)
#define CCM_CCGR0_CG8_MASK                       0x30000u
#define CCM_CCGR0_CG8_SHIFT                      16
#define CCM_CCGR0_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG8_SHIFT))&CCM_CCGR0_CG8_MASK)
#define CCM_CCGR0_CG9_MASK                       0xC0000u
#define CCM_CCGR0_CG9_SHIFT                      18
#define CCM_CCGR0_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG9_SHIFT))&CCM_CCGR0_CG9_MASK)
#define CCM_CCGR0_CG10_MASK                      0x300000u
#define CCM_CCGR0_CG10_SHIFT                     20
#define CCM_CCGR0_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG10_SHIFT))&CCM_CCGR0_CG10_MASK)
#define CCM_CCGR0_CG11_MASK                      0xC00000u
#define CCM_CCGR0_CG11_SHIFT                     22
#define CCM_CCGR0_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG11_SHIFT))&CCM_CCGR0_CG11_MASK)
#define CCM_CCGR0_CG12_MASK                      0x3000000u
#define CCM_CCGR0_CG12_SHIFT                     24
#define CCM_CCGR0_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG12_SHIFT))&CCM_CCGR0_CG12_MASK)
#define CCM_CCGR0_CG13_MASK                      0xC000000u
#define CCM_CCGR0_CG13_SHIFT                     26
#define CCM_CCGR0_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG13_SHIFT))&CCM_CCGR0_CG13_MASK)
#define CCM_CCGR0_CG14_MASK                      0x30000000u
#define CCM_CCGR0_CG14_SHIFT                     28
#define CCM_CCGR0_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG14_SHIFT))&CCM_CCGR0_CG14_MASK)
#define CCM_CCGR0_CG15_MASK                      0xC0000000u
#define CCM_CCGR0_CG15_SHIFT                     30
#define CCM_CCGR0_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR0_CG15_SHIFT))&CCM_CCGR0_CG15_MASK)
/* CCGR1 Bit Fields */
#define CCM_CCGR1_CG0_MASK                       0x3u
#define CCM_CCGR1_CG0_SHIFT                      0
#define CCM_CCGR1_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG0_SHIFT))&CCM_CCGR1_CG0_MASK)
#define CCM_CCGR1_CG1_MASK                       0xCu
#define CCM_CCGR1_CG1_SHIFT                      2
#define CCM_CCGR1_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG1_SHIFT))&CCM_CCGR1_CG1_MASK)
#define CCM_CCGR1_CG2_MASK                       0x30u
#define CCM_CCGR1_CG2_SHIFT                      4
#define CCM_CCGR1_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG2_SHIFT))&CCM_CCGR1_CG2_MASK)
#define CCM_CCGR1_CG3_MASK                       0xC0u
#define CCM_CCGR1_CG3_SHIFT                      6
#define CCM_CCGR1_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG3_SHIFT))&CCM_CCGR1_CG3_MASK)
#define CCM_CCGR1_CG4_MASK                       0x300u
#define CCM_CCGR1_CG4_SHIFT                      8
#define CCM_CCGR1_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG4_SHIFT))&CCM_CCGR1_CG4_MASK)
#define CCM_CCGR1_CG5_MASK                       0xC00u
#define CCM_CCGR1_CG5_SHIFT                      10
#define CCM_CCGR1_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG5_SHIFT))&CCM_CCGR1_CG5_MASK)
#define CCM_CCGR1_CG6_MASK                       0x3000u
#define CCM_CCGR1_CG6_SHIFT                      12
#define CCM_CCGR1_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG6_SHIFT))&CCM_CCGR1_CG6_MASK)
#define CCM_CCGR1_CG7_MASK                       0xC000u
#define CCM_CCGR1_CG7_SHIFT                      14
#define CCM_CCGR1_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG7_SHIFT))&CCM_CCGR1_CG7_MASK)
#define CCM_CCGR1_CG8_MASK                       0x30000u
#define CCM_CCGR1_CG8_SHIFT                      16
#define CCM_CCGR1_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG8_SHIFT))&CCM_CCGR1_CG8_MASK)
#define CCM_CCGR1_CG9_MASK                       0xC0000u
#define CCM_CCGR1_CG9_SHIFT                      18
#define CCM_CCGR1_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG9_SHIFT))&CCM_CCGR1_CG9_MASK)
#define CCM_CCGR1_CG10_MASK                      0x300000u
#define CCM_CCGR1_CG10_SHIFT                     20
#define CCM_CCGR1_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG10_SHIFT))&CCM_CCGR1_CG10_MASK)
#define CCM_CCGR1_CG11_MASK                      0xC00000u
#define CCM_CCGR1_CG11_SHIFT                     22
#define CCM_CCGR1_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG11_SHIFT))&CCM_CCGR1_CG11_MASK)
#define CCM_CCGR1_CG12_MASK                      0x3000000u
#define CCM_CCGR1_CG12_SHIFT                     24
#define CCM_CCGR1_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG12_SHIFT))&CCM_CCGR1_CG12_MASK)
#define CCM_CCGR1_CG13_MASK                      0xC000000u
#define CCM_CCGR1_CG13_SHIFT                     26
#define CCM_CCGR1_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG13_SHIFT))&CCM_CCGR1_CG13_MASK)
#define CCM_CCGR1_CG14_MASK                      0x30000000u
#define CCM_CCGR1_CG14_SHIFT                     28
#define CCM_CCGR1_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG14_SHIFT))&CCM_CCGR1_CG14_MASK)
#define CCM_CCGR1_CG15_MASK                      0xC0000000u
#define CCM_CCGR1_CG15_SHIFT                     30
#define CCM_CCGR1_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR1_CG15_SHIFT))&CCM_CCGR1_CG15_MASK)
/* CCGR2 Bit Fields */
#define CCM_CCGR2_CG0_MASK                       0x3u
#define CCM_CCGR2_CG0_SHIFT                      0
#define CCM_CCGR2_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG0_SHIFT))&CCM_CCGR2_CG0_MASK)
#define CCM_CCGR2_CG1_MASK                       0xCu
#define CCM_CCGR2_CG1_SHIFT                      2
#define CCM_CCGR2_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG1_SHIFT))&CCM_CCGR2_CG1_MASK)
#define CCM_CCGR2_CG2_MASK                       0x30u
#define CCM_CCGR2_CG2_SHIFT                      4
#define CCM_CCGR2_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG2_SHIFT))&CCM_CCGR2_CG2_MASK)
#define CCM_CCGR2_CG3_MASK                       0xC0u
#define CCM_CCGR2_CG3_SHIFT                      6
#define CCM_CCGR2_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG3_SHIFT))&CCM_CCGR2_CG3_MASK)
#define CCM_CCGR2_CG4_MASK                       0x300u
#define CCM_CCGR2_CG4_SHIFT                      8
#define CCM_CCGR2_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG4_SHIFT))&CCM_CCGR2_CG4_MASK)
#define CCM_CCGR2_CG5_MASK                       0xC00u
#define CCM_CCGR2_CG5_SHIFT                      10
#define CCM_CCGR2_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG5_SHIFT))&CCM_CCGR2_CG5_MASK)
#define CCM_CCGR2_CG6_MASK                       0x3000u
#define CCM_CCGR2_CG6_SHIFT                      12
#define CCM_CCGR2_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG6_SHIFT))&CCM_CCGR2_CG6_MASK)
#define CCM_CCGR2_CG7_MASK                       0xC000u
#define CCM_CCGR2_CG7_SHIFT                      14
#define CCM_CCGR2_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG7_SHIFT))&CCM_CCGR2_CG7_MASK)
#define CCM_CCGR2_CG8_MASK                       0x30000u
#define CCM_CCGR2_CG8_SHIFT                      16
#define CCM_CCGR2_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG8_SHIFT))&CCM_CCGR2_CG8_MASK)
#define CCM_CCGR2_CG9_MASK                       0xC0000u
#define CCM_CCGR2_CG9_SHIFT                      18
#define CCM_CCGR2_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG9_SHIFT))&CCM_CCGR2_CG9_MASK)
#define CCM_CCGR2_CG10_MASK                      0x300000u
#define CCM_CCGR2_CG10_SHIFT                     20
#define CCM_CCGR2_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG10_SHIFT))&CCM_CCGR2_CG10_MASK)
#define CCM_CCGR2_CG11_MASK                      0xC00000u
#define CCM_CCGR2_CG11_SHIFT                     22
#define CCM_CCGR2_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG11_SHIFT))&CCM_CCGR2_CG11_MASK)
#define CCM_CCGR2_CG12_MASK                      0x3000000u
#define CCM_CCGR2_CG12_SHIFT                     24
#define CCM_CCGR2_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG12_SHIFT))&CCM_CCGR2_CG12_MASK)
#define CCM_CCGR2_CG13_MASK                      0xC000000u
#define CCM_CCGR2_CG13_SHIFT                     26
#define CCM_CCGR2_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG13_SHIFT))&CCM_CCGR2_CG13_MASK)
#define CCM_CCGR2_CG14_MASK                      0x30000000u
#define CCM_CCGR2_CG14_SHIFT                     28
#define CCM_CCGR2_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG14_SHIFT))&CCM_CCGR2_CG14_MASK)
#define CCM_CCGR2_CG15_MASK                      0xC0000000u
#define CCM_CCGR2_CG15_SHIFT                     30
#define CCM_CCGR2_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR2_CG15_SHIFT))&CCM_CCGR2_CG15_MASK)
/* CCGR3 Bit Fields */
#define CCM_CCGR3_CG0_MASK                       0x3u
#define CCM_CCGR3_CG0_SHIFT                      0
#define CCM_CCGR3_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG0_SHIFT))&CCM_CCGR3_CG0_MASK)
#define CCM_CCGR3_CG1_MASK                       0xCu
#define CCM_CCGR3_CG1_SHIFT                      2
#define CCM_CCGR3_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG1_SHIFT))&CCM_CCGR3_CG1_MASK)
#define CCM_CCGR3_CG2_MASK                       0x30u
#define CCM_CCGR3_CG2_SHIFT                      4
#define CCM_CCGR3_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG2_SHIFT))&CCM_CCGR3_CG2_MASK)
#define CCM_CCGR3_CG3_MASK                       0xC0u
#define CCM_CCGR3_CG3_SHIFT                      6
#define CCM_CCGR3_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG3_SHIFT))&CCM_CCGR3_CG3_MASK)
#define CCM_CCGR3_CG4_MASK                       0x300u
#define CCM_CCGR3_CG4_SHIFT                      8
#define CCM_CCGR3_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG4_SHIFT))&CCM_CCGR3_CG4_MASK)
#define CCM_CCGR3_CG5_MASK                       0xC00u
#define CCM_CCGR3_CG5_SHIFT                      10
#define CCM_CCGR3_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG5_SHIFT))&CCM_CCGR3_CG5_MASK)
#define CCM_CCGR3_CG6_MASK                       0x3000u
#define CCM_CCGR3_CG6_SHIFT                      12
#define CCM_CCGR3_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG6_SHIFT))&CCM_CCGR3_CG6_MASK)
#define CCM_CCGR3_CG7_MASK                       0xC000u
#define CCM_CCGR3_CG7_SHIFT                      14
#define CCM_CCGR3_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG7_SHIFT))&CCM_CCGR3_CG7_MASK)
#define CCM_CCGR3_CG8_MASK                       0x30000u
#define CCM_CCGR3_CG8_SHIFT                      16
#define CCM_CCGR3_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG8_SHIFT))&CCM_CCGR3_CG8_MASK)
#define CCM_CCGR3_CG9_MASK                       0xC0000u
#define CCM_CCGR3_CG9_SHIFT                      18
#define CCM_CCGR3_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG9_SHIFT))&CCM_CCGR3_CG9_MASK)
#define CCM_CCGR3_CG10_MASK                      0x300000u
#define CCM_CCGR3_CG10_SHIFT                     20
#define CCM_CCGR3_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG10_SHIFT))&CCM_CCGR3_CG10_MASK)
#define CCM_CCGR3_CG11_MASK                      0xC00000u
#define CCM_CCGR3_CG11_SHIFT                     22
#define CCM_CCGR3_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG11_SHIFT))&CCM_CCGR3_CG11_MASK)
#define CCM_CCGR3_CG12_MASK                      0x3000000u
#define CCM_CCGR3_CG12_SHIFT                     24
#define CCM_CCGR3_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG12_SHIFT))&CCM_CCGR3_CG12_MASK)
#define CCM_CCGR3_CG13_MASK                      0xC000000u
#define CCM_CCGR3_CG13_SHIFT                     26
#define CCM_CCGR3_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG13_SHIFT))&CCM_CCGR3_CG13_MASK)
#define CCM_CCGR3_CG14_MASK                      0x30000000u
#define CCM_CCGR3_CG14_SHIFT                     28
#define CCM_CCGR3_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG14_SHIFT))&CCM_CCGR3_CG14_MASK)
#define CCM_CCGR3_CG15_MASK                      0xC0000000u
#define CCM_CCGR3_CG15_SHIFT                     30
#define CCM_CCGR3_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR3_CG15_SHIFT))&CCM_CCGR3_CG15_MASK)
/* CCGR4 Bit Fields */
#define CCM_CCGR4_CG0_MASK                       0x3u
#define CCM_CCGR4_CG0_SHIFT                      0
#define CCM_CCGR4_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG0_SHIFT))&CCM_CCGR4_CG0_MASK)
#define CCM_CCGR4_CG1_MASK                       0xCu
#define CCM_CCGR4_CG1_SHIFT                      2
#define CCM_CCGR4_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG1_SHIFT))&CCM_CCGR4_CG1_MASK)
#define CCM_CCGR4_CG2_MASK                       0x30u
#define CCM_CCGR4_CG2_SHIFT                      4
#define CCM_CCGR4_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG2_SHIFT))&CCM_CCGR4_CG2_MASK)
#define CCM_CCGR4_CG3_MASK                       0xC0u
#define CCM_CCGR4_CG3_SHIFT                      6
#define CCM_CCGR4_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG3_SHIFT))&CCM_CCGR4_CG3_MASK)
#define CCM_CCGR4_CG4_MASK                       0x300u
#define CCM_CCGR4_CG4_SHIFT                      8
#define CCM_CCGR4_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG4_SHIFT))&CCM_CCGR4_CG4_MASK)
#define CCM_CCGR4_CG5_MASK                       0xC00u
#define CCM_CCGR4_CG5_SHIFT                      10
#define CCM_CCGR4_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG5_SHIFT))&CCM_CCGR4_CG5_MASK)
#define CCM_CCGR4_CG6_MASK                       0x3000u
#define CCM_CCGR4_CG6_SHIFT                      12
#define CCM_CCGR4_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG6_SHIFT))&CCM_CCGR4_CG6_MASK)
#define CCM_CCGR4_CG7_MASK                       0xC000u
#define CCM_CCGR4_CG7_SHIFT                      14
#define CCM_CCGR4_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG7_SHIFT))&CCM_CCGR4_CG7_MASK)
#define CCM_CCGR4_CG8_MASK                       0x30000u
#define CCM_CCGR4_CG8_SHIFT                      16
#define CCM_CCGR4_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG8_SHIFT))&CCM_CCGR4_CG8_MASK)
#define CCM_CCGR4_CG9_MASK                       0xC0000u
#define CCM_CCGR4_CG9_SHIFT                      18
#define CCM_CCGR4_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG9_SHIFT))&CCM_CCGR4_CG9_MASK)
#define CCM_CCGR4_CG10_MASK                      0x300000u
#define CCM_CCGR4_CG10_SHIFT                     20
#define CCM_CCGR4_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG10_SHIFT))&CCM_CCGR4_CG10_MASK)
#define CCM_CCGR4_CG11_MASK                      0xC00000u
#define CCM_CCGR4_CG11_SHIFT                     22
#define CCM_CCGR4_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG11_SHIFT))&CCM_CCGR4_CG11_MASK)
#define CCM_CCGR4_CG12_MASK                      0x3000000u
#define CCM_CCGR4_CG12_SHIFT                     24
#define CCM_CCGR4_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG12_SHIFT))&CCM_CCGR4_CG12_MASK)
#define CCM_CCGR4_CG13_MASK                      0xC000000u
#define CCM_CCGR4_CG13_SHIFT                     26
#define CCM_CCGR4_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG13_SHIFT))&CCM_CCGR4_CG13_MASK)
#define CCM_CCGR4_CG14_MASK                      0x30000000u
#define CCM_CCGR4_CG14_SHIFT                     28
#define CCM_CCGR4_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG14_SHIFT))&CCM_CCGR4_CG14_MASK)
#define CCM_CCGR4_CG15_MASK                      0xC0000000u
#define CCM_CCGR4_CG15_SHIFT                     30
#define CCM_CCGR4_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR4_CG15_SHIFT))&CCM_CCGR4_CG15_MASK)
/* CCGR5 Bit Fields */
#define CCM_CCGR5_CG0_MASK                       0x3u
#define CCM_CCGR5_CG0_SHIFT                      0
#define CCM_CCGR5_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG0_SHIFT))&CCM_CCGR5_CG0_MASK)
#define CCM_CCGR5_CG1_MASK                       0xCu
#define CCM_CCGR5_CG1_SHIFT                      2
#define CCM_CCGR5_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG1_SHIFT))&CCM_CCGR5_CG1_MASK)
#define CCM_CCGR5_CG2_MASK                       0x30u
#define CCM_CCGR5_CG2_SHIFT                      4
#define CCM_CCGR5_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG2_SHIFT))&CCM_CCGR5_CG2_MASK)
#define CCM_CCGR5_CG3_MASK                       0xC0u
#define CCM_CCGR5_CG3_SHIFT                      6
#define CCM_CCGR5_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG3_SHIFT))&CCM_CCGR5_CG3_MASK)
#define CCM_CCGR5_CG4_MASK                       0x300u
#define CCM_CCGR5_CG4_SHIFT                      8
#define CCM_CCGR5_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG4_SHIFT))&CCM_CCGR5_CG4_MASK)
#define CCM_CCGR5_CG5_MASK                       0xC00u
#define CCM_CCGR5_CG5_SHIFT                      10
#define CCM_CCGR5_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG5_SHIFT))&CCM_CCGR5_CG5_MASK)
#define CCM_CCGR5_CG6_MASK                       0x3000u
#define CCM_CCGR5_CG6_SHIFT                      12
#define CCM_CCGR5_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG6_SHIFT))&CCM_CCGR5_CG6_MASK)
#define CCM_CCGR5_CG7_MASK                       0xC000u
#define CCM_CCGR5_CG7_SHIFT                      14
#define CCM_CCGR5_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG7_SHIFT))&CCM_CCGR5_CG7_MASK)
#define CCM_CCGR5_CG8_MASK                       0x30000u
#define CCM_CCGR5_CG8_SHIFT                      16
#define CCM_CCGR5_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG8_SHIFT))&CCM_CCGR5_CG8_MASK)
#define CCM_CCGR5_CG9_MASK                       0xC0000u
#define CCM_CCGR5_CG9_SHIFT                      18
#define CCM_CCGR5_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG9_SHIFT))&CCM_CCGR5_CG9_MASK)
#define CCM_CCGR5_CG10_MASK                      0x300000u
#define CCM_CCGR5_CG10_SHIFT                     20
#define CCM_CCGR5_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG10_SHIFT))&CCM_CCGR5_CG10_MASK)
#define CCM_CCGR5_CG11_MASK                      0xC00000u
#define CCM_CCGR5_CG11_SHIFT                     22
#define CCM_CCGR5_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG11_SHIFT))&CCM_CCGR5_CG11_MASK)
#define CCM_CCGR5_CG12_MASK                      0x3000000u
#define CCM_CCGR5_CG12_SHIFT                     24
#define CCM_CCGR5_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG12_SHIFT))&CCM_CCGR5_CG12_MASK)
#define CCM_CCGR5_CG13_MASK                      0xC000000u
#define CCM_CCGR5_CG13_SHIFT                     26
#define CCM_CCGR5_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG13_SHIFT))&CCM_CCGR5_CG13_MASK)
#define CCM_CCGR5_CG14_MASK                      0x30000000u
#define CCM_CCGR5_CG14_SHIFT                     28
#define CCM_CCGR5_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG14_SHIFT))&CCM_CCGR5_CG14_MASK)
#define CCM_CCGR5_CG15_MASK                      0xC0000000u
#define CCM_CCGR5_CG15_SHIFT                     30
#define CCM_CCGR5_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR5_CG15_SHIFT))&CCM_CCGR5_CG15_MASK)
/* CCGR6 Bit Fields */
#define CCM_CCGR6_CG0_MASK                       0x3u
#define CCM_CCGR6_CG0_SHIFT                      0
#define CCM_CCGR6_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG0_SHIFT))&CCM_CCGR6_CG0_MASK)
#define CCM_CCGR6_CG1_MASK                       0xCu
#define CCM_CCGR6_CG1_SHIFT                      2
#define CCM_CCGR6_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG1_SHIFT))&CCM_CCGR6_CG1_MASK)
#define CCM_CCGR6_CG2_MASK                       0x30u
#define CCM_CCGR6_CG2_SHIFT                      4
#define CCM_CCGR6_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG2_SHIFT))&CCM_CCGR6_CG2_MASK)
#define CCM_CCGR6_CG3_MASK                       0xC0u
#define CCM_CCGR6_CG3_SHIFT                      6
#define CCM_CCGR6_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG3_SHIFT))&CCM_CCGR6_CG3_MASK)
#define CCM_CCGR6_CG4_MASK                       0x300u
#define CCM_CCGR6_CG4_SHIFT                      8
#define CCM_CCGR6_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG4_SHIFT))&CCM_CCGR6_CG4_MASK)
#define CCM_CCGR6_CG5_MASK                       0xC00u
#define CCM_CCGR6_CG5_SHIFT                      10
#define CCM_CCGR6_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG5_SHIFT))&CCM_CCGR6_CG5_MASK)
#define CCM_CCGR6_CG6_MASK                       0x3000u
#define CCM_CCGR6_CG6_SHIFT                      12
#define CCM_CCGR6_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG6_SHIFT))&CCM_CCGR6_CG6_MASK)
#define CCM_CCGR6_CG7_MASK                       0xC000u
#define CCM_CCGR6_CG7_SHIFT                      14
#define CCM_CCGR6_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG7_SHIFT))&CCM_CCGR6_CG7_MASK)
#define CCM_CCGR6_CG8_MASK                       0x30000u
#define CCM_CCGR6_CG8_SHIFT                      16
#define CCM_CCGR6_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG8_SHIFT))&CCM_CCGR6_CG8_MASK)
#define CCM_CCGR6_CG9_MASK                       0xC0000u
#define CCM_CCGR6_CG9_SHIFT                      18
#define CCM_CCGR6_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG9_SHIFT))&CCM_CCGR6_CG9_MASK)
#define CCM_CCGR6_CG10_MASK                      0x300000u
#define CCM_CCGR6_CG10_SHIFT                     20
#define CCM_CCGR6_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG10_SHIFT))&CCM_CCGR6_CG10_MASK)
#define CCM_CCGR6_CG11_MASK                      0xC00000u
#define CCM_CCGR6_CG11_SHIFT                     22
#define CCM_CCGR6_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG11_SHIFT))&CCM_CCGR6_CG11_MASK)
#define CCM_CCGR6_CG12_MASK                      0x3000000u
#define CCM_CCGR6_CG12_SHIFT                     24
#define CCM_CCGR6_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG12_SHIFT))&CCM_CCGR6_CG12_MASK)
#define CCM_CCGR6_CG13_MASK                      0xC000000u
#define CCM_CCGR6_CG13_SHIFT                     26
#define CCM_CCGR6_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG13_SHIFT))&CCM_CCGR6_CG13_MASK)
#define CCM_CCGR6_CG14_MASK                      0x30000000u
#define CCM_CCGR6_CG14_SHIFT                     28
#define CCM_CCGR6_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG14_SHIFT))&CCM_CCGR6_CG14_MASK)
#define CCM_CCGR6_CG15_MASK                      0xC0000000u
#define CCM_CCGR6_CG15_SHIFT                     30
#define CCM_CCGR6_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR6_CG15_SHIFT))&CCM_CCGR6_CG15_MASK)
/* CCGR7 Bit Fields */
#define CCM_CCGR7_CG0_MASK                       0x3u
#define CCM_CCGR7_CG0_SHIFT                      0
#define CCM_CCGR7_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG0_SHIFT))&CCM_CCGR7_CG0_MASK)
#define CCM_CCGR7_CG1_MASK                       0xCu
#define CCM_CCGR7_CG1_SHIFT                      2
#define CCM_CCGR7_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG1_SHIFT))&CCM_CCGR7_CG1_MASK)
#define CCM_CCGR7_CG2_MASK                       0x30u
#define CCM_CCGR7_CG2_SHIFT                      4
#define CCM_CCGR7_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG2_SHIFT))&CCM_CCGR7_CG2_MASK)
#define CCM_CCGR7_CG3_MASK                       0xC0u
#define CCM_CCGR7_CG3_SHIFT                      6
#define CCM_CCGR7_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG3_SHIFT))&CCM_CCGR7_CG3_MASK)
#define CCM_CCGR7_CG4_MASK                       0x300u
#define CCM_CCGR7_CG4_SHIFT                      8
#define CCM_CCGR7_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG4_SHIFT))&CCM_CCGR7_CG4_MASK)
#define CCM_CCGR7_CG5_MASK                       0xC00u
#define CCM_CCGR7_CG5_SHIFT                      10
#define CCM_CCGR7_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG5_SHIFT))&CCM_CCGR7_CG5_MASK)
#define CCM_CCGR7_CG6_MASK                       0x3000u
#define CCM_CCGR7_CG6_SHIFT                      12
#define CCM_CCGR7_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG6_SHIFT))&CCM_CCGR7_CG6_MASK)
#define CCM_CCGR7_CG7_MASK                       0xC000u
#define CCM_CCGR7_CG7_SHIFT                      14
#define CCM_CCGR7_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG7_SHIFT))&CCM_CCGR7_CG7_MASK)
#define CCM_CCGR7_CG8_MASK                       0x30000u
#define CCM_CCGR7_CG8_SHIFT                      16
#define CCM_CCGR7_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG8_SHIFT))&CCM_CCGR7_CG8_MASK)
#define CCM_CCGR7_CG9_MASK                       0xC0000u
#define CCM_CCGR7_CG9_SHIFT                      18
#define CCM_CCGR7_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG9_SHIFT))&CCM_CCGR7_CG9_MASK)
#define CCM_CCGR7_CG10_MASK                      0x300000u
#define CCM_CCGR7_CG10_SHIFT                     20
#define CCM_CCGR7_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG10_SHIFT))&CCM_CCGR7_CG10_MASK)
#define CCM_CCGR7_CG11_MASK                      0xC00000u
#define CCM_CCGR7_CG11_SHIFT                     22
#define CCM_CCGR7_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG11_SHIFT))&CCM_CCGR7_CG11_MASK)
#define CCM_CCGR7_CG12_MASK                      0x3000000u
#define CCM_CCGR7_CG12_SHIFT                     24
#define CCM_CCGR7_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG12_SHIFT))&CCM_CCGR7_CG12_MASK)
#define CCM_CCGR7_CG13_MASK                      0xC000000u
#define CCM_CCGR7_CG13_SHIFT                     26
#define CCM_CCGR7_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG13_SHIFT))&CCM_CCGR7_CG13_MASK)
#define CCM_CCGR7_CG14_MASK                      0x30000000u
#define CCM_CCGR7_CG14_SHIFT                     28
#define CCM_CCGR7_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG14_SHIFT))&CCM_CCGR7_CG14_MASK)
#define CCM_CCGR7_CG15_MASK                      0xC0000000u
#define CCM_CCGR7_CG15_SHIFT                     30
#define CCM_CCGR7_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR7_CG15_SHIFT))&CCM_CCGR7_CG15_MASK)
/* CCGR8 Bit Fields */
#define CCM_CCGR8_CG0_MASK                       0x3u
#define CCM_CCGR8_CG0_SHIFT                      0
#define CCM_CCGR8_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG0_SHIFT))&CCM_CCGR8_CG0_MASK)
#define CCM_CCGR8_CG1_MASK                       0xCu
#define CCM_CCGR8_CG1_SHIFT                      2
#define CCM_CCGR8_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG1_SHIFT))&CCM_CCGR8_CG1_MASK)
#define CCM_CCGR8_CG2_MASK                       0x30u
#define CCM_CCGR8_CG2_SHIFT                      4
#define CCM_CCGR8_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG2_SHIFT))&CCM_CCGR8_CG2_MASK)
#define CCM_CCGR8_CG3_MASK                       0xC0u
#define CCM_CCGR8_CG3_SHIFT                      6
#define CCM_CCGR8_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG3_SHIFT))&CCM_CCGR8_CG3_MASK)
#define CCM_CCGR8_CG4_MASK                       0x300u
#define CCM_CCGR8_CG4_SHIFT                      8
#define CCM_CCGR8_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG4_SHIFT))&CCM_CCGR8_CG4_MASK)
#define CCM_CCGR8_CG5_MASK                       0xC00u
#define CCM_CCGR8_CG5_SHIFT                      10
#define CCM_CCGR8_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG5_SHIFT))&CCM_CCGR8_CG5_MASK)
#define CCM_CCGR8_CG6_MASK                       0x3000u
#define CCM_CCGR8_CG6_SHIFT                      12
#define CCM_CCGR8_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG6_SHIFT))&CCM_CCGR8_CG6_MASK)
#define CCM_CCGR8_CG7_MASK                       0xC000u
#define CCM_CCGR8_CG7_SHIFT                      14
#define CCM_CCGR8_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG7_SHIFT))&CCM_CCGR8_CG7_MASK)
#define CCM_CCGR8_CG8_MASK                       0x30000u
#define CCM_CCGR8_CG8_SHIFT                      16
#define CCM_CCGR8_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG8_SHIFT))&CCM_CCGR8_CG8_MASK)
#define CCM_CCGR8_CG9_MASK                       0xC0000u
#define CCM_CCGR8_CG9_SHIFT                      18
#define CCM_CCGR8_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG9_SHIFT))&CCM_CCGR8_CG9_MASK)
#define CCM_CCGR8_CG10_MASK                      0x300000u
#define CCM_CCGR8_CG10_SHIFT                     20
#define CCM_CCGR8_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG10_SHIFT))&CCM_CCGR8_CG10_MASK)
#define CCM_CCGR8_CG11_MASK                      0xC00000u
#define CCM_CCGR8_CG11_SHIFT                     22
#define CCM_CCGR8_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG11_SHIFT))&CCM_CCGR8_CG11_MASK)
#define CCM_CCGR8_CG12_MASK                      0x3000000u
#define CCM_CCGR8_CG12_SHIFT                     24
#define CCM_CCGR8_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG12_SHIFT))&CCM_CCGR8_CG12_MASK)
#define CCM_CCGR8_CG13_MASK                      0xC000000u
#define CCM_CCGR8_CG13_SHIFT                     26
#define CCM_CCGR8_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG13_SHIFT))&CCM_CCGR8_CG13_MASK)
#define CCM_CCGR8_CG14_MASK                      0x30000000u
#define CCM_CCGR8_CG14_SHIFT                     28
#define CCM_CCGR8_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG14_SHIFT))&CCM_CCGR8_CG14_MASK)
#define CCM_CCGR8_CG15_MASK                      0xC0000000u
#define CCM_CCGR8_CG15_SHIFT                     30
#define CCM_CCGR8_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR8_CG15_SHIFT))&CCM_CCGR8_CG15_MASK)
/* CCGR9 Bit Fields */
#define CCM_CCGR9_CG0_MASK                       0x3u
#define CCM_CCGR9_CG0_SHIFT                      0
#define CCM_CCGR9_CG0(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG0_SHIFT))&CCM_CCGR9_CG0_MASK)
#define CCM_CCGR9_CG1_MASK                       0xCu
#define CCM_CCGR9_CG1_SHIFT                      2
#define CCM_CCGR9_CG1(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG1_SHIFT))&CCM_CCGR9_CG1_MASK)
#define CCM_CCGR9_CG2_MASK                       0x30u
#define CCM_CCGR9_CG2_SHIFT                      4
#define CCM_CCGR9_CG2(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG2_SHIFT))&CCM_CCGR9_CG2_MASK)
#define CCM_CCGR9_CG3_MASK                       0xC0u
#define CCM_CCGR9_CG3_SHIFT                      6
#define CCM_CCGR9_CG3(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG3_SHIFT))&CCM_CCGR9_CG3_MASK)
#define CCM_CCGR9_CG4_MASK                       0x300u
#define CCM_CCGR9_CG4_SHIFT                      8
#define CCM_CCGR9_CG4(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG4_SHIFT))&CCM_CCGR9_CG4_MASK)
#define CCM_CCGR9_CG5_MASK                       0xC00u
#define CCM_CCGR9_CG5_SHIFT                      10
#define CCM_CCGR9_CG5(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG5_SHIFT))&CCM_CCGR9_CG5_MASK)
#define CCM_CCGR9_CG6_MASK                       0x3000u
#define CCM_CCGR9_CG6_SHIFT                      12
#define CCM_CCGR9_CG6(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG6_SHIFT))&CCM_CCGR9_CG6_MASK)
#define CCM_CCGR9_CG7_MASK                       0xC000u
#define CCM_CCGR9_CG7_SHIFT                      14
#define CCM_CCGR9_CG7(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG7_SHIFT))&CCM_CCGR9_CG7_MASK)
#define CCM_CCGR9_CG8_MASK                       0x30000u
#define CCM_CCGR9_CG8_SHIFT                      16
#define CCM_CCGR9_CG8(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG8_SHIFT))&CCM_CCGR9_CG8_MASK)
#define CCM_CCGR9_CG9_MASK                       0xC0000u
#define CCM_CCGR9_CG9_SHIFT                      18
#define CCM_CCGR9_CG9(x)                         (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG9_SHIFT))&CCM_CCGR9_CG9_MASK)
#define CCM_CCGR9_CG10_MASK                      0x300000u
#define CCM_CCGR9_CG10_SHIFT                     20
#define CCM_CCGR9_CG10(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG10_SHIFT))&CCM_CCGR9_CG10_MASK)
#define CCM_CCGR9_CG11_MASK                      0xC00000u
#define CCM_CCGR9_CG11_SHIFT                     22
#define CCM_CCGR9_CG11(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG11_SHIFT))&CCM_CCGR9_CG11_MASK)
#define CCM_CCGR9_CG12_MASK                      0x3000000u
#define CCM_CCGR9_CG12_SHIFT                     24
#define CCM_CCGR9_CG12(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG12_SHIFT))&CCM_CCGR9_CG12_MASK)
#define CCM_CCGR9_CG13_MASK                      0xC000000u
#define CCM_CCGR9_CG13_SHIFT                     26
#define CCM_CCGR9_CG13(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG13_SHIFT))&CCM_CCGR9_CG13_MASK)
#define CCM_CCGR9_CG14_MASK                      0x30000000u
#define CCM_CCGR9_CG14_SHIFT                     28
#define CCM_CCGR9_CG14(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG14_SHIFT))&CCM_CCGR9_CG14_MASK)
#define CCM_CCGR9_CG15_MASK                      0xC0000000u
#define CCM_CCGR9_CG15_SHIFT                     30
#define CCM_CCGR9_CG15(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR9_CG15_SHIFT))&CCM_CCGR9_CG15_MASK)
/* CCGR10 Bit Fields */
#define CCM_CCGR10_CG0_MASK                      0x3u
#define CCM_CCGR10_CG0_SHIFT                     0
#define CCM_CCGR10_CG0(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG0_SHIFT))&CCM_CCGR10_CG0_MASK)
#define CCM_CCGR10_CG1_MASK                      0xCu
#define CCM_CCGR10_CG1_SHIFT                     2
#define CCM_CCGR10_CG1(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG1_SHIFT))&CCM_CCGR10_CG1_MASK)
#define CCM_CCGR10_CG2_MASK                      0x30u
#define CCM_CCGR10_CG2_SHIFT                     4
#define CCM_CCGR10_CG2(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG2_SHIFT))&CCM_CCGR10_CG2_MASK)
#define CCM_CCGR10_CG3_MASK                      0xC0u
#define CCM_CCGR10_CG3_SHIFT                     6
#define CCM_CCGR10_CG3(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG3_SHIFT))&CCM_CCGR10_CG3_MASK)
#define CCM_CCGR10_CG4_MASK                      0x300u
#define CCM_CCGR10_CG4_SHIFT                     8
#define CCM_CCGR10_CG4(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG4_SHIFT))&CCM_CCGR10_CG4_MASK)
#define CCM_CCGR10_CG5_MASK                      0xC00u
#define CCM_CCGR10_CG5_SHIFT                     10
#define CCM_CCGR10_CG5(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG5_SHIFT))&CCM_CCGR10_CG5_MASK)
#define CCM_CCGR10_CG6_MASK                      0x3000u
#define CCM_CCGR10_CG6_SHIFT                     12
#define CCM_CCGR10_CG6(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG6_SHIFT))&CCM_CCGR10_CG6_MASK)
#define CCM_CCGR10_CG7_MASK                      0xC000u
#define CCM_CCGR10_CG7_SHIFT                     14
#define CCM_CCGR10_CG7(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG7_SHIFT))&CCM_CCGR10_CG7_MASK)
#define CCM_CCGR10_CG8_MASK                      0x30000u
#define CCM_CCGR10_CG8_SHIFT                     16
#define CCM_CCGR10_CG8(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG8_SHIFT))&CCM_CCGR10_CG8_MASK)
#define CCM_CCGR10_CG9_MASK                      0xC0000u
#define CCM_CCGR10_CG9_SHIFT                     18
#define CCM_CCGR10_CG9(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG9_SHIFT))&CCM_CCGR10_CG9_MASK)
#define CCM_CCGR10_CG10_MASK                     0x300000u
#define CCM_CCGR10_CG10_SHIFT                    20
#define CCM_CCGR10_CG10(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG10_SHIFT))&CCM_CCGR10_CG10_MASK)
#define CCM_CCGR10_CG11_MASK                     0xC00000u
#define CCM_CCGR10_CG11_SHIFT                    22
#define CCM_CCGR10_CG11(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG11_SHIFT))&CCM_CCGR10_CG11_MASK)
#define CCM_CCGR10_CG12_MASK                     0x3000000u
#define CCM_CCGR10_CG12_SHIFT                    24
#define CCM_CCGR10_CG12(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG12_SHIFT))&CCM_CCGR10_CG12_MASK)
#define CCM_CCGR10_CG13_MASK                     0xC000000u
#define CCM_CCGR10_CG13_SHIFT                    26
#define CCM_CCGR10_CG13(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG13_SHIFT))&CCM_CCGR10_CG13_MASK)
#define CCM_CCGR10_CG14_MASK                     0x30000000u
#define CCM_CCGR10_CG14_SHIFT                    28
#define CCM_CCGR10_CG14(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG14_SHIFT))&CCM_CCGR10_CG14_MASK)
#define CCM_CCGR10_CG15_MASK                     0xC0000000u
#define CCM_CCGR10_CG15_SHIFT                    30
#define CCM_CCGR10_CG15(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR10_CG15_SHIFT))&CCM_CCGR10_CG15_MASK)
/* CCGR11 Bit Fields */
#define CCM_CCGR11_CG0_MASK                      0x3u
#define CCM_CCGR11_CG0_SHIFT                     0
#define CCM_CCGR11_CG0(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG0_SHIFT))&CCM_CCGR11_CG0_MASK)
#define CCM_CCGR11_CG1_MASK                      0xCu
#define CCM_CCGR11_CG1_SHIFT                     2
#define CCM_CCGR11_CG1(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG1_SHIFT))&CCM_CCGR11_CG1_MASK)
#define CCM_CCGR11_CG2_MASK                      0x30u
#define CCM_CCGR11_CG2_SHIFT                     4
#define CCM_CCGR11_CG2(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG2_SHIFT))&CCM_CCGR11_CG2_MASK)
#define CCM_CCGR11_CG3_MASK                      0xC0u
#define CCM_CCGR11_CG3_SHIFT                     6
#define CCM_CCGR11_CG3(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG3_SHIFT))&CCM_CCGR11_CG3_MASK)
#define CCM_CCGR11_CG4_MASK                      0x300u
#define CCM_CCGR11_CG4_SHIFT                     8
#define CCM_CCGR11_CG4(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG4_SHIFT))&CCM_CCGR11_CG4_MASK)
#define CCM_CCGR11_CG5_MASK                      0xC00u
#define CCM_CCGR11_CG5_SHIFT                     10
#define CCM_CCGR11_CG5(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG5_SHIFT))&CCM_CCGR11_CG5_MASK)
#define CCM_CCGR11_CG6_MASK                      0x3000u
#define CCM_CCGR11_CG6_SHIFT                     12
#define CCM_CCGR11_CG6(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG6_SHIFT))&CCM_CCGR11_CG6_MASK)
#define CCM_CCGR11_CG7_MASK                      0xC000u
#define CCM_CCGR11_CG7_SHIFT                     14
#define CCM_CCGR11_CG7(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG7_SHIFT))&CCM_CCGR11_CG7_MASK)
#define CCM_CCGR11_CG8_MASK                      0x30000u
#define CCM_CCGR11_CG8_SHIFT                     16
#define CCM_CCGR11_CG8(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG8_SHIFT))&CCM_CCGR11_CG8_MASK)
#define CCM_CCGR11_CG9_MASK                      0xC0000u
#define CCM_CCGR11_CG9_SHIFT                     18
#define CCM_CCGR11_CG9(x)                        (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG9_SHIFT))&CCM_CCGR11_CG9_MASK)
#define CCM_CCGR11_CG10_MASK                     0x300000u
#define CCM_CCGR11_CG10_SHIFT                    20
#define CCM_CCGR11_CG10(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG10_SHIFT))&CCM_CCGR11_CG10_MASK)
#define CCM_CCGR11_CG11_MASK                     0xC00000u
#define CCM_CCGR11_CG11_SHIFT                    22
#define CCM_CCGR11_CG11(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG11_SHIFT))&CCM_CCGR11_CG11_MASK)
#define CCM_CCGR11_CG12_MASK                     0x3000000u
#define CCM_CCGR11_CG12_SHIFT                    24
#define CCM_CCGR11_CG12(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG12_SHIFT))&CCM_CCGR11_CG12_MASK)
#define CCM_CCGR11_CG13_MASK                     0xC000000u
#define CCM_CCGR11_CG13_SHIFT                    26
#define CCM_CCGR11_CG13(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG13_SHIFT))&CCM_CCGR11_CG13_MASK)
#define CCM_CCGR11_CG14_MASK                     0x30000000u
#define CCM_CCGR11_CG14_SHIFT                    28
#define CCM_CCGR11_CG14(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG14_SHIFT))&CCM_CCGR11_CG14_MASK)
#define CCM_CCGR11_CG15_MASK                     0xC0000000u
#define CCM_CCGR11_CG15_SHIFT                    30
#define CCM_CCGR11_CG15(x)                       (((uint32_t)(((uint32_t)(x))<<CCM_CCGR11_CG15_SHIFT))&CCM_CCGR11_CG15_MASK)
/* CMEOR0 Bit Fields */
#define CCM_CMEOR0_MO0_MASK                      0x1u
#define CCM_CMEOR0_MO0_SHIFT                     0
#define CCM_CMEOR0_MO1_MASK                      0x2u
#define CCM_CMEOR0_MO1_SHIFT                     1
#define CCM_CMEOR0_MO2_MASK                      0x4u
#define CCM_CMEOR0_MO2_SHIFT                     2
#define CCM_CMEOR0_MO3_MASK                      0x8u
#define CCM_CMEOR0_MO3_SHIFT                     3
#define CCM_CMEOR0_MO4_MASK                      0x10u
#define CCM_CMEOR0_MO4_SHIFT                     4
#define CCM_CMEOR0_MO5_MASK                      0x20u
#define CCM_CMEOR0_MO5_SHIFT                     5
#define CCM_CMEOR0_MO6_MASK                      0x40u
#define CCM_CMEOR0_MO6_SHIFT                     6
#define CCM_CMEOR0_MO7_MASK                      0x80u
#define CCM_CMEOR0_MO7_SHIFT                     7
#define CCM_CMEOR0_MO8_MASK                      0x100u
#define CCM_CMEOR0_MO8_SHIFT                     8
#define CCM_CMEOR0_MO9_MASK                      0x200u
#define CCM_CMEOR0_MO9_SHIFT                     9
#define CCM_CMEOR0_MO10_MASK                     0x400u
#define CCM_CMEOR0_MO10_SHIFT                    10
#define CCM_CMEOR0_MO11_MASK                     0x800u
#define CCM_CMEOR0_MO11_SHIFT                    11
#define CCM_CMEOR0_MO12_MASK                     0x1000u
#define CCM_CMEOR0_MO12_SHIFT                    12
#define CCM_CMEOR0_MO13_MASK                     0x2000u
#define CCM_CMEOR0_MO13_SHIFT                    13
#define CCM_CMEOR0_MO14_MASK                     0x4000u
#define CCM_CMEOR0_MO14_SHIFT                    14
#define CCM_CMEOR0_MO15_MASK                     0x8000u
#define CCM_CMEOR0_MO15_SHIFT                    15
#define CCM_CMEOR0_MO16_MASK                     0x10000u
#define CCM_CMEOR0_MO16_SHIFT                    16
#define CCM_CMEOR0_MO17_MASK                     0x20000u
#define CCM_CMEOR0_MO17_SHIFT                    17
#define CCM_CMEOR0_MO18_MASK                     0x40000u
#define CCM_CMEOR0_MO18_SHIFT                    18
#define CCM_CMEOR0_MO19_MASK                     0x80000u
#define CCM_CMEOR0_MO19_SHIFT                    19
#define CCM_CMEOR0_MO20_MASK                     0x100000u
#define CCM_CMEOR0_MO20_SHIFT                    20
#define CCM_CMEOR0_MO21_MASK                     0x200000u
#define CCM_CMEOR0_MO21_SHIFT                    21
#define CCM_CMEOR0_MO22_MASK                     0x400000u
#define CCM_CMEOR0_MO22_SHIFT                    22
#define CCM_CMEOR0_MO23_MASK                     0x800000u
#define CCM_CMEOR0_MO23_SHIFT                    23
#define CCM_CMEOR0_MO24_MASK                     0x1000000u
#define CCM_CMEOR0_MO24_SHIFT                    24
#define CCM_CMEOR0_MO25_MASK                     0x2000000u
#define CCM_CMEOR0_MO25_SHIFT                    25
#define CCM_CMEOR0_MO26_MASK                     0x4000000u
#define CCM_CMEOR0_MO26_SHIFT                    26
#define CCM_CMEOR0_MO27_MASK                     0x8000000u
#define CCM_CMEOR0_MO27_SHIFT                    27
#define CCM_CMEOR0_MO28_MASK                     0x10000000u
#define CCM_CMEOR0_MO28_SHIFT                    28
#define CCM_CMEOR0_MO29_MASK                     0x20000000u
#define CCM_CMEOR0_MO29_SHIFT                    29
#define CCM_CMEOR0_MO30_MASK                     0x40000000u
#define CCM_CMEOR0_MO30_SHIFT                    30
#define CCM_CMEOR0_MO31_MASK                     0x80000000u
#define CCM_CMEOR0_MO31_SHIFT                    31
/* CMEOR1 Bit Fields */
#define CCM_CMEOR1_MO0_MASK                      0x1u
#define CCM_CMEOR1_MO0_SHIFT                     0
#define CCM_CMEOR1_MO1_MASK                      0x2u
#define CCM_CMEOR1_MO1_SHIFT                     1
#define CCM_CMEOR1_MO2_MASK                      0x4u
#define CCM_CMEOR1_MO2_SHIFT                     2
#define CCM_CMEOR1_MO3_MASK                      0x8u
#define CCM_CMEOR1_MO3_SHIFT                     3
#define CCM_CMEOR1_MO4_MASK                      0x10u
#define CCM_CMEOR1_MO4_SHIFT                     4
#define CCM_CMEOR1_MO5_MASK                      0x20u
#define CCM_CMEOR1_MO5_SHIFT                     5
#define CCM_CMEOR1_MO6_MASK                      0x40u
#define CCM_CMEOR1_MO6_SHIFT                     6
#define CCM_CMEOR1_MO7_MASK                      0x80u
#define CCM_CMEOR1_MO7_SHIFT                     7
#define CCM_CMEOR1_MO8_MASK                      0x100u
#define CCM_CMEOR1_MO8_SHIFT                     8
#define CCM_CMEOR1_MO9_MASK                      0x200u
#define CCM_CMEOR1_MO9_SHIFT                     9
#define CCM_CMEOR1_MO10_MASK                     0x400u
#define CCM_CMEOR1_MO10_SHIFT                    10
#define CCM_CMEOR1_MO11_MASK                     0x800u
#define CCM_CMEOR1_MO11_SHIFT                    11
#define CCM_CMEOR1_MO12_MASK                     0x1000u
#define CCM_CMEOR1_MO12_SHIFT                    12
#define CCM_CMEOR1_MO13_MASK                     0x2000u
#define CCM_CMEOR1_MO13_SHIFT                    13
#define CCM_CMEOR1_MO14_MASK                     0x4000u
#define CCM_CMEOR1_MO14_SHIFT                    14
#define CCM_CMEOR1_MO15_MASK                     0x8000u
#define CCM_CMEOR1_MO15_SHIFT                    15
#define CCM_CMEOR1_MO16_MASK                     0x10000u
#define CCM_CMEOR1_MO16_SHIFT                    16
#define CCM_CMEOR1_MO17_MASK                     0x20000u
#define CCM_CMEOR1_MO17_SHIFT                    17
#define CCM_CMEOR1_MO18_MASK                     0x40000u
#define CCM_CMEOR1_MO18_SHIFT                    18
#define CCM_CMEOR1_MO19_MASK                     0x80000u
#define CCM_CMEOR1_MO19_SHIFT                    19
#define CCM_CMEOR1_MO20_MASK                     0x100000u
#define CCM_CMEOR1_MO20_SHIFT                    20
#define CCM_CMEOR1_MO21_MASK                     0x200000u
#define CCM_CMEOR1_MO21_SHIFT                    21
#define CCM_CMEOR1_MO22_MASK                     0x400000u
#define CCM_CMEOR1_MO22_SHIFT                    22
#define CCM_CMEOR1_MO23_MASK                     0x800000u
#define CCM_CMEOR1_MO23_SHIFT                    23
#define CCM_CMEOR1_MO24_MASK                     0x1000000u
#define CCM_CMEOR1_MO24_SHIFT                    24
#define CCM_CMEOR1_MO25_MASK                     0x2000000u
#define CCM_CMEOR1_MO25_SHIFT                    25
#define CCM_CMEOR1_MO26_MASK                     0x4000000u
#define CCM_CMEOR1_MO26_SHIFT                    26
#define CCM_CMEOR1_MO27_MASK                     0x8000000u
#define CCM_CMEOR1_MO27_SHIFT                    27
#define CCM_CMEOR1_MO28_MASK                     0x10000000u
#define CCM_CMEOR1_MO28_SHIFT                    28
#define CCM_CMEOR1_MO29_MASK                     0x20000000u
#define CCM_CMEOR1_MO29_SHIFT                    29
#define CCM_CMEOR1_MO30_MASK                     0x40000000u
#define CCM_CMEOR1_MO30_SHIFT                    30
#define CCM_CMEOR1_MO31_MASK                     0x80000000u
#define CCM_CMEOR1_MO31_SHIFT                    31
/* CMEOR2 Bit Fields */
#define CCM_CMEOR2_MO0_MASK                      0x1u
#define CCM_CMEOR2_MO0_SHIFT                     0
#define CCM_CMEOR2_MO1_MASK                      0x2u
#define CCM_CMEOR2_MO1_SHIFT                     1
#define CCM_CMEOR2_MO2_MASK                      0x4u
#define CCM_CMEOR2_MO2_SHIFT                     2
#define CCM_CMEOR2_MO3_MASK                      0x8u
#define CCM_CMEOR2_MO3_SHIFT                     3
#define CCM_CMEOR2_MO4_MASK                      0x10u
#define CCM_CMEOR2_MO4_SHIFT                     4
#define CCM_CMEOR2_MO5_MASK                      0x20u
#define CCM_CMEOR2_MO5_SHIFT                     5
#define CCM_CMEOR2_MO6_MASK                      0x40u
#define CCM_CMEOR2_MO6_SHIFT                     6
#define CCM_CMEOR2_MO7_MASK                      0x80u
#define CCM_CMEOR2_MO7_SHIFT                     7
#define CCM_CMEOR2_MO8_MASK                      0x100u
#define CCM_CMEOR2_MO8_SHIFT                     8
#define CCM_CMEOR2_MO9_MASK                      0x200u
#define CCM_CMEOR2_MO9_SHIFT                     9
#define CCM_CMEOR2_MO10_MASK                     0x400u
#define CCM_CMEOR2_MO10_SHIFT                    10
#define CCM_CMEOR2_MO11_MASK                     0x800u
#define CCM_CMEOR2_MO11_SHIFT                    11
#define CCM_CMEOR2_MO12_MASK                     0x1000u
#define CCM_CMEOR2_MO12_SHIFT                    12
#define CCM_CMEOR2_MO13_MASK                     0x2000u
#define CCM_CMEOR2_MO13_SHIFT                    13
#define CCM_CMEOR2_MO14_MASK                     0x4000u
#define CCM_CMEOR2_MO14_SHIFT                    14
#define CCM_CMEOR2_MO15_MASK                     0x8000u
#define CCM_CMEOR2_MO15_SHIFT                    15
#define CCM_CMEOR2_MO16_MASK                     0x10000u
#define CCM_CMEOR2_MO16_SHIFT                    16
#define CCM_CMEOR2_MO17_MASK                     0x20000u
#define CCM_CMEOR2_MO17_SHIFT                    17
#define CCM_CMEOR2_MO18_MASK                     0x40000u
#define CCM_CMEOR2_MO18_SHIFT                    18
#define CCM_CMEOR2_MO19_MASK                     0x80000u
#define CCM_CMEOR2_MO19_SHIFT                    19
#define CCM_CMEOR2_MO20_MASK                     0x100000u
#define CCM_CMEOR2_MO20_SHIFT                    20
#define CCM_CMEOR2_MO21_MASK                     0x200000u
#define CCM_CMEOR2_MO21_SHIFT                    21
#define CCM_CMEOR2_MO22_MASK                     0x400000u
#define CCM_CMEOR2_MO22_SHIFT                    22
#define CCM_CMEOR2_MO23_MASK                     0x800000u
#define CCM_CMEOR2_MO23_SHIFT                    23
#define CCM_CMEOR2_MO24_MASK                     0x1000000u
#define CCM_CMEOR2_MO24_SHIFT                    24
#define CCM_CMEOR2_MO25_MASK                     0x2000000u
#define CCM_CMEOR2_MO25_SHIFT                    25
#define CCM_CMEOR2_MO26_MASK                     0x4000000u
#define CCM_CMEOR2_MO26_SHIFT                    26
#define CCM_CMEOR2_MO27_MASK                     0x8000000u
#define CCM_CMEOR2_MO27_SHIFT                    27
#define CCM_CMEOR2_MO28_MASK                     0x10000000u
#define CCM_CMEOR2_MO28_SHIFT                    28
#define CCM_CMEOR2_MO29_MASK                     0x20000000u
#define CCM_CMEOR2_MO29_SHIFT                    29
#define CCM_CMEOR2_MO30_MASK                     0x40000000u
#define CCM_CMEOR2_MO30_SHIFT                    30
#define CCM_CMEOR2_MO31_MASK                     0x80000000u
#define CCM_CMEOR2_MO31_SHIFT                    31
/* CMEOR3 Bit Fields */
#define CCM_CMEOR3_MO0_MASK                      0x1u
#define CCM_CMEOR3_MO0_SHIFT                     0
#define CCM_CMEOR3_MO1_MASK                      0x2u
#define CCM_CMEOR3_MO1_SHIFT                     1
#define CCM_CMEOR3_MO2_MASK                      0x4u
#define CCM_CMEOR3_MO2_SHIFT                     2
#define CCM_CMEOR3_MO3_MASK                      0x8u
#define CCM_CMEOR3_MO3_SHIFT                     3
#define CCM_CMEOR3_MO4_MASK                      0x10u
#define CCM_CMEOR3_MO4_SHIFT                     4
#define CCM_CMEOR3_MO5_MASK                      0x20u
#define CCM_CMEOR3_MO5_SHIFT                     5
#define CCM_CMEOR3_MO6_MASK                      0x40u
#define CCM_CMEOR3_MO6_SHIFT                     6
#define CCM_CMEOR3_MO7_MASK                      0x80u
#define CCM_CMEOR3_MO7_SHIFT                     7
#define CCM_CMEOR3_MO8_MASK                      0x100u
#define CCM_CMEOR3_MO8_SHIFT                     8
#define CCM_CMEOR3_MO9_MASK                      0x200u
#define CCM_CMEOR3_MO9_SHIFT                     9
#define CCM_CMEOR3_MO10_MASK                     0x400u
#define CCM_CMEOR3_MO10_SHIFT                    10
#define CCM_CMEOR3_MO11_MASK                     0x800u
#define CCM_CMEOR3_MO11_SHIFT                    11
#define CCM_CMEOR3_MO12_MASK                     0x1000u
#define CCM_CMEOR3_MO12_SHIFT                    12
#define CCM_CMEOR3_MO13_MASK                     0x2000u
#define CCM_CMEOR3_MO13_SHIFT                    13
#define CCM_CMEOR3_MO14_MASK                     0x4000u
#define CCM_CMEOR3_MO14_SHIFT                    14
#define CCM_CMEOR3_MO15_MASK                     0x8000u
#define CCM_CMEOR3_MO15_SHIFT                    15
#define CCM_CMEOR3_MO16_MASK                     0x10000u
#define CCM_CMEOR3_MO16_SHIFT                    16
#define CCM_CMEOR3_MO17_MASK                     0x20000u
#define CCM_CMEOR3_MO17_SHIFT                    17
#define CCM_CMEOR3_MO18_MASK                     0x40000u
#define CCM_CMEOR3_MO18_SHIFT                    18
#define CCM_CMEOR3_MO19_MASK                     0x80000u
#define CCM_CMEOR3_MO19_SHIFT                    19
#define CCM_CMEOR3_MO20_MASK                     0x100000u
#define CCM_CMEOR3_MO20_SHIFT                    20
#define CCM_CMEOR3_MO21_MASK                     0x200000u
#define CCM_CMEOR3_MO21_SHIFT                    21
#define CCM_CMEOR3_MO22_MASK                     0x400000u
#define CCM_CMEOR3_MO22_SHIFT                    22
#define CCM_CMEOR3_MO23_MASK                     0x800000u
#define CCM_CMEOR3_MO23_SHIFT                    23
#define CCM_CMEOR3_MO24_MASK                     0x1000000u
#define CCM_CMEOR3_MO24_SHIFT                    24
#define CCM_CMEOR3_MO25_MASK                     0x2000000u
#define CCM_CMEOR3_MO25_SHIFT                    25
#define CCM_CMEOR3_MO26_MASK                     0x4000000u
#define CCM_CMEOR3_MO26_SHIFT                    26
#define CCM_CMEOR3_MO27_MASK                     0x8000000u
#define CCM_CMEOR3_MO27_SHIFT                    27
#define CCM_CMEOR3_MO28_MASK                     0x10000000u
#define CCM_CMEOR3_MO28_SHIFT                    28
#define CCM_CMEOR3_MO29_MASK                     0x20000000u
#define CCM_CMEOR3_MO29_SHIFT                    29
#define CCM_CMEOR3_MO30_MASK                     0x40000000u
#define CCM_CMEOR3_MO30_SHIFT                    30
#define CCM_CMEOR3_MO31_MASK                     0x80000000u
#define CCM_CMEOR3_MO31_SHIFT                    31
/* CMEOR4 Bit Fields */
#define CCM_CMEOR4_MO0_MASK                      0x1u
#define CCM_CMEOR4_MO0_SHIFT                     0
#define CCM_CMEOR4_MO1_MASK                      0x2u
#define CCM_CMEOR4_MO1_SHIFT                     1
#define CCM_CMEOR4_MO2_MASK                      0x4u
#define CCM_CMEOR4_MO2_SHIFT                     2
#define CCM_CMEOR4_MO3_MASK                      0x8u
#define CCM_CMEOR4_MO3_SHIFT                     3
#define CCM_CMEOR4_MO4_MASK                      0x10u
#define CCM_CMEOR4_MO4_SHIFT                     4
#define CCM_CMEOR4_MO5_MASK                      0x20u
#define CCM_CMEOR4_MO5_SHIFT                     5
#define CCM_CMEOR4_MO6_MASK                      0x40u
#define CCM_CMEOR4_MO6_SHIFT                     6
#define CCM_CMEOR4_MO7_MASK                      0x80u
#define CCM_CMEOR4_MO7_SHIFT                     7
#define CCM_CMEOR4_MO8_MASK                      0x100u
#define CCM_CMEOR4_MO8_SHIFT                     8
#define CCM_CMEOR4_MO9_MASK                      0x200u
#define CCM_CMEOR4_MO9_SHIFT                     9
#define CCM_CMEOR4_MO10_MASK                     0x400u
#define CCM_CMEOR4_MO10_SHIFT                    10
#define CCM_CMEOR4_MO11_MASK                     0x800u
#define CCM_CMEOR4_MO11_SHIFT                    11
#define CCM_CMEOR4_MO12_MASK                     0x1000u
#define CCM_CMEOR4_MO12_SHIFT                    12
#define CCM_CMEOR4_MO13_MASK                     0x2000u
#define CCM_CMEOR4_MO13_SHIFT                    13
#define CCM_CMEOR4_MO14_MASK                     0x4000u
#define CCM_CMEOR4_MO14_SHIFT                    14
#define CCM_CMEOR4_MO15_MASK                     0x8000u
#define CCM_CMEOR4_MO15_SHIFT                    15
#define CCM_CMEOR4_MO16_MASK                     0x10000u
#define CCM_CMEOR4_MO16_SHIFT                    16
#define CCM_CMEOR4_MO17_MASK                     0x20000u
#define CCM_CMEOR4_MO17_SHIFT                    17
#define CCM_CMEOR4_MO18_MASK                     0x40000u
#define CCM_CMEOR4_MO18_SHIFT                    18
#define CCM_CMEOR4_MO19_MASK                     0x80000u
#define CCM_CMEOR4_MO19_SHIFT                    19
#define CCM_CMEOR4_MO20_MASK                     0x100000u
#define CCM_CMEOR4_MO20_SHIFT                    20
#define CCM_CMEOR4_MO21_MASK                     0x200000u
#define CCM_CMEOR4_MO21_SHIFT                    21
#define CCM_CMEOR4_MO22_MASK                     0x400000u
#define CCM_CMEOR4_MO22_SHIFT                    22
#define CCM_CMEOR4_MO23_MASK                     0x800000u
#define CCM_CMEOR4_MO23_SHIFT                    23
#define CCM_CMEOR4_MO24_MASK                     0x1000000u
#define CCM_CMEOR4_MO24_SHIFT                    24
#define CCM_CMEOR4_MO25_MASK                     0x2000000u
#define CCM_CMEOR4_MO25_SHIFT                    25
#define CCM_CMEOR4_MO26_MASK                     0x4000000u
#define CCM_CMEOR4_MO26_SHIFT                    26
#define CCM_CMEOR4_MO27_MASK                     0x8000000u
#define CCM_CMEOR4_MO27_SHIFT                    27
#define CCM_CMEOR4_MO28_MASK                     0x10000000u
#define CCM_CMEOR4_MO28_SHIFT                    28
#define CCM_CMEOR4_MO29_MASK                     0x20000000u
#define CCM_CMEOR4_MO29_SHIFT                    29
#define CCM_CMEOR4_MO30_MASK                     0x40000000u
#define CCM_CMEOR4_MO30_SHIFT                    30
#define CCM_CMEOR4_MO31_MASK                     0x80000000u
#define CCM_CMEOR4_MO31_SHIFT                    31
/* CMEOR5 Bit Fields */
#define CCM_CMEOR5_MO0_MASK                      0x1u
#define CCM_CMEOR5_MO0_SHIFT                     0
#define CCM_CMEOR5_MO1_MASK                      0x2u
#define CCM_CMEOR5_MO1_SHIFT                     1
#define CCM_CMEOR5_MO2_MASK                      0x4u
#define CCM_CMEOR5_MO2_SHIFT                     2
#define CCM_CMEOR5_MO3_MASK                      0x8u
#define CCM_CMEOR5_MO3_SHIFT                     3
#define CCM_CMEOR5_MO4_MASK                      0x10u
#define CCM_CMEOR5_MO4_SHIFT                     4
#define CCM_CMEOR5_MO5_MASK                      0x20u
#define CCM_CMEOR5_MO5_SHIFT                     5
#define CCM_CMEOR5_MO6_MASK                      0x40u
#define CCM_CMEOR5_MO6_SHIFT                     6
#define CCM_CMEOR5_MO7_MASK                      0x80u
#define CCM_CMEOR5_MO7_SHIFT                     7
#define CCM_CMEOR5_MO8_MASK                      0x100u
#define CCM_CMEOR5_MO8_SHIFT                     8
#define CCM_CMEOR5_MO9_MASK                      0x200u
#define CCM_CMEOR5_MO9_SHIFT                     9
#define CCM_CMEOR5_MO10_MASK                     0x400u
#define CCM_CMEOR5_MO10_SHIFT                    10
#define CCM_CMEOR5_MO11_MASK                     0x800u
#define CCM_CMEOR5_MO11_SHIFT                    11
#define CCM_CMEOR5_MO12_MASK                     0x1000u
#define CCM_CMEOR5_MO12_SHIFT                    12
#define CCM_CMEOR5_MO13_MASK                     0x2000u
#define CCM_CMEOR5_MO13_SHIFT                    13
#define CCM_CMEOR5_MO14_MASK                     0x4000u
#define CCM_CMEOR5_MO14_SHIFT                    14
#define CCM_CMEOR5_MO15_MASK                     0x8000u
#define CCM_CMEOR5_MO15_SHIFT                    15
#define CCM_CMEOR5_MO16_MASK                     0x10000u
#define CCM_CMEOR5_MO16_SHIFT                    16
#define CCM_CMEOR5_MO17_MASK                     0x20000u
#define CCM_CMEOR5_MO17_SHIFT                    17
#define CCM_CMEOR5_MO18_MASK                     0x40000u
#define CCM_CMEOR5_MO18_SHIFT                    18
#define CCM_CMEOR5_MO19_MASK                     0x80000u
#define CCM_CMEOR5_MO19_SHIFT                    19
#define CCM_CMEOR5_MO20_MASK                     0x100000u
#define CCM_CMEOR5_MO20_SHIFT                    20
#define CCM_CMEOR5_MO21_MASK                     0x200000u
#define CCM_CMEOR5_MO21_SHIFT                    21
#define CCM_CMEOR5_MO22_MASK                     0x400000u
#define CCM_CMEOR5_MO22_SHIFT                    22
#define CCM_CMEOR5_MO23_MASK                     0x800000u
#define CCM_CMEOR5_MO23_SHIFT                    23
#define CCM_CMEOR5_MO24_MASK                     0x1000000u
#define CCM_CMEOR5_MO24_SHIFT                    24
#define CCM_CMEOR5_MO25_MASK                     0x2000000u
#define CCM_CMEOR5_MO25_SHIFT                    25
#define CCM_CMEOR5_MO26_MASK                     0x4000000u
#define CCM_CMEOR5_MO26_SHIFT                    26
#define CCM_CMEOR5_MO27_MASK                     0x8000000u
#define CCM_CMEOR5_MO27_SHIFT                    27
#define CCM_CMEOR5_MO28_MASK                     0x10000000u
#define CCM_CMEOR5_MO28_SHIFT                    28
#define CCM_CMEOR5_MO29_MASK                     0x20000000u
#define CCM_CMEOR5_MO29_SHIFT                    29
#define CCM_CMEOR5_MO30_MASK                     0x40000000u
#define CCM_CMEOR5_MO30_SHIFT                    30
#define CCM_CMEOR5_MO31_MASK                     0x80000000u
#define CCM_CMEOR5_MO31_SHIFT                    31
/* CPPDSR Bit Fields */
#define CCM_CPPDSR_PLL1_PFD1_MASK                0x1u
#define CCM_CPPDSR_PLL1_PFD1_SHIFT               0
#define CCM_CPPDSR_PLL1_PFD2_MASK                0x2u
#define CCM_CPPDSR_PLL1_PFD2_SHIFT               1
#define CCM_CPPDSR_PLL1_PFD3_MASK                0x4u
#define CCM_CPPDSR_PLL1_PFD3_SHIFT               2
#define CCM_CPPDSR_PLL1_PFD4_MASK                0x8u
#define CCM_CPPDSR_PLL1_PFD4_SHIFT               3
#define CCM_CPPDSR_PLL2_PFD1_MASK                0x10u
#define CCM_CPPDSR_PLL2_PFD1_SHIFT               4
#define CCM_CPPDSR_PLL2_PFD2_MASK                0x20u
#define CCM_CPPDSR_PLL2_PFD2_SHIFT               5
#define CCM_CPPDSR_PLL2_PFD3_MASK                0x40u
#define CCM_CPPDSR_PLL2_PFD3_SHIFT               6
#define CCM_CPPDSR_PLL2_PFD4_MASK                0x80u
#define CCM_CPPDSR_PLL2_PFD4_SHIFT               7
#define CCM_CPPDSR_PLL3_PFD1_MASK                0x100u
#define CCM_CPPDSR_PLL3_PFD1_SHIFT               8
#define CCM_CPPDSR_PLL3_PFD2_MASK                0x200u
#define CCM_CPPDSR_PLL3_PFD2_SHIFT               9
#define CCM_CPPDSR_PLL3_PFD3_MASK                0x400u
#define CCM_CPPDSR_PLL3_PFD3_SHIFT               10
#define CCM_CPPDSR_PLL3_PFD4_MASK                0x800u
#define CCM_CPPDSR_PLL3_PFD4_SHIFT               11
/* CCOWR Bit Fields */
#define CCM_CCOWR_WAKEUP_KEY_MASK                0xFFFFu
#define CCM_CCOWR_WAKEUP_KEY_SHIFT               0
#define CCM_CCOWR_WAKEUP_KEY(x)                  (((uint32_t)(((uint32_t)(x))<<CCM_CCOWR_WAKEUP_KEY_SHIFT))&CCM_CCOWR_WAKEUP_KEY_MASK)
#define CCM_CCOWR_AUX_CORE_WKUP_MASK             0x10000u
#define CCM_CCOWR_AUX_CORE_WKUP_SHIFT            16
/* CCPGR0 Bit Fields */
#define CCM_CCPGR0_PPCG0_MASK                    0x3u
#define CCM_CCPGR0_PPCG0_SHIFT                   0
#define CCM_CCPGR0_PPCG0(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG0_SHIFT))&CCM_CCPGR0_PPCG0_MASK)
#define CCM_CCPGR0_PPCG1_MASK                    0xCu
#define CCM_CCPGR0_PPCG1_SHIFT                   2
#define CCM_CCPGR0_PPCG1(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG1_SHIFT))&CCM_CCPGR0_PPCG1_MASK)
#define CCM_CCPGR0_PPCG2_MASK                    0x30u
#define CCM_CCPGR0_PPCG2_SHIFT                   4
#define CCM_CCPGR0_PPCG2(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG2_SHIFT))&CCM_CCPGR0_PPCG2_MASK)
#define CCM_CCPGR0_PPCG3_MASK                    0xC0u
#define CCM_CCPGR0_PPCG3_SHIFT                   6
#define CCM_CCPGR0_PPCG3(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG3_SHIFT))&CCM_CCPGR0_PPCG3_MASK)
#define CCM_CCPGR0_PPCG4_MASK                    0x300u
#define CCM_CCPGR0_PPCG4_SHIFT                   8
#define CCM_CCPGR0_PPCG4(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG4_SHIFT))&CCM_CCPGR0_PPCG4_MASK)
#define CCM_CCPGR0_PPCG5_MASK                    0xC00u
#define CCM_CCPGR0_PPCG5_SHIFT                   10
#define CCM_CCPGR0_PPCG5(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG5_SHIFT))&CCM_CCPGR0_PPCG5_MASK)
#define CCM_CCPGR0_PPCG6_MASK                    0x3000u
#define CCM_CCPGR0_PPCG6_SHIFT                   12
#define CCM_CCPGR0_PPCG6(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG6_SHIFT))&CCM_CCPGR0_PPCG6_MASK)
#define CCM_CCPGR0_PPCG7_MASK                    0xC000u
#define CCM_CCPGR0_PPCG7_SHIFT                   14
#define CCM_CCPGR0_PPCG7(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG7_SHIFT))&CCM_CCPGR0_PPCG7_MASK)
#define CCM_CCPGR0_PPCG8_MASK                    0x30000u
#define CCM_CCPGR0_PPCG8_SHIFT                   16
#define CCM_CCPGR0_PPCG8(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG8_SHIFT))&CCM_CCPGR0_PPCG8_MASK)
#define CCM_CCPGR0_PPCG9_MASK                    0xC0000u
#define CCM_CCPGR0_PPCG9_SHIFT                   18
#define CCM_CCPGR0_PPCG9(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG9_SHIFT))&CCM_CCPGR0_PPCG9_MASK)
#define CCM_CCPGR0_PPCG10_MASK                   0x300000u
#define CCM_CCPGR0_PPCG10_SHIFT                  20
#define CCM_CCPGR0_PPCG10(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG10_SHIFT))&CCM_CCPGR0_PPCG10_MASK)
#define CCM_CCPGR0_PPCG11_MASK                   0xC00000u
#define CCM_CCPGR0_PPCG11_SHIFT                  22
#define CCM_CCPGR0_PPCG11(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG11_SHIFT))&CCM_CCPGR0_PPCG11_MASK)
#define CCM_CCPGR0_PPCG12_MASK                   0x3000000u
#define CCM_CCPGR0_PPCG12_SHIFT                  24
#define CCM_CCPGR0_PPCG12(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG12_SHIFT))&CCM_CCPGR0_PPCG12_MASK)
#define CCM_CCPGR0_PPCG13_MASK                   0xC000000u
#define CCM_CCPGR0_PPCG13_SHIFT                  26
#define CCM_CCPGR0_PPCG13(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG13_SHIFT))&CCM_CCPGR0_PPCG13_MASK)
#define CCM_CCPGR0_PPCG14_MASK                   0x30000000u
#define CCM_CCPGR0_PPCG14_SHIFT                  28
#define CCM_CCPGR0_PPCG14(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG14_SHIFT))&CCM_CCPGR0_PPCG14_MASK)
#define CCM_CCPGR0_PPCG15_MASK                   0xC0000000u
#define CCM_CCPGR0_PPCG15_SHIFT                  30
#define CCM_CCPGR0_PPCG15(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR0_PPCG15_SHIFT))&CCM_CCPGR0_PPCG15_MASK)
/* CCPGR1 Bit Fields */
#define CCM_CCPGR1_PPCG0_MASK                    0x3u
#define CCM_CCPGR1_PPCG0_SHIFT                   0
#define CCM_CCPGR1_PPCG0(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG0_SHIFT))&CCM_CCPGR1_PPCG0_MASK)
#define CCM_CCPGR1_PPCG1_MASK                    0xCu
#define CCM_CCPGR1_PPCG1_SHIFT                   2
#define CCM_CCPGR1_PPCG1(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG1_SHIFT))&CCM_CCPGR1_PPCG1_MASK)
#define CCM_CCPGR1_PPCG2_MASK                    0x30u
#define CCM_CCPGR1_PPCG2_SHIFT                   4
#define CCM_CCPGR1_PPCG2(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG2_SHIFT))&CCM_CCPGR1_PPCG2_MASK)
#define CCM_CCPGR1_PPCG3_MASK                    0xC0u
#define CCM_CCPGR1_PPCG3_SHIFT                   6
#define CCM_CCPGR1_PPCG3(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG3_SHIFT))&CCM_CCPGR1_PPCG3_MASK)
#define CCM_CCPGR1_PPCG4_MASK                    0x300u
#define CCM_CCPGR1_PPCG4_SHIFT                   8
#define CCM_CCPGR1_PPCG4(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG4_SHIFT))&CCM_CCPGR1_PPCG4_MASK)
#define CCM_CCPGR1_PPCG5_MASK                    0xC00u
#define CCM_CCPGR1_PPCG5_SHIFT                   10
#define CCM_CCPGR1_PPCG5(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG5_SHIFT))&CCM_CCPGR1_PPCG5_MASK)
#define CCM_CCPGR1_PPCG6_MASK                    0x3000u
#define CCM_CCPGR1_PPCG6_SHIFT                   12
#define CCM_CCPGR1_PPCG6(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG6_SHIFT))&CCM_CCPGR1_PPCG6_MASK)
#define CCM_CCPGR1_PPCG7_MASK                    0xC000u
#define CCM_CCPGR1_PPCG7_SHIFT                   14
#define CCM_CCPGR1_PPCG7(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG7_SHIFT))&CCM_CCPGR1_PPCG7_MASK)
#define CCM_CCPGR1_PPCG8_MASK                    0x30000u
#define CCM_CCPGR1_PPCG8_SHIFT                   16
#define CCM_CCPGR1_PPCG8(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG8_SHIFT))&CCM_CCPGR1_PPCG8_MASK)
#define CCM_CCPGR1_PPCG9_MASK                    0xC0000u
#define CCM_CCPGR1_PPCG9_SHIFT                   18
#define CCM_CCPGR1_PPCG9(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG9_SHIFT))&CCM_CCPGR1_PPCG9_MASK)
#define CCM_CCPGR1_PPCG10_MASK                   0x300000u
#define CCM_CCPGR1_PPCG10_SHIFT                  20
#define CCM_CCPGR1_PPCG10(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG10_SHIFT))&CCM_CCPGR1_PPCG10_MASK)
#define CCM_CCPGR1_PPCG11_MASK                   0xC00000u
#define CCM_CCPGR1_PPCG11_SHIFT                  22
#define CCM_CCPGR1_PPCG11(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG11_SHIFT))&CCM_CCPGR1_PPCG11_MASK)
#define CCM_CCPGR1_PPCG12_MASK                   0x3000000u
#define CCM_CCPGR1_PPCG12_SHIFT                  24
#define CCM_CCPGR1_PPCG12(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG12_SHIFT))&CCM_CCPGR1_PPCG12_MASK)
#define CCM_CCPGR1_PPCG13_MASK                   0xC000000u
#define CCM_CCPGR1_PPCG13_SHIFT                  26
#define CCM_CCPGR1_PPCG13(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG13_SHIFT))&CCM_CCPGR1_PPCG13_MASK)
#define CCM_CCPGR1_PPCG14_MASK                   0x30000000u
#define CCM_CCPGR1_PPCG14_SHIFT                  28
#define CCM_CCPGR1_PPCG14(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG14_SHIFT))&CCM_CCPGR1_PPCG14_MASK)
#define CCM_CCPGR1_PPCG15_MASK                   0xC0000000u
#define CCM_CCPGR1_PPCG15_SHIFT                  30
#define CCM_CCPGR1_PPCG15(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR1_PPCG15_SHIFT))&CCM_CCPGR1_PPCG15_MASK)
/* CCPGR2 Bit Fields */
#define CCM_CCPGR2_PPCG0_MASK                    0x3u
#define CCM_CCPGR2_PPCG0_SHIFT                   0
#define CCM_CCPGR2_PPCG0(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG0_SHIFT))&CCM_CCPGR2_PPCG0_MASK)
#define CCM_CCPGR2_PPCG1_MASK                    0xCu
#define CCM_CCPGR2_PPCG1_SHIFT                   2
#define CCM_CCPGR2_PPCG1(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG1_SHIFT))&CCM_CCPGR2_PPCG1_MASK)
#define CCM_CCPGR2_PPCG2_MASK                    0x30u
#define CCM_CCPGR2_PPCG2_SHIFT                   4
#define CCM_CCPGR2_PPCG2(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG2_SHIFT))&CCM_CCPGR2_PPCG2_MASK)
#define CCM_CCPGR2_PPCG3_MASK                    0xC0u
#define CCM_CCPGR2_PPCG3_SHIFT                   6
#define CCM_CCPGR2_PPCG3(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG3_SHIFT))&CCM_CCPGR2_PPCG3_MASK)
#define CCM_CCPGR2_PPCG4_MASK                    0x300u
#define CCM_CCPGR2_PPCG4_SHIFT                   8
#define CCM_CCPGR2_PPCG4(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG4_SHIFT))&CCM_CCPGR2_PPCG4_MASK)
#define CCM_CCPGR2_PPCG5_MASK                    0xC00u
#define CCM_CCPGR2_PPCG5_SHIFT                   10
#define CCM_CCPGR2_PPCG5(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG5_SHIFT))&CCM_CCPGR2_PPCG5_MASK)
#define CCM_CCPGR2_PPCG6_MASK                    0x3000u
#define CCM_CCPGR2_PPCG6_SHIFT                   12
#define CCM_CCPGR2_PPCG6(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG6_SHIFT))&CCM_CCPGR2_PPCG6_MASK)
#define CCM_CCPGR2_PPCG7_MASK                    0xC000u
#define CCM_CCPGR2_PPCG7_SHIFT                   14
#define CCM_CCPGR2_PPCG7(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG7_SHIFT))&CCM_CCPGR2_PPCG7_MASK)
#define CCM_CCPGR2_PPCG8_MASK                    0x30000u
#define CCM_CCPGR2_PPCG8_SHIFT                   16
#define CCM_CCPGR2_PPCG8(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG8_SHIFT))&CCM_CCPGR2_PPCG8_MASK)
#define CCM_CCPGR2_PPCG9_MASK                    0xC0000u
#define CCM_CCPGR2_PPCG9_SHIFT                   18
#define CCM_CCPGR2_PPCG9(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG9_SHIFT))&CCM_CCPGR2_PPCG9_MASK)
#define CCM_CCPGR2_PPCG10_MASK                   0x300000u
#define CCM_CCPGR2_PPCG10_SHIFT                  20
#define CCM_CCPGR2_PPCG10(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG10_SHIFT))&CCM_CCPGR2_PPCG10_MASK)
#define CCM_CCPGR2_PPCG11_MASK                   0xC00000u
#define CCM_CCPGR2_PPCG11_SHIFT                  22
#define CCM_CCPGR2_PPCG11(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG11_SHIFT))&CCM_CCPGR2_PPCG11_MASK)
#define CCM_CCPGR2_PPCG12_MASK                   0x3000000u
#define CCM_CCPGR2_PPCG12_SHIFT                  24
#define CCM_CCPGR2_PPCG12(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG12_SHIFT))&CCM_CCPGR2_PPCG12_MASK)
#define CCM_CCPGR2_PPCG13_MASK                   0xC000000u
#define CCM_CCPGR2_PPCG13_SHIFT                  26
#define CCM_CCPGR2_PPCG13(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG13_SHIFT))&CCM_CCPGR2_PPCG13_MASK)
#define CCM_CCPGR2_PPCG14_MASK                   0x30000000u
#define CCM_CCPGR2_PPCG14_SHIFT                  28
#define CCM_CCPGR2_PPCG14(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG14_SHIFT))&CCM_CCPGR2_PPCG14_MASK)
#define CCM_CCPGR2_PPCG15_MASK                   0xC0000000u
#define CCM_CCPGR2_PPCG15_SHIFT                  30
#define CCM_CCPGR2_PPCG15(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR2_PPCG15_SHIFT))&CCM_CCPGR2_PPCG15_MASK)
/* CCPGR3 Bit Fields */
#define CCM_CCPGR3_PPCG0_MASK                    0x3u
#define CCM_CCPGR3_PPCG0_SHIFT                   0
#define CCM_CCPGR3_PPCG0(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG0_SHIFT))&CCM_CCPGR3_PPCG0_MASK)
#define CCM_CCPGR3_PPCG1_MASK                    0xCu
#define CCM_CCPGR3_PPCG1_SHIFT                   2
#define CCM_CCPGR3_PPCG1(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG1_SHIFT))&CCM_CCPGR3_PPCG1_MASK)
#define CCM_CCPGR3_PPCG2_MASK                    0x30u
#define CCM_CCPGR3_PPCG2_SHIFT                   4
#define CCM_CCPGR3_PPCG2(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG2_SHIFT))&CCM_CCPGR3_PPCG2_MASK)
#define CCM_CCPGR3_PPCG3_MASK                    0xC0u
#define CCM_CCPGR3_PPCG3_SHIFT                   6
#define CCM_CCPGR3_PPCG3(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG3_SHIFT))&CCM_CCPGR3_PPCG3_MASK)
#define CCM_CCPGR3_PPCG4_MASK                    0x300u
#define CCM_CCPGR3_PPCG4_SHIFT                   8
#define CCM_CCPGR3_PPCG4(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG4_SHIFT))&CCM_CCPGR3_PPCG4_MASK)
#define CCM_CCPGR3_PPCG5_MASK                    0xC00u
#define CCM_CCPGR3_PPCG5_SHIFT                   10
#define CCM_CCPGR3_PPCG5(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG5_SHIFT))&CCM_CCPGR3_PPCG5_MASK)
#define CCM_CCPGR3_PPCG6_MASK                    0x3000u
#define CCM_CCPGR3_PPCG6_SHIFT                   12
#define CCM_CCPGR3_PPCG6(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG6_SHIFT))&CCM_CCPGR3_PPCG6_MASK)
#define CCM_CCPGR3_PPCG7_MASK                    0xC000u
#define CCM_CCPGR3_PPCG7_SHIFT                   14
#define CCM_CCPGR3_PPCG7(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG7_SHIFT))&CCM_CCPGR3_PPCG7_MASK)
#define CCM_CCPGR3_PPCG8_MASK                    0x30000u
#define CCM_CCPGR3_PPCG8_SHIFT                   16
#define CCM_CCPGR3_PPCG8(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG8_SHIFT))&CCM_CCPGR3_PPCG8_MASK)
#define CCM_CCPGR3_PPCG9_MASK                    0xC0000u
#define CCM_CCPGR3_PPCG9_SHIFT                   18
#define CCM_CCPGR3_PPCG9(x)                      (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG9_SHIFT))&CCM_CCPGR3_PPCG9_MASK)
#define CCM_CCPGR3_PPCG10_MASK                   0x300000u
#define CCM_CCPGR3_PPCG10_SHIFT                  20
#define CCM_CCPGR3_PPCG10(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG10_SHIFT))&CCM_CCPGR3_PPCG10_MASK)
#define CCM_CCPGR3_PPCG11_MASK                   0xC00000u
#define CCM_CCPGR3_PPCG11_SHIFT                  22
#define CCM_CCPGR3_PPCG11(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG11_SHIFT))&CCM_CCPGR3_PPCG11_MASK)
#define CCM_CCPGR3_PPCG12_MASK                   0x3000000u
#define CCM_CCPGR3_PPCG12_SHIFT                  24
#define CCM_CCPGR3_PPCG12(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG12_SHIFT))&CCM_CCPGR3_PPCG12_MASK)
#define CCM_CCPGR3_PPCG13_MASK                   0xC000000u
#define CCM_CCPGR3_PPCG13_SHIFT                  26
#define CCM_CCPGR3_PPCG13(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG13_SHIFT))&CCM_CCPGR3_PPCG13_MASK)
#define CCM_CCPGR3_PPCG14_MASK                   0x30000000u
#define CCM_CCPGR3_PPCG14_SHIFT                  28
#define CCM_CCPGR3_PPCG14(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG14_SHIFT))&CCM_CCPGR3_PPCG14_MASK)
#define CCM_CCPGR3_PPCG15_MASK                   0xC0000000u
#define CCM_CCPGR3_PPCG15_SHIFT                  30
#define CCM_CCPGR3_PPCG15(x)                     (((uint32_t)(((uint32_t)(x))<<CCM_CCPGR3_PPCG15_SHIFT))&CCM_CCPGR3_PPCG15_MASK)

/**
 * @}
 */ /* end of group CCM_Register_Masks */


/* CCM - Peripheral instance base addresses */
/** Peripheral CCM base pointer */
#define CCM_BASE_PTR                             ((CCM_MemMapPtr)0x4006B000u)
/** Array initializer of CCM peripheral base pointers */
#define CCM_BASE_PTRS                            { CCM_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- CCM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CCM_Register_Accessor_Macros CCM - Register accessor macros
 * @{
 */


/* CCM - Register instance definitions */
/* CCM */
#define CCM_CCR                                  CCM_CCR_REG(CCM_BASE_PTR)
#define CCM_CSR                                  CCM_CSR_REG(CCM_BASE_PTR)
#define CCM_CCSR                                 CCM_CCSR_REG(CCM_BASE_PTR)
#define CCM_CACRR                                CCM_CACRR_REG(CCM_BASE_PTR)
#define CCM_CSCMR1                               CCM_CSCMR1_REG(CCM_BASE_PTR)
#define CCM_CSCDR1                               CCM_CSCDR1_REG(CCM_BASE_PTR)
#define CCM_CSCDR2                               CCM_CSCDR2_REG(CCM_BASE_PTR)
#define CCM_CSCDR3                               CCM_CSCDR3_REG(CCM_BASE_PTR)
#define CCM_CSCMR2                               CCM_CSCMR2_REG(CCM_BASE_PTR)
#define CCM_CSCDR4                               CCM_CSCDR4_REG(CCM_BASE_PTR)
#define CCM_CTOR                                 CCM_CTOR_REG(CCM_BASE_PTR)
#define CCM_CLPCR                                CCM_CLPCR_REG(CCM_BASE_PTR)
#define CCM_CISR                                 CCM_CISR_REG(CCM_BASE_PTR)
#define CCM_CIMR                                 CCM_CIMR_REG(CCM_BASE_PTR)
#define CCM_CCOSR                                CCM_CCOSR_REG(CCM_BASE_PTR)
#define CCM_CCGR0                                CCM_CCGR0_REG(CCM_BASE_PTR)
#define CCM_CCGR1                                CCM_CCGR1_REG(CCM_BASE_PTR)
#define CCM_CCGR2                                CCM_CCGR2_REG(CCM_BASE_PTR)
#define CCM_CCGR3                                CCM_CCGR3_REG(CCM_BASE_PTR)
#define CCM_CCGR4                                CCM_CCGR4_REG(CCM_BASE_PTR)
#define CCM_CCGR5                                CCM_CCGR5_REG(CCM_BASE_PTR)
#define CCM_CCGR6                                CCM_CCGR6_REG(CCM_BASE_PTR)
#define CCM_CCGR7                                CCM_CCGR7_REG(CCM_BASE_PTR)
#define CCM_CCGR8                                CCM_CCGR8_REG(CCM_BASE_PTR)
#define CCM_CCGR9                                CCM_CCGR9_REG(CCM_BASE_PTR)
#define CCM_CCGR10                               CCM_CCGR10_REG(CCM_BASE_PTR)
#define CCM_CCGR11                               CCM_CCGR11_REG(CCM_BASE_PTR)
#define CCM_CMEOR0                               CCM_CMEOR0_REG(CCM_BASE_PTR)
#define CCM_CMEOR1                               CCM_CMEOR1_REG(CCM_BASE_PTR)
#define CCM_CMEOR2                               CCM_CMEOR2_REG(CCM_BASE_PTR)
#define CCM_CMEOR3                               CCM_CMEOR3_REG(CCM_BASE_PTR)
#define CCM_CMEOR4                               CCM_CMEOR4_REG(CCM_BASE_PTR)
#define CCM_CMEOR5                               CCM_CMEOR5_REG(CCM_BASE_PTR)
#define CCM_CPPDSR                               CCM_CPPDSR_REG(CCM_BASE_PTR)
#define CCM_CCOWR                                CCM_CCOWR_REG(CCM_BASE_PTR)
#define CCM_CCPGR0                               CCM_CCPGR0_REG(CCM_BASE_PTR)
#define CCM_CCPGR1                               CCM_CCPGR1_REG(CCM_BASE_PTR)
#define CCM_CCPGR2                               CCM_CCPGR2_REG(CCM_BASE_PTR)
#define CCM_CCPGR3                               CCM_CCPGR3_REG(CCM_BASE_PTR)

/**
 * @}
 */ /* end of group CCM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group CCM_Peripheral */


/* ----------------------------------------------------------------------------
   -- CMU
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CMU_Peripheral CMU
 * @{
 */

/** CMU - Peripheral register structure */
typedef struct CMU_MemMap {
  uint32_t CSR;                                    /**< CMU Control Status Register, offset: 0x0 */
  uint32_t FDR;                                    /**< CMU Frequency Display Register, offset: 0x4 */
  uint32_t HFREFR;                                 /**< CMU High Frequency Reference Register CLKMN1, offset: 0x8 */
  uint32_t LFREFR;                                 /**< CMU Low Frequency Reference Register CLKMN1, offset: 0xC */
  uint32_t ISR;                                    /**< CMU Interrupt Status Register, offset: 0x10 */
  uint8_t RESERVED_0[4];
  uint32_t MDR;                                    /**< CMU Measurement Duration Register, offset: 0x18 */
} volatile *CMU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CMU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CMU_Register_Accessor_Macros CMU - Register accessor macros
 * @{
 */


/* CMU - Register accessors */
#define CMU_CSR_REG(base)                        ((base)->CSR)
#define CMU_FDR_REG(base)                        ((base)->FDR)
#define CMU_HFREFR_REG(base)                     ((base)->HFREFR)
#define CMU_LFREFR_REG(base)                     ((base)->LFREFR)
#define CMU_ISR_REG(base)                        ((base)->ISR)
#define CMU_MDR_REG(base)                        ((base)->MDR)

/**
 * @}
 */ /* end of group CMU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CMU Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CMU_Register_Masks CMU Register Masks
 * @{
 */

/* CSR Bit Fields */
#define CMU_CSR_CME_MASK                         0x1u
#define CMU_CSR_CME_SHIFT                        0
#define CMU_CSR_RCDIV_MASK                       0x6u
#define CMU_CSR_RCDIV_SHIFT                      1
#define CMU_CSR_RCDIV(x)                         (((uint32_t)(((uint32_t)(x))<<CMU_CSR_RCDIV_SHIFT))&CMU_CSR_RCDIV_MASK)
#define CMU_CSR_CKSEL1_MASK                      0x300u
#define CMU_CSR_CKSEL1_SHIFT                     8
#define CMU_CSR_CKSEL1(x)                        (((uint32_t)(((uint32_t)(x))<<CMU_CSR_CKSEL1_SHIFT))&CMU_CSR_CKSEL1_MASK)
#define CMU_CSR_SFM_MASK                         0x800000u
#define CMU_CSR_SFM_SHIFT                        23
/* FDR Bit Fields */
#define CMU_FDR_FD_MASK                          0xFFFFFu
#define CMU_FDR_FD_SHIFT                         0
#define CMU_FDR_FD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_FDR_FD_SHIFT))&CMU_FDR_FD_MASK)
/* HFREFR Bit Fields */
#define CMU_HFREFR_HFREF_MASK                    0xFFFu
#define CMU_HFREFR_HFREF_SHIFT                   0
#define CMU_HFREFR_HFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_HFREFR_HFREF_SHIFT))&CMU_HFREFR_HFREF_MASK)
/* LFREFR Bit Fields */
#define CMU_LFREFR_LFREF_MASK                    0xFFFu
#define CMU_LFREFR_LFREF_SHIFT                   0
#define CMU_LFREFR_LFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_LFREFR_LFREF_SHIFT))&CMU_LFREFR_LFREF_MASK)
/* ISR Bit Fields */
#define CMU_ISR_OLRI_MASK                        0x1u
#define CMU_ISR_OLRI_SHIFT                       0
#define CMU_ISR_FLLI_MASK                        0x2u
#define CMU_ISR_FLLI_SHIFT                       1
#define CMU_ISR_FHHI_MASK                        0x4u
#define CMU_ISR_FHHI_SHIFT                       2
#define CMU_ISR_FLCI_MASK                        0x8u
#define CMU_ISR_FLCI_SHIFT                       3
/* MDR Bit Fields */
#define CMU_MDR_MD_MASK                          0xFFFFFu
#define CMU_MDR_MD_SHIFT                         0
#define CMU_MDR_MD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_MDR_MD_SHIFT))&CMU_MDR_MD_MASK)

/**
 * @}
 */ /* end of group CMU_Register_Masks */


/* CMU - Peripheral instance base addresses */
/** Peripheral CMU base pointer */
#define CMU_BASE_PTR                             ((CMU_MemMapPtr)0x4006F000u)
/** Array initializer of CMU peripheral base pointers */
#define CMU_BASE_PTRS                            { CMU_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- CMU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CMU_Register_Accessor_Macros CMU - Register accessor macros
 * @{
 */


/* CMU - Register instance definitions */
/* CMU */
#define CMU_CSR                                  CMU_CSR_REG(CMU_BASE_PTR)
#define CMU_FDR                                  CMU_FDR_REG(CMU_BASE_PTR)
#define CMU_HFREFR                               CMU_HFREFR_REG(CMU_BASE_PTR)
#define CMU_LFREFR                               CMU_LFREFR_REG(CMU_BASE_PTR)
#define CMU_ISR                                  CMU_ISR_REG(CMU_BASE_PTR)
#define CMU_MDR                                  CMU_MDR_REG(CMU_BASE_PTR)

/**
 * @}
 */ /* end of group CMU_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group CMU_Peripheral */


/* ----------------------------------------------------------------------------
   -- CRC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CRC_Peripheral CRC
 * @{
 */

/** CRC - Peripheral register structure */
typedef struct CRC_MemMap {
  union {                                          /* offset: 0x0 */
    struct {                                         /* offset: 0x0 */
      uint16_t CRCL;                                   /**< CRC_CRCL register., offset: 0x0 */
      uint16_t CRCH;                                   /**< CRC_CRCH register., offset: 0x2 */
    } ACCESS16BIT;
    uint32_t CRC;                                    /**< CRC Data register, offset: 0x0 */
    struct {                                         /* offset: 0x0 */
      uint8_t CRCLL;                                   /**< CRC_CRCLL register., offset: 0x0 */
      uint8_t CRCLU;                                   /**< CRC_CRCLU register., offset: 0x1 */
      uint8_t CRCHL;                                   /**< CRC_CRCHL register., offset: 0x2 */
      uint8_t CRCHU;                                   /**< CRC_CRCHU register., offset: 0x3 */
    } ACCESS8BIT;
  };
  union {                                          /* offset: 0x4 */
    struct {                                         /* offset: 0x4 */
      uint16_t GPOLYL;                                 /**< CRC_GPOLYL register., offset: 0x4 */
      uint16_t GPOLYH;                                 /**< CRC_GPOLYH register., offset: 0x6 */
    } GPOLY_ACCESS16BIT;
    uint32_t GPOLY;                                  /**< CRC Polynomial register, offset: 0x4 */
    struct {                                         /* offset: 0x4 */
      uint8_t GPOLYLL;                                 /**< CRC_GPOLYLL register., offset: 0x4 */
      uint8_t GPOLYLU;                                 /**< CRC_GPOLYLU register., offset: 0x5 */
      uint8_t GPOLYHL;                                 /**< CRC_GPOLYHL register., offset: 0x6 */
      uint8_t GPOLYHU;                                 /**< CRC_GPOLYHU register., offset: 0x7 */
    } GPOLY_ACCESS8BIT;
  };
  union {                                          /* offset: 0x8 */
    uint32_t CTRL;                                   /**< CRC Control register, offset: 0x8 */
    struct {                                         /* offset: 0x8 */
      uint8_t RESERVED_0[3];
      uint8_t CTRLHU;                                  /**< CRC_CTRLHU register., offset: 0xB */
    } CTRL_ACCESS8BIT;
  };
} volatile *CRC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CRC_Register_Accessor_Macros CRC - Register accessor macros
 * @{
 */


/* CRC - Register accessors */
#define CRC_CRCL_REG(base)                       ((base)->ACCESS16BIT.CRCL)
#define CRC_CRCH_REG(base)                       ((base)->ACCESS16BIT.CRCH)
#define CRC_CRC_REG(base)                        ((base)->CRC)
#define CRC_CRCLL_REG(base)                      ((base)->ACCESS8BIT.CRCLL)
#define CRC_CRCLU_REG(base)                      ((base)->ACCESS8BIT.CRCLU)
#define CRC_CRCHL_REG(base)                      ((base)->ACCESS8BIT.CRCHL)
#define CRC_CRCHU_REG(base)                      ((base)->ACCESS8BIT.CRCHU)
#define CRC_GPOLYL_REG(base)                     ((base)->GPOLY_ACCESS16BIT.GPOLYL)
#define CRC_GPOLYH_REG(base)                     ((base)->GPOLY_ACCESS16BIT.GPOLYH)
#define CRC_GPOLY_REG(base)                      ((base)->GPOLY)
#define CRC_GPOLYLL_REG(base)                    ((base)->GPOLY_ACCESS8BIT.GPOLYLL)
#define CRC_GPOLYLU_REG(base)                    ((base)->GPOLY_ACCESS8BIT.GPOLYLU)
#define CRC_GPOLYHL_REG(base)                    ((base)->GPOLY_ACCESS8BIT.GPOLYHL)
#define CRC_GPOLYHU_REG(base)                    ((base)->GPOLY_ACCESS8BIT.GPOLYHU)
#define CRC_CTRL_REG(base)                       ((base)->CTRL)
#define CRC_CTRLHU_REG(base)                     ((base)->CTRL_ACCESS8BIT.CTRLHU)

/**
 * @}
 */ /* end of group CRC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CRC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CRC_Register_Masks CRC Register Masks
 * @{
 */

/* CRCL Bit Fields */
#define CRC_CRCL_CRCL_MASK                       0xFFFFu
#define CRC_CRCL_CRCL_SHIFT                      0
#define CRC_CRCL_CRCL(x)                         (((uint16_t)(((uint16_t)(x))<<CRC_CRCL_CRCL_SHIFT))&CRC_CRCL_CRCL_MASK)
/* CRCH Bit Fields */
#define CRC_CRCH_CRCH_MASK                       0xFFFFu
#define CRC_CRCH_CRCH_SHIFT                      0
#define CRC_CRCH_CRCH(x)                         (((uint16_t)(((uint16_t)(x))<<CRC_CRCH_CRCH_SHIFT))&CRC_CRCH_CRCH_MASK)
/* CRC Bit Fields */
#define CRC_CRC_LL_MASK                          0xFFu
#define CRC_CRC_LL_SHIFT                         0
#define CRC_CRC_LL(x)                            (((uint32_t)(((uint32_t)(x))<<CRC_CRC_LL_SHIFT))&CRC_CRC_LL_MASK)
#define CRC_CRC_LU_MASK                          0xFF00u
#define CRC_CRC_LU_SHIFT                         8
#define CRC_CRC_LU(x)                            (((uint32_t)(((uint32_t)(x))<<CRC_CRC_LU_SHIFT))&CRC_CRC_LU_MASK)
#define CRC_CRC_HL_MASK                          0xFF0000u
#define CRC_CRC_HL_SHIFT                         16
#define CRC_CRC_HL(x)                            (((uint32_t)(((uint32_t)(x))<<CRC_CRC_HL_SHIFT))&CRC_CRC_HL_MASK)
#define CRC_CRC_HU_MASK                          0xFF000000u
#define CRC_CRC_HU_SHIFT                         24
#define CRC_CRC_HU(x)                            (((uint32_t)(((uint32_t)(x))<<CRC_CRC_HU_SHIFT))&CRC_CRC_HU_MASK)
/* CRCLL Bit Fields */
#define CRC_CRCLL_CRCLL_MASK                     0xFFu
#define CRC_CRCLL_CRCLL_SHIFT                    0
#define CRC_CRCLL_CRCLL(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CRCLL_CRCLL_SHIFT))&CRC_CRCLL_CRCLL_MASK)
/* CRCLU Bit Fields */
#define CRC_CRCLU_CRCLU_MASK                     0xFFu
#define CRC_CRCLU_CRCLU_SHIFT                    0
#define CRC_CRCLU_CRCLU(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CRCLU_CRCLU_SHIFT))&CRC_CRCLU_CRCLU_MASK)
/* CRCHL Bit Fields */
#define CRC_CRCHL_CRCHL_MASK                     0xFFu
#define CRC_CRCHL_CRCHL_SHIFT                    0
#define CRC_CRCHL_CRCHL(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CRCHL_CRCHL_SHIFT))&CRC_CRCHL_CRCHL_MASK)
/* CRCHU Bit Fields */
#define CRC_CRCHU_CRCHU_MASK                     0xFFu
#define CRC_CRCHU_CRCHU_SHIFT                    0
#define CRC_CRCHU_CRCHU(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CRCHU_CRCHU_SHIFT))&CRC_CRCHU_CRCHU_MASK)
/* GPOLYL Bit Fields */
#define CRC_GPOLYL_GPOLYL_MASK                   0xFFFFu
#define CRC_GPOLYL_GPOLYL_SHIFT                  0
#define CRC_GPOLYL_GPOLYL(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYL_GPOLYL_SHIFT))&CRC_GPOLYL_GPOLYL_MASK)
/* GPOLYH Bit Fields */
#define CRC_GPOLYH_GPOLYH_MASK                   0xFFFFu
#define CRC_GPOLYH_GPOLYH_SHIFT                  0
#define CRC_GPOLYH_GPOLYH(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYH_GPOLYH_SHIFT))&CRC_GPOLYH_GPOLYH_MASK)
/* GPOLY Bit Fields */
#define CRC_GPOLY_LOW_MASK                       0xFFFFu
#define CRC_GPOLY_LOW_SHIFT                      0
#define CRC_GPOLY_LOW(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_LOW_SHIFT))&CRC_GPOLY_LOW_MASK)
#define CRC_GPOLY_HIGH_MASK                      0xFFFF0000u
#define CRC_GPOLY_HIGH_SHIFT                     16
#define CRC_GPOLY_HIGH(x)                        (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_HIGH_SHIFT))&CRC_GPOLY_HIGH_MASK)
/* GPOLYLL Bit Fields */
#define CRC_GPOLYLL_GPOLYLL_MASK                 0xFFu
#define CRC_GPOLYLL_GPOLYLL_SHIFT                0
#define CRC_GPOLYLL_GPOLYLL(x)                   (((uint8_t)(((uint8_t)(x))<<CRC_GPOLYLL_GPOLYLL_SHIFT))&CRC_GPOLYLL_GPOLYLL_MASK)
/* GPOLYLU Bit Fields */
#define CRC_GPOLYLU_GPOLYLU_MASK                 0xFFu
#define CRC_GPOLYLU_GPOLYLU_SHIFT                0
#define CRC_GPOLYLU_GPOLYLU(x)                   (((uint8_t)(((uint8_t)(x))<<CRC_GPOLYLU_GPOLYLU_SHIFT))&CRC_GPOLYLU_GPOLYLU_MASK)
/* GPOLYHL Bit Fields */
#define CRC_GPOLYHL_GPOLYHL_MASK                 0xFFu
#define CRC_GPOLYHL_GPOLYHL_SHIFT                0
#define CRC_GPOLYHL_GPOLYHL(x)                   (((uint8_t)(((uint8_t)(x))<<CRC_GPOLYHL_GPOLYHL_SHIFT))&CRC_GPOLYHL_GPOLYHL_MASK)
/* GPOLYHU Bit Fields */
#define CRC_GPOLYHU_GPOLYHU_MASK                 0xFFu
#define CRC_GPOLYHU_GPOLYHU_SHIFT                0
#define CRC_GPOLYHU_GPOLYHU(x)                   (((uint8_t)(((uint8_t)(x))<<CRC_GPOLYHU_GPOLYHU_SHIFT))&CRC_GPOLYHU_GPOLYHU_MASK)
/* CTRL Bit Fields */
#define CRC_CTRL_TCRC_MASK                       0x1000000u
#define CRC_CTRL_TCRC_SHIFT                      24
#define CRC_CTRL_WAS_MASK                        0x2000000u
#define CRC_CTRL_WAS_SHIFT                       25
#define CRC_CTRL_FXOR_MASK                       0x4000000u
#define CRC_CTRL_FXOR_SHIFT                      26
#define CRC_CTRL_TOTR_MASK                       0x30000000u
#define CRC_CTRL_TOTR_SHIFT                      28
#define CRC_CTRL_TOTR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOTR_SHIFT))&CRC_CTRL_TOTR_MASK)
#define CRC_CTRL_TOT_MASK                        0xC0000000u
#define CRC_CTRL_TOT_SHIFT                       30
#define CRC_CTRL_TOT(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOT_SHIFT))&CRC_CTRL_TOT_MASK)
/* CTRLHU Bit Fields */
#define CRC_CTRLHU_TCRC_MASK                     0x1u
#define CRC_CTRLHU_TCRC_SHIFT                    0
#define CRC_CTRLHU_WAS_MASK                      0x2u
#define CRC_CTRLHU_WAS_SHIFT                     1
#define CRC_CTRLHU_FXOR_MASK                     0x4u
#define CRC_CTRLHU_FXOR_SHIFT                    2
#define CRC_CTRLHU_TOTR_MASK                     0x30u
#define CRC_CTRLHU_TOTR_SHIFT                    4
#define CRC_CTRLHU_TOTR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOTR_SHIFT))&CRC_CTRLHU_TOTR_MASK)
#define CRC_CTRLHU_TOT_MASK                      0xC0u
#define CRC_CTRLHU_TOT_SHIFT                     6
#define CRC_CTRLHU_TOT(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOT_SHIFT))&CRC_CTRLHU_TOT_MASK)

/**
 * @}
 */ /* end of group CRC_Register_Masks */


/* CRC - Peripheral instance base addresses */
/** Peripheral CRC base pointer */
#define CRC_BASE_PTR                             ((CRC_MemMapPtr)0x40033000u)
/** Array initializer of CRC peripheral base pointers */
#define CRC_BASE_PTRS                            { CRC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- CRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CRC_Register_Accessor_Macros CRC - Register accessor macros
 * @{
 */


/* CRC - Register instance definitions */
/* CRC */
#define CRC_CRC                                  CRC_CRC_REG(CRC_BASE_PTR)
#define CRC_CRCL                                 CRC_CRCL_REG(CRC_BASE_PTR)
#define CRC_CRCLL                                CRC_CRCLL_REG(CRC_BASE_PTR)
#define CRC_CRCLU                                CRC_CRCLU_REG(CRC_BASE_PTR)
#define CRC_CRCH                                 CRC_CRCH_REG(CRC_BASE_PTR)
#define CRC_CRCHL                                CRC_CRCHL_REG(CRC_BASE_PTR)
#define CRC_CRCHU                                CRC_CRCHU_REG(CRC_BASE_PTR)
#define CRC_GPOLY                                CRC_GPOLY_REG(CRC_BASE_PTR)
#define CRC_GPOLYL                               CRC_GPOLYL_REG(CRC_BASE_PTR)
#define CRC_GPOLYLL                              CRC_GPOLYLL_REG(CRC_BASE_PTR)
#define CRC_GPOLYLU                              CRC_GPOLYLU_REG(CRC_BASE_PTR)
#define CRC_GPOLYH                               CRC_GPOLYH_REG(CRC_BASE_PTR)
#define CRC_GPOLYHL                              CRC_GPOLYHL_REG(CRC_BASE_PTR)
#define CRC_GPOLYHU                              CRC_GPOLYHU_REG(CRC_BASE_PTR)
#define CRC_CTRL                                 CRC_CTRL_REG(CRC_BASE_PTR)
#define CRC_CTRLHU                               CRC_CTRLHU_REG(CRC_BASE_PTR)

/**
 * @}
 */ /* end of group CRC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group CRC_Peripheral */


/* ----------------------------------------------------------------------------
   -- CSU
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CSU_Peripheral CSU
 * @{
 */

/** CSU - Peripheral register structure */
typedef struct CSU_MemMap {
  uint32_t CSL[64];                                /**< Config Security Level, array offset: 0x0, array step: 0x4 */
  uint8_t RESERVED_0[256];
  uint32_t HP[2];                                  /**< Hprot Register, array offset: 0x200, array step: 0x4 */
  uint8_t RESERVED_1[16];
  uint32_t SA[2];                                  /**< Secure Access register, array offset: 0x218, array step: 0x4 */
  uint8_t RESERVED_2[16];
  uint32_t AMK[2];                                 /**< Alarm Mask register, array offset: 0x230, array step: 0x4 */
  uint8_t RESERVED_3[12];
  uint32_t AROUT[13];                              /**< Alarm Routing Register, array offset: 0x244, array step: 0x4 */
  uint8_t RESERVED_4[204];
  uint8_t ASOFT;                                   /**< Soft Alarm Register, offset: 0x344 */
  uint8_t RESERVED_5[3];
  uint16_t ACOUNTER;                               /**< Alarm Counter Register, offset: 0x348 */
  uint8_t RESERVED_6[2];
  uint16_t ACONTROL;                               /**< Alarm Control Register, offset: 0x34C */
  uint8_t RESERVED_7[10];
  uint32_t HPC[2];                                 /**< Hprot Control Register, array offset: 0x358, array step: 0x4 */
  uint8_t RESERVED_8[8];
  union {                                          /* offset: 0x368 */
    uint32_t ICR0;                                   /**< Interrupt Control Register, offset: 0x368 */
    uint32_t ISR0;                                   /**< Interrupt Status Register, offset: 0x368 */
  };
  union {                                          /* offset: 0x36C */
    uint32_t ICR1;                                   /**< Interrupt Control Register, offset: 0x36C */
    uint32_t ISR1;                                   /**< Interrupt Status Register, offset: 0x36C */
  };
} volatile *CSU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- CSU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CSU_Register_Accessor_Macros CSU - Register accessor macros
 * @{
 */


/* CSU - Register accessors */
#define CSU_CSL_REG(base,index)                  ((base)->CSL[index])
#define CSU_HP_REG(base,index)                   ((base)->HP[index])
#define CSU_SA_REG(base,index)                   ((base)->SA[index])
#define CSU_AMK_REG(base,index)                  ((base)->AMK[index])
#define CSU_AROUT_REG(base,index)                ((base)->AROUT[index])
#define CSU_ASOFT_REG(base)                      ((base)->ASOFT)
#define CSU_ACOUNTER_REG(base)                   ((base)->ACOUNTER)
#define CSU_ACONTROL_REG(base)                   ((base)->ACONTROL)
#define CSU_HPC_REG(base,index)                  ((base)->HPC[index])
#define CSU_ICR0_REG(base)                       ((base)->ICR0)
#define CSU_ISR0_REG(base)                       ((base)->ISR0)
#define CSU_ICR1_REG(base)                       ((base)->ICR1)
#define CSU_ISR1_REG(base)                       ((base)->ISR1)

/**
 * @}
 */ /* end of group CSU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- CSU Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CSU_Register_Masks CSU Register Masks
 * @{
 */

/* CSL Bit Fields */
#define CSU_CSL_CSL_2n_MASK                      0xFFu
#define CSU_CSL_CSL_2n_SHIFT                     0
#define CSU_CSL_CSL_2n(x)                        (((uint32_t)(((uint32_t)(x))<<CSU_CSL_CSL_2n_SHIFT))&CSU_CSL_CSL_2n_MASK)
#define CSU_CSL_L_2n_MASK                        0x100u
#define CSU_CSL_L_2n_SHIFT                       8
#define CSU_CSL_CSL_2n1_MASK                     0xFF0000u
#define CSU_CSL_CSL_2n1_SHIFT                    16
#define CSU_CSL_CSL_2n1(x)                       (((uint32_t)(((uint32_t)(x))<<CSU_CSL_CSL_2n1_SHIFT))&CSU_CSL_CSL_2n1_MASK)
#define CSU_CSL_L_2n1_MASK                       0x1000000u
#define CSU_CSL_L_2n1_SHIFT                      24
/* HP Bit Fields */
#define CSU_HP_HP0_n_MASK                        0x1u
#define CSU_HP_HP0_n_SHIFT                       0
#define CSU_HP_L0_n_MASK                         0x2u
#define CSU_HP_L0_n_SHIFT                        1
#define CSU_HP_HP1_n_MASK                        0x4u
#define CSU_HP_HP1_n_SHIFT                       2
#define CSU_HP_L1_n_MASK                         0x8u
#define CSU_HP_L1_n_SHIFT                        3
#define CSU_HP_HP2_n_MASK                        0x10u
#define CSU_HP_HP2_n_SHIFT                       4
#define CSU_HP_L2_n_MASK                         0x20u
#define CSU_HP_L2_n_SHIFT                        5
#define CSU_HP_HP3_n_MASK                        0x40u
#define CSU_HP_HP3_n_SHIFT                       6
#define CSU_HP_L3_n_MASK                         0x80u
#define CSU_HP_L3_n_SHIFT                        7
#define CSU_HP_HP4_n_MASK                        0x100u
#define CSU_HP_HP4_n_SHIFT                       8
#define CSU_HP_L4_n_MASK                         0x200u
#define CSU_HP_L4_n_SHIFT                        9
#define CSU_HP_HP5_n_MASK                        0x400u
#define CSU_HP_HP5_n_SHIFT                       10
#define CSU_HP_L5_n_MASK                         0x800u
#define CSU_HP_L5_n_SHIFT                        11
#define CSU_HP_HP6_n_MASK                        0x1000u
#define CSU_HP_HP6_n_SHIFT                       12
#define CSU_HP_L6_n_MASK                         0x2000u
#define CSU_HP_L6_n_SHIFT                        13
#define CSU_HP_HP7_n_MASK                        0x4000u
#define CSU_HP_HP7_n_SHIFT                       14
#define CSU_HP_L7_n_MASK                         0x8000u
#define CSU_HP_L7_n_SHIFT                        15
#define CSU_HP_HP8_n_MASK                        0x10000u
#define CSU_HP_HP8_n_SHIFT                       16
#define CSU_HP_L8_n_MASK                         0x20000u
#define CSU_HP_L8_n_SHIFT                        17
#define CSU_HP_HP9_n_MASK                        0x40000u
#define CSU_HP_HP9_n_SHIFT                       18
#define CSU_HP_L9_n_MASK                         0x80000u
#define CSU_HP_L9_n_SHIFT                        19
#define CSU_HP_HP10_n_MASK                       0x100000u
#define CSU_HP_HP10_n_SHIFT                      20
#define CSU_HP_L10_n_MASK                        0x200000u
#define CSU_HP_L10_n_SHIFT                       21
#define CSU_HP_HP11_n_MASK                       0x400000u
#define CSU_HP_HP11_n_SHIFT                      22
#define CSU_HP_L11_n_MASK                        0x800000u
#define CSU_HP_L11_n_SHIFT                       23
#define CSU_HP_HP12_n_MASK                       0x1000000u
#define CSU_HP_HP12_n_SHIFT                      24
#define CSU_HP_L12_n_MASK                        0x2000000u
#define CSU_HP_L12_n_SHIFT                       25
#define CSU_HP_HP13_n_MASK                       0x4000000u
#define CSU_HP_HP13_n_SHIFT                      26
#define CSU_HP_L13_n_MASK                        0x8000000u
#define CSU_HP_L13_n_SHIFT                       27
#define CSU_HP_HP14_n_MASK                       0x10000000u
#define CSU_HP_HP14_n_SHIFT                      28
#define CSU_HP_L14_n_MASK                        0x20000000u
#define CSU_HP_L14_n_SHIFT                       29
#define CSU_HP_HP15_n_MASK                       0x40000000u
#define CSU_HP_HP15_n_SHIFT                      30
#define CSU_HP_L15_n_MASK                        0x80000000u
#define CSU_HP_L15_n_SHIFT                       31
/* SA Bit Fields */
#define CSU_SA_SA0_n_MASK                        0x1u
#define CSU_SA_SA0_n_SHIFT                       0
#define CSU_SA_L0_n_MASK                         0x2u
#define CSU_SA_L0_n_SHIFT                        1
#define CSU_SA_SA1_n_MASK                        0x4u
#define CSU_SA_SA1_n_SHIFT                       2
#define CSU_SA_L1_n_MASK                         0x8u
#define CSU_SA_L1_n_SHIFT                        3
#define CSU_SA_SA2_n_MASK                        0x10u
#define CSU_SA_SA2_n_SHIFT                       4
#define CSU_SA_L2_n_MASK                         0x20u
#define CSU_SA_L2_n_SHIFT                        5
#define CSU_SA_SA3_n_MASK                        0x40u
#define CSU_SA_SA3_n_SHIFT                       6
#define CSU_SA_L3_n_MASK                         0x80u
#define CSU_SA_L3_n_SHIFT                        7
#define CSU_SA_SA4_n_MASK                        0x100u
#define CSU_SA_SA4_n_SHIFT                       8
#define CSU_SA_L4_n_MASK                         0x200u
#define CSU_SA_L4_n_SHIFT                        9
#define CSU_SA_SA5_n_MASK                        0x400u
#define CSU_SA_SA5_n_SHIFT                       10
#define CSU_SA_L5_n_MASK                         0x800u
#define CSU_SA_L5_n_SHIFT                        11
#define CSU_SA_SA6_n_MASK                        0x1000u
#define CSU_SA_SA6_n_SHIFT                       12
#define CSU_SA_L6_n_MASK                         0x2000u
#define CSU_SA_L6_n_SHIFT                        13
#define CSU_SA_SA7_n_MASK                        0x4000u
#define CSU_SA_SA7_n_SHIFT                       14
#define CSU_SA_L7_n_MASK                         0x8000u
#define CSU_SA_L7_n_SHIFT                        15
#define CSU_SA_SA8_n_MASK                        0x10000u
#define CSU_SA_SA8_n_SHIFT                       16
#define CSU_SA_L8_n_MASK                         0x20000u
#define CSU_SA_L8_n_SHIFT                        17
#define CSU_SA_SA9_n_MASK                        0x40000u
#define CSU_SA_SA9_n_SHIFT                       18
#define CSU_SA_L9_n_MASK                         0x80000u
#define CSU_SA_L9_n_SHIFT                        19
#define CSU_SA_SA10_n_MASK                       0x100000u
#define CSU_SA_SA10_n_SHIFT                      20
#define CSU_SA_L10_n_MASK                        0x200000u
#define CSU_SA_L10_n_SHIFT                       21
#define CSU_SA_SA11_n_MASK                       0x400000u
#define CSU_SA_SA11_n_SHIFT                      22
#define CSU_SA_L11_n_MASK                        0x800000u
#define CSU_SA_L11_n_SHIFT                       23
#define CSU_SA_SA12_n_MASK                       0x1000000u
#define CSU_SA_SA12_n_SHIFT                      24
#define CSU_SA_L12_n_MASK                        0x2000000u
#define CSU_SA_L12_n_SHIFT                       25
#define CSU_SA_SA13_n_MASK                       0x4000000u
#define CSU_SA_SA13_n_SHIFT                      26
#define CSU_SA_L13_n_MASK                        0x8000000u
#define CSU_SA_L13_n_SHIFT                       27
#define CSU_SA_SA14_n_MASK                       0x10000000u
#define CSU_SA_SA14_n_SHIFT                      28
#define CSU_SA_L14_n_MASK                        0x20000000u
#define CSU_SA_L14_n_SHIFT                       29
#define CSU_SA_SA15_n_MASK                       0x40000000u
#define CSU_SA_SA15_n_SHIFT                      30
#define CSU_SA_L15_n_MASK                        0x80000000u
#define CSU_SA_L15_n_SHIFT                       31
/* AMK Bit Fields */
#define CSU_AMK_AMK0_n_MASK                      0x1u
#define CSU_AMK_AMK0_n_SHIFT                     0
#define CSU_AMK_L0_n_MASK                        0x2u
#define CSU_AMK_L0_n_SHIFT                       1
#define CSU_AMK_AMK1_n_MASK                      0x4u
#define CSU_AMK_AMK1_n_SHIFT                     2
#define CSU_AMK_L1_n_MASK                        0x8u
#define CSU_AMK_L1_n_SHIFT                       3
#define CSU_AMK_AMK2_n_MASK                      0x10u
#define CSU_AMK_AMK2_n_SHIFT                     4
#define CSU_AMK_L2_n_MASK                        0x20u
#define CSU_AMK_L2_n_SHIFT                       5
#define CSU_AMK_AMK3_n_MASK                      0x40u
#define CSU_AMK_AMK3_n_SHIFT                     6
#define CSU_AMK_L3_n_MASK                        0x80u
#define CSU_AMK_L3_n_SHIFT                       7
#define CSU_AMK_AMK4_n_MASK                      0x100u
#define CSU_AMK_AMK4_n_SHIFT                     8
#define CSU_AMK_L4_n_MASK                        0x200u
#define CSU_AMK_L4_n_SHIFT                       9
#define CSU_AMK_AMK5_n_MASK                      0x400u
#define CSU_AMK_AMK5_n_SHIFT                     10
#define CSU_AMK_L5_n_MASK                        0x800u
#define CSU_AMK_L5_n_SHIFT                       11
#define CSU_AMK_AMK6_n_MASK                      0x1000u
#define CSU_AMK_AMK6_n_SHIFT                     12
#define CSU_AMK_L6_n_MASK                        0x2000u
#define CSU_AMK_L6_n_SHIFT                       13
#define CSU_AMK_AMK7_n_MASK                      0x4000u
#define CSU_AMK_AMK7_n_SHIFT                     14
#define CSU_AMK_L7_n_MASK                        0x8000u
#define CSU_AMK_L7_n_SHIFT                       15
#define CSU_AMK_AMK8_n_MASK                      0x10000u
#define CSU_AMK_AMK8_n_SHIFT                     16
#define CSU_AMK_L8_n_MASK                        0x20000u
#define CSU_AMK_L8_n_SHIFT                       17
#define CSU_AMK_AMK9_n_MASK                      0x40000u
#define CSU_AMK_AMK9_n_SHIFT                     18
#define CSU_AMK_L9_n_MASK                        0x80000u
#define CSU_AMK_L9_n_SHIFT                       19
#define CSU_AMK_AMK10_n_MASK                     0x100000u
#define CSU_AMK_AMK10_n_SHIFT                    20
#define CSU_AMK_L10_n_MASK                       0x200000u
#define CSU_AMK_L10_n_SHIFT                      21
#define CSU_AMK_AMK11_n_MASK                     0x400000u
#define CSU_AMK_AMK11_n_SHIFT                    22
#define CSU_AMK_L11_n_MASK                       0x800000u
#define CSU_AMK_L11_n_SHIFT                      23
#define CSU_AMK_AMK12_n_MASK                     0x1000000u
#define CSU_AMK_AMK12_n_SHIFT                    24
#define CSU_AMK_L12_n_MASK                       0x2000000u
#define CSU_AMK_L12_n_SHIFT                      25
#define CSU_AMK_AMK13_n_MASK                     0x4000000u
#define CSU_AMK_AMK13_n_SHIFT                    26
#define CSU_AMK_L13_n_MASK                       0x8000000u
#define CSU_AMK_L13_n_SHIFT                      27
#define CSU_AMK_AMK14_n_MASK                     0x10000000u
#define CSU_AMK_AMK14_n_SHIFT                    28
#define CSU_AMK_L14_n_MASK                       0x20000000u
#define CSU_AMK_L14_n_SHIFT                      29
#define CSU_AMK_AMK15_n_MASK                     0x40000000u
#define CSU_AMK_AMK15_n_SHIFT                    30
#define CSU_AMK_L15_n_MASK                       0x80000000u
#define CSU_AMK_L15_n_SHIFT                      31
/* AROUT Bit Fields */
#define CSU_AROUT_AROUT_n_MASK                   0x7FFFFFFFu
#define CSU_AROUT_AROUT_n_SHIFT                  0
#define CSU_AROUT_AROUT_n(x)                     (((uint32_t)(((uint32_t)(x))<<CSU_AROUT_AROUT_n_SHIFT))&CSU_AROUT_AROUT_n_MASK)
#define CSU_AROUT_L_n_MASK                       0x80000000u
#define CSU_AROUT_L_n_SHIFT                      31
/* ASOFT Bit Fields */
#define CSU_ASOFT_NALARM_MASK                    0x3u
#define CSU_ASOFT_NALARM_SHIFT                   0
#define CSU_ASOFT_NALARM(x)                      (((uint8_t)(((uint8_t)(x))<<CSU_ASOFT_NALARM_SHIFT))&CSU_ASOFT_NALARM_MASK)
#define CSU_ASOFT_SALARM_MASK                    0xCu
#define CSU_ASOFT_SALARM_SHIFT                   2
#define CSU_ASOFT_SALARM(x)                      (((uint8_t)(((uint8_t)(x))<<CSU_ASOFT_SALARM_SHIFT))&CSU_ASOFT_SALARM_MASK)
#define CSU_ASOFT_L_MASK                         0x10u
#define CSU_ASOFT_L_SHIFT                        4
/* ACOUNTER Bit Fields */
#define CSU_ACOUNTER_ACOUNTER_MASK               0x7FFFu
#define CSU_ACOUNTER_ACOUNTER_SHIFT              0
#define CSU_ACOUNTER_ACOUNTER(x)                 (((uint16_t)(((uint16_t)(x))<<CSU_ACOUNTER_ACOUNTER_SHIFT))&CSU_ACOUNTER_ACOUNTER_MASK)
#define CSU_ACOUNTER_L_MASK                      0x8000u
#define CSU_ACOUNTER_L_SHIFT                     15
/* ACONTROL Bit Fields */
#define CSU_ACONTROL_CE_MASK                     0x1u
#define CSU_ACONTROL_CE_SHIFT                    0
#define CSU_ACONTROL_SC_MASK                     0x2u
#define CSU_ACONTROL_SC_SHIFT                    1
#define CSU_ACONTROL_L_MASK                      0x4u
#define CSU_ACONTROL_L_SHIFT                     2
/* HPC Bit Fields */
#define CSU_HPC_HPC0_n_MASK                      0x1u
#define CSU_HPC_HPC0_n_SHIFT                     0
#define CSU_HPC_L0_n_MASK                        0x2u
#define CSU_HPC_L0_n_SHIFT                       1
#define CSU_HPC_HPC1_n_MASK                      0x4u
#define CSU_HPC_HPC1_n_SHIFT                     2
#define CSU_HPC_L1_n_MASK                        0x8u
#define CSU_HPC_L1_n_SHIFT                       3
#define CSU_HPC_HPC2_n_MASK                      0x10u
#define CSU_HPC_HPC2_n_SHIFT                     4
#define CSU_HPC_L2_n_MASK                        0x20u
#define CSU_HPC_L2_n_SHIFT                       5
#define CSU_HPC_HPC3_n_MASK                      0x40u
#define CSU_HPC_HPC3_n_SHIFT                     6
#define CSU_HPC_L3_n_MASK                        0x80u
#define CSU_HPC_L3_n_SHIFT                       7
#define CSU_HPC_HPC4_n_MASK                      0x100u
#define CSU_HPC_HPC4_n_SHIFT                     8
#define CSU_HPC_L4_n_MASK                        0x200u
#define CSU_HPC_L4_n_SHIFT                       9
#define CSU_HPC_HPC5_n_MASK                      0x400u
#define CSU_HPC_HPC5_n_SHIFT                     10
#define CSU_HPC_L5_n_MASK                        0x800u
#define CSU_HPC_L5_n_SHIFT                       11
#define CSU_HPC_HPC6_n_MASK                      0x1000u
#define CSU_HPC_HPC6_n_SHIFT                     12
#define CSU_HPC_L6_n_MASK                        0x2000u
#define CSU_HPC_L6_n_SHIFT                       13
#define CSU_HPC_HPC7_n_MASK                      0x4000u
#define CSU_HPC_HPC7_n_SHIFT                     14
#define CSU_HPC_L7_n_MASK                        0x8000u
#define CSU_HPC_L7_n_SHIFT                       15
#define CSU_HPC_HPC8_n_MASK                      0x10000u
#define CSU_HPC_HPC8_n_SHIFT                     16
#define CSU_HPC_L8_n_MASK                        0x20000u
#define CSU_HPC_L8_n_SHIFT                       17
#define CSU_HPC_HPC9_n_MASK                      0x40000u
#define CSU_HPC_HPC9_n_SHIFT                     18
#define CSU_HPC_L9_n_MASK                        0x80000u
#define CSU_HPC_L9_n_SHIFT                       19
#define CSU_HPC_HPC10_n_MASK                     0x100000u
#define CSU_HPC_HPC10_n_SHIFT                    20
#define CSU_HPC_L10_n_MASK                       0x200000u
#define CSU_HPC_L10_n_SHIFT                      21
#define CSU_HPC_HPC11_n_MASK                     0x400000u
#define CSU_HPC_HPC11_n_SHIFT                    22
#define CSU_HPC_L11_n_MASK                       0x800000u
#define CSU_HPC_L11_n_SHIFT                      23
#define CSU_HPC_HPC12_n_MASK                     0x1000000u
#define CSU_HPC_HPC12_n_SHIFT                    24
#define CSU_HPC_L12_n_MASK                       0x2000000u
#define CSU_HPC_L12_n_SHIFT                      25
#define CSU_HPC_HPC13_n_MASK                     0x4000000u
#define CSU_HPC_HPC13_n_SHIFT                    26
#define CSU_HPC_L13_n_MASK                       0x8000000u
#define CSU_HPC_L13_n_SHIFT                      27
#define CSU_HPC_HPC14_n_MASK                     0x10000000u
#define CSU_HPC_HPC14_n_SHIFT                    28
#define CSU_HPC_L14_n_MASK                       0x20000000u
#define CSU_HPC_L14_n_SHIFT                      29
#define CSU_HPC_HPC15_n_MASK                     0x40000000u
#define CSU_HPC_HPC15_n_SHIFT                    30
#define CSU_HPC_L15_n_MASK                       0x80000000u
#define CSU_HPC_L15_n_SHIFT                      31
/* ICR0 Bit Fields */
#define CSU_ICR0_IC0_n_MASK                      0x1u
#define CSU_ICR0_IC0_n_SHIFT                     0
#define CSU_ICR0_L0_n_MASK                       0x2u
#define CSU_ICR0_L0_n_SHIFT                      1
#define CSU_ICR0_IC1_n_MASK                      0x4u
#define CSU_ICR0_IC1_n_SHIFT                     2
#define CSU_ICR0_L1_n_MASK                       0x8u
#define CSU_ICR0_L1_n_SHIFT                      3
#define CSU_ICR0_IC2_n_MASK                      0x10u
#define CSU_ICR0_IC2_n_SHIFT                     4
#define CSU_ICR0_L2_n_MASK                       0x20u
#define CSU_ICR0_L2_n_SHIFT                      5
#define CSU_ICR0_IC3_n_MASK                      0x40u
#define CSU_ICR0_IC3_n_SHIFT                     6
#define CSU_ICR0_L3_n_MASK                       0x80u
#define CSU_ICR0_L3_n_SHIFT                      7
#define CSU_ICR0_IC4_n_MASK                      0x100u
#define CSU_ICR0_IC4_n_SHIFT                     8
#define CSU_ICR0_L4_n_MASK                       0x200u
#define CSU_ICR0_L4_n_SHIFT                      9
#define CSU_ICR0_IC5_n_MASK                      0x400u
#define CSU_ICR0_IC5_n_SHIFT                     10
#define CSU_ICR0_L5_n_MASK                       0x800u
#define CSU_ICR0_L5_n_SHIFT                      11
#define CSU_ICR0_IC6_n_MASK                      0x1000u
#define CSU_ICR0_IC6_n_SHIFT                     12
#define CSU_ICR0_L6_n_MASK                       0x2000u
#define CSU_ICR0_L6_n_SHIFT                      13
#define CSU_ICR0_IC7_n_MASK                      0x4000u
#define CSU_ICR0_IC7_n_SHIFT                     14
#define CSU_ICR0_L7_n_MASK                       0x8000u
#define CSU_ICR0_L7_n_SHIFT                      15
#define CSU_ICR0_IC8_n_MASK                      0x10000u
#define CSU_ICR0_IC8_n_SHIFT                     16
#define CSU_ICR0_L8_n_MASK                       0x20000u
#define CSU_ICR0_L8_n_SHIFT                      17
#define CSU_ICR0_IC9_n_MASK                      0x40000u
#define CSU_ICR0_IC9_n_SHIFT                     18
#define CSU_ICR0_L9_n_MASK                       0x80000u
#define CSU_ICR0_L9_n_SHIFT                      19
#define CSU_ICR0_IC10_n_MASK                     0x100000u
#define CSU_ICR0_IC10_n_SHIFT                    20
#define CSU_ICR0_L10_n_MASK                      0x200000u
#define CSU_ICR0_L10_n_SHIFT                     21
#define CSU_ICR0_IC11_n_MASK                     0x400000u
#define CSU_ICR0_IC11_n_SHIFT                    22
#define CSU_ICR0_L11_n_MASK                      0x800000u
#define CSU_ICR0_L11_n_SHIFT                     23
#define CSU_ICR0_IC12_n_MASK                     0x1000000u
#define CSU_ICR0_IC12_n_SHIFT                    24
#define CSU_ICR0_L12_n_MASK                      0x2000000u
#define CSU_ICR0_L12_n_SHIFT                     25
#define CSU_ICR0_IC13_n_MASK                     0x4000000u
#define CSU_ICR0_IC13_n_SHIFT                    26
#define CSU_ICR0_L13_n_MASK                      0x8000000u
#define CSU_ICR0_L13_n_SHIFT                     27
#define CSU_ICR0_IC14_n_MASK                     0x10000000u
#define CSU_ICR0_IC14_n_SHIFT                    28
#define CSU_ICR0_L14_n_MASK                      0x20000000u
#define CSU_ICR0_L14_n_SHIFT                     29
#define CSU_ICR0_IC15_n_MASK                     0x40000000u
#define CSU_ICR0_IC15_n_SHIFT                    30
#define CSU_ICR0_L15_n_MASK                      0x80000000u
#define CSU_ICR0_L15_n_SHIFT                     31
/* ISR0 Bit Fields */
#define CSU_ISR0_IS0_n_MASK                      0x1u
#define CSU_ISR0_IS0_n_SHIFT                     0
#define CSU_ISR0_IS1_n_MASK                      0x4u
#define CSU_ISR0_IS1_n_SHIFT                     2
#define CSU_ISR0_IS2_n_MASK                      0x10u
#define CSU_ISR0_IS2_n_SHIFT                     4
#define CSU_ISR0_IS3_n_MASK                      0x40u
#define CSU_ISR0_IS3_n_SHIFT                     6
#define CSU_ISR0_IS4_n_MASK                      0x100u
#define CSU_ISR0_IS4_n_SHIFT                     8
#define CSU_ISR0_IS5_n_MASK                      0x400u
#define CSU_ISR0_IS5_n_SHIFT                     10
#define CSU_ISR0_IS6_n_MASK                      0x1000u
#define CSU_ISR0_IS6_n_SHIFT                     12
#define CSU_ISR0_IS7_n_MASK                      0x4000u
#define CSU_ISR0_IS7_n_SHIFT                     14
#define CSU_ISR0_IS8_n_MASK                      0x10000u
#define CSU_ISR0_IS8_n_SHIFT                     16
#define CSU_ISR0_IS9_n_MASK                      0x40000u
#define CSU_ISR0_IS9_n_SHIFT                     18
#define CSU_ISR0_IS10_n_MASK                     0x100000u
#define CSU_ISR0_IS10_n_SHIFT                    20
#define CSU_ISR0_IS11_n_MASK                     0x400000u
#define CSU_ISR0_IS11_n_SHIFT                    22
#define CSU_ISR0_IS12_n_MASK                     0x1000000u
#define CSU_ISR0_IS12_n_SHIFT                    24
#define CSU_ISR0_IS13_n_MASK                     0x4000000u
#define CSU_ISR0_IS13_n_SHIFT                    26
#define CSU_ISR0_IS14_n_MASK                     0x10000000u
#define CSU_ISR0_IS14_n_SHIFT                    28
#define CSU_ISR0_IS15_n_MASK                     0x40000000u
#define CSU_ISR0_IS15_n_SHIFT                    30
/* ICR1 Bit Fields */
#define CSU_ICR1_IC0_n_MASK                      0x1u
#define CSU_ICR1_IC0_n_SHIFT                     0
#define CSU_ICR1_L0_n_MASK                       0x2u
#define CSU_ICR1_L0_n_SHIFT                      1
#define CSU_ICR1_IC1_n_MASK                      0x4u
#define CSU_ICR1_IC1_n_SHIFT                     2
#define CSU_ICR1_L1_n_MASK                       0x8u
#define CSU_ICR1_L1_n_SHIFT                      3
#define CSU_ICR1_IC2_n_MASK                      0x10u
#define CSU_ICR1_IC2_n_SHIFT                     4
#define CSU_ICR1_L2_n_MASK                       0x20u
#define CSU_ICR1_L2_n_SHIFT                      5
#define CSU_ICR1_IC3_n_MASK                      0x40u
#define CSU_ICR1_IC3_n_SHIFT                     6
#define CSU_ICR1_L3_n_MASK                       0x80u
#define CSU_ICR1_L3_n_SHIFT                      7
#define CSU_ICR1_IC4_n_MASK                      0x100u
#define CSU_ICR1_IC4_n_SHIFT                     8
#define CSU_ICR1_L4_n_MASK                       0x200u
#define CSU_ICR1_L4_n_SHIFT                      9
#define CSU_ICR1_IC5_n_MASK                      0x400u
#define CSU_ICR1_IC5_n_SHIFT                     10
#define CSU_ICR1_L5_n_MASK                       0x800u
#define CSU_ICR1_L5_n_SHIFT                      11
#define CSU_ICR1_IC6_n_MASK                      0x1000u
#define CSU_ICR1_IC6_n_SHIFT                     12
#define CSU_ICR1_L6_n_MASK                       0x2000u
#define CSU_ICR1_L6_n_SHIFT                      13
#define CSU_ICR1_IC7_n_MASK                      0x4000u
#define CSU_ICR1_IC7_n_SHIFT                     14
#define CSU_ICR1_L7_n_MASK                       0x8000u
#define CSU_ICR1_L7_n_SHIFT                      15
#define CSU_ICR1_IC8_n_MASK                      0x10000u
#define CSU_ICR1_IC8_n_SHIFT                     16
#define CSU_ICR1_L8_n_MASK                       0x20000u
#define CSU_ICR1_L8_n_SHIFT                      17
#define CSU_ICR1_IC9_n_MASK                      0x40000u
#define CSU_ICR1_IC9_n_SHIFT                     18
#define CSU_ICR1_L9_n_MASK                       0x80000u
#define CSU_ICR1_L9_n_SHIFT                      19
#define CSU_ICR1_IC10_n_MASK                     0x100000u
#define CSU_ICR1_IC10_n_SHIFT                    20
#define CSU_ICR1_L10_n_MASK                      0x200000u
#define CSU_ICR1_L10_n_SHIFT                     21
#define CSU_ICR1_IC11_n_MASK                     0x400000u
#define CSU_ICR1_IC11_n_SHIFT                    22
#define CSU_ICR1_L11_n_MASK                      0x800000u
#define CSU_ICR1_L11_n_SHIFT                     23
#define CSU_ICR1_IC12_n_MASK                     0x1000000u
#define CSU_ICR1_IC12_n_SHIFT                    24
#define CSU_ICR1_L12_n_MASK                      0x2000000u
#define CSU_ICR1_L12_n_SHIFT                     25
#define CSU_ICR1_IC13_n_MASK                     0x4000000u
#define CSU_ICR1_IC13_n_SHIFT                    26
#define CSU_ICR1_L13_n_MASK                      0x8000000u
#define CSU_ICR1_L13_n_SHIFT                     27
#define CSU_ICR1_IC14_n_MASK                     0x10000000u
#define CSU_ICR1_IC14_n_SHIFT                    28
#define CSU_ICR1_L14_n_MASK                      0x20000000u
#define CSU_ICR1_L14_n_SHIFT                     29
#define CSU_ICR1_IC15_n_MASK                     0x40000000u
#define CSU_ICR1_IC15_n_SHIFT                    30
#define CSU_ICR1_L15_n_MASK                      0x80000000u
#define CSU_ICR1_L15_n_SHIFT                     31
/* ISR1 Bit Fields */
#define CSU_ISR1_IS0_n_MASK                      0x1u
#define CSU_ISR1_IS0_n_SHIFT                     0
#define CSU_ISR1_IS1_n_MASK                      0x4u
#define CSU_ISR1_IS1_n_SHIFT                     2
#define CSU_ISR1_IS2_n_MASK                      0x10u
#define CSU_ISR1_IS2_n_SHIFT                     4
#define CSU_ISR1_IS3_n_MASK                      0x40u
#define CSU_ISR1_IS3_n_SHIFT                     6
#define CSU_ISR1_IS4_n_MASK                      0x100u
#define CSU_ISR1_IS4_n_SHIFT                     8
#define CSU_ISR1_IS5_n_MASK                      0x400u
#define CSU_ISR1_IS5_n_SHIFT                     10
#define CSU_ISR1_IS6_n_MASK                      0x1000u
#define CSU_ISR1_IS6_n_SHIFT                     12
#define CSU_ISR1_IS7_n_MASK                      0x4000u
#define CSU_ISR1_IS7_n_SHIFT                     14
#define CSU_ISR1_IS8_n_MASK                      0x10000u
#define CSU_ISR1_IS8_n_SHIFT                     16
#define CSU_ISR1_IS9_n_MASK                      0x40000u
#define CSU_ISR1_IS9_n_SHIFT                     18
#define CSU_ISR1_IS10_n_MASK                     0x100000u
#define CSU_ISR1_IS10_n_SHIFT                    20
#define CSU_ISR1_IS11_n_MASK                     0x400000u
#define CSU_ISR1_IS11_n_SHIFT                    22
#define CSU_ISR1_IS12_n_MASK                     0x1000000u
#define CSU_ISR1_IS12_n_SHIFT                    24
#define CSU_ISR1_IS13_n_MASK                     0x4000000u
#define CSU_ISR1_IS13_n_SHIFT                    26
#define CSU_ISR1_IS14_n_MASK                     0x10000000u
#define CSU_ISR1_IS14_n_SHIFT                    28
#define CSU_ISR1_IS15_n_MASK                     0x40000000u
#define CSU_ISR1_IS15_n_SHIFT                    30

/**
 * @}
 */ /* end of group CSU_Register_Masks */


/* CSU - Peripheral instance base addresses */
/** Peripheral CSU base pointer */
#define CSU_BASE_PTR                             ((CSU_MemMapPtr)0x40017000u)
/** Array initializer of CSU peripheral base pointers */
#define CSU_BASE_PTRS                            { CSU_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- CSU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup CSU_Register_Accessor_Macros CSU - Register accessor macros
 * @{
 */


/* CSU - Register instance definitions */
/* CSU */
#define CSU_CSL0                                 CSU_CSL_REG(CSU_BASE_PTR,0)
#define CSU_CSL1                                 CSU_CSL_REG(CSU_BASE_PTR,1)
#define CSU_CSL2                                 CSU_CSL_REG(CSU_BASE_PTR,2)
#define CSU_CSL3                                 CSU_CSL_REG(CSU_BASE_PTR,3)
#define CSU_CSL4                                 CSU_CSL_REG(CSU_BASE_PTR,4)
#define CSU_CSL5                                 CSU_CSL_REG(CSU_BASE_PTR,5)
#define CSU_CSL6                                 CSU_CSL_REG(CSU_BASE_PTR,6)
#define CSU_CSL7                                 CSU_CSL_REG(CSU_BASE_PTR,7)
#define CSU_CSL8                                 CSU_CSL_REG(CSU_BASE_PTR,8)
#define CSU_CSL9                                 CSU_CSL_REG(CSU_BASE_PTR,9)
#define CSU_CSL10                                CSU_CSL_REG(CSU_BASE_PTR,10)
#define CSU_CSL11                                CSU_CSL_REG(CSU_BASE_PTR,11)
#define CSU_CSL12                                CSU_CSL_REG(CSU_BASE_PTR,12)
#define CSU_CSL13                                CSU_CSL_REG(CSU_BASE_PTR,13)
#define CSU_CSL14                                CSU_CSL_REG(CSU_BASE_PTR,14)
#define CSU_CSL15                                CSU_CSL_REG(CSU_BASE_PTR,15)
#define CSU_CSL16                                CSU_CSL_REG(CSU_BASE_PTR,16)
#define CSU_CSL17                                CSU_CSL_REG(CSU_BASE_PTR,17)
#define CSU_CSL18                                CSU_CSL_REG(CSU_BASE_PTR,18)
#define CSU_CSL19                                CSU_CSL_REG(CSU_BASE_PTR,19)
#define CSU_CSL20                                CSU_CSL_REG(CSU_BASE_PTR,20)
#define CSU_CSL21                                CSU_CSL_REG(CSU_BASE_PTR,21)
#define CSU_CSL22                                CSU_CSL_REG(CSU_BASE_PTR,22)
#define CSU_CSL23                                CSU_CSL_REG(CSU_BASE_PTR,23)
#define CSU_CSL24                                CSU_CSL_REG(CSU_BASE_PTR,24)
#define CSU_CSL25                                CSU_CSL_REG(CSU_BASE_PTR,25)
#define CSU_CSL26                                CSU_CSL_REG(CSU_BASE_PTR,26)
#define CSU_CSL27                                CSU_CSL_REG(CSU_BASE_PTR,27)
#define CSU_CSL28                                CSU_CSL_REG(CSU_BASE_PTR,28)
#define CSU_CSL29                                CSU_CSL_REG(CSU_BASE_PTR,29)
#define CSU_CSL30                                CSU_CSL_REG(CSU_BASE_PTR,30)
#define CSU_CSL31                                CSU_CSL_REG(CSU_BASE_PTR,31)
#define CSU_CSL32                                CSU_CSL_REG(CSU_BASE_PTR,32)
#define CSU_CSL33                                CSU_CSL_REG(CSU_BASE_PTR,33)
#define CSU_CSL34                                CSU_CSL_REG(CSU_BASE_PTR,34)
#define CSU_CSL35                                CSU_CSL_REG(CSU_BASE_PTR,35)
#define CSU_CSL36                                CSU_CSL_REG(CSU_BASE_PTR,36)
#define CSU_CSL37                                CSU_CSL_REG(CSU_BASE_PTR,37)
#define CSU_CSL38                                CSU_CSL_REG(CSU_BASE_PTR,38)
#define CSU_CSL39                                CSU_CSL_REG(CSU_BASE_PTR,39)
#define CSU_CSL40                                CSU_CSL_REG(CSU_BASE_PTR,40)
#define CSU_CSL41                                CSU_CSL_REG(CSU_BASE_PTR,41)
#define CSU_CSL42                                CSU_CSL_REG(CSU_BASE_PTR,42)
#define CSU_CSL43                                CSU_CSL_REG(CSU_BASE_PTR,43)
#define CSU_CSL44                                CSU_CSL_REG(CSU_BASE_PTR,44)
#define CSU_CSL45                                CSU_CSL_REG(CSU_BASE_PTR,45)
#define CSU_CSL46                                CSU_CSL_REG(CSU_BASE_PTR,46)
#define CSU_CSL47                                CSU_CSL_REG(CSU_BASE_PTR,47)
#define CSU_CSL48                                CSU_CSL_REG(CSU_BASE_PTR,48)
#define CSU_CSL49                                CSU_CSL_REG(CSU_BASE_PTR,49)
#define CSU_CSL50                                CSU_CSL_REG(CSU_BASE_PTR,50)
#define CSU_CSL51                                CSU_CSL_REG(CSU_BASE_PTR,51)
#define CSU_CSL52                                CSU_CSL_REG(CSU_BASE_PTR,52)
#define CSU_CSL53                                CSU_CSL_REG(CSU_BASE_PTR,53)
#define CSU_CSL54                                CSU_CSL_REG(CSU_BASE_PTR,54)
#define CSU_CSL55                                CSU_CSL_REG(CSU_BASE_PTR,55)
#define CSU_CSL56                                CSU_CSL_REG(CSU_BASE_PTR,56)
#define CSU_CSL57                                CSU_CSL_REG(CSU_BASE_PTR,57)
#define CSU_CSL58                                CSU_CSL_REG(CSU_BASE_PTR,58)
#define CSU_CSL59                                CSU_CSL_REG(CSU_BASE_PTR,59)
#define CSU_CSL60                                CSU_CSL_REG(CSU_BASE_PTR,60)
#define CSU_CSL61                                CSU_CSL_REG(CSU_BASE_PTR,61)
#define CSU_CSL62                                CSU_CSL_REG(CSU_BASE_PTR,62)
#define CSU_CSL63                                CSU_CSL_REG(CSU_BASE_PTR,63)
#define CSU_HP0                                  CSU_HP_REG(CSU_BASE_PTR,0)
#define CSU_HP1                                  CSU_HP_REG(CSU_BASE_PTR,1)
#define CSU_SA0                                  CSU_SA_REG(CSU_BASE_PTR,0)
#define CSU_SA1                                  CSU_SA_REG(CSU_BASE_PTR,1)
#define CSU_AMK0                                 CSU_AMK_REG(CSU_BASE_PTR,0)
#define CSU_AMK1                                 CSU_AMK_REG(CSU_BASE_PTR,1)
#define CSU_AROUT0                               CSU_AROUT_REG(CSU_BASE_PTR,0)
#define CSU_AROUT1                               CSU_AROUT_REG(CSU_BASE_PTR,1)
#define CSU_AROUT2                               CSU_AROUT_REG(CSU_BASE_PTR,2)
#define CSU_AROUT3                               CSU_AROUT_REG(CSU_BASE_PTR,3)
#define CSU_AROUT4                               CSU_AROUT_REG(CSU_BASE_PTR,4)
#define CSU_AROUT5                               CSU_AROUT_REG(CSU_BASE_PTR,5)
#define CSU_AROUT6                               CSU_AROUT_REG(CSU_BASE_PTR,6)
#define CSU_AROUT7                               CSU_AROUT_REG(CSU_BASE_PTR,7)
#define CSU_AROUT8                               CSU_AROUT_REG(CSU_BASE_PTR,8)
#define CSU_AROUT9                               CSU_AROUT_REG(CSU_BASE_PTR,9)
#define CSU_AROUT10                              CSU_AROUT_REG(CSU_BASE_PTR,10)
#define CSU_AROUT11                              CSU_AROUT_REG(CSU_BASE_PTR,11)
#define CSU_AROUT12                              CSU_AROUT_REG(CSU_BASE_PTR,12)
#define CSU_ASOFT                                CSU_ASOFT_REG(CSU_BASE_PTR)
#define CSU_ACOUNTER                             CSU_ACOUNTER_REG(CSU_BASE_PTR)
#define CSU_ACONTROL                             CSU_ACONTROL_REG(CSU_BASE_PTR)
#define CSU_HPC0                                 CSU_HPC_REG(CSU_BASE_PTR,0)
#define CSU_HPC1                                 CSU_HPC_REG(CSU_BASE_PTR,1)
#define CSU_ICR0                                 CSU_ICR0_REG(CSU_BASE_PTR)
#define CSU_ISR0                                 CSU_ISR0_REG(CSU_BASE_PTR)
#define CSU_ICR1                                 CSU_ICR1_REG(CSU_BASE_PTR)
#define CSU_ISR1                                 CSU_ISR1_REG(CSU_BASE_PTR)

/* CSU - Register array accessors */
#define CSU_CSL(index)                           CSU_CSL_REG(CSU_BASE_PTR,index)
#define CSU_HP(index)                            CSU_HP_REG(CSU_BASE_PTR,index)
#define CSU_SA(index)                            CSU_SA_REG(CSU_BASE_PTR,index)
#define CSU_AMK(index)                           CSU_AMK_REG(CSU_BASE_PTR,index)
#define CSU_AROUT(index)                         CSU_AROUT_REG(CSU_BASE_PTR,index)
#define CSU_HPC(index)                           CSU_HPC_REG(CSU_BASE_PTR,index)

/**
 * @}
 */ /* end of group CSU_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group CSU_Peripheral */


/* ----------------------------------------------------------------------------
   -- DAC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DAC_Peripheral DAC
 * @{
 */

/** DAC - Peripheral register structure */
typedef struct DAC_MemMap {
  uint32_t DAT[16];                                /**< DAC Data Register, array offset: 0x0, array step: 0x4 */
  uint32_t STATCTRL;                               /**< DAC Status and Control Register, offset: 0x40 */
} volatile *DAC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DAC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DAC_Register_Accessor_Macros DAC - Register accessor macros
 * @{
 */


/* DAC - Register accessors */
#define DAC_DAT_REG(base,index)                  ((base)->DAT[index])
#define DAC_STATCTRL_REG(base)                   ((base)->STATCTRL)

/**
 * @}
 */ /* end of group DAC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DAC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DAC_Register_Masks DAC Register Masks
 * @{
 */

/* DAT Bit Fields */
#define DAC_DAT_DATA_MASK                        0xFFFu
#define DAC_DAT_DATA_SHIFT                       0
#define DAC_DAT_DATA(x)                          (((uint32_t)(((uint32_t)(x))<<DAC_DAT_DATA_SHIFT))&DAC_DAT_DATA_MASK)
/* STATCTRL Bit Fields */
#define DAC_STATCTRL_DACBFRPBF_MASK              0x1u
#define DAC_STATCTRL_DACBFRPBF_SHIFT             0
#define DAC_STATCTRL_DACBFRPTF_MASK              0x2u
#define DAC_STATCTRL_DACBFRPTF_SHIFT             1
#define DAC_STATCTRL_DACBFWMF_MASK               0x4u
#define DAC_STATCTRL_DACBFWMF_SHIFT              2
#define DAC_STATCTRL_DACBBIEN_MASK               0x100u
#define DAC_STATCTRL_DACBBIEN_SHIFT              8
#define DAC_STATCTRL_DACBTIEN_MASK               0x200u
#define DAC_STATCTRL_DACBTIEN_SHIFT              9
#define DAC_STATCTRL_DACBWIEN_MASK               0x400u
#define DAC_STATCTRL_DACBWIEN_SHIFT              10
#define DAC_STATCTRL_LPEN_MASK                   0x800u
#define DAC_STATCTRL_LPEN_SHIFT                  11
#define DAC_STATCTRL_DACSWTRG_MASK               0x1000u
#define DAC_STATCTRL_DACSWTRG_SHIFT              12
#define DAC_STATCTRL_DACTRGSEL_MASK              0x2000u
#define DAC_STATCTRL_DACTRGSEL_SHIFT             13
#define DAC_STATCTRL_DACRFS_MASK                 0x4000u
#define DAC_STATCTRL_DACRFS_SHIFT                14
#define DAC_STATCTRL_DACEN_MASK                  0x8000u
#define DAC_STATCTRL_DACEN_SHIFT                 15
#define DAC_STATCTRL_DACBFEN_MASK                0x10000u
#define DAC_STATCTRL_DACBFEN_SHIFT               16
#define DAC_STATCTRL_DACBFMD_MASK                0x60000u
#define DAC_STATCTRL_DACBFMD_SHIFT               17
#define DAC_STATCTRL_DACBFMD(x)                  (((uint32_t)(((uint32_t)(x))<<DAC_STATCTRL_DACBFMD_SHIFT))&DAC_STATCTRL_DACBFMD_MASK)
#define DAC_STATCTRL_DACBFWM_MASK                0x180000u
#define DAC_STATCTRL_DACBFWM_SHIFT               19
#define DAC_STATCTRL_DACBFWM(x)                  (((uint32_t)(((uint32_t)(x))<<DAC_STATCTRL_DACBFWM_SHIFT))&DAC_STATCTRL_DACBFWM_MASK)
#define DAC_STATCTRL_DMAEN_MASK                  0x800000u
#define DAC_STATCTRL_DMAEN_SHIFT                 23
#define DAC_STATCTRL_DACBFUP_MASK                0xF000000u
#define DAC_STATCTRL_DACBFUP_SHIFT               24
#define DAC_STATCTRL_DACBFUP(x)                  (((uint32_t)(((uint32_t)(x))<<DAC_STATCTRL_DACBFUP_SHIFT))&DAC_STATCTRL_DACBFUP_MASK)
#define DAC_STATCTRL_DACBFRP_MASK                0xF0000000u
#define DAC_STATCTRL_DACBFRP_SHIFT               28
#define DAC_STATCTRL_DACBFRP(x)                  (((uint32_t)(((uint32_t)(x))<<DAC_STATCTRL_DACBFRP_SHIFT))&DAC_STATCTRL_DACBFRP_MASK)

/**
 * @}
 */ /* end of group DAC_Register_Masks */


/* DAC - Peripheral instance base addresses */
/** Peripheral DAC0 base pointer */
#define DAC0_BASE_PTR                            ((DAC_MemMapPtr)0x400CC000u)
/** Peripheral DAC1 base pointer */
#define DAC1_BASE_PTR                            ((DAC_MemMapPtr)0x400CD000u)
/** Array initializer of DAC peripheral base pointers */
#define DAC_BASE_PTRS                            { DAC0_BASE_PTR, DAC1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- DAC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DAC_Register_Accessor_Macros DAC - Register accessor macros
 * @{
 */


/* DAC - Register instance definitions */
/* DAC0 */
#define DAC0_DAT0                                DAC_DAT_REG(DAC0_BASE_PTR,0)
#define DAC0_DAT1                                DAC_DAT_REG(DAC0_BASE_PTR,1)
#define DAC0_DAT2                                DAC_DAT_REG(DAC0_BASE_PTR,2)
#define DAC0_DAT3                                DAC_DAT_REG(DAC0_BASE_PTR,3)
#define DAC0_DAT4                                DAC_DAT_REG(DAC0_BASE_PTR,4)
#define DAC0_DAT5                                DAC_DAT_REG(DAC0_BASE_PTR,5)
#define DAC0_DAT6                                DAC_DAT_REG(DAC0_BASE_PTR,6)
#define DAC0_DAT7                                DAC_DAT_REG(DAC0_BASE_PTR,7)
#define DAC0_DAT8                                DAC_DAT_REG(DAC0_BASE_PTR,8)
#define DAC0_DAT9                                DAC_DAT_REG(DAC0_BASE_PTR,9)
#define DAC0_DAT10                               DAC_DAT_REG(DAC0_BASE_PTR,10)
#define DAC0_DAT11                               DAC_DAT_REG(DAC0_BASE_PTR,11)
#define DAC0_DAT12                               DAC_DAT_REG(DAC0_BASE_PTR,12)
#define DAC0_DAT13                               DAC_DAT_REG(DAC0_BASE_PTR,13)
#define DAC0_DAT14                               DAC_DAT_REG(DAC0_BASE_PTR,14)
#define DAC0_DAT15                               DAC_DAT_REG(DAC0_BASE_PTR,15)
#define DAC0_STATCTRL                            DAC_STATCTRL_REG(DAC0_BASE_PTR)
/* DAC1 */
#define DAC1_DAT0                                DAC_DAT_REG(DAC1_BASE_PTR,0)
#define DAC1_DAT1                                DAC_DAT_REG(DAC1_BASE_PTR,1)
#define DAC1_DAT2                                DAC_DAT_REG(DAC1_BASE_PTR,2)
#define DAC1_DAT3                                DAC_DAT_REG(DAC1_BASE_PTR,3)
#define DAC1_DAT4                                DAC_DAT_REG(DAC1_BASE_PTR,4)
#define DAC1_DAT5                                DAC_DAT_REG(DAC1_BASE_PTR,5)
#define DAC1_DAT6                                DAC_DAT_REG(DAC1_BASE_PTR,6)
#define DAC1_DAT7                                DAC_DAT_REG(DAC1_BASE_PTR,7)
#define DAC1_DAT8                                DAC_DAT_REG(DAC1_BASE_PTR,8)
#define DAC1_DAT9                                DAC_DAT_REG(DAC1_BASE_PTR,9)
#define DAC1_DAT10                               DAC_DAT_REG(DAC1_BASE_PTR,10)
#define DAC1_DAT11                               DAC_DAT_REG(DAC1_BASE_PTR,11)
#define DAC1_DAT12                               DAC_DAT_REG(DAC1_BASE_PTR,12)
#define DAC1_DAT13                               DAC_DAT_REG(DAC1_BASE_PTR,13)
#define DAC1_DAT14                               DAC_DAT_REG(DAC1_BASE_PTR,14)
#define DAC1_DAT15                               DAC_DAT_REG(DAC1_BASE_PTR,15)
#define DAC1_STATCTRL                            DAC_STATCTRL_REG(DAC1_BASE_PTR)

/* DAC - Register array accessors */
#define DAC0_DAT(index)                          DAC_DAT_REG(DAC0_BASE_PTR,index)
#define DAC1_DAT(index)                          DAC_DAT_REG(DAC1_BASE_PTR,index)

/**
 * @}
 */ /* end of group DAC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group DAC_Peripheral */


/* ----------------------------------------------------------------------------
   -- DCU
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DCU_Peripheral DCU
 * @{
 */

/** DCU - Peripheral register structure */
typedef struct DCU_MemMap {
  uint32_t CTRLDESCCURSOR1;                        /**< Control Descriptor Cursor 1 Register, offset: 0x0 */
  uint32_t CTRLDESCCURSOR2;                        /**< Control Descriptor Cursor 2 Register, offset: 0x4 */
  uint32_t CTRLDESCCURSOR3;                        /**< Control Descriptor Cursor 3 Register, offset: 0x8 */
  uint32_t CTRLDESCCURSOR4;                        /**< Control Descriptor Cursor 4 Register, offset: 0xC */
  uint32_t DCU_MODE;                               /**< DCU4 Mode Register, offset: 0x10 */
  uint32_t BGND;                                   /**< Background Register, offset: 0x14 */
  uint32_t DISP_SIZE;                              /**< Display Size Register, offset: 0x18 */
  uint32_t HSYN_PARA;                              /**< Horizontal Sync Parameter Register, offset: 0x1C */
  uint32_t VSYN_PARA;                              /**< Vertical Sync Parameter Register, offset: 0x20 */
  uint32_t SYNPOL;                                 /**< Synchronize Polarity Register, offset: 0x24 */
  uint32_t THRESHOLD;                              /**< Threshold Register, offset: 0x28 */
  uint32_t INT_STATUS;                             /**< Interrupt Status Register, offset: 0x2C */
  uint32_t INT_MASK;                               /**< Interrupt Mask Register, offset: 0x30 */
  uint32_t COLBAR_1;                               /**< COLBAR_1 Register, offset: 0x34 */
  uint32_t COLBAR_2;                               /**< COLBAR_2 Register, offset: 0x38 */
  uint32_t COLBAR_3;                               /**< COLBAR_3 Register, offset: 0x3C */
  uint32_t COLBAR_4;                               /**< COLBAR_4 Register, offset: 0x40 */
  uint32_t COLBAR_5;                               /**< COLBAR_5 Register, offset: 0x44 */
  uint32_t COLBAR_6;                               /**< COLBAR_6 Register, offset: 0x48 */
  uint32_t COLBAR_7;                               /**< COLBAR_7 Register, offset: 0x4C */
  uint32_t COLBAR_8;                               /**< COLBAR_8 Register, offset: 0x50 */
  uint32_t DIV_RATIO;                              /**< Divide Ratio Register, offset: 0x54 */
  uint32_t SIGN_CALC_1;                            /**< Sign Calculation 1 Register, offset: 0x58 */
  uint32_t SIGN_CALC_2;                            /**< Sign Calculation 2 Register, offset: 0x5C */
  uint32_t CRC_VAL;                                /**< CRC Value Register, offset: 0x60 */
  uint32_t PDI_STATUS;                             /**< PDI Status Register, offset: 0x64 */
  uint32_t PDI_STA_MSK;                            /**< PDI Status Mask Register, offset: 0x68 */
  uint32_t PARR_ERR_STATUS1;                       /**< Parameter Error Status 1 Register, offset: 0x6C */
  uint32_t PARR_ERR_STATUS2;                       /**< Parameter Error Status 2 Register, offset: 0x70 */
  uint8_t RESERVED_0[8];
  uint32_t PARR_ERR_STATUS3;                       /**< Parameter Error Status 3 Register, offset: 0x7C */
  uint32_t MASK_PARR_ERR_STATUS1;                  /**< Mask Parameter Error Status 1 Register, offset: 0x80 */
  uint32_t MASK_PARR_ERR_STATUS2;                  /**< Mask Parameter Error Status 2 Register, offset: 0x84 */
  uint8_t RESERVED_1[8];
  uint32_t MASK_PARR_ERR_STATUS3;                  /**< Mask Parameter Error Status 3 Register, offset: 0x90 */
  uint32_t THRESHOLD_INP_BUF_1;                    /**< Threshold Input 1 Register, offset: 0x94 */
  uint32_t THRESHOLD_INP_BUF_2;                    /**< Threshold Input 2 Register, offset: 0x98 */
  uint32_t THRESHOLD_INP_BUF_3;                    /**< Threshold Input 3 Register, offset: 0x9C */
  uint32_t LUMA_COMP;                              /**< LUMA Component Register, offset: 0xA0 */
  uint32_t CHROMA_RED;                             /**< Red Chroma Components Register, offset: 0xA4 */
  uint32_t CHROMA_GREEN;                           /**< Green Chroma Components Register, offset: 0xA8 */
  uint32_t CHROMA_BLUE;                            /**< Blue Chroma Components Register, offset: 0xAC */
  uint32_t CRC_POS;                                /**< CRC Position Register, offset: 0xB0 */
  uint32_t LYR_INTPOL_EN;                          /**< Layer Interpolation Enable Register, offset: 0xB4 */
  uint32_t LYR_LUMA_COMP;                          /**< Layer Luminance Component Register, offset: 0xB8 */
  uint32_t LYR_CHRM_RED;                           /**< Layer Chroma Red Register, offset: 0xBC */
  uint32_t LYR_CHRM_GRN;                           /**< Layer Chroma Green Register, offset: 0xC0 */
  uint32_t LYR_CHRM_BLUE;                          /**< Layer Chroma Blue Register, offset: 0xC4 */
  uint32_t COMP_IMSIZE;                            /**< Compression Image Size Register, offset: 0xC8 */
  uint32_t UPDATE_MODE;                            /**< Update Mode Register, offset: 0xCC */
  uint32_t UNDERRUN;                               /**< Underrun Register, offset: 0xD0 */
  uint8_t RESERVED_2[300];
  uint32_t CTRLDESCL0_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x200 */
  uint32_t CTRLDESCL0_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x204 */
  uint32_t CTRLDESCL0_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x208 */
  uint32_t CTRLDESCL0_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x20C */
  uint32_t CTRLDESCL0_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x210 */
  uint32_t CTRLDESCL0_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x214 */
  uint32_t CTRLDESCL0_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x218 */
  uint32_t CTRLDESCL0_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x21C */
  uint32_t CTRLDESCL0_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x220 */
  uint8_t RESERVED_3[28];
  uint32_t CTRLDESCL1_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x240 */
  uint32_t CTRLDESCL1_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x244 */
  uint32_t CTRLDESCL1_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x248 */
  uint32_t CTRLDESCL1_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x24C */
  uint32_t CTRLDESCL1_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x250 */
  uint32_t CTRLDESCL1_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x254 */
  uint32_t CTRLDESCL1_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x258 */
  uint32_t CTRLDESCL1_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x25C */
  uint32_t CTRLDESCL1_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x260 */
  uint8_t RESERVED_4[28];
  uint32_t CTRLDESCL2_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x280 */
  uint32_t CTRLDESCL2_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x284 */
  uint32_t CTRLDESCL2_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x288 */
  uint32_t CTRLDESCL2_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x28C */
  uint32_t CTRLDESCL2_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x290 */
  uint32_t CTRLDESCL2_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x294 */
  uint32_t CTRLDESCL2_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x298 */
  uint32_t CTRLDESCL2_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x29C */
  uint32_t CTRLDESCL2_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x2A0 */
  uint8_t RESERVED_5[28];
  uint32_t CTRLDESCL3_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x2C0 */
  uint32_t CTRLDESCL3_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x2C4 */
  uint32_t CTRLDESCL3_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x2C8 */
  uint32_t CTRLDESCL3_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x2CC */
  uint32_t CTRLDESCL3_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x2D0 */
  uint32_t CTRLDESCL3_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x2D4 */
  uint32_t CTRLDESCL3_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x2D8 */
  uint32_t CTRLDESCL3_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x2DC */
  uint32_t CTRLDESCL3_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x2E0 */
  uint8_t RESERVED_6[28];
  uint32_t CTRLDESCL4_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x300 */
  uint32_t CTRLDESCL4_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x304 */
  uint32_t CTRLDESCL4_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x308 */
  uint32_t CTRLDESCL4_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x30C */
  uint32_t CTRLDESCL4_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x310 */
  uint32_t CTRLDESCL4_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x314 */
  uint32_t CTRLDESCL4_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x318 */
  uint32_t CTRLDESCL4_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x31C */
  uint32_t CTRLDESCL4_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x320 */
  uint8_t RESERVED_7[28];
  uint32_t CTRLDESCL5_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x340 */
  uint32_t CTRLDESCL5_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x344 */
  uint32_t CTRLDESCL5_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x348 */
  uint32_t CTRLDESCL5_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x34C */
  uint32_t CTRLDESCL5_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x350 */
  uint32_t CTRLDESCL5_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x354 */
  uint32_t CTRLDESCL5_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x358 */
  uint32_t CTRLDESCL5_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x35C */
  uint32_t CTRLDESCL5_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x360 */
  uint8_t RESERVED_8[28];
  uint32_t CTRLDESCL6_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x380 */
  uint32_t CTRLDESCL6_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x384 */
  uint32_t CTRLDESCL6_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x388 */
  uint32_t CTRLDESCL6_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x38C */
  uint32_t CTRLDESCL6_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x390 */
  uint32_t CTRLDESCL6_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x394 */
  uint32_t CTRLDESCL6_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x398 */
  uint32_t CTRLDESCL6_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x39C */
  uint32_t CTRLDESCL6_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x3A0 */
  uint8_t RESERVED_9[28];
  uint32_t CTRLDESCL7_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x3C0 */
  uint32_t CTRLDESCL7_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x3C4 */
  uint32_t CTRLDESCL7_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x3C8 */
  uint32_t CTRLDESCL7_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x3CC */
  uint32_t CTRLDESCL7_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x3D0 */
  uint32_t CTRLDESCL7_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x3D4 */
  uint32_t CTRLDESCL7_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x3D8 */
  uint32_t CTRLDESCL7_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x3DC */
  uint32_t CTRLDESCL7_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x3E0 */
  uint8_t RESERVED_10[28];
  uint32_t CTRLDESCL8_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x400 */
  uint32_t CTRLDESCL8_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x404 */
  uint32_t CTRLDESCL8_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x408 */
  uint32_t CTRLDESCL8_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x40C */
  uint32_t CTRLDESCL8_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x410 */
  uint32_t CTRLDESCL8_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x414 */
  uint32_t CTRLDESCL8_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x418 */
  uint32_t CTRLDESCL8_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x41C */
  uint32_t CTRLDESCL8_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x420 */
  uint8_t RESERVED_11[28];
  uint32_t CTRLDESCL9_0;                           /**< Control Descriptor Ln_0 Register, offset: 0x440 */
  uint32_t CTRLDESCL9_1;                           /**< Control Descriptor Ln_1 Register, offset: 0x444 */
  uint32_t CTRLDESCL9_2;                           /**< Control Descriptor Ln_2 Register, offset: 0x448 */
  uint32_t CTRLDESCL9_3;                           /**< Control Descriptor Ln_3 Register, offset: 0x44C */
  uint32_t CTRLDESCL9_4;                           /**< Control Descriptor Ln_4 Register, offset: 0x450 */
  uint32_t CTRLDESCL9_5;                           /**< Control Descriptor Ln_5 Register, offset: 0x454 */
  uint32_t CTRLDESCL9_6;                           /**< Control Descriptor Ln_6 Register, offset: 0x458 */
  uint32_t CTRLDESCL9_7;                           /**< Control Descriptor Ln_7 Register, offset: 0x45C */
  uint32_t CTRLDESCL9_8;                           /**< Control Descriptor Ln_8 Register, offset: 0x460 */
  uint8_t RESERVED_12[28];
  uint32_t CTRLDESCL10_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x480 */
  uint32_t CTRLDESCL10_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x484 */
  uint32_t CTRLDESCL10_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x488 */
  uint32_t CTRLDESCL10_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x48C */
  uint32_t CTRLDESCL10_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x490 */
  uint32_t CTRLDESCL10_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x494 */
  uint32_t CTRLDESCL10_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x498 */
  uint32_t CTRLDESCL10_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x49C */
  uint32_t CTRLDESCL10_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x4A0 */
  uint8_t RESERVED_13[28];
  uint32_t CTRLDESCL11_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x4C0 */
  uint32_t CTRLDESCL11_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x4C4 */
  uint32_t CTRLDESCL11_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x4C8 */
  uint32_t CTRLDESCL11_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x4CC */
  uint32_t CTRLDESCL11_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x4D0 */
  uint32_t CTRLDESCL11_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x4D4 */
  uint32_t CTRLDESCL11_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x4D8 */
  uint32_t CTRLDESCL11_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x4DC */
  uint32_t CTRLDESCL11_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x4E0 */
  uint8_t RESERVED_14[28];
  uint32_t CTRLDESCL12_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x500 */
  uint32_t CTRLDESCL12_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x504 */
  uint32_t CTRLDESCL12_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x508 */
  uint32_t CTRLDESCL12_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x50C */
  uint32_t CTRLDESCL12_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x510 */
  uint32_t CTRLDESCL12_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x514 */
  uint32_t CTRLDESCL12_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x518 */
  uint32_t CTRLDESCL12_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x51C */
  uint32_t CTRLDESCL12_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x520 */
  uint8_t RESERVED_15[28];
  uint32_t CTRLDESCL13_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x540 */
  uint32_t CTRLDESCL13_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x544 */
  uint32_t CTRLDESCL13_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x548 */
  uint32_t CTRLDESCL13_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x54C */
  uint32_t CTRLDESCL13_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x550 */
  uint32_t CTRLDESCL13_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x554 */
  uint32_t CTRLDESCL13_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x558 */
  uint32_t CTRLDESCL13_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x55C */
  uint32_t CTRLDESCL13_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x560 */
  uint8_t RESERVED_16[28];
  uint32_t CTRLDESCL14_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x580 */
  uint32_t CTRLDESCL14_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x584 */
  uint32_t CTRLDESCL14_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x588 */
  uint32_t CTRLDESCL14_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x58C */
  uint32_t CTRLDESCL14_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x590 */
  uint32_t CTRLDESCL14_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x594 */
  uint32_t CTRLDESCL14_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x598 */
  uint32_t CTRLDESCL14_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x59C */
  uint32_t CTRLDESCL14_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x5A0 */
  uint8_t RESERVED_17[28];
  uint32_t CTRLDESCL15_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x5C0 */
  uint32_t CTRLDESCL15_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x5C4 */
  uint32_t CTRLDESCL15_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x5C8 */
  uint32_t CTRLDESCL15_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x5CC */
  uint32_t CTRLDESCL15_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x5D0 */
  uint32_t CTRLDESCL15_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x5D4 */
  uint32_t CTRLDESCL15_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x5D8 */
  uint32_t CTRLDESCL15_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x5DC */
  uint32_t CTRLDESCL15_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x5E0 */
  uint8_t RESERVED_18[28];
  uint32_t CTRLDESCL16_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x600 */
  uint32_t CTRLDESCL16_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x604 */
  uint32_t CTRLDESCL16_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x608 */
  uint32_t CTRLDESCL16_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x60C */
  uint32_t CTRLDESCL16_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x610 */
  uint32_t CTRLDESCL16_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x614 */
  uint32_t CTRLDESCL16_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x618 */
  uint32_t CTRLDESCL16_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x61C */
  uint32_t CTRLDESCL16_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x620 */
  uint8_t RESERVED_19[28];
  uint32_t CTRLDESCL17_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x640 */
  uint32_t CTRLDESCL17_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x644 */
  uint32_t CTRLDESCL17_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x648 */
  uint32_t CTRLDESCL17_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x64C */
  uint32_t CTRLDESCL17_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x650 */
  uint32_t CTRLDESCL17_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x654 */
  uint32_t CTRLDESCL17_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x658 */
  uint32_t CTRLDESCL17_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x65C */
  uint32_t CTRLDESCL17_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x660 */
  uint8_t RESERVED_20[28];
  uint32_t CTRLDESCL18_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x680 */
  uint32_t CTRLDESCL18_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x684 */
  uint32_t CTRLDESCL18_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x688 */
  uint32_t CTRLDESCL18_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x68C */
  uint32_t CTRLDESCL18_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x690 */
  uint32_t CTRLDESCL18_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x694 */
  uint32_t CTRLDESCL18_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x698 */
  uint32_t CTRLDESCL18_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x69C */
  uint32_t CTRLDESCL18_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x6A0 */
  uint8_t RESERVED_21[28];
  uint32_t CTRLDESCL19_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x6C0 */
  uint32_t CTRLDESCL19_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x6C4 */
  uint32_t CTRLDESCL19_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x6C8 */
  uint32_t CTRLDESCL19_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x6CC */
  uint32_t CTRLDESCL19_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x6D0 */
  uint32_t CTRLDESCL19_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x6D4 */
  uint32_t CTRLDESCL19_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x6D8 */
  uint32_t CTRLDESCL19_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x6DC */
  uint32_t CTRLDESCL19_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x6E0 */
  uint8_t RESERVED_22[28];
  uint32_t CTRLDESCL20_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x700 */
  uint32_t CTRLDESCL20_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x704 */
  uint32_t CTRLDESCL20_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x708 */
  uint32_t CTRLDESCL20_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x70C */
  uint32_t CTRLDESCL20_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x710 */
  uint32_t CTRLDESCL20_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x714 */
  uint32_t CTRLDESCL20_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x718 */
  uint32_t CTRLDESCL20_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x71C */
  uint32_t CTRLDESCL20_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x720 */
  uint8_t RESERVED_23[28];
  uint32_t CTRLDESCL21_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x740 */
  uint32_t CTRLDESCL21_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x744 */
  uint32_t CTRLDESCL21_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x748 */
  uint32_t CTRLDESCL21_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x74C */
  uint32_t CTRLDESCL21_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x750 */
  uint32_t CTRLDESCL21_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x754 */
  uint32_t CTRLDESCL21_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x758 */
  uint32_t CTRLDESCL21_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x75C */
  uint32_t CTRLDESCL21_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x760 */
  uint8_t RESERVED_24[28];
  uint32_t CTRLDESCL22_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x780 */
  uint32_t CTRLDESCL22_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x784 */
  uint32_t CTRLDESCL22_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x788 */
  uint32_t CTRLDESCL22_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x78C */
  uint32_t CTRLDESCL22_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x790 */
  uint32_t CTRLDESCL22_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x794 */
  uint32_t CTRLDESCL22_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x798 */
  uint32_t CTRLDESCL22_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x79C */
  uint32_t CTRLDESCL22_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x7A0 */
  uint8_t RESERVED_25[28];
  uint32_t CTRLDESCL23_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x7C0 */
  uint32_t CTRLDESCL23_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x7C4 */
  uint32_t CTRLDESCL23_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x7C8 */
  uint32_t CTRLDESCL23_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x7CC */
  uint32_t CTRLDESCL23_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x7D0 */
  uint32_t CTRLDESCL23_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x7D4 */
  uint32_t CTRLDESCL23_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x7D8 */
  uint32_t CTRLDESCL23_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x7DC */
  uint32_t CTRLDESCL23_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x7E0 */
  uint8_t RESERVED_26[28];
  uint32_t CTRLDESCL24_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x800 */
  uint32_t CTRLDESCL24_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x804 */
  uint32_t CTRLDESCL24_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x808 */
  uint32_t CTRLDESCL24_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x80C */
  uint32_t CTRLDESCL24_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x810 */
  uint32_t CTRLDESCL24_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x814 */
  uint32_t CTRLDESCL24_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x818 */
  uint32_t CTRLDESCL24_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x81C */
  uint32_t CTRLDESCL24_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x820 */
  uint8_t RESERVED_27[28];
  uint32_t CTRLDESCL25_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x840 */
  uint32_t CTRLDESCL25_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x844 */
  uint32_t CTRLDESCL25_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x848 */
  uint32_t CTRLDESCL25_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x84C */
  uint32_t CTRLDESCL25_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x850 */
  uint32_t CTRLDESCL25_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x854 */
  uint32_t CTRLDESCL25_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x858 */
  uint32_t CTRLDESCL25_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x85C */
  uint32_t CTRLDESCL25_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x860 */
  uint8_t RESERVED_28[28];
  uint32_t CTRLDESCL26_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x880 */
  uint32_t CTRLDESCL26_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x884 */
  uint32_t CTRLDESCL26_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x888 */
  uint32_t CTRLDESCL26_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x88C */
  uint32_t CTRLDESCL26_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x890 */
  uint32_t CTRLDESCL26_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x894 */
  uint32_t CTRLDESCL26_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x898 */
  uint32_t CTRLDESCL26_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x89C */
  uint32_t CTRLDESCL26_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x8A0 */
  uint8_t RESERVED_29[28];
  uint32_t CTRLDESCL27_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x8C0 */
  uint32_t CTRLDESCL27_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x8C4 */
  uint32_t CTRLDESCL27_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x8C8 */
  uint32_t CTRLDESCL27_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x8CC */
  uint32_t CTRLDESCL27_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x8D0 */
  uint32_t CTRLDESCL27_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x8D4 */
  uint32_t CTRLDESCL27_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x8D8 */
  uint32_t CTRLDESCL27_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x8DC */
  uint32_t CTRLDESCL27_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x8E0 */
  uint8_t RESERVED_30[28];
  uint32_t CTRLDESCL28_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x900 */
  uint32_t CTRLDESCL28_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x904 */
  uint32_t CTRLDESCL28_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x908 */
  uint32_t CTRLDESCL28_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x90C */
  uint32_t CTRLDESCL28_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x910 */
  uint32_t CTRLDESCL28_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x914 */
  uint32_t CTRLDESCL28_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x918 */
  uint32_t CTRLDESCL28_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x91C */
  uint32_t CTRLDESCL28_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x920 */
  uint8_t RESERVED_31[28];
  uint32_t CTRLDESCL29_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x940 */
  uint32_t CTRLDESCL29_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x944 */
  uint32_t CTRLDESCL29_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x948 */
  uint32_t CTRLDESCL29_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x94C */
  uint32_t CTRLDESCL29_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x950 */
  uint32_t CTRLDESCL29_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x954 */
  uint32_t CTRLDESCL29_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x958 */
  uint32_t CTRLDESCL29_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x95C */
  uint32_t CTRLDESCL29_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x960 */
  uint8_t RESERVED_32[28];
  uint32_t CTRLDESCL30_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x980 */
  uint32_t CTRLDESCL30_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x984 */
  uint32_t CTRLDESCL30_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x988 */
  uint32_t CTRLDESCL30_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x98C */
  uint32_t CTRLDESCL30_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x990 */
  uint32_t CTRLDESCL30_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x994 */
  uint32_t CTRLDESCL30_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x998 */
  uint32_t CTRLDESCL30_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x99C */
  uint32_t CTRLDESCL30_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x9A0 */
  uint8_t RESERVED_33[28];
  uint32_t CTRLDESCL31_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x9C0 */
  uint32_t CTRLDESCL31_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x9C4 */
  uint32_t CTRLDESCL31_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x9C8 */
  uint32_t CTRLDESCL31_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x9CC */
  uint32_t CTRLDESCL31_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x9D0 */
  uint32_t CTRLDESCL31_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x9D4 */
  uint32_t CTRLDESCL31_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x9D8 */
  uint32_t CTRLDESCL31_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x9DC */
  uint32_t CTRLDESCL31_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x9E0 */
  uint8_t RESERVED_34[28];
  uint32_t CTRLDESCL32_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xA00 */
  uint32_t CTRLDESCL32_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xA04 */
  uint32_t CTRLDESCL32_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xA08 */
  uint32_t CTRLDESCL32_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xA0C */
  uint32_t CTRLDESCL32_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xA10 */
  uint32_t CTRLDESCL32_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xA14 */
  uint32_t CTRLDESCL32_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xA18 */
  uint32_t CTRLDESCL32_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xA1C */
  uint32_t CTRLDESCL32_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xA20 */
  uint8_t RESERVED_35[28];
  uint32_t CTRLDESCL33_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xA40 */
  uint32_t CTRLDESCL33_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xA44 */
  uint32_t CTRLDESCL33_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xA48 */
  uint32_t CTRLDESCL33_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xA4C */
  uint32_t CTRLDESCL33_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xA50 */
  uint32_t CTRLDESCL33_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xA54 */
  uint32_t CTRLDESCL33_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xA58 */
  uint32_t CTRLDESCL33_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xA5C */
  uint32_t CTRLDESCL33_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xA60 */
  uint8_t RESERVED_36[28];
  uint32_t CTRLDESCL34_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xA80 */
  uint32_t CTRLDESCL34_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xA84 */
  uint32_t CTRLDESCL34_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xA88 */
  uint32_t CTRLDESCL34_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xA8C */
  uint32_t CTRLDESCL34_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xA90 */
  uint32_t CTRLDESCL34_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xA94 */
  uint32_t CTRLDESCL34_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xA98 */
  uint32_t CTRLDESCL34_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xA9C */
  uint32_t CTRLDESCL34_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xAA0 */
  uint8_t RESERVED_37[28];
  uint32_t CTRLDESCL35_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xAC0 */
  uint32_t CTRLDESCL35_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xAC4 */
  uint32_t CTRLDESCL35_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xAC8 */
  uint32_t CTRLDESCL35_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xACC */
  uint32_t CTRLDESCL35_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xAD0 */
  uint32_t CTRLDESCL35_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xAD4 */
  uint32_t CTRLDESCL35_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xAD8 */
  uint32_t CTRLDESCL35_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xADC */
  uint32_t CTRLDESCL35_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xAE0 */
  uint8_t RESERVED_38[28];
  uint32_t CTRLDESCL36_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xB00 */
  uint32_t CTRLDESCL36_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xB04 */
  uint32_t CTRLDESCL36_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xB08 */
  uint32_t CTRLDESCL36_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xB0C */
  uint32_t CTRLDESCL36_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xB10 */
  uint32_t CTRLDESCL36_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xB14 */
  uint32_t CTRLDESCL36_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xB18 */
  uint32_t CTRLDESCL36_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xB1C */
  uint32_t CTRLDESCL36_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xB20 */
  uint8_t RESERVED_39[28];
  uint32_t CTRLDESCL37_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xB40 */
  uint32_t CTRLDESCL37_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xB44 */
  uint32_t CTRLDESCL37_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xB48 */
  uint32_t CTRLDESCL37_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xB4C */
  uint32_t CTRLDESCL37_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xB50 */
  uint32_t CTRLDESCL37_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xB54 */
  uint32_t CTRLDESCL37_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xB58 */
  uint32_t CTRLDESCL37_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xB5C */
  uint32_t CTRLDESCL37_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xB60 */
  uint8_t RESERVED_40[28];
  uint32_t CTRLDESCL38_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xB80 */
  uint32_t CTRLDESCL38_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xB84 */
  uint32_t CTRLDESCL38_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xB88 */
  uint32_t CTRLDESCL38_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xB8C */
  uint32_t CTRLDESCL38_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xB90 */
  uint32_t CTRLDESCL38_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xB94 */
  uint32_t CTRLDESCL38_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xB98 */
  uint32_t CTRLDESCL38_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xB9C */
  uint32_t CTRLDESCL38_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xBA0 */
  uint8_t RESERVED_41[28];
  uint32_t CTRLDESCL39_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xBC0 */
  uint32_t CTRLDESCL39_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xBC4 */
  uint32_t CTRLDESCL39_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xBC8 */
  uint32_t CTRLDESCL39_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xBCC */
  uint32_t CTRLDESCL39_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xBD0 */
  uint32_t CTRLDESCL39_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xBD4 */
  uint32_t CTRLDESCL39_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xBD8 */
  uint32_t CTRLDESCL39_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xBDC */
  uint32_t CTRLDESCL39_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xBE0 */
  uint8_t RESERVED_42[28];
  uint32_t CTRLDESCL40_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xC00 */
  uint32_t CTRLDESCL40_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xC04 */
  uint32_t CTRLDESCL40_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xC08 */
  uint32_t CTRLDESCL40_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xC0C */
  uint32_t CTRLDESCL40_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xC10 */
  uint32_t CTRLDESCL40_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xC14 */
  uint32_t CTRLDESCL40_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xC18 */
  uint32_t CTRLDESCL40_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xC1C */
  uint32_t CTRLDESCL40_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xC20 */
  uint8_t RESERVED_43[28];
  uint32_t CTRLDESCL41_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xC40 */
  uint32_t CTRLDESCL41_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xC44 */
  uint32_t CTRLDESCL41_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xC48 */
  uint32_t CTRLDESCL41_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xC4C */
  uint32_t CTRLDESCL41_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xC50 */
  uint32_t CTRLDESCL41_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xC54 */
  uint32_t CTRLDESCL41_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xC58 */
  uint32_t CTRLDESCL41_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xC5C */
  uint32_t CTRLDESCL41_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xC60 */
  uint8_t RESERVED_44[28];
  uint32_t CTRLDESCL42_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xC80 */
  uint32_t CTRLDESCL42_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xC84 */
  uint32_t CTRLDESCL42_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xC88 */
  uint32_t CTRLDESCL42_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xC8C */
  uint32_t CTRLDESCL42_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xC90 */
  uint32_t CTRLDESCL42_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xC94 */
  uint32_t CTRLDESCL42_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xC98 */
  uint32_t CTRLDESCL42_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xC9C */
  uint32_t CTRLDESCL42_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xCA0 */
  uint8_t RESERVED_45[28];
  uint32_t CTRLDESCL43_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xCC0 */
  uint32_t CTRLDESCL43_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xCC4 */
  uint32_t CTRLDESCL43_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xCC8 */
  uint32_t CTRLDESCL43_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xCCC */
  uint32_t CTRLDESCL43_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xCD0 */
  uint32_t CTRLDESCL43_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xCD4 */
  uint32_t CTRLDESCL43_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xCD8 */
  uint32_t CTRLDESCL43_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xCDC */
  uint32_t CTRLDESCL43_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xCE0 */
  uint8_t RESERVED_46[28];
  uint32_t CTRLDESCL44_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xD00 */
  uint32_t CTRLDESCL44_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xD04 */
  uint32_t CTRLDESCL44_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xD08 */
  uint32_t CTRLDESCL44_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xD0C */
  uint32_t CTRLDESCL44_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xD10 */
  uint32_t CTRLDESCL44_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xD14 */
  uint32_t CTRLDESCL44_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xD18 */
  uint32_t CTRLDESCL44_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xD1C */
  uint32_t CTRLDESCL44_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xD20 */
  uint8_t RESERVED_47[28];
  uint32_t CTRLDESCL45_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xD40 */
  uint32_t CTRLDESCL45_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xD44 */
  uint32_t CTRLDESCL45_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xD48 */
  uint32_t CTRLDESCL45_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xD4C */
  uint32_t CTRLDESCL45_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xD50 */
  uint32_t CTRLDESCL45_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xD54 */
  uint32_t CTRLDESCL45_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xD58 */
  uint32_t CTRLDESCL45_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xD5C */
  uint32_t CTRLDESCL45_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xD60 */
  uint8_t RESERVED_48[28];
  uint32_t CTRLDESCL46_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xD80 */
  uint32_t CTRLDESCL46_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xD84 */
  uint32_t CTRLDESCL46_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xD88 */
  uint32_t CTRLDESCL46_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xD8C */
  uint32_t CTRLDESCL46_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xD90 */
  uint32_t CTRLDESCL46_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xD94 */
  uint32_t CTRLDESCL46_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xD98 */
  uint32_t CTRLDESCL46_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xD9C */
  uint32_t CTRLDESCL46_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xDA0 */
  uint8_t RESERVED_49[28];
  uint32_t CTRLDESCL47_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xDC0 */
  uint32_t CTRLDESCL47_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xDC4 */
  uint32_t CTRLDESCL47_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xDC8 */
  uint32_t CTRLDESCL47_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xDCC */
  uint32_t CTRLDESCL47_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xDD0 */
  uint32_t CTRLDESCL47_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xDD4 */
  uint32_t CTRLDESCL47_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xDD8 */
  uint32_t CTRLDESCL47_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xDDC */
  uint32_t CTRLDESCL47_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xDE0 */
  uint8_t RESERVED_50[28];
  uint32_t CTRLDESCL48_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xE00 */
  uint32_t CTRLDESCL48_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xE04 */
  uint32_t CTRLDESCL48_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xE08 */
  uint32_t CTRLDESCL48_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xE0C */
  uint32_t CTRLDESCL48_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xE10 */
  uint32_t CTRLDESCL48_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xE14 */
  uint32_t CTRLDESCL48_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xE18 */
  uint32_t CTRLDESCL48_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xE1C */
  uint32_t CTRLDESCL48_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xE20 */
  uint8_t RESERVED_51[28];
  uint32_t CTRLDESCL49_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xE40 */
  uint32_t CTRLDESCL49_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xE44 */
  uint32_t CTRLDESCL49_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xE48 */
  uint32_t CTRLDESCL49_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xE4C */
  uint32_t CTRLDESCL49_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xE50 */
  uint32_t CTRLDESCL49_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xE54 */
  uint32_t CTRLDESCL49_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xE58 */
  uint32_t CTRLDESCL49_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xE5C */
  uint32_t CTRLDESCL49_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xE60 */
  uint8_t RESERVED_52[28];
  uint32_t CTRLDESCL50_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xE80 */
  uint32_t CTRLDESCL50_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xE84 */
  uint32_t CTRLDESCL50_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xE88 */
  uint32_t CTRLDESCL50_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xE8C */
  uint32_t CTRLDESCL50_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xE90 */
  uint32_t CTRLDESCL50_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xE94 */
  uint32_t CTRLDESCL50_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xE98 */
  uint32_t CTRLDESCL50_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xE9C */
  uint32_t CTRLDESCL50_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xEA0 */
  uint8_t RESERVED_53[28];
  uint32_t CTRLDESCL51_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xEC0 */
  uint32_t CTRLDESCL51_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xEC4 */
  uint32_t CTRLDESCL51_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xEC8 */
  uint32_t CTRLDESCL51_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xECC */
  uint32_t CTRLDESCL51_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xED0 */
  uint32_t CTRLDESCL51_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xED4 */
  uint32_t CTRLDESCL51_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xED8 */
  uint32_t CTRLDESCL51_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xEDC */
  uint32_t CTRLDESCL51_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xEE0 */
  uint8_t RESERVED_54[28];
  uint32_t CTRLDESCL52_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xF00 */
  uint32_t CTRLDESCL52_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xF04 */
  uint32_t CTRLDESCL52_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xF08 */
  uint32_t CTRLDESCL52_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xF0C */
  uint32_t CTRLDESCL52_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xF10 */
  uint32_t CTRLDESCL52_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xF14 */
  uint32_t CTRLDESCL52_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xF18 */
  uint32_t CTRLDESCL52_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xF1C */
  uint32_t CTRLDESCL52_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xF20 */
  uint8_t RESERVED_55[28];
  uint32_t CTRLDESCL53_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xF40 */
  uint32_t CTRLDESCL53_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xF44 */
  uint32_t CTRLDESCL53_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xF48 */
  uint32_t CTRLDESCL53_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xF4C */
  uint32_t CTRLDESCL53_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xF50 */
  uint32_t CTRLDESCL53_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xF54 */
  uint32_t CTRLDESCL53_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xF58 */
  uint32_t CTRLDESCL53_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xF5C */
  uint32_t CTRLDESCL53_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xF60 */
  uint8_t RESERVED_56[28];
  uint32_t CTRLDESCL54_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xF80 */
  uint32_t CTRLDESCL54_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xF84 */
  uint32_t CTRLDESCL54_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xF88 */
  uint32_t CTRLDESCL54_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xF8C */
  uint32_t CTRLDESCL54_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xF90 */
  uint32_t CTRLDESCL54_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xF94 */
  uint32_t CTRLDESCL54_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xF98 */
  uint32_t CTRLDESCL54_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xF9C */
  uint32_t CTRLDESCL54_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xFA0 */
  uint8_t RESERVED_57[28];
  uint32_t CTRLDESCL55_0;                          /**< Control Descriptor Ln_0 Register, offset: 0xFC0 */
  uint32_t CTRLDESCL55_1;                          /**< Control Descriptor Ln_1 Register, offset: 0xFC4 */
  uint32_t CTRLDESCL55_2;                          /**< Control Descriptor Ln_2 Register, offset: 0xFC8 */
  uint32_t CTRLDESCL55_3;                          /**< Control Descriptor Ln_3 Register, offset: 0xFCC */
  uint32_t CTRLDESCL55_4;                          /**< Control Descriptor Ln_4 Register, offset: 0xFD0 */
  uint32_t CTRLDESCL55_5;                          /**< Control Descriptor Ln_5 Register, offset: 0xFD4 */
  uint32_t CTRLDESCL55_6;                          /**< Control Descriptor Ln_6 Register, offset: 0xFD8 */
  uint32_t CTRLDESCL55_7;                          /**< Control Descriptor Ln_7 Register, offset: 0xFDC */
  uint32_t CTRLDESCL55_8;                          /**< Control Descriptor Ln_8 Register, offset: 0xFE0 */
  uint8_t RESERVED_58[28];
  uint32_t CTRLDESCL56_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1000 */
  uint32_t CTRLDESCL56_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1004 */
  uint32_t CTRLDESCL56_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1008 */
  uint32_t CTRLDESCL56_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x100C */
  uint32_t CTRLDESCL56_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1010 */
  uint32_t CTRLDESCL56_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1014 */
  uint32_t CTRLDESCL56_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1018 */
  uint32_t CTRLDESCL56_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x101C */
  uint32_t CTRLDESCL56_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x1020 */
  uint8_t RESERVED_59[28];
  uint32_t CTRLDESCL57_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1040 */
  uint32_t CTRLDESCL57_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1044 */
  uint32_t CTRLDESCL57_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1048 */
  uint32_t CTRLDESCL57_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x104C */
  uint32_t CTRLDESCL57_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1050 */
  uint32_t CTRLDESCL57_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1054 */
  uint32_t CTRLDESCL57_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1058 */
  uint32_t CTRLDESCL57_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x105C */
  uint32_t CTRLDESCL57_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x1060 */
  uint8_t RESERVED_60[28];
  uint32_t CTRLDESCL58_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1080 */
  uint32_t CTRLDESCL58_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1084 */
  uint32_t CTRLDESCL58_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1088 */
  uint32_t CTRLDESCL58_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x108C */
  uint32_t CTRLDESCL58_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1090 */
  uint32_t CTRLDESCL58_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1094 */
  uint32_t CTRLDESCL58_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1098 */
  uint32_t CTRLDESCL58_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x109C */
  uint32_t CTRLDESCL58_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x10A0 */
  uint8_t RESERVED_61[28];
  uint32_t CTRLDESCL59_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x10C0 */
  uint32_t CTRLDESCL59_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x10C4 */
  uint32_t CTRLDESCL59_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x10C8 */
  uint32_t CTRLDESCL59_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x10CC */
  uint32_t CTRLDESCL59_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x10D0 */
  uint32_t CTRLDESCL59_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x10D4 */
  uint32_t CTRLDESCL59_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x10D8 */
  uint32_t CTRLDESCL59_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x10DC */
  uint32_t CTRLDESCL59_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x10E0 */
  uint8_t RESERVED_62[28];
  uint32_t CTRLDESCL60_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1100 */
  uint32_t CTRLDESCL60_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1104 */
  uint32_t CTRLDESCL60_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1108 */
  uint32_t CTRLDESCL60_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x110C */
  uint32_t CTRLDESCL60_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1110 */
  uint32_t CTRLDESCL60_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1114 */
  uint32_t CTRLDESCL60_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1118 */
  uint32_t CTRLDESCL60_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x111C */
  uint32_t CTRLDESCL60_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x1120 */
  uint8_t RESERVED_63[28];
  uint32_t CTRLDESCL61_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1140 */
  uint32_t CTRLDESCL61_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1144 */
  uint32_t CTRLDESCL61_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1148 */
  uint32_t CTRLDESCL61_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x114C */
  uint32_t CTRLDESCL61_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1150 */
  uint32_t CTRLDESCL61_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1154 */
  uint32_t CTRLDESCL61_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1158 */
  uint32_t CTRLDESCL61_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x115C */
  uint32_t CTRLDESCL61_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x1160 */
  uint8_t RESERVED_64[28];
  uint32_t CTRLDESCL62_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x1180 */
  uint32_t CTRLDESCL62_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x1184 */
  uint32_t CTRLDESCL62_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x1188 */
  uint32_t CTRLDESCL62_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x118C */
  uint32_t CTRLDESCL62_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x1190 */
  uint32_t CTRLDESCL62_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x1194 */
  uint32_t CTRLDESCL62_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x1198 */
  uint32_t CTRLDESCL62_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x119C */
  uint32_t CTRLDESCL62_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x11A0 */
  uint8_t RESERVED_65[28];
  uint32_t CTRLDESCL63_0;                          /**< Control Descriptor Ln_0 Register, offset: 0x11C0 */
  uint32_t CTRLDESCL63_1;                          /**< Control Descriptor Ln_1 Register, offset: 0x11C4 */
  uint32_t CTRLDESCL63_2;                          /**< Control Descriptor Ln_2 Register, offset: 0x11C8 */
  uint32_t CTRLDESCL63_3;                          /**< Control Descriptor Ln_3 Register, offset: 0x11CC */
  uint32_t CTRLDESCL63_4;                          /**< Control Descriptor Ln_4 Register, offset: 0x11D0 */
  uint32_t CTRLDESCL63_5;                          /**< Control Descriptor Ln_5 Register, offset: 0x11D4 */
  uint32_t CTRLDESCL63_6;                          /**< Control Descriptor Ln_6 Register, offset: 0x11D8 */
  uint32_t CTRLDESCL63_7;                          /**< Control Descriptor Ln_7 Register, offset: 0x11DC */
  uint32_t CTRLDESCL63_8;                          /**< Control Descriptor Ln_8 Register, offset: 0x11E0 */
} volatile *DCU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DCU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DCU_Register_Accessor_Macros DCU - Register accessor macros
 * @{
 */


/* DCU - Register accessors */
#define DCU_CTRLDESCCURSOR1_REG(base)            ((base)->CTRLDESCCURSOR1)
#define DCU_CTRLDESCCURSOR2_REG(base)            ((base)->CTRLDESCCURSOR2)
#define DCU_CTRLDESCCURSOR3_REG(base)            ((base)->CTRLDESCCURSOR3)
#define DCU_CTRLDESCCURSOR4_REG(base)            ((base)->CTRLDESCCURSOR4)
#define DCU_DCU_MODE_REG(base)                   ((base)->DCU_MODE)
#define DCU_BGND_REG(base)                       ((base)->BGND)
#define DCU_DISP_SIZE_REG(base)                  ((base)->DISP_SIZE)
#define DCU_HSYN_PARA_REG(base)                  ((base)->HSYN_PARA)
#define DCU_VSYN_PARA_REG(base)                  ((base)->VSYN_PARA)
#define DCU_SYNPOL_REG(base)                     ((base)->SYNPOL)
#define DCU_THRESHOLD_REG(base)                  ((base)->THRESHOLD)
#define DCU_INT_STATUS_REG(base)                 ((base)->INT_STATUS)
#define DCU_INT_MASK_REG(base)                   ((base)->INT_MASK)
#define DCU_COLBAR_1_REG(base)                   ((base)->COLBAR_1)
#define DCU_COLBAR_2_REG(base)                   ((base)->COLBAR_2)
#define DCU_COLBAR_3_REG(base)                   ((base)->COLBAR_3)
#define DCU_COLBAR_4_REG(base)                   ((base)->COLBAR_4)
#define DCU_COLBAR_5_REG(base)                   ((base)->COLBAR_5)
#define DCU_COLBAR_6_REG(base)                   ((base)->COLBAR_6)
#define DCU_COLBAR_7_REG(base)                   ((base)->COLBAR_7)
#define DCU_COLBAR_8_REG(base)                   ((base)->COLBAR_8)
#define DCU_DIV_RATIO_REG(base)                  ((base)->DIV_RATIO)
#define DCU_SIGN_CALC_1_REG(base)                ((base)->SIGN_CALC_1)
#define DCU_SIGN_CALC_2_REG(base)                ((base)->SIGN_CALC_2)
#define DCU_CRC_VAL_REG(base)                    ((base)->CRC_VAL)
#define DCU_PDI_STATUS_REG(base)                 ((base)->PDI_STATUS)
#define DCU_PDI_STA_MSK_REG(base)                ((base)->PDI_STA_MSK)
#define DCU_PARR_ERR_STATUS1_REG(base)           ((base)->PARR_ERR_STATUS1)
#define DCU_PARR_ERR_STATUS2_REG(base)           ((base)->PARR_ERR_STATUS2)
#define DCU_PARR_ERR_STATUS3_REG(base)           ((base)->PARR_ERR_STATUS3)
#define DCU_MASK_PARR_ERR_STATUS1_REG(base)      ((base)->MASK_PARR_ERR_STATUS1)
#define DCU_MASK_PARR_ERR_STATUS2_REG(base)      ((base)->MASK_PARR_ERR_STATUS2)
#define DCU_MASK_PARR_ERR_STATUS3_REG(base)      ((base)->MASK_PARR_ERR_STATUS3)
#define DCU_THRESHOLD_INP_BUF_1_REG(base)        ((base)->THRESHOLD_INP_BUF_1)
#define DCU_THRESHOLD_INP_BUF_2_REG(base)        ((base)->THRESHOLD_INP_BUF_2)
#define DCU_THRESHOLD_INP_BUF_3_REG(base)        ((base)->THRESHOLD_INP_BUF_3)
#define DCU_LUMA_COMP_REG(base)                  ((base)->LUMA_COMP)
#define DCU_CHROMA_RED_REG(base)                 ((base)->CHROMA_RED)
#define DCU_CHROMA_GREEN_REG(base)               ((base)->CHROMA_GREEN)
#define DCU_CHROMA_BLUE_REG(base)                ((base)->CHROMA_BLUE)
#define DCU_CRC_POS_REG(base)                    ((base)->CRC_POS)
#define DCU_LYR_INTPOL_EN_REG(base)              ((base)->LYR_INTPOL_EN)
#define DCU_LYR_LUMA_COMP_REG(base)              ((base)->LYR_LUMA_COMP)
#define DCU_LYR_CHRM_RED_REG(base)               ((base)->LYR_CHRM_RED)
#define DCU_LYR_CHRM_GRN_REG(base)               ((base)->LYR_CHRM_GRN)
#define DCU_LYR_CHRM_BLUE_REG(base)              ((base)->LYR_CHRM_BLUE)
#define DCU_COMP_IMSIZE_REG(base)                ((base)->COMP_IMSIZE)
#define DCU_UPDATE_MODE_REG(base)                ((base)->UPDATE_MODE)
#define DCU_UNDERRUN_REG(base)                   ((base)->UNDERRUN)
#define DCU_CTRLDESCL0_0_REG(base)               ((base)->CTRLDESCL0_0)
#define DCU_CTRLDESCL0_1_REG(base)               ((base)->CTRLDESCL0_1)
#define DCU_CTRLDESCL0_2_REG(base)               ((base)->CTRLDESCL0_2)
#define DCU_CTRLDESCL0_3_REG(base)               ((base)->CTRLDESCL0_3)
#define DCU_CTRLDESCL0_4_REG(base)               ((base)->CTRLDESCL0_4)
#define DCU_CTRLDESCL0_5_REG(base)               ((base)->CTRLDESCL0_5)
#define DCU_CTRLDESCL0_6_REG(base)               ((base)->CTRLDESCL0_6)
#define DCU_CTRLDESCL0_7_REG(base)               ((base)->CTRLDESCL0_7)
#define DCU_CTRLDESCL0_8_REG(base)               ((base)->CTRLDESCL0_8)
#define DCU_CTRLDESCL1_0_REG(base)               ((base)->CTRLDESCL1_0)
#define DCU_CTRLDESCL1_1_REG(base)               ((base)->CTRLDESCL1_1)
#define DCU_CTRLDESCL1_2_REG(base)               ((base)->CTRLDESCL1_2)
#define DCU_CTRLDESCL1_3_REG(base)               ((base)->CTRLDESCL1_3)
#define DCU_CTRLDESCL1_4_REG(base)               ((base)->CTRLDESCL1_4)
#define DCU_CTRLDESCL1_5_REG(base)               ((base)->CTRLDESCL1_5)
#define DCU_CTRLDESCL1_6_REG(base)               ((base)->CTRLDESCL1_6)
#define DCU_CTRLDESCL1_7_REG(base)               ((base)->CTRLDESCL1_7)
#define DCU_CTRLDESCL1_8_REG(base)               ((base)->CTRLDESCL1_8)
#define DCU_CTRLDESCL2_0_REG(base)               ((base)->CTRLDESCL2_0)
#define DCU_CTRLDESCL2_1_REG(base)               ((base)->CTRLDESCL2_1)
#define DCU_CTRLDESCL2_2_REG(base)               ((base)->CTRLDESCL2_2)
#define DCU_CTRLDESCL2_3_REG(base)               ((base)->CTRLDESCL2_3)
#define DCU_CTRLDESCL2_4_REG(base)               ((base)->CTRLDESCL2_4)
#define DCU_CTRLDESCL2_5_REG(base)               ((base)->CTRLDESCL2_5)
#define DCU_CTRLDESCL2_6_REG(base)               ((base)->CTRLDESCL2_6)
#define DCU_CTRLDESCL2_7_REG(base)               ((base)->CTRLDESCL2_7)
#define DCU_CTRLDESCL2_8_REG(base)               ((base)->CTRLDESCL2_8)
#define DCU_CTRLDESCL3_0_REG(base)               ((base)->CTRLDESCL3_0)
#define DCU_CTRLDESCL3_1_REG(base)               ((base)->CTRLDESCL3_1)
#define DCU_CTRLDESCL3_2_REG(base)               ((base)->CTRLDESCL3_2)
#define DCU_CTRLDESCL3_3_REG(base)               ((base)->CTRLDESCL3_3)
#define DCU_CTRLDESCL3_4_REG(base)               ((base)->CTRLDESCL3_4)
#define DCU_CTRLDESCL3_5_REG(base)               ((base)->CTRLDESCL3_5)
#define DCU_CTRLDESCL3_6_REG(base)               ((base)->CTRLDESCL3_6)
#define DCU_CTRLDESCL3_7_REG(base)               ((base)->CTRLDESCL3_7)
#define DCU_CTRLDESCL3_8_REG(base)               ((base)->CTRLDESCL3_8)
#define DCU_CTRLDESCL4_0_REG(base)               ((base)->CTRLDESCL4_0)
#define DCU_CTRLDESCL4_1_REG(base)               ((base)->CTRLDESCL4_1)
#define DCU_CTRLDESCL4_2_REG(base)               ((base)->CTRLDESCL4_2)
#define DCU_CTRLDESCL4_3_REG(base)               ((base)->CTRLDESCL4_3)
#define DCU_CTRLDESCL4_4_REG(base)               ((base)->CTRLDESCL4_4)
#define DCU_CTRLDESCL4_5_REG(base)               ((base)->CTRLDESCL4_5)
#define DCU_CTRLDESCL4_6_REG(base)               ((base)->CTRLDESCL4_6)
#define DCU_CTRLDESCL4_7_REG(base)               ((base)->CTRLDESCL4_7)
#define DCU_CTRLDESCL4_8_REG(base)               ((base)->CTRLDESCL4_8)
#define DCU_CTRLDESCL5_0_REG(base)               ((base)->CTRLDESCL5_0)
#define DCU_CTRLDESCL5_1_REG(base)               ((base)->CTRLDESCL5_1)
#define DCU_CTRLDESCL5_2_REG(base)               ((base)->CTRLDESCL5_2)
#define DCU_CTRLDESCL5_3_REG(base)               ((base)->CTRLDESCL5_3)
#define DCU_CTRLDESCL5_4_REG(base)               ((base)->CTRLDESCL5_4)
#define DCU_CTRLDESCL5_5_REG(base)               ((base)->CTRLDESCL5_5)
#define DCU_CTRLDESCL5_6_REG(base)               ((base)->CTRLDESCL5_6)
#define DCU_CTRLDESCL5_7_REG(base)               ((base)->CTRLDESCL5_7)
#define DCU_CTRLDESCL5_8_REG(base)               ((base)->CTRLDESCL5_8)
#define DCU_CTRLDESCL6_0_REG(base)               ((base)->CTRLDESCL6_0)
#define DCU_CTRLDESCL6_1_REG(base)               ((base)->CTRLDESCL6_1)
#define DCU_CTRLDESCL6_2_REG(base)               ((base)->CTRLDESCL6_2)
#define DCU_CTRLDESCL6_3_REG(base)               ((base)->CTRLDESCL6_3)
#define DCU_CTRLDESCL6_4_REG(base)               ((base)->CTRLDESCL6_4)
#define DCU_CTRLDESCL6_5_REG(base)               ((base)->CTRLDESCL6_5)
#define DCU_CTRLDESCL6_6_REG(base)               ((base)->CTRLDESCL6_6)
#define DCU_CTRLDESCL6_7_REG(base)               ((base)->CTRLDESCL6_7)
#define DCU_CTRLDESCL6_8_REG(base)               ((base)->CTRLDESCL6_8)
#define DCU_CTRLDESCL7_0_REG(base)               ((base)->CTRLDESCL7_0)
#define DCU_CTRLDESCL7_1_REG(base)               ((base)->CTRLDESCL7_1)
#define DCU_CTRLDESCL7_2_REG(base)               ((base)->CTRLDESCL7_2)
#define DCU_CTRLDESCL7_3_REG(base)               ((base)->CTRLDESCL7_3)
#define DCU_CTRLDESCL7_4_REG(base)               ((base)->CTRLDESCL7_4)
#define DCU_CTRLDESCL7_5_REG(base)               ((base)->CTRLDESCL7_5)
#define DCU_CTRLDESCL7_6_REG(base)               ((base)->CTRLDESCL7_6)
#define DCU_CTRLDESCL7_7_REG(base)               ((base)->CTRLDESCL7_7)
#define DCU_CTRLDESCL7_8_REG(base)               ((base)->CTRLDESCL7_8)
#define DCU_CTRLDESCL8_0_REG(base)               ((base)->CTRLDESCL8_0)
#define DCU_CTRLDESCL8_1_REG(base)               ((base)->CTRLDESCL8_1)
#define DCU_CTRLDESCL8_2_REG(base)               ((base)->CTRLDESCL8_2)
#define DCU_CTRLDESCL8_3_REG(base)               ((base)->CTRLDESCL8_3)
#define DCU_CTRLDESCL8_4_REG(base)               ((base)->CTRLDESCL8_4)
#define DCU_CTRLDESCL8_5_REG(base)               ((base)->CTRLDESCL8_5)
#define DCU_CTRLDESCL8_6_REG(base)               ((base)->CTRLDESCL8_6)
#define DCU_CTRLDESCL8_7_REG(base)               ((base)->CTRLDESCL8_7)
#define DCU_CTRLDESCL8_8_REG(base)               ((base)->CTRLDESCL8_8)
#define DCU_CTRLDESCL9_0_REG(base)               ((base)->CTRLDESCL9_0)
#define DCU_CTRLDESCL9_1_REG(base)               ((base)->CTRLDESCL9_1)
#define DCU_CTRLDESCL9_2_REG(base)               ((base)->CTRLDESCL9_2)
#define DCU_CTRLDESCL9_3_REG(base)               ((base)->CTRLDESCL9_3)
#define DCU_CTRLDESCL9_4_REG(base)               ((base)->CTRLDESCL9_4)
#define DCU_CTRLDESCL9_5_REG(base)               ((base)->CTRLDESCL9_5)
#define DCU_CTRLDESCL9_6_REG(base)               ((base)->CTRLDESCL9_6)
#define DCU_CTRLDESCL9_7_REG(base)               ((base)->CTRLDESCL9_7)
#define DCU_CTRLDESCL9_8_REG(base)               ((base)->CTRLDESCL9_8)
#define DCU_CTRLDESCL10_0_REG(base)              ((base)->CTRLDESCL10_0)
#define DCU_CTRLDESCL10_1_REG(base)              ((base)->CTRLDESCL10_1)
#define DCU_CTRLDESCL10_2_REG(base)              ((base)->CTRLDESCL10_2)
#define DCU_CTRLDESCL10_3_REG(base)              ((base)->CTRLDESCL10_3)
#define DCU_CTRLDESCL10_4_REG(base)              ((base)->CTRLDESCL10_4)
#define DCU_CTRLDESCL10_5_REG(base)              ((base)->CTRLDESCL10_5)
#define DCU_CTRLDESCL10_6_REG(base)              ((base)->CTRLDESCL10_6)
#define DCU_CTRLDESCL10_7_REG(base)              ((base)->CTRLDESCL10_7)
#define DCU_CTRLDESCL10_8_REG(base)              ((base)->CTRLDESCL10_8)
#define DCU_CTRLDESCL11_0_REG(base)              ((base)->CTRLDESCL11_0)
#define DCU_CTRLDESCL11_1_REG(base)              ((base)->CTRLDESCL11_1)
#define DCU_CTRLDESCL11_2_REG(base)              ((base)->CTRLDESCL11_2)
#define DCU_CTRLDESCL11_3_REG(base)              ((base)->CTRLDESCL11_3)
#define DCU_CTRLDESCL11_4_REG(base)              ((base)->CTRLDESCL11_4)
#define DCU_CTRLDESCL11_5_REG(base)              ((base)->CTRLDESCL11_5)
#define DCU_CTRLDESCL11_6_REG(base)              ((base)->CTRLDESCL11_6)
#define DCU_CTRLDESCL11_7_REG(base)              ((base)->CTRLDESCL11_7)
#define DCU_CTRLDESCL11_8_REG(base)              ((base)->CTRLDESCL11_8)
#define DCU_CTRLDESCL12_0_REG(base)              ((base)->CTRLDESCL12_0)
#define DCU_CTRLDESCL12_1_REG(base)              ((base)->CTRLDESCL12_1)
#define DCU_CTRLDESCL12_2_REG(base)              ((base)->CTRLDESCL12_2)
#define DCU_CTRLDESCL12_3_REG(base)              ((base)->CTRLDESCL12_3)
#define DCU_CTRLDESCL12_4_REG(base)              ((base)->CTRLDESCL12_4)
#define DCU_CTRLDESCL12_5_REG(base)              ((base)->CTRLDESCL12_5)
#define DCU_CTRLDESCL12_6_REG(base)              ((base)->CTRLDESCL12_6)
#define DCU_CTRLDESCL12_7_REG(base)              ((base)->CTRLDESCL12_7)
#define DCU_CTRLDESCL12_8_REG(base)              ((base)->CTRLDESCL12_8)
#define DCU_CTRLDESCL13_0_REG(base)              ((base)->CTRLDESCL13_0)
#define DCU_CTRLDESCL13_1_REG(base)              ((base)->CTRLDESCL13_1)
#define DCU_CTRLDESCL13_2_REG(base)              ((base)->CTRLDESCL13_2)
#define DCU_CTRLDESCL13_3_REG(base)              ((base)->CTRLDESCL13_3)
#define DCU_CTRLDESCL13_4_REG(base)              ((base)->CTRLDESCL13_4)
#define DCU_CTRLDESCL13_5_REG(base)              ((base)->CTRLDESCL13_5)
#define DCU_CTRLDESCL13_6_REG(base)              ((base)->CTRLDESCL13_6)
#define DCU_CTRLDESCL13_7_REG(base)              ((base)->CTRLDESCL13_7)
#define DCU_CTRLDESCL13_8_REG(base)              ((base)->CTRLDESCL13_8)
#define DCU_CTRLDESCL14_0_REG(base)              ((base)->CTRLDESCL14_0)
#define DCU_CTRLDESCL14_1_REG(base)              ((base)->CTRLDESCL14_1)
#define DCU_CTRLDESCL14_2_REG(base)              ((base)->CTRLDESCL14_2)
#define DCU_CTRLDESCL14_3_REG(base)              ((base)->CTRLDESCL14_3)
#define DCU_CTRLDESCL14_4_REG(base)              ((base)->CTRLDESCL14_4)
#define DCU_CTRLDESCL14_5_REG(base)              ((base)->CTRLDESCL14_5)
#define DCU_CTRLDESCL14_6_REG(base)              ((base)->CTRLDESCL14_6)
#define DCU_CTRLDESCL14_7_REG(base)              ((base)->CTRLDESCL14_7)
#define DCU_CTRLDESCL14_8_REG(base)              ((base)->CTRLDESCL14_8)
#define DCU_CTRLDESCL15_0_REG(base)              ((base)->CTRLDESCL15_0)
#define DCU_CTRLDESCL15_1_REG(base)              ((base)->CTRLDESCL15_1)
#define DCU_CTRLDESCL15_2_REG(base)              ((base)->CTRLDESCL15_2)
#define DCU_CTRLDESCL15_3_REG(base)              ((base)->CTRLDESCL15_3)
#define DCU_CTRLDESCL15_4_REG(base)              ((base)->CTRLDESCL15_4)
#define DCU_CTRLDESCL15_5_REG(base)              ((base)->CTRLDESCL15_5)
#define DCU_CTRLDESCL15_6_REG(base)              ((base)->CTRLDESCL15_6)
#define DCU_CTRLDESCL15_7_REG(base)              ((base)->CTRLDESCL15_7)
#define DCU_CTRLDESCL15_8_REG(base)              ((base)->CTRLDESCL15_8)
#define DCU_CTRLDESCL16_0_REG(base)              ((base)->CTRLDESCL16_0)
#define DCU_CTRLDESCL16_1_REG(base)              ((base)->CTRLDESCL16_1)
#define DCU_CTRLDESCL16_2_REG(base)              ((base)->CTRLDESCL16_2)
#define DCU_CTRLDESCL16_3_REG(base)              ((base)->CTRLDESCL16_3)
#define DCU_CTRLDESCL16_4_REG(base)              ((base)->CTRLDESCL16_4)
#define DCU_CTRLDESCL16_5_REG(base)              ((base)->CTRLDESCL16_5)
#define DCU_CTRLDESCL16_6_REG(base)              ((base)->CTRLDESCL16_6)
#define DCU_CTRLDESCL16_7_REG(base)              ((base)->CTRLDESCL16_7)
#define DCU_CTRLDESCL16_8_REG(base)              ((base)->CTRLDESCL16_8)
#define DCU_CTRLDESCL17_0_REG(base)              ((base)->CTRLDESCL17_0)
#define DCU_CTRLDESCL17_1_REG(base)              ((base)->CTRLDESCL17_1)
#define DCU_CTRLDESCL17_2_REG(base)              ((base)->CTRLDESCL17_2)
#define DCU_CTRLDESCL17_3_REG(base)              ((base)->CTRLDESCL17_3)
#define DCU_CTRLDESCL17_4_REG(base)              ((base)->CTRLDESCL17_4)
#define DCU_CTRLDESCL17_5_REG(base)              ((base)->CTRLDESCL17_5)
#define DCU_CTRLDESCL17_6_REG(base)              ((base)->CTRLDESCL17_6)
#define DCU_CTRLDESCL17_7_REG(base)              ((base)->CTRLDESCL17_7)
#define DCU_CTRLDESCL17_8_REG(base)              ((base)->CTRLDESCL17_8)
#define DCU_CTRLDESCL18_0_REG(base)              ((base)->CTRLDESCL18_0)
#define DCU_CTRLDESCL18_1_REG(base)              ((base)->CTRLDESCL18_1)
#define DCU_CTRLDESCL18_2_REG(base)              ((base)->CTRLDESCL18_2)
#define DCU_CTRLDESCL18_3_REG(base)              ((base)->CTRLDESCL18_3)
#define DCU_CTRLDESCL18_4_REG(base)              ((base)->CTRLDESCL18_4)
#define DCU_CTRLDESCL18_5_REG(base)              ((base)->CTRLDESCL18_5)
#define DCU_CTRLDESCL18_6_REG(base)              ((base)->CTRLDESCL18_6)
#define DCU_CTRLDESCL18_7_REG(base)              ((base)->CTRLDESCL18_7)
#define DCU_CTRLDESCL18_8_REG(base)              ((base)->CTRLDESCL18_8)
#define DCU_CTRLDESCL19_0_REG(base)              ((base)->CTRLDESCL19_0)
#define DCU_CTRLDESCL19_1_REG(base)              ((base)->CTRLDESCL19_1)
#define DCU_CTRLDESCL19_2_REG(base)              ((base)->CTRLDESCL19_2)
#define DCU_CTRLDESCL19_3_REG(base)              ((base)->CTRLDESCL19_3)
#define DCU_CTRLDESCL19_4_REG(base)              ((base)->CTRLDESCL19_4)
#define DCU_CTRLDESCL19_5_REG(base)              ((base)->CTRLDESCL19_5)
#define DCU_CTRLDESCL19_6_REG(base)              ((base)->CTRLDESCL19_6)
#define DCU_CTRLDESCL19_7_REG(base)              ((base)->CTRLDESCL19_7)
#define DCU_CTRLDESCL19_8_REG(base)              ((base)->CTRLDESCL19_8)
#define DCU_CTRLDESCL20_0_REG(base)              ((base)->CTRLDESCL20_0)
#define DCU_CTRLDESCL20_1_REG(base)              ((base)->CTRLDESCL20_1)
#define DCU_CTRLDESCL20_2_REG(base)              ((base)->CTRLDESCL20_2)
#define DCU_CTRLDESCL20_3_REG(base)              ((base)->CTRLDESCL20_3)
#define DCU_CTRLDESCL20_4_REG(base)              ((base)->CTRLDESCL20_4)
#define DCU_CTRLDESCL20_5_REG(base)              ((base)->CTRLDESCL20_5)
#define DCU_CTRLDESCL20_6_REG(base)              ((base)->CTRLDESCL20_6)
#define DCU_CTRLDESCL20_7_REG(base)              ((base)->CTRLDESCL20_7)
#define DCU_CTRLDESCL20_8_REG(base)              ((base)->CTRLDESCL20_8)
#define DCU_CTRLDESCL21_0_REG(base)              ((base)->CTRLDESCL21_0)
#define DCU_CTRLDESCL21_1_REG(base)              ((base)->CTRLDESCL21_1)
#define DCU_CTRLDESCL21_2_REG(base)              ((base)->CTRLDESCL21_2)
#define DCU_CTRLDESCL21_3_REG(base)              ((base)->CTRLDESCL21_3)
#define DCU_CTRLDESCL21_4_REG(base)              ((base)->CTRLDESCL21_4)
#define DCU_CTRLDESCL21_5_REG(base)              ((base)->CTRLDESCL21_5)
#define DCU_CTRLDESCL21_6_REG(base)              ((base)->CTRLDESCL21_6)
#define DCU_CTRLDESCL21_7_REG(base)              ((base)->CTRLDESCL21_7)
#define DCU_CTRLDESCL21_8_REG(base)              ((base)->CTRLDESCL21_8)
#define DCU_CTRLDESCL22_0_REG(base)              ((base)->CTRLDESCL22_0)
#define DCU_CTRLDESCL22_1_REG(base)              ((base)->CTRLDESCL22_1)
#define DCU_CTRLDESCL22_2_REG(base)              ((base)->CTRLDESCL22_2)
#define DCU_CTRLDESCL22_3_REG(base)              ((base)->CTRLDESCL22_3)
#define DCU_CTRLDESCL22_4_REG(base)              ((base)->CTRLDESCL22_4)
#define DCU_CTRLDESCL22_5_REG(base)              ((base)->CTRLDESCL22_5)
#define DCU_CTRLDESCL22_6_REG(base)              ((base)->CTRLDESCL22_6)
#define DCU_CTRLDESCL22_7_REG(base)              ((base)->CTRLDESCL22_7)
#define DCU_CTRLDESCL22_8_REG(base)              ((base)->CTRLDESCL22_8)
#define DCU_CTRLDESCL23_0_REG(base)              ((base)->CTRLDESCL23_0)
#define DCU_CTRLDESCL23_1_REG(base)              ((base)->CTRLDESCL23_1)
#define DCU_CTRLDESCL23_2_REG(base)              ((base)->CTRLDESCL23_2)
#define DCU_CTRLDESCL23_3_REG(base)              ((base)->CTRLDESCL23_3)
#define DCU_CTRLDESCL23_4_REG(base)              ((base)->CTRLDESCL23_4)
#define DCU_CTRLDESCL23_5_REG(base)              ((base)->CTRLDESCL23_5)
#define DCU_CTRLDESCL23_6_REG(base)              ((base)->CTRLDESCL23_6)
#define DCU_CTRLDESCL23_7_REG(base)              ((base)->CTRLDESCL23_7)
#define DCU_CTRLDESCL23_8_REG(base)              ((base)->CTRLDESCL23_8)
#define DCU_CTRLDESCL24_0_REG(base)              ((base)->CTRLDESCL24_0)
#define DCU_CTRLDESCL24_1_REG(base)              ((base)->CTRLDESCL24_1)
#define DCU_CTRLDESCL24_2_REG(base)              ((base)->CTRLDESCL24_2)
#define DCU_CTRLDESCL24_3_REG(base)              ((base)->CTRLDESCL24_3)
#define DCU_CTRLDESCL24_4_REG(base)              ((base)->CTRLDESCL24_4)
#define DCU_CTRLDESCL24_5_REG(base)              ((base)->CTRLDESCL24_5)
#define DCU_CTRLDESCL24_6_REG(base)              ((base)->CTRLDESCL24_6)
#define DCU_CTRLDESCL24_7_REG(base)              ((base)->CTRLDESCL24_7)
#define DCU_CTRLDESCL24_8_REG(base)              ((base)->CTRLDESCL24_8)
#define DCU_CTRLDESCL25_0_REG(base)              ((base)->CTRLDESCL25_0)
#define DCU_CTRLDESCL25_1_REG(base)              ((base)->CTRLDESCL25_1)
#define DCU_CTRLDESCL25_2_REG(base)              ((base)->CTRLDESCL25_2)
#define DCU_CTRLDESCL25_3_REG(base)              ((base)->CTRLDESCL25_3)
#define DCU_CTRLDESCL25_4_REG(base)              ((base)->CTRLDESCL25_4)
#define DCU_CTRLDESCL25_5_REG(base)              ((base)->CTRLDESCL25_5)
#define DCU_CTRLDESCL25_6_REG(base)              ((base)->CTRLDESCL25_6)
#define DCU_CTRLDESCL25_7_REG(base)              ((base)->CTRLDESCL25_7)
#define DCU_CTRLDESCL25_8_REG(base)              ((base)->CTRLDESCL25_8)
#define DCU_CTRLDESCL26_0_REG(base)              ((base)->CTRLDESCL26_0)
#define DCU_CTRLDESCL26_1_REG(base)              ((base)->CTRLDESCL26_1)
#define DCU_CTRLDESCL26_2_REG(base)              ((base)->CTRLDESCL26_2)
#define DCU_CTRLDESCL26_3_REG(base)              ((base)->CTRLDESCL26_3)
#define DCU_CTRLDESCL26_4_REG(base)              ((base)->CTRLDESCL26_4)
#define DCU_CTRLDESCL26_5_REG(base)              ((base)->CTRLDESCL26_5)
#define DCU_CTRLDESCL26_6_REG(base)              ((base)->CTRLDESCL26_6)
#define DCU_CTRLDESCL26_7_REG(base)              ((base)->CTRLDESCL26_7)
#define DCU_CTRLDESCL26_8_REG(base)              ((base)->CTRLDESCL26_8)
#define DCU_CTRLDESCL27_0_REG(base)              ((base)->CTRLDESCL27_0)
#define DCU_CTRLDESCL27_1_REG(base)              ((base)->CTRLDESCL27_1)
#define DCU_CTRLDESCL27_2_REG(base)              ((base)->CTRLDESCL27_2)
#define DCU_CTRLDESCL27_3_REG(base)              ((base)->CTRLDESCL27_3)
#define DCU_CTRLDESCL27_4_REG(base)              ((base)->CTRLDESCL27_4)
#define DCU_CTRLDESCL27_5_REG(base)              ((base)->CTRLDESCL27_5)
#define DCU_CTRLDESCL27_6_REG(base)              ((base)->CTRLDESCL27_6)
#define DCU_CTRLDESCL27_7_REG(base)              ((base)->CTRLDESCL27_7)
#define DCU_CTRLDESCL27_8_REG(base)              ((base)->CTRLDESCL27_8)
#define DCU_CTRLDESCL28_0_REG(base)              ((base)->CTRLDESCL28_0)
#define DCU_CTRLDESCL28_1_REG(base)              ((base)->CTRLDESCL28_1)
#define DCU_CTRLDESCL28_2_REG(base)              ((base)->CTRLDESCL28_2)
#define DCU_CTRLDESCL28_3_REG(base)              ((base)->CTRLDESCL28_3)
#define DCU_CTRLDESCL28_4_REG(base)              ((base)->CTRLDESCL28_4)
#define DCU_CTRLDESCL28_5_REG(base)              ((base)->CTRLDESCL28_5)
#define DCU_CTRLDESCL28_6_REG(base)              ((base)->CTRLDESCL28_6)
#define DCU_CTRLDESCL28_7_REG(base)              ((base)->CTRLDESCL28_7)
#define DCU_CTRLDESCL28_8_REG(base)              ((base)->CTRLDESCL28_8)
#define DCU_CTRLDESCL29_0_REG(base)              ((base)->CTRLDESCL29_0)
#define DCU_CTRLDESCL29_1_REG(base)              ((base)->CTRLDESCL29_1)
#define DCU_CTRLDESCL29_2_REG(base)              ((base)->CTRLDESCL29_2)
#define DCU_CTRLDESCL29_3_REG(base)              ((base)->CTRLDESCL29_3)
#define DCU_CTRLDESCL29_4_REG(base)              ((base)->CTRLDESCL29_4)
#define DCU_CTRLDESCL29_5_REG(base)              ((base)->CTRLDESCL29_5)
#define DCU_CTRLDESCL29_6_REG(base)              ((base)->CTRLDESCL29_6)
#define DCU_CTRLDESCL29_7_REG(base)              ((base)->CTRLDESCL29_7)
#define DCU_CTRLDESCL29_8_REG(base)              ((base)->CTRLDESCL29_8)
#define DCU_CTRLDESCL30_0_REG(base)              ((base)->CTRLDESCL30_0)
#define DCU_CTRLDESCL30_1_REG(base)              ((base)->CTRLDESCL30_1)
#define DCU_CTRLDESCL30_2_REG(base)              ((base)->CTRLDESCL30_2)
#define DCU_CTRLDESCL30_3_REG(base)              ((base)->CTRLDESCL30_3)
#define DCU_CTRLDESCL30_4_REG(base)              ((base)->CTRLDESCL30_4)
#define DCU_CTRLDESCL30_5_REG(base)              ((base)->CTRLDESCL30_5)
#define DCU_CTRLDESCL30_6_REG(base)              ((base)->CTRLDESCL30_6)
#define DCU_CTRLDESCL30_7_REG(base)              ((base)->CTRLDESCL30_7)
#define DCU_CTRLDESCL30_8_REG(base)              ((base)->CTRLDESCL30_8)
#define DCU_CTRLDESCL31_0_REG(base)              ((base)->CTRLDESCL31_0)
#define DCU_CTRLDESCL31_1_REG(base)              ((base)->CTRLDESCL31_1)
#define DCU_CTRLDESCL31_2_REG(base)              ((base)->CTRLDESCL31_2)
#define DCU_CTRLDESCL31_3_REG(base)              ((base)->CTRLDESCL31_3)
#define DCU_CTRLDESCL31_4_REG(base)              ((base)->CTRLDESCL31_4)
#define DCU_CTRLDESCL31_5_REG(base)              ((base)->CTRLDESCL31_5)
#define DCU_CTRLDESCL31_6_REG(base)              ((base)->CTRLDESCL31_6)
#define DCU_CTRLDESCL31_7_REG(base)              ((base)->CTRLDESCL31_7)
#define DCU_CTRLDESCL31_8_REG(base)              ((base)->CTRLDESCL31_8)
#define DCU_CTRLDESCL32_0_REG(base)              ((base)->CTRLDESCL32_0)
#define DCU_CTRLDESCL32_1_REG(base)              ((base)->CTRLDESCL32_1)
#define DCU_CTRLDESCL32_2_REG(base)              ((base)->CTRLDESCL32_2)
#define DCU_CTRLDESCL32_3_REG(base)              ((base)->CTRLDESCL32_3)
#define DCU_CTRLDESCL32_4_REG(base)              ((base)->CTRLDESCL32_4)
#define DCU_CTRLDESCL32_5_REG(base)              ((base)->CTRLDESCL32_5)
#define DCU_CTRLDESCL32_6_REG(base)              ((base)->CTRLDESCL32_6)
#define DCU_CTRLDESCL32_7_REG(base)              ((base)->CTRLDESCL32_7)
#define DCU_CTRLDESCL32_8_REG(base)              ((base)->CTRLDESCL32_8)
#define DCU_CTRLDESCL33_0_REG(base)              ((base)->CTRLDESCL33_0)
#define DCU_CTRLDESCL33_1_REG(base)              ((base)->CTRLDESCL33_1)
#define DCU_CTRLDESCL33_2_REG(base)              ((base)->CTRLDESCL33_2)
#define DCU_CTRLDESCL33_3_REG(base)              ((base)->CTRLDESCL33_3)
#define DCU_CTRLDESCL33_4_REG(base)              ((base)->CTRLDESCL33_4)
#define DCU_CTRLDESCL33_5_REG(base)              ((base)->CTRLDESCL33_5)
#define DCU_CTRLDESCL33_6_REG(base)              ((base)->CTRLDESCL33_6)
#define DCU_CTRLDESCL33_7_REG(base)              ((base)->CTRLDESCL33_7)
#define DCU_CTRLDESCL33_8_REG(base)              ((base)->CTRLDESCL33_8)
#define DCU_CTRLDESCL34_0_REG(base)              ((base)->CTRLDESCL34_0)
#define DCU_CTRLDESCL34_1_REG(base)              ((base)->CTRLDESCL34_1)
#define DCU_CTRLDESCL34_2_REG(base)              ((base)->CTRLDESCL34_2)
#define DCU_CTRLDESCL34_3_REG(base)              ((base)->CTRLDESCL34_3)
#define DCU_CTRLDESCL34_4_REG(base)              ((base)->CTRLDESCL34_4)
#define DCU_CTRLDESCL34_5_REG(base)              ((base)->CTRLDESCL34_5)
#define DCU_CTRLDESCL34_6_REG(base)              ((base)->CTRLDESCL34_6)
#define DCU_CTRLDESCL34_7_REG(base)              ((base)->CTRLDESCL34_7)
#define DCU_CTRLDESCL34_8_REG(base)              ((base)->CTRLDESCL34_8)
#define DCU_CTRLDESCL35_0_REG(base)              ((base)->CTRLDESCL35_0)
#define DCU_CTRLDESCL35_1_REG(base)              ((base)->CTRLDESCL35_1)
#define DCU_CTRLDESCL35_2_REG(base)              ((base)->CTRLDESCL35_2)
#define DCU_CTRLDESCL35_3_REG(base)              ((base)->CTRLDESCL35_3)
#define DCU_CTRLDESCL35_4_REG(base)              ((base)->CTRLDESCL35_4)
#define DCU_CTRLDESCL35_5_REG(base)              ((base)->CTRLDESCL35_5)
#define DCU_CTRLDESCL35_6_REG(base)              ((base)->CTRLDESCL35_6)
#define DCU_CTRLDESCL35_7_REG(base)              ((base)->CTRLDESCL35_7)
#define DCU_CTRLDESCL35_8_REG(base)              ((base)->CTRLDESCL35_8)
#define DCU_CTRLDESCL36_0_REG(base)              ((base)->CTRLDESCL36_0)
#define DCU_CTRLDESCL36_1_REG(base)              ((base)->CTRLDESCL36_1)
#define DCU_CTRLDESCL36_2_REG(base)              ((base)->CTRLDESCL36_2)
#define DCU_CTRLDESCL36_3_REG(base)              ((base)->CTRLDESCL36_3)
#define DCU_CTRLDESCL36_4_REG(base)              ((base)->CTRLDESCL36_4)
#define DCU_CTRLDESCL36_5_REG(base)              ((base)->CTRLDESCL36_5)
#define DCU_CTRLDESCL36_6_REG(base)              ((base)->CTRLDESCL36_6)
#define DCU_CTRLDESCL36_7_REG(base)              ((base)->CTRLDESCL36_7)
#define DCU_CTRLDESCL36_8_REG(base)              ((base)->CTRLDESCL36_8)
#define DCU_CTRLDESCL37_0_REG(base)              ((base)->CTRLDESCL37_0)
#define DCU_CTRLDESCL37_1_REG(base)              ((base)->CTRLDESCL37_1)
#define DCU_CTRLDESCL37_2_REG(base)              ((base)->CTRLDESCL37_2)
#define DCU_CTRLDESCL37_3_REG(base)              ((base)->CTRLDESCL37_3)
#define DCU_CTRLDESCL37_4_REG(base)              ((base)->CTRLDESCL37_4)
#define DCU_CTRLDESCL37_5_REG(base)              ((base)->CTRLDESCL37_5)
#define DCU_CTRLDESCL37_6_REG(base)              ((base)->CTRLDESCL37_6)
#define DCU_CTRLDESCL37_7_REG(base)              ((base)->CTRLDESCL37_7)
#define DCU_CTRLDESCL37_8_REG(base)              ((base)->CTRLDESCL37_8)
#define DCU_CTRLDESCL38_0_REG(base)              ((base)->CTRLDESCL38_0)
#define DCU_CTRLDESCL38_1_REG(base)              ((base)->CTRLDESCL38_1)
#define DCU_CTRLDESCL38_2_REG(base)              ((base)->CTRLDESCL38_2)
#define DCU_CTRLDESCL38_3_REG(base)              ((base)->CTRLDESCL38_3)
#define DCU_CTRLDESCL38_4_REG(base)              ((base)->CTRLDESCL38_4)
#define DCU_CTRLDESCL38_5_REG(base)              ((base)->CTRLDESCL38_5)
#define DCU_CTRLDESCL38_6_REG(base)              ((base)->CTRLDESCL38_6)
#define DCU_CTRLDESCL38_7_REG(base)              ((base)->CTRLDESCL38_7)
#define DCU_CTRLDESCL38_8_REG(base)              ((base)->CTRLDESCL38_8)
#define DCU_CTRLDESCL39_0_REG(base)              ((base)->CTRLDESCL39_0)
#define DCU_CTRLDESCL39_1_REG(base)              ((base)->CTRLDESCL39_1)
#define DCU_CTRLDESCL39_2_REG(base)              ((base)->CTRLDESCL39_2)
#define DCU_CTRLDESCL39_3_REG(base)              ((base)->CTRLDESCL39_3)
#define DCU_CTRLDESCL39_4_REG(base)              ((base)->CTRLDESCL39_4)
#define DCU_CTRLDESCL39_5_REG(base)              ((base)->CTRLDESCL39_5)
#define DCU_CTRLDESCL39_6_REG(base)              ((base)->CTRLDESCL39_6)
#define DCU_CTRLDESCL39_7_REG(base)              ((base)->CTRLDESCL39_7)
#define DCU_CTRLDESCL39_8_REG(base)              ((base)->CTRLDESCL39_8)
#define DCU_CTRLDESCL40_0_REG(base)              ((base)->CTRLDESCL40_0)
#define DCU_CTRLDESCL40_1_REG(base)              ((base)->CTRLDESCL40_1)
#define DCU_CTRLDESCL40_2_REG(base)              ((base)->CTRLDESCL40_2)
#define DCU_CTRLDESCL40_3_REG(base)              ((base)->CTRLDESCL40_3)
#define DCU_CTRLDESCL40_4_REG(base)              ((base)->CTRLDESCL40_4)
#define DCU_CTRLDESCL40_5_REG(base)              ((base)->CTRLDESCL40_5)
#define DCU_CTRLDESCL40_6_REG(base)              ((base)->CTRLDESCL40_6)
#define DCU_CTRLDESCL40_7_REG(base)              ((base)->CTRLDESCL40_7)
#define DCU_CTRLDESCL40_8_REG(base)              ((base)->CTRLDESCL40_8)
#define DCU_CTRLDESCL41_0_REG(base)              ((base)->CTRLDESCL41_0)
#define DCU_CTRLDESCL41_1_REG(base)              ((base)->CTRLDESCL41_1)
#define DCU_CTRLDESCL41_2_REG(base)              ((base)->CTRLDESCL41_2)
#define DCU_CTRLDESCL41_3_REG(base)              ((base)->CTRLDESCL41_3)
#define DCU_CTRLDESCL41_4_REG(base)              ((base)->CTRLDESCL41_4)
#define DCU_CTRLDESCL41_5_REG(base)              ((base)->CTRLDESCL41_5)
#define DCU_CTRLDESCL41_6_REG(base)              ((base)->CTRLDESCL41_6)
#define DCU_CTRLDESCL41_7_REG(base)              ((base)->CTRLDESCL41_7)
#define DCU_CTRLDESCL41_8_REG(base)              ((base)->CTRLDESCL41_8)
#define DCU_CTRLDESCL42_0_REG(base)              ((base)->CTRLDESCL42_0)
#define DCU_CTRLDESCL42_1_REG(base)              ((base)->CTRLDESCL42_1)
#define DCU_CTRLDESCL42_2_REG(base)              ((base)->CTRLDESCL42_2)
#define DCU_CTRLDESCL42_3_REG(base)              ((base)->CTRLDESCL42_3)
#define DCU_CTRLDESCL42_4_REG(base)              ((base)->CTRLDESCL42_4)
#define DCU_CTRLDESCL42_5_REG(base)              ((base)->CTRLDESCL42_5)
#define DCU_CTRLDESCL42_6_REG(base)              ((base)->CTRLDESCL42_6)
#define DCU_CTRLDESCL42_7_REG(base)              ((base)->CTRLDESCL42_7)
#define DCU_CTRLDESCL42_8_REG(base)              ((base)->CTRLDESCL42_8)
#define DCU_CTRLDESCL43_0_REG(base)              ((base)->CTRLDESCL43_0)
#define DCU_CTRLDESCL43_1_REG(base)              ((base)->CTRLDESCL43_1)
#define DCU_CTRLDESCL43_2_REG(base)              ((base)->CTRLDESCL43_2)
#define DCU_CTRLDESCL43_3_REG(base)              ((base)->CTRLDESCL43_3)
#define DCU_CTRLDESCL43_4_REG(base)              ((base)->CTRLDESCL43_4)
#define DCU_CTRLDESCL43_5_REG(base)              ((base)->CTRLDESCL43_5)
#define DCU_CTRLDESCL43_6_REG(base)              ((base)->CTRLDESCL43_6)
#define DCU_CTRLDESCL43_7_REG(base)              ((base)->CTRLDESCL43_7)
#define DCU_CTRLDESCL43_8_REG(base)              ((base)->CTRLDESCL43_8)
#define DCU_CTRLDESCL44_0_REG(base)              ((base)->CTRLDESCL44_0)
#define DCU_CTRLDESCL44_1_REG(base)              ((base)->CTRLDESCL44_1)
#define DCU_CTRLDESCL44_2_REG(base)              ((base)->CTRLDESCL44_2)
#define DCU_CTRLDESCL44_3_REG(base)              ((base)->CTRLDESCL44_3)
#define DCU_CTRLDESCL44_4_REG(base)              ((base)->CTRLDESCL44_4)
#define DCU_CTRLDESCL44_5_REG(base)              ((base)->CTRLDESCL44_5)
#define DCU_CTRLDESCL44_6_REG(base)              ((base)->CTRLDESCL44_6)
#define DCU_CTRLDESCL44_7_REG(base)              ((base)->CTRLDESCL44_7)
#define DCU_CTRLDESCL44_8_REG(base)              ((base)->CTRLDESCL44_8)
#define DCU_CTRLDESCL45_0_REG(base)              ((base)->CTRLDESCL45_0)
#define DCU_CTRLDESCL45_1_REG(base)              ((base)->CTRLDESCL45_1)
#define DCU_CTRLDESCL45_2_REG(base)              ((base)->CTRLDESCL45_2)
#define DCU_CTRLDESCL45_3_REG(base)              ((base)->CTRLDESCL45_3)
#define DCU_CTRLDESCL45_4_REG(base)              ((base)->CTRLDESCL45_4)
#define DCU_CTRLDESCL45_5_REG(base)              ((base)->CTRLDESCL45_5)
#define DCU_CTRLDESCL45_6_REG(base)              ((base)->CTRLDESCL45_6)
#define DCU_CTRLDESCL45_7_REG(base)              ((base)->CTRLDESCL45_7)
#define DCU_CTRLDESCL45_8_REG(base)              ((base)->CTRLDESCL45_8)
#define DCU_CTRLDESCL46_0_REG(base)              ((base)->CTRLDESCL46_0)
#define DCU_CTRLDESCL46_1_REG(base)              ((base)->CTRLDESCL46_1)
#define DCU_CTRLDESCL46_2_REG(base)              ((base)->CTRLDESCL46_2)
#define DCU_CTRLDESCL46_3_REG(base)              ((base)->CTRLDESCL46_3)
#define DCU_CTRLDESCL46_4_REG(base)              ((base)->CTRLDESCL46_4)
#define DCU_CTRLDESCL46_5_REG(base)              ((base)->CTRLDESCL46_5)
#define DCU_CTRLDESCL46_6_REG(base)              ((base)->CTRLDESCL46_6)
#define DCU_CTRLDESCL46_7_REG(base)              ((base)->CTRLDESCL46_7)
#define DCU_CTRLDESCL46_8_REG(base)              ((base)->CTRLDESCL46_8)
#define DCU_CTRLDESCL47_0_REG(base)              ((base)->CTRLDESCL47_0)
#define DCU_CTRLDESCL47_1_REG(base)              ((base)->CTRLDESCL47_1)
#define DCU_CTRLDESCL47_2_REG(base)              ((base)->CTRLDESCL47_2)
#define DCU_CTRLDESCL47_3_REG(base)              ((base)->CTRLDESCL47_3)
#define DCU_CTRLDESCL47_4_REG(base)              ((base)->CTRLDESCL47_4)
#define DCU_CTRLDESCL47_5_REG(base)              ((base)->CTRLDESCL47_5)
#define DCU_CTRLDESCL47_6_REG(base)              ((base)->CTRLDESCL47_6)
#define DCU_CTRLDESCL47_7_REG(base)              ((base)->CTRLDESCL47_7)
#define DCU_CTRLDESCL47_8_REG(base)              ((base)->CTRLDESCL47_8)
#define DCU_CTRLDESCL48_0_REG(base)              ((base)->CTRLDESCL48_0)
#define DCU_CTRLDESCL48_1_REG(base)              ((base)->CTRLDESCL48_1)
#define DCU_CTRLDESCL48_2_REG(base)              ((base)->CTRLDESCL48_2)
#define DCU_CTRLDESCL48_3_REG(base)              ((base)->CTRLDESCL48_3)
#define DCU_CTRLDESCL48_4_REG(base)              ((base)->CTRLDESCL48_4)
#define DCU_CTRLDESCL48_5_REG(base)              ((base)->CTRLDESCL48_5)
#define DCU_CTRLDESCL48_6_REG(base)              ((base)->CTRLDESCL48_6)
#define DCU_CTRLDESCL48_7_REG(base)              ((base)->CTRLDESCL48_7)
#define DCU_CTRLDESCL48_8_REG(base)              ((base)->CTRLDESCL48_8)
#define DCU_CTRLDESCL49_0_REG(base)              ((base)->CTRLDESCL49_0)
#define DCU_CTRLDESCL49_1_REG(base)              ((base)->CTRLDESCL49_1)
#define DCU_CTRLDESCL49_2_REG(base)              ((base)->CTRLDESCL49_2)
#define DCU_CTRLDESCL49_3_REG(base)              ((base)->CTRLDESCL49_3)
#define DCU_CTRLDESCL49_4_REG(base)              ((base)->CTRLDESCL49_4)
#define DCU_CTRLDESCL49_5_REG(base)              ((base)->CTRLDESCL49_5)
#define DCU_CTRLDESCL49_6_REG(base)              ((base)->CTRLDESCL49_6)
#define DCU_CTRLDESCL49_7_REG(base)              ((base)->CTRLDESCL49_7)
#define DCU_CTRLDESCL49_8_REG(base)              ((base)->CTRLDESCL49_8)
#define DCU_CTRLDESCL50_0_REG(base)              ((base)->CTRLDESCL50_0)
#define DCU_CTRLDESCL50_1_REG(base)              ((base)->CTRLDESCL50_1)
#define DCU_CTRLDESCL50_2_REG(base)              ((base)->CTRLDESCL50_2)
#define DCU_CTRLDESCL50_3_REG(base)              ((base)->CTRLDESCL50_3)
#define DCU_CTRLDESCL50_4_REG(base)              ((base)->CTRLDESCL50_4)
#define DCU_CTRLDESCL50_5_REG(base)              ((base)->CTRLDESCL50_5)
#define DCU_CTRLDESCL50_6_REG(base)              ((base)->CTRLDESCL50_6)
#define DCU_CTRLDESCL50_7_REG(base)              ((base)->CTRLDESCL50_7)
#define DCU_CTRLDESCL50_8_REG(base)              ((base)->CTRLDESCL50_8)
#define DCU_CTRLDESCL51_0_REG(base)              ((base)->CTRLDESCL51_0)
#define DCU_CTRLDESCL51_1_REG(base)              ((base)->CTRLDESCL51_1)
#define DCU_CTRLDESCL51_2_REG(base)              ((base)->CTRLDESCL51_2)
#define DCU_CTRLDESCL51_3_REG(base)              ((base)->CTRLDESCL51_3)
#define DCU_CTRLDESCL51_4_REG(base)              ((base)->CTRLDESCL51_4)
#define DCU_CTRLDESCL51_5_REG(base)              ((base)->CTRLDESCL51_5)
#define DCU_CTRLDESCL51_6_REG(base)              ((base)->CTRLDESCL51_6)
#define DCU_CTRLDESCL51_7_REG(base)              ((base)->CTRLDESCL51_7)
#define DCU_CTRLDESCL51_8_REG(base)              ((base)->CTRLDESCL51_8)
#define DCU_CTRLDESCL52_0_REG(base)              ((base)->CTRLDESCL52_0)
#define DCU_CTRLDESCL52_1_REG(base)              ((base)->CTRLDESCL52_1)
#define DCU_CTRLDESCL52_2_REG(base)              ((base)->CTRLDESCL52_2)
#define DCU_CTRLDESCL52_3_REG(base)              ((base)->CTRLDESCL52_3)
#define DCU_CTRLDESCL52_4_REG(base)              ((base)->CTRLDESCL52_4)
#define DCU_CTRLDESCL52_5_REG(base)              ((base)->CTRLDESCL52_5)
#define DCU_CTRLDESCL52_6_REG(base)              ((base)->CTRLDESCL52_6)
#define DCU_CTRLDESCL52_7_REG(base)              ((base)->CTRLDESCL52_7)
#define DCU_CTRLDESCL52_8_REG(base)              ((base)->CTRLDESCL52_8)
#define DCU_CTRLDESCL53_0_REG(base)              ((base)->CTRLDESCL53_0)
#define DCU_CTRLDESCL53_1_REG(base)              ((base)->CTRLDESCL53_1)
#define DCU_CTRLDESCL53_2_REG(base)              ((base)->CTRLDESCL53_2)
#define DCU_CTRLDESCL53_3_REG(base)              ((base)->CTRLDESCL53_3)
#define DCU_CTRLDESCL53_4_REG(base)              ((base)->CTRLDESCL53_4)
#define DCU_CTRLDESCL53_5_REG(base)              ((base)->CTRLDESCL53_5)
#define DCU_CTRLDESCL53_6_REG(base)              ((base)->CTRLDESCL53_6)
#define DCU_CTRLDESCL53_7_REG(base)              ((base)->CTRLDESCL53_7)
#define DCU_CTRLDESCL53_8_REG(base)              ((base)->CTRLDESCL53_8)
#define DCU_CTRLDESCL54_0_REG(base)              ((base)->CTRLDESCL54_0)
#define DCU_CTRLDESCL54_1_REG(base)              ((base)->CTRLDESCL54_1)
#define DCU_CTRLDESCL54_2_REG(base)              ((base)->CTRLDESCL54_2)
#define DCU_CTRLDESCL54_3_REG(base)              ((base)->CTRLDESCL54_3)
#define DCU_CTRLDESCL54_4_REG(base)              ((base)->CTRLDESCL54_4)
#define DCU_CTRLDESCL54_5_REG(base)              ((base)->CTRLDESCL54_5)
#define DCU_CTRLDESCL54_6_REG(base)              ((base)->CTRLDESCL54_6)
#define DCU_CTRLDESCL54_7_REG(base)              ((base)->CTRLDESCL54_7)
#define DCU_CTRLDESCL54_8_REG(base)              ((base)->CTRLDESCL54_8)
#define DCU_CTRLDESCL55_0_REG(base)              ((base)->CTRLDESCL55_0)
#define DCU_CTRLDESCL55_1_REG(base)              ((base)->CTRLDESCL55_1)
#define DCU_CTRLDESCL55_2_REG(base)              ((base)->CTRLDESCL55_2)
#define DCU_CTRLDESCL55_3_REG(base)              ((base)->CTRLDESCL55_3)
#define DCU_CTRLDESCL55_4_REG(base)              ((base)->CTRLDESCL55_4)
#define DCU_CTRLDESCL55_5_REG(base)              ((base)->CTRLDESCL55_5)
#define DCU_CTRLDESCL55_6_REG(base)              ((base)->CTRLDESCL55_6)
#define DCU_CTRLDESCL55_7_REG(base)              ((base)->CTRLDESCL55_7)
#define DCU_CTRLDESCL55_8_REG(base)              ((base)->CTRLDESCL55_8)
#define DCU_CTRLDESCL56_0_REG(base)              ((base)->CTRLDESCL56_0)
#define DCU_CTRLDESCL56_1_REG(base)              ((base)->CTRLDESCL56_1)
#define DCU_CTRLDESCL56_2_REG(base)              ((base)->CTRLDESCL56_2)
#define DCU_CTRLDESCL56_3_REG(base)              ((base)->CTRLDESCL56_3)
#define DCU_CTRLDESCL56_4_REG(base)              ((base)->CTRLDESCL56_4)
#define DCU_CTRLDESCL56_5_REG(base)              ((base)->CTRLDESCL56_5)
#define DCU_CTRLDESCL56_6_REG(base)              ((base)->CTRLDESCL56_6)
#define DCU_CTRLDESCL56_7_REG(base)              ((base)->CTRLDESCL56_7)
#define DCU_CTRLDESCL56_8_REG(base)              ((base)->CTRLDESCL56_8)
#define DCU_CTRLDESCL57_0_REG(base)              ((base)->CTRLDESCL57_0)
#define DCU_CTRLDESCL57_1_REG(base)              ((base)->CTRLDESCL57_1)
#define DCU_CTRLDESCL57_2_REG(base)              ((base)->CTRLDESCL57_2)
#define DCU_CTRLDESCL57_3_REG(base)              ((base)->CTRLDESCL57_3)
#define DCU_CTRLDESCL57_4_REG(base)              ((base)->CTRLDESCL57_4)
#define DCU_CTRLDESCL57_5_REG(base)              ((base)->CTRLDESCL57_5)
#define DCU_CTRLDESCL57_6_REG(base)              ((base)->CTRLDESCL57_6)
#define DCU_CTRLDESCL57_7_REG(base)              ((base)->CTRLDESCL57_7)
#define DCU_CTRLDESCL57_8_REG(base)              ((base)->CTRLDESCL57_8)
#define DCU_CTRLDESCL58_0_REG(base)              ((base)->CTRLDESCL58_0)
#define DCU_CTRLDESCL58_1_REG(base)              ((base)->CTRLDESCL58_1)
#define DCU_CTRLDESCL58_2_REG(base)              ((base)->CTRLDESCL58_2)
#define DCU_CTRLDESCL58_3_REG(base)              ((base)->CTRLDESCL58_3)
#define DCU_CTRLDESCL58_4_REG(base)              ((base)->CTRLDESCL58_4)
#define DCU_CTRLDESCL58_5_REG(base)              ((base)->CTRLDESCL58_5)
#define DCU_CTRLDESCL58_6_REG(base)              ((base)->CTRLDESCL58_6)
#define DCU_CTRLDESCL58_7_REG(base)              ((base)->CTRLDESCL58_7)
#define DCU_CTRLDESCL58_8_REG(base)              ((base)->CTRLDESCL58_8)
#define DCU_CTRLDESCL59_0_REG(base)              ((base)->CTRLDESCL59_0)
#define DCU_CTRLDESCL59_1_REG(base)              ((base)->CTRLDESCL59_1)
#define DCU_CTRLDESCL59_2_REG(base)              ((base)->CTRLDESCL59_2)
#define DCU_CTRLDESCL59_3_REG(base)              ((base)->CTRLDESCL59_3)
#define DCU_CTRLDESCL59_4_REG(base)              ((base)->CTRLDESCL59_4)
#define DCU_CTRLDESCL59_5_REG(base)              ((base)->CTRLDESCL59_5)
#define DCU_CTRLDESCL59_6_REG(base)              ((base)->CTRLDESCL59_6)
#define DCU_CTRLDESCL59_7_REG(base)              ((base)->CTRLDESCL59_7)
#define DCU_CTRLDESCL59_8_REG(base)              ((base)->CTRLDESCL59_8)
#define DCU_CTRLDESCL60_0_REG(base)              ((base)->CTRLDESCL60_0)
#define DCU_CTRLDESCL60_1_REG(base)              ((base)->CTRLDESCL60_1)
#define DCU_CTRLDESCL60_2_REG(base)              ((base)->CTRLDESCL60_2)
#define DCU_CTRLDESCL60_3_REG(base)              ((base)->CTRLDESCL60_3)
#define DCU_CTRLDESCL60_4_REG(base)              ((base)->CTRLDESCL60_4)
#define DCU_CTRLDESCL60_5_REG(base)              ((base)->CTRLDESCL60_5)
#define DCU_CTRLDESCL60_6_REG(base)              ((base)->CTRLDESCL60_6)
#define DCU_CTRLDESCL60_7_REG(base)              ((base)->CTRLDESCL60_7)
#define DCU_CTRLDESCL60_8_REG(base)              ((base)->CTRLDESCL60_8)
#define DCU_CTRLDESCL61_0_REG(base)              ((base)->CTRLDESCL61_0)
#define DCU_CTRLDESCL61_1_REG(base)              ((base)->CTRLDESCL61_1)
#define DCU_CTRLDESCL61_2_REG(base)              ((base)->CTRLDESCL61_2)
#define DCU_CTRLDESCL61_3_REG(base)              ((base)->CTRLDESCL61_3)
#define DCU_CTRLDESCL61_4_REG(base)              ((base)->CTRLDESCL61_4)
#define DCU_CTRLDESCL61_5_REG(base)              ((base)->CTRLDESCL61_5)
#define DCU_CTRLDESCL61_6_REG(base)              ((base)->CTRLDESCL61_6)
#define DCU_CTRLDESCL61_7_REG(base)              ((base)->CTRLDESCL61_7)
#define DCU_CTRLDESCL61_8_REG(base)              ((base)->CTRLDESCL61_8)
#define DCU_CTRLDESCL62_0_REG(base)              ((base)->CTRLDESCL62_0)
#define DCU_CTRLDESCL62_1_REG(base)              ((base)->CTRLDESCL62_1)
#define DCU_CTRLDESCL62_2_REG(base)              ((base)->CTRLDESCL62_2)
#define DCU_CTRLDESCL62_3_REG(base)              ((base)->CTRLDESCL62_3)
#define DCU_CTRLDESCL62_4_REG(base)              ((base)->CTRLDESCL62_4)
#define DCU_CTRLDESCL62_5_REG(base)              ((base)->CTRLDESCL62_5)
#define DCU_CTRLDESCL62_6_REG(base)              ((base)->CTRLDESCL62_6)
#define DCU_CTRLDESCL62_7_REG(base)              ((base)->CTRLDESCL62_7)
#define DCU_CTRLDESCL62_8_REG(base)              ((base)->CTRLDESCL62_8)
#define DCU_CTRLDESCL63_0_REG(base)              ((base)->CTRLDESCL63_0)
#define DCU_CTRLDESCL63_1_REG(base)              ((base)->CTRLDESCL63_1)
#define DCU_CTRLDESCL63_2_REG(base)              ((base)->CTRLDESCL63_2)
#define DCU_CTRLDESCL63_3_REG(base)              ((base)->CTRLDESCL63_3)
#define DCU_CTRLDESCL63_4_REG(base)              ((base)->CTRLDESCL63_4)
#define DCU_CTRLDESCL63_5_REG(base)              ((base)->CTRLDESCL63_5)
#define DCU_CTRLDESCL63_6_REG(base)              ((base)->CTRLDESCL63_6)
#define DCU_CTRLDESCL63_7_REG(base)              ((base)->CTRLDESCL63_7)
#define DCU_CTRLDESCL63_8_REG(base)              ((base)->CTRLDESCL63_8)

/**
 * @}
 */ /* end of group DCU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DCU Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DCU_Register_Masks DCU Register Masks
 * @{
 */

/* CTRLDESCCURSOR1 Bit Fields */
#define DCU_CTRLDESCCURSOR1_WIDTH_MASK           0x7FFu
#define DCU_CTRLDESCCURSOR1_WIDTH_SHIFT          0
#define DCU_CTRLDESCCURSOR1_WIDTH(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR1_WIDTH_SHIFT))&DCU_CTRLDESCCURSOR1_WIDTH_MASK)
#define DCU_CTRLDESCCURSOR1_HEIGHT_MASK          0x7FF0000u
#define DCU_CTRLDESCCURSOR1_HEIGHT_SHIFT         16
#define DCU_CTRLDESCCURSOR1_HEIGHT(x)            (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR1_HEIGHT_SHIFT))&DCU_CTRLDESCCURSOR1_HEIGHT_MASK)
/* CTRLDESCCURSOR2 Bit Fields */
#define DCU_CTRLDESCCURSOR2_POSX_MASK            0x7FFu
#define DCU_CTRLDESCCURSOR2_POSX_SHIFT           0
#define DCU_CTRLDESCCURSOR2_POSX(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR2_POSX_SHIFT))&DCU_CTRLDESCCURSOR2_POSX_MASK)
#define DCU_CTRLDESCCURSOR2_POSY_MASK            0x7FF0000u
#define DCU_CTRLDESCCURSOR2_POSY_SHIFT           16
#define DCU_CTRLDESCCURSOR2_POSY(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR2_POSY_SHIFT))&DCU_CTRLDESCCURSOR2_POSY_MASK)
/* CTRLDESCCURSOR3 Bit Fields */
#define DCU_CTRLDESCCURSOR3_DEFAULT_CURSOR_COLOR_MASK 0xFFFFFFu
#define DCU_CTRLDESCCURSOR3_DEFAULT_CURSOR_COLOR_SHIFT 0
#define DCU_CTRLDESCCURSOR3_DEFAULT_CURSOR_COLOR(x) (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR3_DEFAULT_CURSOR_COLOR_SHIFT))&DCU_CTRLDESCCURSOR3_DEFAULT_CURSOR_COLOR_MASK)
#define DCU_CTRLDESCCURSOR3_CUR_EN_MASK          0x80000000u
#define DCU_CTRLDESCCURSOR3_CUR_EN_SHIFT         31
/* CTRLDESCCURSOR4 Bit Fields */
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_ON_MASK    0xFFu
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_ON_SHIFT   0
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_ON(x)      (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR4_HWC_BLINK_ON_SHIFT))&DCU_CTRLDESCCURSOR4_HWC_BLINK_ON_MASK)
#define DCU_CTRLDESCCURSOR4_EN_BLINK_MASK        0x100u
#define DCU_CTRLDESCCURSOR4_EN_BLINK_SHIFT       8
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_OFF_MASK   0xFF0000u
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_OFF_SHIFT  16
#define DCU_CTRLDESCCURSOR4_HWC_BLINK_OFF(x)     (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCCURSOR4_HWC_BLINK_OFF_SHIFT))&DCU_CTRLDESCCURSOR4_HWC_BLINK_OFF_MASK)
/* DCU_MODE Bit Fields */
#define DCU_DCU_MODE_DCU_MODE_MASK               0x3u
#define DCU_DCU_MODE_DCU_MODE_SHIFT              0
#define DCU_DCU_MODE_DCU_MODE(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_DCU_MODE_SHIFT))&DCU_DCU_MODE_DCU_MODE_MASK)
#define DCU_DCU_MODE_EN_GAMMA_MASK               0x4u
#define DCU_DCU_MODE_EN_GAMMA_SHIFT              2
#define DCU_DCU_MODE_SIG_EN_MASK                 0x20u
#define DCU_DCU_MODE_SIG_EN_SHIFT                5
#define DCU_DCU_MODE_TAG_EN_MASK                 0x40u
#define DCU_DCU_MODE_TAG_EN_SHIFT                6
#define DCU_DCU_MODE_PDI_SLAVE_MODE_MASK         0x80u
#define DCU_DCU_MODE_PDI_SLAVE_MODE_SHIFT        7
#define DCU_DCU_MODE_PDI_MODE_MASK               0x300u
#define DCU_DCU_MODE_PDI_MODE_SHIFT              8
#define DCU_DCU_MODE_PDI_MODE(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_PDI_MODE_SHIFT))&DCU_DCU_MODE_PDI_MODE_MASK)
#define DCU_DCU_MODE_PDI_NARROW_MODE_MASK        0x400u
#define DCU_DCU_MODE_PDI_NARROW_MODE_SHIFT       10
#define DCU_DCU_MODE_PDI_DE_MODE_MASK            0x800u
#define DCU_DCU_MODE_PDI_DE_MODE_SHIFT           11
#define DCU_DCU_MODE_PDI_BYTE_REV_MASK           0x1000u
#define DCU_DCU_MODE_PDI_BYTE_REV_SHIFT          12
#define DCU_DCU_MODE_PDI_EN_MASK                 0x2000u
#define DCU_DCU_MODE_PDI_EN_SHIFT                13
#define DCU_DCU_MODE_RASTER_EN_MASK              0x4000u
#define DCU_DCU_MODE_RASTER_EN_SHIFT             14
#define DCU_DCU_MODE_PDI_INTERPOL_EN_MASK        0x8000u
#define DCU_DCU_MODE_PDI_INTERPOL_EN_SHIFT       15
#define DCU_DCU_MODE_PDI_SYNC_LOCK_MASK          0xF0000u
#define DCU_DCU_MODE_PDI_SYNC_LOCK_SHIFT         16
#define DCU_DCU_MODE_PDI_SYNC_LOCK(x)            (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_PDI_SYNC_LOCK_SHIFT))&DCU_DCU_MODE_PDI_SYNC_LOCK_MASK)
#define DCU_DCU_MODE_BLEND_ITER_MASK             0x700000u
#define DCU_DCU_MODE_BLEND_ITER_SHIFT            20
#define DCU_DCU_MODE_BLEND_ITER(x)               (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_BLEND_ITER_SHIFT))&DCU_DCU_MODE_BLEND_ITER_MASK)
#define DCU_DCU_MODE_DDR_MODE_MASK               0x800000u
#define DCU_DCU_MODE_DDR_MODE_SHIFT              23
#define DCU_DCU_MODE_ADDR_MASK                   0x3000000u
#define DCU_DCU_MODE_ADDR_SHIFT                  24
#define DCU_DCU_MODE_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_ADDR_SHIFT))&DCU_DCU_MODE_ADDR_MASK)
#define DCU_DCU_MODE_ADDG_MASK                   0xC000000u
#define DCU_DCU_MODE_ADDG_SHIFT                  26
#define DCU_DCU_MODE_ADDG(x)                     (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_ADDG_SHIFT))&DCU_DCU_MODE_ADDG_MASK)
#define DCU_DCU_MODE_ADDB_MASK                   0x30000000u
#define DCU_DCU_MODE_ADDB_SHIFT                  28
#define DCU_DCU_MODE_ADDB(x)                     (((uint32_t)(((uint32_t)(x))<<DCU_DCU_MODE_ADDB_SHIFT))&DCU_DCU_MODE_ADDB_MASK)
#define DCU_DCU_MODE_EN_DITHER_MASK              0x40000000u
#define DCU_DCU_MODE_EN_DITHER_SHIFT             30
#define DCU_DCU_MODE_DCU_SW_RESET_MASK           0x80000000u
#define DCU_DCU_MODE_DCU_SW_RESET_SHIFT          31
/* BGND Bit Fields */
#define DCU_BGND_BGND_B_MASK                     0xFFu
#define DCU_BGND_BGND_B_SHIFT                    0
#define DCU_BGND_BGND_B(x)                       (((uint32_t)(((uint32_t)(x))<<DCU_BGND_BGND_B_SHIFT))&DCU_BGND_BGND_B_MASK)
#define DCU_BGND_BGND_G_MASK                     0xFF00u
#define DCU_BGND_BGND_G_SHIFT                    8
#define DCU_BGND_BGND_G(x)                       (((uint32_t)(((uint32_t)(x))<<DCU_BGND_BGND_G_SHIFT))&DCU_BGND_BGND_G_MASK)
#define DCU_BGND_BGND_R_MASK                     0xFF0000u
#define DCU_BGND_BGND_R_SHIFT                    16
#define DCU_BGND_BGND_R(x)                       (((uint32_t)(((uint32_t)(x))<<DCU_BGND_BGND_R_SHIFT))&DCU_BGND_BGND_R_MASK)
/* DISP_SIZE Bit Fields */
#define DCU_DISP_SIZE_DELTA_X_MASK               0x7Fu
#define DCU_DISP_SIZE_DELTA_X_SHIFT              0
#define DCU_DISP_SIZE_DELTA_X(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_DISP_SIZE_DELTA_X_SHIFT))&DCU_DISP_SIZE_DELTA_X_MASK)
#define DCU_DISP_SIZE_DELTA_Y_MASK               0x7FF0000u
#define DCU_DISP_SIZE_DELTA_Y_SHIFT              16
#define DCU_DISP_SIZE_DELTA_Y(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_DISP_SIZE_DELTA_Y_SHIFT))&DCU_DISP_SIZE_DELTA_Y_MASK)
/* HSYN_PARA Bit Fields */
#define DCU_HSYN_PARA_FP_H_MASK                  0x1FFu
#define DCU_HSYN_PARA_FP_H_SHIFT                 0
#define DCU_HSYN_PARA_FP_H(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_HSYN_PARA_FP_H_SHIFT))&DCU_HSYN_PARA_FP_H_MASK)
#define DCU_HSYN_PARA_PW_H_MASK                  0xFF800u
#define DCU_HSYN_PARA_PW_H_SHIFT                 11
#define DCU_HSYN_PARA_PW_H(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_HSYN_PARA_PW_H_SHIFT))&DCU_HSYN_PARA_PW_H_MASK)
#define DCU_HSYN_PARA_BP_H_MASK                  0x7FC00000u
#define DCU_HSYN_PARA_BP_H_SHIFT                 22
#define DCU_HSYN_PARA_BP_H(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_HSYN_PARA_BP_H_SHIFT))&DCU_HSYN_PARA_BP_H_MASK)
/* VSYN_PARA Bit Fields */
#define DCU_VSYN_PARA_FP_V_MASK                  0x1FFu
#define DCU_VSYN_PARA_FP_V_SHIFT                 0
#define DCU_VSYN_PARA_FP_V(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_VSYN_PARA_FP_V_SHIFT))&DCU_VSYN_PARA_FP_V_MASK)
#define DCU_VSYN_PARA_PW_V_MASK                  0xFF800u
#define DCU_VSYN_PARA_PW_V_SHIFT                 11
#define DCU_VSYN_PARA_PW_V(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_VSYN_PARA_PW_V_SHIFT))&DCU_VSYN_PARA_PW_V_MASK)
#define DCU_VSYN_PARA_BP_V_MASK                  0x7FC00000u
#define DCU_VSYN_PARA_BP_V_SHIFT                 22
#define DCU_VSYN_PARA_BP_V(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_VSYN_PARA_BP_V_SHIFT))&DCU_VSYN_PARA_BP_V_MASK)
/* SYNPOL Bit Fields */
#define DCU_SYNPOL_INV_HS_MASK                   0x1u
#define DCU_SYNPOL_INV_HS_SHIFT                  0
#define DCU_SYNPOL_INV_VS_MASK                   0x2u
#define DCU_SYNPOL_INV_VS_SHIFT                  1
#define DCU_SYNPOL_NEG_MASK                      0x20u
#define DCU_SYNPOL_NEG_SHIFT                     5
#define DCU_SYNPOL_INV_PXCK_MASK                 0x40u
#define DCU_SYNPOL_INV_PXCK_SHIFT                6
#define DCU_SYNPOL_INV_PDI_CLK_MASK              0x80u
#define DCU_SYNPOL_INV_PDI_CLK_SHIFT             7
#define DCU_SYNPOL_INV_PDI_VS_MASK               0x100u
#define DCU_SYNPOL_INV_PDI_VS_SHIFT              8
#define DCU_SYNPOL_INV_PDI_HS_MASK               0x200u
#define DCU_SYNPOL_INV_PDI_HS_SHIFT              9
#define DCU_SYNPOL_INV_PDI_DE_MASK               0x400u
#define DCU_SYNPOL_INV_PDI_DE_SHIFT              10
/* THRESHOLD Bit Fields */
#define DCU_THRESHOLD_OUT_BUF_LOW_MASK           0xFFu
#define DCU_THRESHOLD_OUT_BUF_LOW_SHIFT          0
#define DCU_THRESHOLD_OUT_BUF_LOW(x)             (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_OUT_BUF_LOW_SHIFT))&DCU_THRESHOLD_OUT_BUF_LOW_MASK)
#define DCU_THRESHOLD_OUT_BUF_HIGH_MASK          0xFF00u
#define DCU_THRESHOLD_OUT_BUF_HIGH_SHIFT         8
#define DCU_THRESHOLD_OUT_BUF_HIGH(x)            (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_OUT_BUF_HIGH_SHIFT))&DCU_THRESHOLD_OUT_BUF_HIGH_MASK)
#define DCU_THRESHOLD_LS_BF_VS_MASK              0x7FF0000u
#define DCU_THRESHOLD_LS_BF_VS_SHIFT             16
#define DCU_THRESHOLD_LS_BF_VS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_LS_BF_VS_SHIFT))&DCU_THRESHOLD_LS_BF_VS_MASK)
/* INT_STATUS Bit Fields */
#define DCU_INT_STATUS_VSYNC_MASK                0x1u
#define DCU_INT_STATUS_VSYNC_SHIFT               0
#define DCU_INT_STATUS_UNDRUN_MASK               0x2u
#define DCU_INT_STATUS_UNDRUN_SHIFT              1
#define DCU_INT_STATUS_LS_BF_VS_MASK             0x4u
#define DCU_INT_STATUS_LS_BF_VS_SHIFT            2
#define DCU_INT_STATUS_VS_BLANK_MASK             0x8u
#define DCU_INT_STATUS_VS_BLANK_SHIFT            3
#define DCU_INT_STATUS_CRC_READY_MASK            0x10u
#define DCU_INT_STATUS_CRC_READY_SHIFT           4
#define DCU_INT_STATUS_CRC_OVERFLOW_MASK         0x20u
#define DCU_INT_STATUS_CRC_OVERFLOW_SHIFT        5
#define DCU_INT_STATUS_P1_FIFO_LO_FLAG_MASK      0x40u
#define DCU_INT_STATUS_P1_FIFO_LO_FLAG_SHIFT     6
#define DCU_INT_STATUS_P1_FIFO_HI_FLAG_MASK      0x80u
#define DCU_INT_STATUS_P1_FIFO_HI_FLAG_SHIFT     7
#define DCU_INT_STATUS_P2_FIFO_LO_FLAG_MASK      0x100u
#define DCU_INT_STATUS_P2_FIFO_LO_FLAG_SHIFT     8
#define DCU_INT_STATUS_P2_FIFO_HI_FLAG_MASK      0x200u
#define DCU_INT_STATUS_P2_FIFO_HI_FLAG_SHIFT     9
#define DCU_INT_STATUS_PROG_END_MASK             0x400u
#define DCU_INT_STATUS_PROG_END_SHIFT            10
#define DCU_INT_STATUS_IPM_ERROR_MASK            0x800u
#define DCU_INT_STATUS_IPM_ERROR_SHIFT           11
#define DCU_INT_STATUS_LYR_TRANS_FINISH_MASK     0x1000u
#define DCU_INT_STATUS_LYR_TRANS_FINISH_SHIFT    12
#define DCU_INT_STATUS_DMA_TRANS_FINISH_MASK     0x4000u
#define DCU_INT_STATUS_DMA_TRANS_FINISH_SHIFT    14
#define DCU_INT_STATUS_P3_FIFO_LO_FLAG_MASK      0x10000u
#define DCU_INT_STATUS_P3_FIFO_LO_FLAG_SHIFT     16
#define DCU_INT_STATUS_P3_FIFO_HI_FLAG_MASK      0x20000u
#define DCU_INT_STATUS_P3_FIFO_HI_FLAG_SHIFT     17
#define DCU_INT_STATUS_P4_FIFO_LO_FLAG_MASK      0x40000u
#define DCU_INT_STATUS_P4_FIFO_LO_FLAG_SHIFT     18
#define DCU_INT_STATUS_P4_FIFO_HI_FLAG_MASK      0x80000u
#define DCU_INT_STATUS_P4_FIFO_HI_FLAG_SHIFT     19
#define DCU_INT_STATUS_P5_FIFO_LO_FLAG_MASK      0x100000u
#define DCU_INT_STATUS_P5_FIFO_LO_FLAG_SHIFT     20
#define DCU_INT_STATUS_P5_FIFO_HI_FLAG_MASK      0x200000u
#define DCU_INT_STATUS_P5_FIFO_HI_FLAG_SHIFT     21
#define DCU_INT_STATUS_P6_FIFO_LO_FLAG_MASK      0x400000u
#define DCU_INT_STATUS_P6_FIFO_LO_FLAG_SHIFT     22
#define DCU_INT_STATUS_P6_FIFO_HI_FLAG_MASK      0x800000u
#define DCU_INT_STATUS_P6_FIFO_HI_FLAG_SHIFT     23
#define DCU_INT_STATUS_P1_EMPTY_MASK             0x4000000u
#define DCU_INT_STATUS_P1_EMPTY_SHIFT            26
#define DCU_INT_STATUS_P2_EMPTY_MASK             0x8000000u
#define DCU_INT_STATUS_P2_EMPTY_SHIFT            27
#define DCU_INT_STATUS_P3_EMPTY_MASK             0x10000000u
#define DCU_INT_STATUS_P3_EMPTY_SHIFT            28
#define DCU_INT_STATUS_P4_EMPTY_MASK             0x20000000u
#define DCU_INT_STATUS_P4_EMPTY_SHIFT            29
#define DCU_INT_STATUS_P5_EMPTY_MASK             0x40000000u
#define DCU_INT_STATUS_P5_EMPTY_SHIFT            30
#define DCU_INT_STATUS_P6_EMPTY_MASK             0x80000000u
#define DCU_INT_STATUS_P6_EMPTY_SHIFT            31
/* INT_MASK Bit Fields */
#define DCU_INT_MASK_M_VSYNC_MASK                0x1u
#define DCU_INT_MASK_M_VSYNC_SHIFT               0
#define DCU_INT_MASK_M_UNDRUN_MASK               0x2u
#define DCU_INT_MASK_M_UNDRUN_SHIFT              1
#define DCU_INT_MASK_M_LS_BF_VS_MASK             0x4u
#define DCU_INT_MASK_M_LS_BF_VS_SHIFT            2
#define DCU_INT_MASK_M_VS_BLANK_MASK             0x8u
#define DCU_INT_MASK_M_VS_BLANK_SHIFT            3
#define DCU_INT_MASK_M_CRC_READY_MASK            0x10u
#define DCU_INT_MASK_M_CRC_READY_SHIFT           4
#define DCU_INT_MASK_M_CRC_OVERFLOW_MASK         0x20u
#define DCU_INT_MASK_M_CRC_OVERFLOW_SHIFT        5
#define DCU_INT_MASK_M_P1_FIFO_LO_FLAG_MASK      0x40u
#define DCU_INT_MASK_M_P1_FIFO_LO_FLAG_SHIFT     6
#define DCU_INT_MASK_M_P1_FIFO_HI_FLAG_MASK      0x80u
#define DCU_INT_MASK_M_P1_FIFO_HI_FLAG_SHIFT     7
#define DCU_INT_MASK_M_P2_FIFO_LO_FLAG_MASK      0x100u
#define DCU_INT_MASK_M_P2_FIFO_LO_FLAG_SHIFT     8
#define DCU_INT_MASK_M_P2_FIFO_HI_FLAG_MASK      0x200u
#define DCU_INT_MASK_M_P2_FIFO_HI_FLAG_SHIFT     9
#define DCU_INT_MASK_M_PROG_END_MASK             0x400u
#define DCU_INT_MASK_M_PROG_END_SHIFT            10
#define DCU_INT_MASK_M_IPM_ERROR_MASK            0x800u
#define DCU_INT_MASK_M_IPM_ERROR_SHIFT           11
#define DCU_INT_MASK_M_LYR_TRANS_FINISH_MASK     0x1000u
#define DCU_INT_MASK_M_LYR_TRANS_FINISH_SHIFT    12
#define DCU_INT_MASK_M_DMA_TRANS_FINISH_MASK     0x4000u
#define DCU_INT_MASK_M_DMA_TRANS_FINISH_SHIFT    14
#define DCU_INT_MASK_M_P3_FIFO_LO_FLAG_MASK      0x10000u
#define DCU_INT_MASK_M_P3_FIFO_LO_FLAG_SHIFT     16
#define DCU_INT_MASK_M_P3_FIFO_HI_FLAG_MASK      0x20000u
#define DCU_INT_MASK_M_P3_FIFO_HI_FLAG_SHIFT     17
#define DCU_INT_MASK_M_P4_FIFO_LO_FLAG_MASK      0x40000u
#define DCU_INT_MASK_M_P4_FIFO_LO_FLAG_SHIFT     18
#define DCU_INT_MASK_M_P4_FIFO_HI_FLAG_MASK      0x80000u
#define DCU_INT_MASK_M_P4_FIFO_HI_FLAG_SHIFT     19
#define DCU_INT_MASK_M_P5_FIFO_LO_FLAG_MASK      0x100000u
#define DCU_INT_MASK_M_P5_FIFO_LO_FLAG_SHIFT     20
#define DCU_INT_MASK_M_P5_FIFO_HI_FLAG_MASK      0x200000u
#define DCU_INT_MASK_M_P5_FIFO_HI_FLAG_SHIFT     21
#define DCU_INT_MASK_M_P6_FIFO_LO_FLAG_MASK      0x400000u
#define DCU_INT_MASK_M_P6_FIFO_LO_FLAG_SHIFT     22
#define DCU_INT_MASK_M_P6_FIFO_HI_FLAG_MASK      0x800000u
#define DCU_INT_MASK_M_P6_FIFO_HI_FLAG_SHIFT     23
#define DCU_INT_MASK_M_P1_EMPTY_MASK             0x4000000u
#define DCU_INT_MASK_M_P1_EMPTY_SHIFT            26
#define DCU_INT_MASK_M_P2_EMPTY_MASK             0x8000000u
#define DCU_INT_MASK_M_P2_EMPTY_SHIFT            27
#define DCU_INT_MASK_M_P3_EMPTY_MASK             0x10000000u
#define DCU_INT_MASK_M_P3_EMPTY_SHIFT            28
#define DCU_INT_MASK_M_P4_EMPTY_MASK             0x20000000u
#define DCU_INT_MASK_M_P4_EMPTY_SHIFT            29
#define DCU_INT_MASK_M_P5_EMPTY_MASK             0x40000000u
#define DCU_INT_MASK_M_P5_EMPTY_SHIFT            30
#define DCU_INT_MASK_M_P6_EMPTY_MASK             0x80000000u
#define DCU_INT_MASK_M_P6_EMPTY_SHIFT            31
/* COLBAR_1 Bit Fields */
#define DCU_COLBAR_1_COLBAR_1_B_MASK             0xFFu
#define DCU_COLBAR_1_COLBAR_1_B_SHIFT            0
#define DCU_COLBAR_1_COLBAR_1_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_1_COLBAR_1_B_SHIFT))&DCU_COLBAR_1_COLBAR_1_B_MASK)
#define DCU_COLBAR_1_COLBAR_1_G_MASK             0xFF00u
#define DCU_COLBAR_1_COLBAR_1_G_SHIFT            8
#define DCU_COLBAR_1_COLBAR_1_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_1_COLBAR_1_G_SHIFT))&DCU_COLBAR_1_COLBAR_1_G_MASK)
#define DCU_COLBAR_1_COLBAR_1_R_MASK             0xFF0000u
#define DCU_COLBAR_1_COLBAR_1_R_SHIFT            16
#define DCU_COLBAR_1_COLBAR_1_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_1_COLBAR_1_R_SHIFT))&DCU_COLBAR_1_COLBAR_1_R_MASK)
/* COLBAR_2 Bit Fields */
#define DCU_COLBAR_2_COLBAR_2_B_MASK             0xFFu
#define DCU_COLBAR_2_COLBAR_2_B_SHIFT            0
#define DCU_COLBAR_2_COLBAR_2_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_2_COLBAR_2_B_SHIFT))&DCU_COLBAR_2_COLBAR_2_B_MASK)
#define DCU_COLBAR_2_COLBAR_2_G_MASK             0xFF00u
#define DCU_COLBAR_2_COLBAR_2_G_SHIFT            8
#define DCU_COLBAR_2_COLBAR_2_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_2_COLBAR_2_G_SHIFT))&DCU_COLBAR_2_COLBAR_2_G_MASK)
#define DCU_COLBAR_2_COLBAR_2_R_MASK             0xFF0000u
#define DCU_COLBAR_2_COLBAR_2_R_SHIFT            16
#define DCU_COLBAR_2_COLBAR_2_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_2_COLBAR_2_R_SHIFT))&DCU_COLBAR_2_COLBAR_2_R_MASK)
/* COLBAR_3 Bit Fields */
#define DCU_COLBAR_3_COLBAR_3_B_MASK             0xFFu
#define DCU_COLBAR_3_COLBAR_3_B_SHIFT            0
#define DCU_COLBAR_3_COLBAR_3_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_3_COLBAR_3_B_SHIFT))&DCU_COLBAR_3_COLBAR_3_B_MASK)
#define DCU_COLBAR_3_COLBAR_3_G_MASK             0xFF00u
#define DCU_COLBAR_3_COLBAR_3_G_SHIFT            8
#define DCU_COLBAR_3_COLBAR_3_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_3_COLBAR_3_G_SHIFT))&DCU_COLBAR_3_COLBAR_3_G_MASK)
#define DCU_COLBAR_3_COLBAR_3_R_MASK             0xFF0000u
#define DCU_COLBAR_3_COLBAR_3_R_SHIFT            16
#define DCU_COLBAR_3_COLBAR_3_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_3_COLBAR_3_R_SHIFT))&DCU_COLBAR_3_COLBAR_3_R_MASK)
/* COLBAR_4 Bit Fields */
#define DCU_COLBAR_4_COLBAR_4_B_MASK             0xFFu
#define DCU_COLBAR_4_COLBAR_4_B_SHIFT            0
#define DCU_COLBAR_4_COLBAR_4_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_4_COLBAR_4_B_SHIFT))&DCU_COLBAR_4_COLBAR_4_B_MASK)
#define DCU_COLBAR_4_COLBAR_4_G_MASK             0xFF00u
#define DCU_COLBAR_4_COLBAR_4_G_SHIFT            8
#define DCU_COLBAR_4_COLBAR_4_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_4_COLBAR_4_G_SHIFT))&DCU_COLBAR_4_COLBAR_4_G_MASK)
#define DCU_COLBAR_4_COLBAR_4_R_MASK             0xFF0000u
#define DCU_COLBAR_4_COLBAR_4_R_SHIFT            16
#define DCU_COLBAR_4_COLBAR_4_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_4_COLBAR_4_R_SHIFT))&DCU_COLBAR_4_COLBAR_4_R_MASK)
/* COLBAR_5 Bit Fields */
#define DCU_COLBAR_5_COLBAR_5_B_MASK             0xFFu
#define DCU_COLBAR_5_COLBAR_5_B_SHIFT            0
#define DCU_COLBAR_5_COLBAR_5_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_5_COLBAR_5_B_SHIFT))&DCU_COLBAR_5_COLBAR_5_B_MASK)
#define DCU_COLBAR_5_COLBAR_5_G_MASK             0xFF00u
#define DCU_COLBAR_5_COLBAR_5_G_SHIFT            8
#define DCU_COLBAR_5_COLBAR_5_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_5_COLBAR_5_G_SHIFT))&DCU_COLBAR_5_COLBAR_5_G_MASK)
#define DCU_COLBAR_5_COLBAR_5_R_MASK             0xFF0000u
#define DCU_COLBAR_5_COLBAR_5_R_SHIFT            16
#define DCU_COLBAR_5_COLBAR_5_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_5_COLBAR_5_R_SHIFT))&DCU_COLBAR_5_COLBAR_5_R_MASK)
/* COLBAR_6 Bit Fields */
#define DCU_COLBAR_6_COLBAR_6_B_MASK             0xFFu
#define DCU_COLBAR_6_COLBAR_6_B_SHIFT            0
#define DCU_COLBAR_6_COLBAR_6_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_6_COLBAR_6_B_SHIFT))&DCU_COLBAR_6_COLBAR_6_B_MASK)
#define DCU_COLBAR_6_COLBAR_6_G_MASK             0xFF00u
#define DCU_COLBAR_6_COLBAR_6_G_SHIFT            8
#define DCU_COLBAR_6_COLBAR_6_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_6_COLBAR_6_G_SHIFT))&DCU_COLBAR_6_COLBAR_6_G_MASK)
#define DCU_COLBAR_6_COLBAR_6_R_MASK             0xFF0000u
#define DCU_COLBAR_6_COLBAR_6_R_SHIFT            16
#define DCU_COLBAR_6_COLBAR_6_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_6_COLBAR_6_R_SHIFT))&DCU_COLBAR_6_COLBAR_6_R_MASK)
/* COLBAR_7 Bit Fields */
#define DCU_COLBAR_7_COLBAR_7_B_MASK             0xFFu
#define DCU_COLBAR_7_COLBAR_7_B_SHIFT            0
#define DCU_COLBAR_7_COLBAR_7_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_7_COLBAR_7_B_SHIFT))&DCU_COLBAR_7_COLBAR_7_B_MASK)
#define DCU_COLBAR_7_COLBAR_7_G_MASK             0xFF00u
#define DCU_COLBAR_7_COLBAR_7_G_SHIFT            8
#define DCU_COLBAR_7_COLBAR_7_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_7_COLBAR_7_G_SHIFT))&DCU_COLBAR_7_COLBAR_7_G_MASK)
#define DCU_COLBAR_7_COLBAR_7_R_MASK             0xFF0000u
#define DCU_COLBAR_7_COLBAR_7_R_SHIFT            16
#define DCU_COLBAR_7_COLBAR_7_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_7_COLBAR_7_R_SHIFT))&DCU_COLBAR_7_COLBAR_7_R_MASK)
/* COLBAR_8 Bit Fields */
#define DCU_COLBAR_8_COLBAR_8_B_MASK             0xFFu
#define DCU_COLBAR_8_COLBAR_8_B_SHIFT            0
#define DCU_COLBAR_8_COLBAR_8_B(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_8_COLBAR_8_B_SHIFT))&DCU_COLBAR_8_COLBAR_8_B_MASK)
#define DCU_COLBAR_8_COLBAR_8_G_MASK             0xFF00u
#define DCU_COLBAR_8_COLBAR_8_G_SHIFT            8
#define DCU_COLBAR_8_COLBAR_8_G(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_8_COLBAR_8_G_SHIFT))&DCU_COLBAR_8_COLBAR_8_G_MASK)
#define DCU_COLBAR_8_COLBAR_8_R_MASK             0xFF0000u
#define DCU_COLBAR_8_COLBAR_8_R_SHIFT            16
#define DCU_COLBAR_8_COLBAR_8_R(x)               (((uint32_t)(((uint32_t)(x))<<DCU_COLBAR_8_COLBAR_8_R_SHIFT))&DCU_COLBAR_8_COLBAR_8_R_MASK)
/* DIV_RATIO Bit Fields */
#define DCU_DIV_RATIO_DIV_RATIO_MASK             0xFFu
#define DCU_DIV_RATIO_DIV_RATIO_SHIFT            0
#define DCU_DIV_RATIO_DIV_RATIO(x)               (((uint32_t)(((uint32_t)(x))<<DCU_DIV_RATIO_DIV_RATIO_SHIFT))&DCU_DIV_RATIO_DIV_RATIO_MASK)
/* SIGN_CALC_1 Bit Fields */
#define DCU_SIGN_CALC_1_SIG_HOR_SIZE_MASK        0x7FFu
#define DCU_SIGN_CALC_1_SIG_HOR_SIZE_SHIFT       0
#define DCU_SIGN_CALC_1_SIG_HOR_SIZE(x)          (((uint32_t)(((uint32_t)(x))<<DCU_SIGN_CALC_1_SIG_HOR_SIZE_SHIFT))&DCU_SIGN_CALC_1_SIG_HOR_SIZE_MASK)
#define DCU_SIGN_CALC_1_SIG_VER_SIZE_MASK        0x7FF0000u
#define DCU_SIGN_CALC_1_SIG_VER_SIZE_SHIFT       16
#define DCU_SIGN_CALC_1_SIG_VER_SIZE(x)          (((uint32_t)(((uint32_t)(x))<<DCU_SIGN_CALC_1_SIG_VER_SIZE_SHIFT))&DCU_SIGN_CALC_1_SIG_VER_SIZE_MASK)
/* SIGN_CALC_2 Bit Fields */
#define DCU_SIGN_CALC_2_SIG_HOR_POS_MASK         0x7FFu
#define DCU_SIGN_CALC_2_SIG_HOR_POS_SHIFT        0
#define DCU_SIGN_CALC_2_SIG_HOR_POS(x)           (((uint32_t)(((uint32_t)(x))<<DCU_SIGN_CALC_2_SIG_HOR_POS_SHIFT))&DCU_SIGN_CALC_2_SIG_HOR_POS_MASK)
#define DCU_SIGN_CALC_2_SIG_VER_POS_MASK         0x7FF0000u
#define DCU_SIGN_CALC_2_SIG_VER_POS_SHIFT        16
#define DCU_SIGN_CALC_2_SIG_VER_POS(x)           (((uint32_t)(((uint32_t)(x))<<DCU_SIGN_CALC_2_SIG_VER_POS_SHIFT))&DCU_SIGN_CALC_2_SIG_VER_POS_MASK)
/* CRC_VAL Bit Fields */
#define DCU_CRC_VAL_CRC_VAL_MASK                 0xFFFFFFFFu
#define DCU_CRC_VAL_CRC_VAL_SHIFT                0
#define DCU_CRC_VAL_CRC_VAL(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CRC_VAL_CRC_VAL_SHIFT))&DCU_CRC_VAL_CRC_VAL_MASK)
/* PDI_STATUS Bit Fields */
#define DCU_PDI_STATUS_PDI_CLK_DET_MASK          0x1u
#define DCU_PDI_STATUS_PDI_CLK_DET_SHIFT         0
#define DCU_PDI_STATUS_PDI_CLK_LOST_MASK         0x2u
#define DCU_PDI_STATUS_PDI_CLK_LOST_SHIFT        1
#define DCU_PDI_STATUS_PDI_DE_DET_MASK           0x4u
#define DCU_PDI_STATUS_PDI_DE_DET_SHIFT          2
#define DCU_PDI_STATUS_PDI_HSYNC_DET_MASK        0x8u
#define DCU_PDI_STATUS_PDI_HSYNC_DET_SHIFT       3
#define DCU_PDI_STATUS_PDI_VSYNC_DET_MASK        0x10u
#define DCU_PDI_STATUS_PDI_VSYNC_DET_SHIFT       4
#define DCU_PDI_STATUS_PDI_LOCK_DET_MASK         0x20u
#define DCU_PDI_STATUS_PDI_LOCK_DET_SHIFT        5
#define DCU_PDI_STATUS_PDI_LOCK_LOST_MASK        0x40u
#define DCU_PDI_STATUS_PDI_LOCK_LOST_SHIFT       6
#define DCU_PDI_STATUS_PDI_ECC_ERR1_MASK         0x80u
#define DCU_PDI_STATUS_PDI_ECC_ERR1_SHIFT        7
#define DCU_PDI_STATUS_PDI_ECC_ERR2_MASK         0x100u
#define DCU_PDI_STATUS_PDI_ECC_ERR2_SHIFT        8
#define DCU_PDI_STATUS_PDI_BLANKING_ERR_MASK     0x200u
#define DCU_PDI_STATUS_PDI_BLANKING_ERR_SHIFT    9
/* PDI_STA_MSK Bit Fields */
#define DCU_PDI_STA_MSK_M_PDI_CLK_DET_MASK       0x1u
#define DCU_PDI_STA_MSK_M_PDI_CLK_DET_SHIFT      0
#define DCU_PDI_STA_MSK_M_PDI_CLK_LOST_MASK      0x2u
#define DCU_PDI_STA_MSK_M_PDI_CLK_LOST_SHIFT     1
#define DCU_PDI_STA_MSK_M_PDI_DE_DET_MASK        0x4u
#define DCU_PDI_STA_MSK_M_PDI_DE_DET_SHIFT       2
#define DCU_PDI_STA_MSK_M_PDI_HSYNC_DET_MASK     0x8u
#define DCU_PDI_STA_MSK_M_PDI_HSYNC_DET_SHIFT    3
#define DCU_PDI_STA_MSK_M_PDI_VSYNC_DET_MASK     0x10u
#define DCU_PDI_STA_MSK_M_PDI_VSYNC_DET_SHIFT    4
#define DCU_PDI_STA_MSK_M_PDI_LOCK_DET_MASK      0x20u
#define DCU_PDI_STA_MSK_M_PDI_LOCK_DET_SHIFT     5
#define DCU_PDI_STA_MSK_M_PDI_LOCK_LOST_MASK     0x40u
#define DCU_PDI_STA_MSK_M_PDI_LOCK_LOST_SHIFT    6
#define DCU_PDI_STA_MSK_M_PDI_ECC_ERR1_MASK      0x80u
#define DCU_PDI_STA_MSK_M_PDI_ECC_ERR1_SHIFT     7
#define DCU_PDI_STA_MSK_M_PDI_ECC_ERR2_MASK      0x100u
#define DCU_PDI_STA_MSK_M_PDI_ECC_ERR2_SHIFT     8
#define DCU_PDI_STA_MSK_M_PDI_BLANKING_ERR_MASK  0x200u
#define DCU_PDI_STA_MSK_M_PDI_BLANKING_ERR_SHIFT 9
/* PARR_ERR_STATUS1 Bit Fields */
#define DCU_PARR_ERR_STATUS1_L_MASK              0xFFFFFFFFu
#define DCU_PARR_ERR_STATUS1_L_SHIFT             0
#define DCU_PARR_ERR_STATUS1_L(x)                (((uint32_t)(((uint32_t)(x))<<DCU_PARR_ERR_STATUS1_L_SHIFT))&DCU_PARR_ERR_STATUS1_L_MASK)
/* PARR_ERR_STATUS2 Bit Fields */
#define DCU_PARR_ERR_STATUS2_L_MASK              0xFFFFFFFFu
#define DCU_PARR_ERR_STATUS2_L_SHIFT             0
#define DCU_PARR_ERR_STATUS2_L(x)                (((uint32_t)(((uint32_t)(x))<<DCU_PARR_ERR_STATUS2_L_SHIFT))&DCU_PARR_ERR_STATUS2_L_MASK)
/* PARR_ERR_STATUS3 Bit Fields */
#define DCU_PARR_ERR_STATUS3_DISP_ERR_MASK       0x1u
#define DCU_PARR_ERR_STATUS3_DISP_ERR_SHIFT      0
#define DCU_PARR_ERR_STATUS3_SIG_ERR_MASK        0x2u
#define DCU_PARR_ERR_STATUS3_SIG_ERR_SHIFT       1
#define DCU_PARR_ERR_STATUS3_HWC_ERR_MASK        0x4u
#define DCU_PARR_ERR_STATUS3_HWC_ERR_SHIFT       2
#define DCU_PARR_ERR_STATUS3_RLE_ERR_MASK        0x8u
#define DCU_PARR_ERR_STATUS3_RLE_ERR_SHIFT       3
/* MASK_PARR_ERR_STATUS1 Bit Fields */
#define DCU_MASK_PARR_ERR_STATUS1_M_L_PARR_ERR_MASK 0xFFFFFFFFu
#define DCU_MASK_PARR_ERR_STATUS1_M_L_PARR_ERR_SHIFT 0
#define DCU_MASK_PARR_ERR_STATUS1_M_L_PARR_ERR(x) (((uint32_t)(((uint32_t)(x))<<DCU_MASK_PARR_ERR_STATUS1_M_L_PARR_ERR_SHIFT))&DCU_MASK_PARR_ERR_STATUS1_M_L_PARR_ERR_MASK)
/* MASK_PARR_ERR_STATUS2 Bit Fields */
#define DCU_MASK_PARR_ERR_STATUS2_M_L_PARR_ERR_MASK 0xFFFFFFFFu
#define DCU_MASK_PARR_ERR_STATUS2_M_L_PARR_ERR_SHIFT 0
#define DCU_MASK_PARR_ERR_STATUS2_M_L_PARR_ERR(x) (((uint32_t)(((uint32_t)(x))<<DCU_MASK_PARR_ERR_STATUS2_M_L_PARR_ERR_SHIFT))&DCU_MASK_PARR_ERR_STATUS2_M_L_PARR_ERR_MASK)
/* MASK_PARR_ERR_STATUS3 Bit Fields */
#define DCU_MASK_PARR_ERR_STATUS3_M_DISP_ERR_MASK 0x1u
#define DCU_MASK_PARR_ERR_STATUS3_M_DISP_ERR_SHIFT 0
#define DCU_MASK_PARR_ERR_STATUS3_M_SIG_ERR_MASK 0x2u
#define DCU_MASK_PARR_ERR_STATUS3_M_SIG_ERR_SHIFT 1
#define DCU_MASK_PARR_ERR_STATUS3_M_HWC_ERR_MASK 0x4u
#define DCU_MASK_PARR_ERR_STATUS3_M_HWC_ERR_SHIFT 2
#define DCU_MASK_PARR_ERR_STATUS3_M_RLE_ERR_MASK 0x8u
#define DCU_MASK_PARR_ERR_STATUS3_M_RLE_ERR_SHIFT 3
/* THRESHOLD_INP_BUF_1 Bit Fields */
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_LO_MASK 0x7Fu
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_LO_SHIFT 0
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_HI_MASK 0x7F00u
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_HI_SHIFT 8
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_1_INP_BUF_P1_HI_MASK)
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_LO_MASK 0x7F0000u
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_LO_SHIFT 16
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_HI_MASK 0x7F000000u
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_HI_SHIFT 24
#define DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_1_INP_BUF_P2_HI_MASK)
/* THRESHOLD_INP_BUF_2 Bit Fields */
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_LO_MASK 0x7Fu
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_LO_SHIFT 0
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_HI_MASK 0x7F00u
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_HI_SHIFT 8
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_2_INP_BUF_P3_HI_MASK)
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_LO_MASK 0x7F0000u
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_LO_SHIFT 16
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_HI_MASK 0x7F000000u
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_HI_SHIFT 24
#define DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_2_INP_BUF_P4_HI_MASK)
/* THRESHOLD_INP_BUF_3 Bit Fields */
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_LO_MASK 0x7Fu
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_LO_SHIFT 0
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_HI_MASK 0x7F00u
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_HI_SHIFT 8
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_3_INP_BUF_P5_HI_MASK)
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_LO_MASK 0x7F0000u
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_LO_SHIFT 16
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_LO(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_LO_SHIFT))&DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_LO_MASK)
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_HI_MASK 0x7F000000u
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_HI_SHIFT 24
#define DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_HI(x) (((uint32_t)(((uint32_t)(x))<<DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_HI_SHIFT))&DCU_THRESHOLD_INP_BUF_3_INP_BUF_P6_HI_MASK)
/* LUMA_COMP Bit Fields */
#define DCU_LUMA_COMP_Y_BLUE_MASK                0x3FFu
#define DCU_LUMA_COMP_Y_BLUE_SHIFT               0
#define DCU_LUMA_COMP_Y_BLUE(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_LUMA_COMP_Y_BLUE_SHIFT))&DCU_LUMA_COMP_Y_BLUE_MASK)
#define DCU_LUMA_COMP_Y_GREEN_MASK               0x1FF800u
#define DCU_LUMA_COMP_Y_GREEN_SHIFT              11
#define DCU_LUMA_COMP_Y_GREEN(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_LUMA_COMP_Y_GREEN_SHIFT))&DCU_LUMA_COMP_Y_GREEN_MASK)
#define DCU_LUMA_COMP_Y_RED_MASK                 0xFFC00000u
#define DCU_LUMA_COMP_Y_RED_SHIFT                22
#define DCU_LUMA_COMP_Y_RED(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_LUMA_COMP_Y_RED_SHIFT))&DCU_LUMA_COMP_Y_RED_MASK)
/* CHROMA_RED Bit Fields */
#define DCU_CHROMA_RED_CB_RED_MASK               0xFFFu
#define DCU_CHROMA_RED_CB_RED_SHIFT              0
#define DCU_CHROMA_RED_CB_RED(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_RED_CB_RED_SHIFT))&DCU_CHROMA_RED_CB_RED_MASK)
#define DCU_CHROMA_RED_CR_RED_MASK               0x7FF0000u
#define DCU_CHROMA_RED_CR_RED_SHIFT              16
#define DCU_CHROMA_RED_CR_RED(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_RED_CR_RED_SHIFT))&DCU_CHROMA_RED_CR_RED_MASK)
/* CHROMA_GREEN Bit Fields */
#define DCU_CHROMA_GREEN_CB_GREEN_MASK           0xFFFu
#define DCU_CHROMA_GREEN_CB_GREEN_SHIFT          0
#define DCU_CHROMA_GREEN_CB_GREEN(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_GREEN_CB_GREEN_SHIFT))&DCU_CHROMA_GREEN_CB_GREEN_MASK)
#define DCU_CHROMA_GREEN_CR_GREEN_MASK           0x7FF0000u
#define DCU_CHROMA_GREEN_CR_GREEN_SHIFT          16
#define DCU_CHROMA_GREEN_CR_GREEN(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_GREEN_CR_GREEN_SHIFT))&DCU_CHROMA_GREEN_CR_GREEN_MASK)
/* CHROMA_BLUE Bit Fields */
#define DCU_CHROMA_BLUE_CB_BLUE_MASK             0xFFFu
#define DCU_CHROMA_BLUE_CB_BLUE_SHIFT            0
#define DCU_CHROMA_BLUE_CB_BLUE(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_BLUE_CB_BLUE_SHIFT))&DCU_CHROMA_BLUE_CB_BLUE_MASK)
#define DCU_CHROMA_BLUE_CR_BLUE_MASK             0x7FF0000u
#define DCU_CHROMA_BLUE_CR_BLUE_SHIFT            16
#define DCU_CHROMA_BLUE_CR_BLUE(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CHROMA_BLUE_CR_BLUE_SHIFT))&DCU_CHROMA_BLUE_CR_BLUE_MASK)
/* CRC_POS Bit Fields */
#define DCU_CRC_POS_CRC_POS_MASK                 0xFFFFFFFFu
#define DCU_CRC_POS_CRC_POS_SHIFT                0
#define DCU_CRC_POS_CRC_POS(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CRC_POS_CRC_POS_SHIFT))&DCU_CRC_POS_CRC_POS_MASK)
/* LYR_INTPOL_EN Bit Fields */
#define DCU_LYR_INTPOL_EN_EN_MASK                0x80000000u
#define DCU_LYR_INTPOL_EN_EN_SHIFT               31
/* LYR_LUMA_COMP Bit Fields */
#define DCU_LYR_LUMA_COMP_Y_BLUE_MASK            0x3FFu
#define DCU_LYR_LUMA_COMP_Y_BLUE_SHIFT           0
#define DCU_LYR_LUMA_COMP_Y_BLUE(x)              (((uint32_t)(((uint32_t)(x))<<DCU_LYR_LUMA_COMP_Y_BLUE_SHIFT))&DCU_LYR_LUMA_COMP_Y_BLUE_MASK)
#define DCU_LYR_LUMA_COMP_Y_GREEN_MASK           0x1FF800u
#define DCU_LYR_LUMA_COMP_Y_GREEN_SHIFT          11
#define DCU_LYR_LUMA_COMP_Y_GREEN(x)             (((uint32_t)(((uint32_t)(x))<<DCU_LYR_LUMA_COMP_Y_GREEN_SHIFT))&DCU_LYR_LUMA_COMP_Y_GREEN_MASK)
#define DCU_LYR_LUMA_COMP_Y_RED_MASK             0xFFC00000u
#define DCU_LYR_LUMA_COMP_Y_RED_SHIFT            22
#define DCU_LYR_LUMA_COMP_Y_RED(x)               (((uint32_t)(((uint32_t)(x))<<DCU_LYR_LUMA_COMP_Y_RED_SHIFT))&DCU_LYR_LUMA_COMP_Y_RED_MASK)
/* LYR_CHRM_RED Bit Fields */
#define DCU_LYR_CHRM_RED_Cb_RED_MASK             0xFFFu
#define DCU_LYR_CHRM_RED_Cb_RED_SHIFT            0
#define DCU_LYR_CHRM_RED_Cb_RED(x)               (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_RED_Cb_RED_SHIFT))&DCU_LYR_CHRM_RED_Cb_RED_MASK)
#define DCU_LYR_CHRM_RED_Cr_RED_MASK             0x7FF0000u
#define DCU_LYR_CHRM_RED_Cr_RED_SHIFT            16
#define DCU_LYR_CHRM_RED_Cr_RED(x)               (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_RED_Cr_RED_SHIFT))&DCU_LYR_CHRM_RED_Cr_RED_MASK)
/* LYR_CHRM_GRN Bit Fields */
#define DCU_LYR_CHRM_GRN_Cb_GREEN_MASK           0xFFFu
#define DCU_LYR_CHRM_GRN_Cb_GREEN_SHIFT          0
#define DCU_LYR_CHRM_GRN_Cb_GREEN(x)             (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_GRN_Cb_GREEN_SHIFT))&DCU_LYR_CHRM_GRN_Cb_GREEN_MASK)
#define DCU_LYR_CHRM_GRN_Cr_GREEN_MASK           0x7FF0000u
#define DCU_LYR_CHRM_GRN_Cr_GREEN_SHIFT          16
#define DCU_LYR_CHRM_GRN_Cr_GREEN(x)             (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_GRN_Cr_GREEN_SHIFT))&DCU_LYR_CHRM_GRN_Cr_GREEN_MASK)
/* LYR_CHRM_BLUE Bit Fields */
#define DCU_LYR_CHRM_BLUE_Cb_BLUE_MASK           0xFFFu
#define DCU_LYR_CHRM_BLUE_Cb_BLUE_SHIFT          0
#define DCU_LYR_CHRM_BLUE_Cb_BLUE(x)             (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_BLUE_Cb_BLUE_SHIFT))&DCU_LYR_CHRM_BLUE_Cb_BLUE_MASK)
#define DCU_LYR_CHRM_BLUE_Cr_BLUE_MASK           0x7FF0000u
#define DCU_LYR_CHRM_BLUE_Cr_BLUE_SHIFT          16
#define DCU_LYR_CHRM_BLUE_Cr_BLUE(x)             (((uint32_t)(((uint32_t)(x))<<DCU_LYR_CHRM_BLUE_Cr_BLUE_SHIFT))&DCU_LYR_CHRM_BLUE_Cr_BLUE_MASK)
/* COMP_IMSIZE Bit Fields */
#define DCU_COMP_IMSIZE_COMP_IMSIZE_MASK         0x3FFFFFu
#define DCU_COMP_IMSIZE_COMP_IMSIZE_SHIFT        0
#define DCU_COMP_IMSIZE_COMP_IMSIZE(x)           (((uint32_t)(((uint32_t)(x))<<DCU_COMP_IMSIZE_COMP_IMSIZE_SHIFT))&DCU_COMP_IMSIZE_COMP_IMSIZE_MASK)
/* UPDATE_MODE Bit Fields */
#define DCU_UPDATE_MODE_READREG_MASK             0x40000000u
#define DCU_UPDATE_MODE_READREG_SHIFT            30
#define DCU_UPDATE_MODE_MODE_MASK                0x80000000u
#define DCU_UPDATE_MODE_MODE_SHIFT               31
/* UNDERRUN Bit Fields */
#define DCU_UNDERRUN_PIXEL_MASK                  0x7FFu
#define DCU_UNDERRUN_PIXEL_SHIFT                 0
#define DCU_UNDERRUN_PIXEL(x)                    (((uint32_t)(((uint32_t)(x))<<DCU_UNDERRUN_PIXEL_SHIFT))&DCU_UNDERRUN_PIXEL_MASK)
#define DCU_UNDERRUN_LINE_MASK                   0x7FF0000u
#define DCU_UNDERRUN_LINE_SHIFT                  16
#define DCU_UNDERRUN_LINE(x)                     (((uint32_t)(((uint32_t)(x))<<DCU_UNDERRUN_LINE_SHIFT))&DCU_UNDERRUN_LINE_MASK)
/* CTRLDESCL0_0 Bit Fields */
#define DCU_CTRLDESCL0_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL0_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL0_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_0_WIDTH_SHIFT))&DCU_CTRLDESCL0_0_WIDTH_MASK)
#define DCU_CTRLDESCL0_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL0_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL0_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_0_HEIGHT_SHIFT))&DCU_CTRLDESCL0_0_HEIGHT_MASK)
/* CTRLDESCL0_1 Bit Fields */
#define DCU_CTRLDESCL0_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL0_1_POSX_SHIFT              0
#define DCU_CTRLDESCL0_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_1_POSX_SHIFT))&DCU_CTRLDESCL0_1_POSX_MASK)
#define DCU_CTRLDESCL0_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL0_1_POSY_SHIFT              16
#define DCU_CTRLDESCL0_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_1_POSY_SHIFT))&DCU_CTRLDESCL0_1_POSY_MASK)
/* CTRLDESCL0_2 Bit Fields */
#define DCU_CTRLDESCL0_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL0_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL0_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_2_ADDR_SHIFT))&DCU_CTRLDESCL0_2_ADDR_MASK)
/* CTRLDESCL0_3 Bit Fields */
#define DCU_CTRLDESCL0_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL0_3_AB_SHIFT                0
#define DCU_CTRLDESCL0_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_3_AB_SHIFT))&DCU_CTRLDESCL0_3_AB_MASK)
#define DCU_CTRLDESCL0_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL0_3_BB_SHIFT                2
#define DCU_CTRLDESCL0_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL0_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL0_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_3_LUOFFS_SHIFT))&DCU_CTRLDESCL0_3_LUOFFS_MASK)
#define DCU_CTRLDESCL0_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL0_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL0_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL0_3_BPP_SHIFT               16
#define DCU_CTRLDESCL0_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_3_BPP_SHIFT))&DCU_CTRLDESCL0_3_BPP_MASK)
#define DCU_CTRLDESCL0_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL0_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL0_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_3_TRANS_SHIFT))&DCU_CTRLDESCL0_3_TRANS_MASK)
#define DCU_CTRLDESCL0_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL0_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL0_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL0_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL0_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL0_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL0_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL0_3_EN_SHIFT                31
/* CTRLDESCL0_4 Bit Fields */
#define DCU_CTRLDESCL0_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL0_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL0_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL0_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL0_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL0_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL0_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL0_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL0_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL0_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL0_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL0_4_CKMAX_R_MASK)
/* CTRLDESCL0_5 Bit Fields */
#define DCU_CTRLDESCL0_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL0_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL0_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL0_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL0_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL0_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL0_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL0_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL0_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL0_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL0_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL0_5_CKMIN_R_MASK)
/* CTRLDESCL0_6 Bit Fields */
#define DCU_CTRLDESCL0_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL0_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL0_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL0_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL0_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL0_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL0_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL0_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL0_7 Bit Fields */
#define DCU_CTRLDESCL0_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL0_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL0_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL0_7_FGn_FCOLOR_MASK)
/* CTRLDESCL0_8 Bit Fields */
#define DCU_CTRLDESCL0_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL0_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL0_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL0_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL0_8_FGn_BCOLOR_MASK)
/* CTRLDESCL1_0 Bit Fields */
#define DCU_CTRLDESCL1_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL1_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL1_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_0_WIDTH_SHIFT))&DCU_CTRLDESCL1_0_WIDTH_MASK)
#define DCU_CTRLDESCL1_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL1_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL1_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_0_HEIGHT_SHIFT))&DCU_CTRLDESCL1_0_HEIGHT_MASK)
/* CTRLDESCL1_1 Bit Fields */
#define DCU_CTRLDESCL1_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL1_1_POSX_SHIFT              0
#define DCU_CTRLDESCL1_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_1_POSX_SHIFT))&DCU_CTRLDESCL1_1_POSX_MASK)
#define DCU_CTRLDESCL1_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL1_1_POSY_SHIFT              16
#define DCU_CTRLDESCL1_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_1_POSY_SHIFT))&DCU_CTRLDESCL1_1_POSY_MASK)
/* CTRLDESCL1_2 Bit Fields */
#define DCU_CTRLDESCL1_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL1_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL1_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_2_ADDR_SHIFT))&DCU_CTRLDESCL1_2_ADDR_MASK)
/* CTRLDESCL1_3 Bit Fields */
#define DCU_CTRLDESCL1_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL1_3_AB_SHIFT                0
#define DCU_CTRLDESCL1_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_3_AB_SHIFT))&DCU_CTRLDESCL1_3_AB_MASK)
#define DCU_CTRLDESCL1_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL1_3_BB_SHIFT                2
#define DCU_CTRLDESCL1_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL1_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL1_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_3_LUOFFS_SHIFT))&DCU_CTRLDESCL1_3_LUOFFS_MASK)
#define DCU_CTRLDESCL1_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL1_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL1_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL1_3_BPP_SHIFT               16
#define DCU_CTRLDESCL1_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_3_BPP_SHIFT))&DCU_CTRLDESCL1_3_BPP_MASK)
#define DCU_CTRLDESCL1_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL1_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL1_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_3_TRANS_SHIFT))&DCU_CTRLDESCL1_3_TRANS_MASK)
#define DCU_CTRLDESCL1_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL1_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL1_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL1_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL1_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL1_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL1_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL1_3_EN_SHIFT                31
/* CTRLDESCL1_4 Bit Fields */
#define DCU_CTRLDESCL1_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL1_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL1_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL1_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL1_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL1_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL1_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL1_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL1_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL1_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL1_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL1_4_CKMAX_R_MASK)
/* CTRLDESCL1_5 Bit Fields */
#define DCU_CTRLDESCL1_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL1_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL1_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL1_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL1_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL1_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL1_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL1_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL1_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL1_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL1_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL1_5_CKMIN_R_MASK)
/* CTRLDESCL1_6 Bit Fields */
#define DCU_CTRLDESCL1_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL1_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL1_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL1_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL1_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL1_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL1_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL1_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL1_7 Bit Fields */
#define DCU_CTRLDESCL1_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL1_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL1_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL1_7_FGn_FCOLOR_MASK)
/* CTRLDESCL1_8 Bit Fields */
#define DCU_CTRLDESCL1_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL1_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL1_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL1_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL1_8_FGn_BCOLOR_MASK)
/* CTRLDESCL2_0 Bit Fields */
#define DCU_CTRLDESCL2_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL2_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL2_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_0_WIDTH_SHIFT))&DCU_CTRLDESCL2_0_WIDTH_MASK)
#define DCU_CTRLDESCL2_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL2_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL2_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_0_HEIGHT_SHIFT))&DCU_CTRLDESCL2_0_HEIGHT_MASK)
/* CTRLDESCL2_1 Bit Fields */
#define DCU_CTRLDESCL2_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL2_1_POSX_SHIFT              0
#define DCU_CTRLDESCL2_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_1_POSX_SHIFT))&DCU_CTRLDESCL2_1_POSX_MASK)
#define DCU_CTRLDESCL2_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL2_1_POSY_SHIFT              16
#define DCU_CTRLDESCL2_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_1_POSY_SHIFT))&DCU_CTRLDESCL2_1_POSY_MASK)
/* CTRLDESCL2_2 Bit Fields */
#define DCU_CTRLDESCL2_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL2_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL2_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_2_ADDR_SHIFT))&DCU_CTRLDESCL2_2_ADDR_MASK)
/* CTRLDESCL2_3 Bit Fields */
#define DCU_CTRLDESCL2_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL2_3_AB_SHIFT                0
#define DCU_CTRLDESCL2_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_3_AB_SHIFT))&DCU_CTRLDESCL2_3_AB_MASK)
#define DCU_CTRLDESCL2_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL2_3_BB_SHIFT                2
#define DCU_CTRLDESCL2_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL2_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL2_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_3_LUOFFS_SHIFT))&DCU_CTRLDESCL2_3_LUOFFS_MASK)
#define DCU_CTRLDESCL2_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL2_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL2_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL2_3_BPP_SHIFT               16
#define DCU_CTRLDESCL2_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_3_BPP_SHIFT))&DCU_CTRLDESCL2_3_BPP_MASK)
#define DCU_CTRLDESCL2_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL2_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL2_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_3_TRANS_SHIFT))&DCU_CTRLDESCL2_3_TRANS_MASK)
#define DCU_CTRLDESCL2_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL2_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL2_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL2_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL2_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL2_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL2_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL2_3_EN_SHIFT                31
/* CTRLDESCL2_4 Bit Fields */
#define DCU_CTRLDESCL2_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL2_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL2_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL2_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL2_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL2_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL2_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL2_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL2_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL2_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL2_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL2_4_CKMAX_R_MASK)
/* CTRLDESCL2_5 Bit Fields */
#define DCU_CTRLDESCL2_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL2_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL2_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL2_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL2_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL2_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL2_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL2_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL2_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL2_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL2_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL2_5_CKMIN_R_MASK)
/* CTRLDESCL2_6 Bit Fields */
#define DCU_CTRLDESCL2_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL2_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL2_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL2_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL2_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL2_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL2_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL2_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL2_7 Bit Fields */
#define DCU_CTRLDESCL2_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL2_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL2_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL2_7_FGn_FCOLOR_MASK)
/* CTRLDESCL2_8 Bit Fields */
#define DCU_CTRLDESCL2_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL2_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL2_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL2_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL2_8_FGn_BCOLOR_MASK)
/* CTRLDESCL3_0 Bit Fields */
#define DCU_CTRLDESCL3_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL3_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL3_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_0_WIDTH_SHIFT))&DCU_CTRLDESCL3_0_WIDTH_MASK)
#define DCU_CTRLDESCL3_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL3_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL3_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_0_HEIGHT_SHIFT))&DCU_CTRLDESCL3_0_HEIGHT_MASK)
/* CTRLDESCL3_1 Bit Fields */
#define DCU_CTRLDESCL3_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL3_1_POSX_SHIFT              0
#define DCU_CTRLDESCL3_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_1_POSX_SHIFT))&DCU_CTRLDESCL3_1_POSX_MASK)
#define DCU_CTRLDESCL3_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL3_1_POSY_SHIFT              16
#define DCU_CTRLDESCL3_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_1_POSY_SHIFT))&DCU_CTRLDESCL3_1_POSY_MASK)
/* CTRLDESCL3_2 Bit Fields */
#define DCU_CTRLDESCL3_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL3_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL3_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_2_ADDR_SHIFT))&DCU_CTRLDESCL3_2_ADDR_MASK)
/* CTRLDESCL3_3 Bit Fields */
#define DCU_CTRLDESCL3_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL3_3_AB_SHIFT                0
#define DCU_CTRLDESCL3_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_3_AB_SHIFT))&DCU_CTRLDESCL3_3_AB_MASK)
#define DCU_CTRLDESCL3_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL3_3_BB_SHIFT                2
#define DCU_CTRLDESCL3_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL3_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL3_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_3_LUOFFS_SHIFT))&DCU_CTRLDESCL3_3_LUOFFS_MASK)
#define DCU_CTRLDESCL3_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL3_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL3_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL3_3_BPP_SHIFT               16
#define DCU_CTRLDESCL3_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_3_BPP_SHIFT))&DCU_CTRLDESCL3_3_BPP_MASK)
#define DCU_CTRLDESCL3_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL3_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL3_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_3_TRANS_SHIFT))&DCU_CTRLDESCL3_3_TRANS_MASK)
#define DCU_CTRLDESCL3_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL3_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL3_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL3_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL3_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL3_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL3_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL3_3_EN_SHIFT                31
/* CTRLDESCL3_4 Bit Fields */
#define DCU_CTRLDESCL3_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL3_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL3_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL3_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL3_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL3_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL3_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL3_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL3_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL3_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL3_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL3_4_CKMAX_R_MASK)
/* CTRLDESCL3_5 Bit Fields */
#define DCU_CTRLDESCL3_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL3_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL3_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL3_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL3_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL3_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL3_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL3_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL3_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL3_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL3_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL3_5_CKMIN_R_MASK)
/* CTRLDESCL3_6 Bit Fields */
#define DCU_CTRLDESCL3_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL3_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL3_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL3_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL3_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL3_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL3_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL3_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL3_7 Bit Fields */
#define DCU_CTRLDESCL3_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL3_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL3_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL3_7_FGn_FCOLOR_MASK)
/* CTRLDESCL3_8 Bit Fields */
#define DCU_CTRLDESCL3_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL3_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL3_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL3_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL3_8_FGn_BCOLOR_MASK)
/* CTRLDESCL4_0 Bit Fields */
#define DCU_CTRLDESCL4_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL4_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL4_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_0_WIDTH_SHIFT))&DCU_CTRLDESCL4_0_WIDTH_MASK)
#define DCU_CTRLDESCL4_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL4_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL4_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_0_HEIGHT_SHIFT))&DCU_CTRLDESCL4_0_HEIGHT_MASK)
/* CTRLDESCL4_1 Bit Fields */
#define DCU_CTRLDESCL4_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL4_1_POSX_SHIFT              0
#define DCU_CTRLDESCL4_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_1_POSX_SHIFT))&DCU_CTRLDESCL4_1_POSX_MASK)
#define DCU_CTRLDESCL4_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL4_1_POSY_SHIFT              16
#define DCU_CTRLDESCL4_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_1_POSY_SHIFT))&DCU_CTRLDESCL4_1_POSY_MASK)
/* CTRLDESCL4_2 Bit Fields */
#define DCU_CTRLDESCL4_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL4_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL4_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_2_ADDR_SHIFT))&DCU_CTRLDESCL4_2_ADDR_MASK)
/* CTRLDESCL4_3 Bit Fields */
#define DCU_CTRLDESCL4_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL4_3_AB_SHIFT                0
#define DCU_CTRLDESCL4_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_3_AB_SHIFT))&DCU_CTRLDESCL4_3_AB_MASK)
#define DCU_CTRLDESCL4_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL4_3_BB_SHIFT                2
#define DCU_CTRLDESCL4_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL4_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL4_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_3_LUOFFS_SHIFT))&DCU_CTRLDESCL4_3_LUOFFS_MASK)
#define DCU_CTRLDESCL4_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL4_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL4_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL4_3_BPP_SHIFT               16
#define DCU_CTRLDESCL4_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_3_BPP_SHIFT))&DCU_CTRLDESCL4_3_BPP_MASK)
#define DCU_CTRLDESCL4_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL4_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL4_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_3_TRANS_SHIFT))&DCU_CTRLDESCL4_3_TRANS_MASK)
#define DCU_CTRLDESCL4_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL4_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL4_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL4_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL4_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL4_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL4_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL4_3_EN_SHIFT                31
/* CTRLDESCL4_4 Bit Fields */
#define DCU_CTRLDESCL4_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL4_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL4_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL4_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL4_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL4_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL4_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL4_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL4_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL4_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL4_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL4_4_CKMAX_R_MASK)
/* CTRLDESCL4_5 Bit Fields */
#define DCU_CTRLDESCL4_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL4_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL4_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL4_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL4_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL4_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL4_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL4_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL4_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL4_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL4_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL4_5_CKMIN_R_MASK)
/* CTRLDESCL4_6 Bit Fields */
#define DCU_CTRLDESCL4_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL4_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL4_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL4_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL4_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL4_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL4_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL4_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL4_7 Bit Fields */
#define DCU_CTRLDESCL4_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL4_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL4_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL4_7_FGn_FCOLOR_MASK)
/* CTRLDESCL4_8 Bit Fields */
#define DCU_CTRLDESCL4_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL4_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL4_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL4_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL4_8_FGn_BCOLOR_MASK)
/* CTRLDESCL5_0 Bit Fields */
#define DCU_CTRLDESCL5_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL5_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL5_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_0_WIDTH_SHIFT))&DCU_CTRLDESCL5_0_WIDTH_MASK)
#define DCU_CTRLDESCL5_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL5_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL5_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_0_HEIGHT_SHIFT))&DCU_CTRLDESCL5_0_HEIGHT_MASK)
/* CTRLDESCL5_1 Bit Fields */
#define DCU_CTRLDESCL5_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL5_1_POSX_SHIFT              0
#define DCU_CTRLDESCL5_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_1_POSX_SHIFT))&DCU_CTRLDESCL5_1_POSX_MASK)
#define DCU_CTRLDESCL5_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL5_1_POSY_SHIFT              16
#define DCU_CTRLDESCL5_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_1_POSY_SHIFT))&DCU_CTRLDESCL5_1_POSY_MASK)
/* CTRLDESCL5_2 Bit Fields */
#define DCU_CTRLDESCL5_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL5_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL5_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_2_ADDR_SHIFT))&DCU_CTRLDESCL5_2_ADDR_MASK)
/* CTRLDESCL5_3 Bit Fields */
#define DCU_CTRLDESCL5_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL5_3_AB_SHIFT                0
#define DCU_CTRLDESCL5_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_3_AB_SHIFT))&DCU_CTRLDESCL5_3_AB_MASK)
#define DCU_CTRLDESCL5_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL5_3_BB_SHIFT                2
#define DCU_CTRLDESCL5_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL5_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL5_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_3_LUOFFS_SHIFT))&DCU_CTRLDESCL5_3_LUOFFS_MASK)
#define DCU_CTRLDESCL5_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL5_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL5_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL5_3_BPP_SHIFT               16
#define DCU_CTRLDESCL5_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_3_BPP_SHIFT))&DCU_CTRLDESCL5_3_BPP_MASK)
#define DCU_CTRLDESCL5_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL5_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL5_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_3_TRANS_SHIFT))&DCU_CTRLDESCL5_3_TRANS_MASK)
#define DCU_CTRLDESCL5_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL5_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL5_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL5_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL5_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL5_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL5_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL5_3_EN_SHIFT                31
/* CTRLDESCL5_4 Bit Fields */
#define DCU_CTRLDESCL5_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL5_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL5_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL5_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL5_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL5_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL5_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL5_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL5_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL5_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL5_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL5_4_CKMAX_R_MASK)
/* CTRLDESCL5_5 Bit Fields */
#define DCU_CTRLDESCL5_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL5_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL5_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL5_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL5_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL5_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL5_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL5_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL5_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL5_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL5_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL5_5_CKMIN_R_MASK)
/* CTRLDESCL5_6 Bit Fields */
#define DCU_CTRLDESCL5_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL5_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL5_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL5_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL5_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL5_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL5_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL5_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL5_7 Bit Fields */
#define DCU_CTRLDESCL5_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL5_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL5_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL5_7_FGn_FCOLOR_MASK)
/* CTRLDESCL5_8 Bit Fields */
#define DCU_CTRLDESCL5_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL5_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL5_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL5_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL5_8_FGn_BCOLOR_MASK)
/* CTRLDESCL6_0 Bit Fields */
#define DCU_CTRLDESCL6_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL6_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL6_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_0_WIDTH_SHIFT))&DCU_CTRLDESCL6_0_WIDTH_MASK)
#define DCU_CTRLDESCL6_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL6_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL6_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_0_HEIGHT_SHIFT))&DCU_CTRLDESCL6_0_HEIGHT_MASK)
/* CTRLDESCL6_1 Bit Fields */
#define DCU_CTRLDESCL6_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL6_1_POSX_SHIFT              0
#define DCU_CTRLDESCL6_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_1_POSX_SHIFT))&DCU_CTRLDESCL6_1_POSX_MASK)
#define DCU_CTRLDESCL6_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL6_1_POSY_SHIFT              16
#define DCU_CTRLDESCL6_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_1_POSY_SHIFT))&DCU_CTRLDESCL6_1_POSY_MASK)
/* CTRLDESCL6_2 Bit Fields */
#define DCU_CTRLDESCL6_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL6_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL6_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_2_ADDR_SHIFT))&DCU_CTRLDESCL6_2_ADDR_MASK)
/* CTRLDESCL6_3 Bit Fields */
#define DCU_CTRLDESCL6_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL6_3_AB_SHIFT                0
#define DCU_CTRLDESCL6_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_3_AB_SHIFT))&DCU_CTRLDESCL6_3_AB_MASK)
#define DCU_CTRLDESCL6_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL6_3_BB_SHIFT                2
#define DCU_CTRLDESCL6_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL6_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL6_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_3_LUOFFS_SHIFT))&DCU_CTRLDESCL6_3_LUOFFS_MASK)
#define DCU_CTRLDESCL6_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL6_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL6_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL6_3_BPP_SHIFT               16
#define DCU_CTRLDESCL6_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_3_BPP_SHIFT))&DCU_CTRLDESCL6_3_BPP_MASK)
#define DCU_CTRLDESCL6_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL6_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL6_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_3_TRANS_SHIFT))&DCU_CTRLDESCL6_3_TRANS_MASK)
#define DCU_CTRLDESCL6_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL6_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL6_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL6_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL6_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL6_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL6_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL6_3_EN_SHIFT                31
/* CTRLDESCL6_4 Bit Fields */
#define DCU_CTRLDESCL6_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL6_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL6_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL6_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL6_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL6_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL6_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL6_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL6_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL6_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL6_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL6_4_CKMAX_R_MASK)
/* CTRLDESCL6_5 Bit Fields */
#define DCU_CTRLDESCL6_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL6_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL6_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL6_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL6_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL6_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL6_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL6_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL6_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL6_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL6_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL6_5_CKMIN_R_MASK)
/* CTRLDESCL6_6 Bit Fields */
#define DCU_CTRLDESCL6_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL6_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL6_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL6_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL6_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL6_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL6_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL6_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL6_7 Bit Fields */
#define DCU_CTRLDESCL6_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL6_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL6_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL6_7_FGn_FCOLOR_MASK)
/* CTRLDESCL6_8 Bit Fields */
#define DCU_CTRLDESCL6_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL6_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL6_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL6_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL6_8_FGn_BCOLOR_MASK)
/* CTRLDESCL7_0 Bit Fields */
#define DCU_CTRLDESCL7_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL7_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL7_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_0_WIDTH_SHIFT))&DCU_CTRLDESCL7_0_WIDTH_MASK)
#define DCU_CTRLDESCL7_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL7_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL7_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_0_HEIGHT_SHIFT))&DCU_CTRLDESCL7_0_HEIGHT_MASK)
/* CTRLDESCL7_1 Bit Fields */
#define DCU_CTRLDESCL7_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL7_1_POSX_SHIFT              0
#define DCU_CTRLDESCL7_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_1_POSX_SHIFT))&DCU_CTRLDESCL7_1_POSX_MASK)
#define DCU_CTRLDESCL7_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL7_1_POSY_SHIFT              16
#define DCU_CTRLDESCL7_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_1_POSY_SHIFT))&DCU_CTRLDESCL7_1_POSY_MASK)
/* CTRLDESCL7_2 Bit Fields */
#define DCU_CTRLDESCL7_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL7_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL7_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_2_ADDR_SHIFT))&DCU_CTRLDESCL7_2_ADDR_MASK)
/* CTRLDESCL7_3 Bit Fields */
#define DCU_CTRLDESCL7_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL7_3_AB_SHIFT                0
#define DCU_CTRLDESCL7_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_3_AB_SHIFT))&DCU_CTRLDESCL7_3_AB_MASK)
#define DCU_CTRLDESCL7_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL7_3_BB_SHIFT                2
#define DCU_CTRLDESCL7_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL7_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL7_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_3_LUOFFS_SHIFT))&DCU_CTRLDESCL7_3_LUOFFS_MASK)
#define DCU_CTRLDESCL7_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL7_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL7_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL7_3_BPP_SHIFT               16
#define DCU_CTRLDESCL7_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_3_BPP_SHIFT))&DCU_CTRLDESCL7_3_BPP_MASK)
#define DCU_CTRLDESCL7_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL7_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL7_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_3_TRANS_SHIFT))&DCU_CTRLDESCL7_3_TRANS_MASK)
#define DCU_CTRLDESCL7_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL7_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL7_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL7_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL7_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL7_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL7_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL7_3_EN_SHIFT                31
/* CTRLDESCL7_4 Bit Fields */
#define DCU_CTRLDESCL7_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL7_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL7_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL7_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL7_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL7_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL7_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL7_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL7_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL7_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL7_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL7_4_CKMAX_R_MASK)
/* CTRLDESCL7_5 Bit Fields */
#define DCU_CTRLDESCL7_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL7_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL7_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL7_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL7_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL7_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL7_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL7_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL7_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL7_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL7_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL7_5_CKMIN_R_MASK)
/* CTRLDESCL7_6 Bit Fields */
#define DCU_CTRLDESCL7_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL7_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL7_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL7_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL7_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL7_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL7_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL7_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL7_7 Bit Fields */
#define DCU_CTRLDESCL7_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL7_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL7_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL7_7_FGn_FCOLOR_MASK)
/* CTRLDESCL7_8 Bit Fields */
#define DCU_CTRLDESCL7_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL7_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL7_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL7_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL7_8_FGn_BCOLOR_MASK)
/* CTRLDESCL8_0 Bit Fields */
#define DCU_CTRLDESCL8_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL8_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL8_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_0_WIDTH_SHIFT))&DCU_CTRLDESCL8_0_WIDTH_MASK)
#define DCU_CTRLDESCL8_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL8_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL8_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_0_HEIGHT_SHIFT))&DCU_CTRLDESCL8_0_HEIGHT_MASK)
/* CTRLDESCL8_1 Bit Fields */
#define DCU_CTRLDESCL8_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL8_1_POSX_SHIFT              0
#define DCU_CTRLDESCL8_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_1_POSX_SHIFT))&DCU_CTRLDESCL8_1_POSX_MASK)
#define DCU_CTRLDESCL8_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL8_1_POSY_SHIFT              16
#define DCU_CTRLDESCL8_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_1_POSY_SHIFT))&DCU_CTRLDESCL8_1_POSY_MASK)
/* CTRLDESCL8_2 Bit Fields */
#define DCU_CTRLDESCL8_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL8_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL8_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_2_ADDR_SHIFT))&DCU_CTRLDESCL8_2_ADDR_MASK)
/* CTRLDESCL8_3 Bit Fields */
#define DCU_CTRLDESCL8_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL8_3_AB_SHIFT                0
#define DCU_CTRLDESCL8_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_3_AB_SHIFT))&DCU_CTRLDESCL8_3_AB_MASK)
#define DCU_CTRLDESCL8_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL8_3_BB_SHIFT                2
#define DCU_CTRLDESCL8_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL8_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL8_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_3_LUOFFS_SHIFT))&DCU_CTRLDESCL8_3_LUOFFS_MASK)
#define DCU_CTRLDESCL8_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL8_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL8_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL8_3_BPP_SHIFT               16
#define DCU_CTRLDESCL8_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_3_BPP_SHIFT))&DCU_CTRLDESCL8_3_BPP_MASK)
#define DCU_CTRLDESCL8_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL8_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL8_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_3_TRANS_SHIFT))&DCU_CTRLDESCL8_3_TRANS_MASK)
#define DCU_CTRLDESCL8_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL8_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL8_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL8_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL8_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL8_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL8_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL8_3_EN_SHIFT                31
/* CTRLDESCL8_4 Bit Fields */
#define DCU_CTRLDESCL8_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL8_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL8_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL8_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL8_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL8_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL8_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL8_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL8_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL8_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL8_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL8_4_CKMAX_R_MASK)
/* CTRLDESCL8_5 Bit Fields */
#define DCU_CTRLDESCL8_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL8_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL8_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL8_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL8_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL8_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL8_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL8_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL8_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL8_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL8_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL8_5_CKMIN_R_MASK)
/* CTRLDESCL8_6 Bit Fields */
#define DCU_CTRLDESCL8_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL8_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL8_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL8_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL8_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL8_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL8_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL8_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL8_7 Bit Fields */
#define DCU_CTRLDESCL8_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL8_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL8_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL8_7_FGn_FCOLOR_MASK)
/* CTRLDESCL8_8 Bit Fields */
#define DCU_CTRLDESCL8_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL8_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL8_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL8_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL8_8_FGn_BCOLOR_MASK)
/* CTRLDESCL9_0 Bit Fields */
#define DCU_CTRLDESCL9_0_WIDTH_MASK              0x7FFu
#define DCU_CTRLDESCL9_0_WIDTH_SHIFT             0
#define DCU_CTRLDESCL9_0_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_0_WIDTH_SHIFT))&DCU_CTRLDESCL9_0_WIDTH_MASK)
#define DCU_CTRLDESCL9_0_HEIGHT_MASK             0x7FF0000u
#define DCU_CTRLDESCL9_0_HEIGHT_SHIFT            16
#define DCU_CTRLDESCL9_0_HEIGHT(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_0_HEIGHT_SHIFT))&DCU_CTRLDESCL9_0_HEIGHT_MASK)
/* CTRLDESCL9_1 Bit Fields */
#define DCU_CTRLDESCL9_1_POSX_MASK               0xFFFu
#define DCU_CTRLDESCL9_1_POSX_SHIFT              0
#define DCU_CTRLDESCL9_1_POSX(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_1_POSX_SHIFT))&DCU_CTRLDESCL9_1_POSX_MASK)
#define DCU_CTRLDESCL9_1_POSY_MASK               0xFFF0000u
#define DCU_CTRLDESCL9_1_POSY_SHIFT              16
#define DCU_CTRLDESCL9_1_POSY(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_1_POSY_SHIFT))&DCU_CTRLDESCL9_1_POSY_MASK)
/* CTRLDESCL9_2 Bit Fields */
#define DCU_CTRLDESCL9_2_ADDR_MASK               0xFFFFFFFFu
#define DCU_CTRLDESCL9_2_ADDR_SHIFT              0
#define DCU_CTRLDESCL9_2_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_2_ADDR_SHIFT))&DCU_CTRLDESCL9_2_ADDR_MASK)
/* CTRLDESCL9_3 Bit Fields */
#define DCU_CTRLDESCL9_3_AB_MASK                 0x3u
#define DCU_CTRLDESCL9_3_AB_SHIFT                0
#define DCU_CTRLDESCL9_3_AB(x)                   (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_3_AB_SHIFT))&DCU_CTRLDESCL9_3_AB_MASK)
#define DCU_CTRLDESCL9_3_BB_MASK                 0x4u
#define DCU_CTRLDESCL9_3_BB_SHIFT                2
#define DCU_CTRLDESCL9_3_LUOFFS_MASK             0x7FF0u
#define DCU_CTRLDESCL9_3_LUOFFS_SHIFT            4
#define DCU_CTRLDESCL9_3_LUOFFS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_3_LUOFFS_SHIFT))&DCU_CTRLDESCL9_3_LUOFFS_MASK)
#define DCU_CTRLDESCL9_3_RLE_EN_MASK             0x8000u
#define DCU_CTRLDESCL9_3_RLE_EN_SHIFT            15
#define DCU_CTRLDESCL9_3_BPP_MASK                0xF0000u
#define DCU_CTRLDESCL9_3_BPP_SHIFT               16
#define DCU_CTRLDESCL9_3_BPP(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_3_BPP_SHIFT))&DCU_CTRLDESCL9_3_BPP_MASK)
#define DCU_CTRLDESCL9_3_TRANS_MASK              0xFF00000u
#define DCU_CTRLDESCL9_3_TRANS_SHIFT             20
#define DCU_CTRLDESCL9_3_TRANS(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_3_TRANS_SHIFT))&DCU_CTRLDESCL9_3_TRANS_MASK)
#define DCU_CTRLDESCL9_3_SAFETY_EN_MASK          0x10000000u
#define DCU_CTRLDESCL9_3_SAFETY_EN_SHIFT         28
#define DCU_CTRLDESCL9_3_DATA_SEL_MASK           0x20000000u
#define DCU_CTRLDESCL9_3_DATA_SEL_SHIFT          29
#define DCU_CTRLDESCL9_3_TILE_EN_MASK            0x40000000u
#define DCU_CTRLDESCL9_3_TILE_EN_SHIFT           30
#define DCU_CTRLDESCL9_3_EN_MASK                 0x80000000u
#define DCU_CTRLDESCL9_3_EN_SHIFT                31
/* CTRLDESCL9_4 Bit Fields */
#define DCU_CTRLDESCL9_4_CKMAX_B_MASK            0xFFu
#define DCU_CTRLDESCL9_4_CKMAX_B_SHIFT           0
#define DCU_CTRLDESCL9_4_CKMAX_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL9_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL9_4_CKMAX_G_MASK            0xFF00u
#define DCU_CTRLDESCL9_4_CKMAX_G_SHIFT           8
#define DCU_CTRLDESCL9_4_CKMAX_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL9_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL9_4_CKMAX_R_MASK            0xFF0000u
#define DCU_CTRLDESCL9_4_CKMAX_R_SHIFT           16
#define DCU_CTRLDESCL9_4_CKMAX_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL9_4_CKMAX_R_MASK)
/* CTRLDESCL9_5 Bit Fields */
#define DCU_CTRLDESCL9_5_CKMIN_B_MASK            0xFFu
#define DCU_CTRLDESCL9_5_CKMIN_B_SHIFT           0
#define DCU_CTRLDESCL9_5_CKMIN_B(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL9_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL9_5_CKMIN_G_MASK            0xFF00u
#define DCU_CTRLDESCL9_5_CKMIN_G_SHIFT           8
#define DCU_CTRLDESCL9_5_CKMIN_G(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL9_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL9_5_CKMIN_R_MASK            0xFF0000u
#define DCU_CTRLDESCL9_5_CKMIN_R_SHIFT           16
#define DCU_CTRLDESCL9_5_CKMIN_R(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL9_5_CKMIN_R_MASK)
/* CTRLDESCL9_6 Bit Fields */
#define DCU_CTRLDESCL9_6_TILE_HOR_SIZE_MASK      0x7Fu
#define DCU_CTRLDESCL9_6_TILE_HOR_SIZE_SHIFT     0
#define DCU_CTRLDESCL9_6_TILE_HOR_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL9_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL9_6_TILE_VER_SIZE_MASK      0x7FF0000u
#define DCU_CTRLDESCL9_6_TILE_VER_SIZE_SHIFT     16
#define DCU_CTRLDESCL9_6_TILE_VER_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL9_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL9_7 Bit Fields */
#define DCU_CTRLDESCL9_7_FGn_FCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL9_7_FGn_FCOLOR_SHIFT        0
#define DCU_CTRLDESCL9_7_FGn_FCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL9_7_FGn_FCOLOR_MASK)
/* CTRLDESCL9_8 Bit Fields */
#define DCU_CTRLDESCL9_8_FGn_BCOLOR_MASK         0xFFFFFFu
#define DCU_CTRLDESCL9_8_FGn_BCOLOR_SHIFT        0
#define DCU_CTRLDESCL9_8_FGn_BCOLOR(x)           (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL9_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL9_8_FGn_BCOLOR_MASK)
/* CTRLDESCL10_0 Bit Fields */
#define DCU_CTRLDESCL10_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL10_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL10_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_0_WIDTH_SHIFT))&DCU_CTRLDESCL10_0_WIDTH_MASK)
#define DCU_CTRLDESCL10_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL10_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL10_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_0_HEIGHT_SHIFT))&DCU_CTRLDESCL10_0_HEIGHT_MASK)
/* CTRLDESCL10_1 Bit Fields */
#define DCU_CTRLDESCL10_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL10_1_POSX_SHIFT             0
#define DCU_CTRLDESCL10_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_1_POSX_SHIFT))&DCU_CTRLDESCL10_1_POSX_MASK)
#define DCU_CTRLDESCL10_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL10_1_POSY_SHIFT             16
#define DCU_CTRLDESCL10_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_1_POSY_SHIFT))&DCU_CTRLDESCL10_1_POSY_MASK)
/* CTRLDESCL10_2 Bit Fields */
#define DCU_CTRLDESCL10_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL10_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL10_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_2_ADDR_SHIFT))&DCU_CTRLDESCL10_2_ADDR_MASK)
/* CTRLDESCL10_3 Bit Fields */
#define DCU_CTRLDESCL10_3_AB_MASK                0x3u
#define DCU_CTRLDESCL10_3_AB_SHIFT               0
#define DCU_CTRLDESCL10_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_3_AB_SHIFT))&DCU_CTRLDESCL10_3_AB_MASK)
#define DCU_CTRLDESCL10_3_BB_MASK                0x4u
#define DCU_CTRLDESCL10_3_BB_SHIFT               2
#define DCU_CTRLDESCL10_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL10_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL10_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_3_LUOFFS_SHIFT))&DCU_CTRLDESCL10_3_LUOFFS_MASK)
#define DCU_CTRLDESCL10_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL10_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL10_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL10_3_BPP_SHIFT              16
#define DCU_CTRLDESCL10_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_3_BPP_SHIFT))&DCU_CTRLDESCL10_3_BPP_MASK)
#define DCU_CTRLDESCL10_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL10_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL10_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_3_TRANS_SHIFT))&DCU_CTRLDESCL10_3_TRANS_MASK)
#define DCU_CTRLDESCL10_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL10_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL10_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL10_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL10_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL10_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL10_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL10_3_EN_SHIFT               31
/* CTRLDESCL10_4 Bit Fields */
#define DCU_CTRLDESCL10_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL10_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL10_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL10_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL10_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL10_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL10_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL10_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL10_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL10_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL10_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL10_4_CKMAX_R_MASK)
/* CTRLDESCL10_5 Bit Fields */
#define DCU_CTRLDESCL10_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL10_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL10_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL10_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL10_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL10_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL10_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL10_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL10_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL10_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL10_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL10_5_CKMIN_R_MASK)
/* CTRLDESCL10_6 Bit Fields */
#define DCU_CTRLDESCL10_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL10_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL10_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL10_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL10_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL10_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL10_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL10_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL10_7 Bit Fields */
#define DCU_CTRLDESCL10_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL10_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL10_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL10_7_FGn_FCOLOR_MASK)
/* CTRLDESCL10_8 Bit Fields */
#define DCU_CTRLDESCL10_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL10_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL10_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL10_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL10_8_FGn_BCOLOR_MASK)
/* CTRLDESCL11_0 Bit Fields */
#define DCU_CTRLDESCL11_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL11_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL11_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_0_WIDTH_SHIFT))&DCU_CTRLDESCL11_0_WIDTH_MASK)
#define DCU_CTRLDESCL11_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL11_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL11_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_0_HEIGHT_SHIFT))&DCU_CTRLDESCL11_0_HEIGHT_MASK)
/* CTRLDESCL11_1 Bit Fields */
#define DCU_CTRLDESCL11_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL11_1_POSX_SHIFT             0
#define DCU_CTRLDESCL11_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_1_POSX_SHIFT))&DCU_CTRLDESCL11_1_POSX_MASK)
#define DCU_CTRLDESCL11_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL11_1_POSY_SHIFT             16
#define DCU_CTRLDESCL11_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_1_POSY_SHIFT))&DCU_CTRLDESCL11_1_POSY_MASK)
/* CTRLDESCL11_2 Bit Fields */
#define DCU_CTRLDESCL11_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL11_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL11_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_2_ADDR_SHIFT))&DCU_CTRLDESCL11_2_ADDR_MASK)
/* CTRLDESCL11_3 Bit Fields */
#define DCU_CTRLDESCL11_3_AB_MASK                0x3u
#define DCU_CTRLDESCL11_3_AB_SHIFT               0
#define DCU_CTRLDESCL11_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_3_AB_SHIFT))&DCU_CTRLDESCL11_3_AB_MASK)
#define DCU_CTRLDESCL11_3_BB_MASK                0x4u
#define DCU_CTRLDESCL11_3_BB_SHIFT               2
#define DCU_CTRLDESCL11_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL11_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL11_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_3_LUOFFS_SHIFT))&DCU_CTRLDESCL11_3_LUOFFS_MASK)
#define DCU_CTRLDESCL11_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL11_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL11_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL11_3_BPP_SHIFT              16
#define DCU_CTRLDESCL11_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_3_BPP_SHIFT))&DCU_CTRLDESCL11_3_BPP_MASK)
#define DCU_CTRLDESCL11_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL11_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL11_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_3_TRANS_SHIFT))&DCU_CTRLDESCL11_3_TRANS_MASK)
#define DCU_CTRLDESCL11_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL11_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL11_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL11_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL11_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL11_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL11_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL11_3_EN_SHIFT               31
/* CTRLDESCL11_4 Bit Fields */
#define DCU_CTRLDESCL11_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL11_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL11_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL11_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL11_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL11_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL11_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL11_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL11_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL11_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL11_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL11_4_CKMAX_R_MASK)
/* CTRLDESCL11_5 Bit Fields */
#define DCU_CTRLDESCL11_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL11_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL11_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL11_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL11_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL11_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL11_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL11_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL11_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL11_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL11_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL11_5_CKMIN_R_MASK)
/* CTRLDESCL11_6 Bit Fields */
#define DCU_CTRLDESCL11_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL11_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL11_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL11_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL11_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL11_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL11_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL11_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL11_7 Bit Fields */
#define DCU_CTRLDESCL11_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL11_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL11_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL11_7_FGn_FCOLOR_MASK)
/* CTRLDESCL11_8 Bit Fields */
#define DCU_CTRLDESCL11_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL11_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL11_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL11_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL11_8_FGn_BCOLOR_MASK)
/* CTRLDESCL12_0 Bit Fields */
#define DCU_CTRLDESCL12_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL12_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL12_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_0_WIDTH_SHIFT))&DCU_CTRLDESCL12_0_WIDTH_MASK)
#define DCU_CTRLDESCL12_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL12_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL12_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_0_HEIGHT_SHIFT))&DCU_CTRLDESCL12_0_HEIGHT_MASK)
/* CTRLDESCL12_1 Bit Fields */
#define DCU_CTRLDESCL12_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL12_1_POSX_SHIFT             0
#define DCU_CTRLDESCL12_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_1_POSX_SHIFT))&DCU_CTRLDESCL12_1_POSX_MASK)
#define DCU_CTRLDESCL12_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL12_1_POSY_SHIFT             16
#define DCU_CTRLDESCL12_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_1_POSY_SHIFT))&DCU_CTRLDESCL12_1_POSY_MASK)
/* CTRLDESCL12_2 Bit Fields */
#define DCU_CTRLDESCL12_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL12_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL12_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_2_ADDR_SHIFT))&DCU_CTRLDESCL12_2_ADDR_MASK)
/* CTRLDESCL12_3 Bit Fields */
#define DCU_CTRLDESCL12_3_AB_MASK                0x3u
#define DCU_CTRLDESCL12_3_AB_SHIFT               0
#define DCU_CTRLDESCL12_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_3_AB_SHIFT))&DCU_CTRLDESCL12_3_AB_MASK)
#define DCU_CTRLDESCL12_3_BB_MASK                0x4u
#define DCU_CTRLDESCL12_3_BB_SHIFT               2
#define DCU_CTRLDESCL12_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL12_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL12_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_3_LUOFFS_SHIFT))&DCU_CTRLDESCL12_3_LUOFFS_MASK)
#define DCU_CTRLDESCL12_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL12_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL12_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL12_3_BPP_SHIFT              16
#define DCU_CTRLDESCL12_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_3_BPP_SHIFT))&DCU_CTRLDESCL12_3_BPP_MASK)
#define DCU_CTRLDESCL12_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL12_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL12_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_3_TRANS_SHIFT))&DCU_CTRLDESCL12_3_TRANS_MASK)
#define DCU_CTRLDESCL12_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL12_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL12_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL12_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL12_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL12_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL12_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL12_3_EN_SHIFT               31
/* CTRLDESCL12_4 Bit Fields */
#define DCU_CTRLDESCL12_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL12_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL12_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL12_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL12_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL12_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL12_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL12_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL12_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL12_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL12_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL12_4_CKMAX_R_MASK)
/* CTRLDESCL12_5 Bit Fields */
#define DCU_CTRLDESCL12_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL12_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL12_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL12_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL12_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL12_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL12_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL12_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL12_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL12_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL12_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL12_5_CKMIN_R_MASK)
/* CTRLDESCL12_6 Bit Fields */
#define DCU_CTRLDESCL12_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL12_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL12_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL12_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL12_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL12_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL12_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL12_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL12_7 Bit Fields */
#define DCU_CTRLDESCL12_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL12_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL12_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL12_7_FGn_FCOLOR_MASK)
/* CTRLDESCL12_8 Bit Fields */
#define DCU_CTRLDESCL12_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL12_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL12_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL12_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL12_8_FGn_BCOLOR_MASK)
/* CTRLDESCL13_0 Bit Fields */
#define DCU_CTRLDESCL13_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL13_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL13_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_0_WIDTH_SHIFT))&DCU_CTRLDESCL13_0_WIDTH_MASK)
#define DCU_CTRLDESCL13_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL13_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL13_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_0_HEIGHT_SHIFT))&DCU_CTRLDESCL13_0_HEIGHT_MASK)
/* CTRLDESCL13_1 Bit Fields */
#define DCU_CTRLDESCL13_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL13_1_POSX_SHIFT             0
#define DCU_CTRLDESCL13_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_1_POSX_SHIFT))&DCU_CTRLDESCL13_1_POSX_MASK)
#define DCU_CTRLDESCL13_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL13_1_POSY_SHIFT             16
#define DCU_CTRLDESCL13_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_1_POSY_SHIFT))&DCU_CTRLDESCL13_1_POSY_MASK)
/* CTRLDESCL13_2 Bit Fields */
#define DCU_CTRLDESCL13_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL13_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL13_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_2_ADDR_SHIFT))&DCU_CTRLDESCL13_2_ADDR_MASK)
/* CTRLDESCL13_3 Bit Fields */
#define DCU_CTRLDESCL13_3_AB_MASK                0x3u
#define DCU_CTRLDESCL13_3_AB_SHIFT               0
#define DCU_CTRLDESCL13_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_3_AB_SHIFT))&DCU_CTRLDESCL13_3_AB_MASK)
#define DCU_CTRLDESCL13_3_BB_MASK                0x4u
#define DCU_CTRLDESCL13_3_BB_SHIFT               2
#define DCU_CTRLDESCL13_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL13_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL13_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_3_LUOFFS_SHIFT))&DCU_CTRLDESCL13_3_LUOFFS_MASK)
#define DCU_CTRLDESCL13_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL13_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL13_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL13_3_BPP_SHIFT              16
#define DCU_CTRLDESCL13_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_3_BPP_SHIFT))&DCU_CTRLDESCL13_3_BPP_MASK)
#define DCU_CTRLDESCL13_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL13_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL13_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_3_TRANS_SHIFT))&DCU_CTRLDESCL13_3_TRANS_MASK)
#define DCU_CTRLDESCL13_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL13_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL13_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL13_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL13_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL13_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL13_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL13_3_EN_SHIFT               31
/* CTRLDESCL13_4 Bit Fields */
#define DCU_CTRLDESCL13_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL13_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL13_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL13_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL13_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL13_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL13_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL13_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL13_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL13_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL13_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL13_4_CKMAX_R_MASK)
/* CTRLDESCL13_5 Bit Fields */
#define DCU_CTRLDESCL13_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL13_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL13_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL13_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL13_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL13_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL13_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL13_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL13_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL13_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL13_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL13_5_CKMIN_R_MASK)
/* CTRLDESCL13_6 Bit Fields */
#define DCU_CTRLDESCL13_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL13_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL13_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL13_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL13_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL13_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL13_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL13_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL13_7 Bit Fields */
#define DCU_CTRLDESCL13_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL13_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL13_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL13_7_FGn_FCOLOR_MASK)
/* CTRLDESCL13_8 Bit Fields */
#define DCU_CTRLDESCL13_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL13_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL13_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL13_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL13_8_FGn_BCOLOR_MASK)
/* CTRLDESCL14_0 Bit Fields */
#define DCU_CTRLDESCL14_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL14_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL14_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_0_WIDTH_SHIFT))&DCU_CTRLDESCL14_0_WIDTH_MASK)
#define DCU_CTRLDESCL14_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL14_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL14_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_0_HEIGHT_SHIFT))&DCU_CTRLDESCL14_0_HEIGHT_MASK)
/* CTRLDESCL14_1 Bit Fields */
#define DCU_CTRLDESCL14_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL14_1_POSX_SHIFT             0
#define DCU_CTRLDESCL14_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_1_POSX_SHIFT))&DCU_CTRLDESCL14_1_POSX_MASK)
#define DCU_CTRLDESCL14_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL14_1_POSY_SHIFT             16
#define DCU_CTRLDESCL14_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_1_POSY_SHIFT))&DCU_CTRLDESCL14_1_POSY_MASK)
/* CTRLDESCL14_2 Bit Fields */
#define DCU_CTRLDESCL14_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL14_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL14_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_2_ADDR_SHIFT))&DCU_CTRLDESCL14_2_ADDR_MASK)
/* CTRLDESCL14_3 Bit Fields */
#define DCU_CTRLDESCL14_3_AB_MASK                0x3u
#define DCU_CTRLDESCL14_3_AB_SHIFT               0
#define DCU_CTRLDESCL14_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_3_AB_SHIFT))&DCU_CTRLDESCL14_3_AB_MASK)
#define DCU_CTRLDESCL14_3_BB_MASK                0x4u
#define DCU_CTRLDESCL14_3_BB_SHIFT               2
#define DCU_CTRLDESCL14_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL14_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL14_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_3_LUOFFS_SHIFT))&DCU_CTRLDESCL14_3_LUOFFS_MASK)
#define DCU_CTRLDESCL14_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL14_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL14_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL14_3_BPP_SHIFT              16
#define DCU_CTRLDESCL14_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_3_BPP_SHIFT))&DCU_CTRLDESCL14_3_BPP_MASK)
#define DCU_CTRLDESCL14_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL14_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL14_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_3_TRANS_SHIFT))&DCU_CTRLDESCL14_3_TRANS_MASK)
#define DCU_CTRLDESCL14_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL14_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL14_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL14_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL14_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL14_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL14_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL14_3_EN_SHIFT               31
/* CTRLDESCL14_4 Bit Fields */
#define DCU_CTRLDESCL14_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL14_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL14_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL14_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL14_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL14_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL14_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL14_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL14_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL14_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL14_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL14_4_CKMAX_R_MASK)
/* CTRLDESCL14_5 Bit Fields */
#define DCU_CTRLDESCL14_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL14_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL14_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL14_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL14_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL14_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL14_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL14_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL14_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL14_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL14_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL14_5_CKMIN_R_MASK)
/* CTRLDESCL14_6 Bit Fields */
#define DCU_CTRLDESCL14_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL14_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL14_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL14_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL14_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL14_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL14_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL14_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL14_7 Bit Fields */
#define DCU_CTRLDESCL14_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL14_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL14_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL14_7_FGn_FCOLOR_MASK)
/* CTRLDESCL14_8 Bit Fields */
#define DCU_CTRLDESCL14_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL14_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL14_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL14_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL14_8_FGn_BCOLOR_MASK)
/* CTRLDESCL15_0 Bit Fields */
#define DCU_CTRLDESCL15_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL15_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL15_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_0_WIDTH_SHIFT))&DCU_CTRLDESCL15_0_WIDTH_MASK)
#define DCU_CTRLDESCL15_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL15_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL15_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_0_HEIGHT_SHIFT))&DCU_CTRLDESCL15_0_HEIGHT_MASK)
/* CTRLDESCL15_1 Bit Fields */
#define DCU_CTRLDESCL15_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL15_1_POSX_SHIFT             0
#define DCU_CTRLDESCL15_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_1_POSX_SHIFT))&DCU_CTRLDESCL15_1_POSX_MASK)
#define DCU_CTRLDESCL15_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL15_1_POSY_SHIFT             16
#define DCU_CTRLDESCL15_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_1_POSY_SHIFT))&DCU_CTRLDESCL15_1_POSY_MASK)
/* CTRLDESCL15_2 Bit Fields */
#define DCU_CTRLDESCL15_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL15_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL15_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_2_ADDR_SHIFT))&DCU_CTRLDESCL15_2_ADDR_MASK)
/* CTRLDESCL15_3 Bit Fields */
#define DCU_CTRLDESCL15_3_AB_MASK                0x3u
#define DCU_CTRLDESCL15_3_AB_SHIFT               0
#define DCU_CTRLDESCL15_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_3_AB_SHIFT))&DCU_CTRLDESCL15_3_AB_MASK)
#define DCU_CTRLDESCL15_3_BB_MASK                0x4u
#define DCU_CTRLDESCL15_3_BB_SHIFT               2
#define DCU_CTRLDESCL15_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL15_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL15_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_3_LUOFFS_SHIFT))&DCU_CTRLDESCL15_3_LUOFFS_MASK)
#define DCU_CTRLDESCL15_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL15_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL15_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL15_3_BPP_SHIFT              16
#define DCU_CTRLDESCL15_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_3_BPP_SHIFT))&DCU_CTRLDESCL15_3_BPP_MASK)
#define DCU_CTRLDESCL15_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL15_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL15_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_3_TRANS_SHIFT))&DCU_CTRLDESCL15_3_TRANS_MASK)
#define DCU_CTRLDESCL15_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL15_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL15_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL15_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL15_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL15_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL15_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL15_3_EN_SHIFT               31
/* CTRLDESCL15_4 Bit Fields */
#define DCU_CTRLDESCL15_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL15_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL15_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL15_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL15_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL15_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL15_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL15_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL15_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL15_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL15_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL15_4_CKMAX_R_MASK)
/* CTRLDESCL15_5 Bit Fields */
#define DCU_CTRLDESCL15_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL15_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL15_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL15_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL15_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL15_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL15_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL15_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL15_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL15_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL15_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL15_5_CKMIN_R_MASK)
/* CTRLDESCL15_6 Bit Fields */
#define DCU_CTRLDESCL15_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL15_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL15_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL15_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL15_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL15_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL15_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL15_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL15_7 Bit Fields */
#define DCU_CTRLDESCL15_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL15_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL15_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL15_7_FGn_FCOLOR_MASK)
/* CTRLDESCL15_8 Bit Fields */
#define DCU_CTRLDESCL15_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL15_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL15_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL15_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL15_8_FGn_BCOLOR_MASK)
/* CTRLDESCL16_0 Bit Fields */
#define DCU_CTRLDESCL16_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL16_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL16_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_0_WIDTH_SHIFT))&DCU_CTRLDESCL16_0_WIDTH_MASK)
#define DCU_CTRLDESCL16_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL16_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL16_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_0_HEIGHT_SHIFT))&DCU_CTRLDESCL16_0_HEIGHT_MASK)
/* CTRLDESCL16_1 Bit Fields */
#define DCU_CTRLDESCL16_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL16_1_POSX_SHIFT             0
#define DCU_CTRLDESCL16_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_1_POSX_SHIFT))&DCU_CTRLDESCL16_1_POSX_MASK)
#define DCU_CTRLDESCL16_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL16_1_POSY_SHIFT             16
#define DCU_CTRLDESCL16_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_1_POSY_SHIFT))&DCU_CTRLDESCL16_1_POSY_MASK)
/* CTRLDESCL16_2 Bit Fields */
#define DCU_CTRLDESCL16_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL16_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL16_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_2_ADDR_SHIFT))&DCU_CTRLDESCL16_2_ADDR_MASK)
/* CTRLDESCL16_3 Bit Fields */
#define DCU_CTRLDESCL16_3_AB_MASK                0x3u
#define DCU_CTRLDESCL16_3_AB_SHIFT               0
#define DCU_CTRLDESCL16_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_3_AB_SHIFT))&DCU_CTRLDESCL16_3_AB_MASK)
#define DCU_CTRLDESCL16_3_BB_MASK                0x4u
#define DCU_CTRLDESCL16_3_BB_SHIFT               2
#define DCU_CTRLDESCL16_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL16_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL16_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_3_LUOFFS_SHIFT))&DCU_CTRLDESCL16_3_LUOFFS_MASK)
#define DCU_CTRLDESCL16_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL16_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL16_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL16_3_BPP_SHIFT              16
#define DCU_CTRLDESCL16_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_3_BPP_SHIFT))&DCU_CTRLDESCL16_3_BPP_MASK)
#define DCU_CTRLDESCL16_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL16_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL16_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_3_TRANS_SHIFT))&DCU_CTRLDESCL16_3_TRANS_MASK)
#define DCU_CTRLDESCL16_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL16_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL16_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL16_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL16_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL16_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL16_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL16_3_EN_SHIFT               31
/* CTRLDESCL16_4 Bit Fields */
#define DCU_CTRLDESCL16_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL16_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL16_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL16_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL16_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL16_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL16_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL16_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL16_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL16_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL16_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL16_4_CKMAX_R_MASK)
/* CTRLDESCL16_5 Bit Fields */
#define DCU_CTRLDESCL16_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL16_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL16_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL16_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL16_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL16_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL16_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL16_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL16_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL16_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL16_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL16_5_CKMIN_R_MASK)
/* CTRLDESCL16_6 Bit Fields */
#define DCU_CTRLDESCL16_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL16_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL16_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL16_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL16_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL16_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL16_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL16_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL16_7 Bit Fields */
#define DCU_CTRLDESCL16_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL16_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL16_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL16_7_FGn_FCOLOR_MASK)
/* CTRLDESCL16_8 Bit Fields */
#define DCU_CTRLDESCL16_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL16_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL16_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL16_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL16_8_FGn_BCOLOR_MASK)
/* CTRLDESCL17_0 Bit Fields */
#define DCU_CTRLDESCL17_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL17_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL17_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_0_WIDTH_SHIFT))&DCU_CTRLDESCL17_0_WIDTH_MASK)
#define DCU_CTRLDESCL17_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL17_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL17_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_0_HEIGHT_SHIFT))&DCU_CTRLDESCL17_0_HEIGHT_MASK)
/* CTRLDESCL17_1 Bit Fields */
#define DCU_CTRLDESCL17_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL17_1_POSX_SHIFT             0
#define DCU_CTRLDESCL17_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_1_POSX_SHIFT))&DCU_CTRLDESCL17_1_POSX_MASK)
#define DCU_CTRLDESCL17_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL17_1_POSY_SHIFT             16
#define DCU_CTRLDESCL17_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_1_POSY_SHIFT))&DCU_CTRLDESCL17_1_POSY_MASK)
/* CTRLDESCL17_2 Bit Fields */
#define DCU_CTRLDESCL17_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL17_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL17_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_2_ADDR_SHIFT))&DCU_CTRLDESCL17_2_ADDR_MASK)
/* CTRLDESCL17_3 Bit Fields */
#define DCU_CTRLDESCL17_3_AB_MASK                0x3u
#define DCU_CTRLDESCL17_3_AB_SHIFT               0
#define DCU_CTRLDESCL17_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_3_AB_SHIFT))&DCU_CTRLDESCL17_3_AB_MASK)
#define DCU_CTRLDESCL17_3_BB_MASK                0x4u
#define DCU_CTRLDESCL17_3_BB_SHIFT               2
#define DCU_CTRLDESCL17_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL17_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL17_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_3_LUOFFS_SHIFT))&DCU_CTRLDESCL17_3_LUOFFS_MASK)
#define DCU_CTRLDESCL17_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL17_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL17_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL17_3_BPP_SHIFT              16
#define DCU_CTRLDESCL17_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_3_BPP_SHIFT))&DCU_CTRLDESCL17_3_BPP_MASK)
#define DCU_CTRLDESCL17_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL17_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL17_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_3_TRANS_SHIFT))&DCU_CTRLDESCL17_3_TRANS_MASK)
#define DCU_CTRLDESCL17_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL17_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL17_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL17_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL17_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL17_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL17_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL17_3_EN_SHIFT               31
/* CTRLDESCL17_4 Bit Fields */
#define DCU_CTRLDESCL17_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL17_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL17_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL17_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL17_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL17_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL17_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL17_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL17_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL17_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL17_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL17_4_CKMAX_R_MASK)
/* CTRLDESCL17_5 Bit Fields */
#define DCU_CTRLDESCL17_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL17_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL17_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL17_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL17_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL17_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL17_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL17_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL17_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL17_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL17_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL17_5_CKMIN_R_MASK)
/* CTRLDESCL17_6 Bit Fields */
#define DCU_CTRLDESCL17_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL17_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL17_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL17_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL17_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL17_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL17_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL17_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL17_7 Bit Fields */
#define DCU_CTRLDESCL17_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL17_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL17_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL17_7_FGn_FCOLOR_MASK)
/* CTRLDESCL17_8 Bit Fields */
#define DCU_CTRLDESCL17_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL17_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL17_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL17_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL17_8_FGn_BCOLOR_MASK)
/* CTRLDESCL18_0 Bit Fields */
#define DCU_CTRLDESCL18_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL18_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL18_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_0_WIDTH_SHIFT))&DCU_CTRLDESCL18_0_WIDTH_MASK)
#define DCU_CTRLDESCL18_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL18_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL18_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_0_HEIGHT_SHIFT))&DCU_CTRLDESCL18_0_HEIGHT_MASK)
/* CTRLDESCL18_1 Bit Fields */
#define DCU_CTRLDESCL18_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL18_1_POSX_SHIFT             0
#define DCU_CTRLDESCL18_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_1_POSX_SHIFT))&DCU_CTRLDESCL18_1_POSX_MASK)
#define DCU_CTRLDESCL18_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL18_1_POSY_SHIFT             16
#define DCU_CTRLDESCL18_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_1_POSY_SHIFT))&DCU_CTRLDESCL18_1_POSY_MASK)
/* CTRLDESCL18_2 Bit Fields */
#define DCU_CTRLDESCL18_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL18_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL18_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_2_ADDR_SHIFT))&DCU_CTRLDESCL18_2_ADDR_MASK)
/* CTRLDESCL18_3 Bit Fields */
#define DCU_CTRLDESCL18_3_AB_MASK                0x3u
#define DCU_CTRLDESCL18_3_AB_SHIFT               0
#define DCU_CTRLDESCL18_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_3_AB_SHIFT))&DCU_CTRLDESCL18_3_AB_MASK)
#define DCU_CTRLDESCL18_3_BB_MASK                0x4u
#define DCU_CTRLDESCL18_3_BB_SHIFT               2
#define DCU_CTRLDESCL18_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL18_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL18_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_3_LUOFFS_SHIFT))&DCU_CTRLDESCL18_3_LUOFFS_MASK)
#define DCU_CTRLDESCL18_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL18_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL18_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL18_3_BPP_SHIFT              16
#define DCU_CTRLDESCL18_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_3_BPP_SHIFT))&DCU_CTRLDESCL18_3_BPP_MASK)
#define DCU_CTRLDESCL18_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL18_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL18_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_3_TRANS_SHIFT))&DCU_CTRLDESCL18_3_TRANS_MASK)
#define DCU_CTRLDESCL18_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL18_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL18_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL18_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL18_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL18_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL18_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL18_3_EN_SHIFT               31
/* CTRLDESCL18_4 Bit Fields */
#define DCU_CTRLDESCL18_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL18_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL18_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL18_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL18_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL18_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL18_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL18_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL18_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL18_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL18_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL18_4_CKMAX_R_MASK)
/* CTRLDESCL18_5 Bit Fields */
#define DCU_CTRLDESCL18_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL18_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL18_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL18_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL18_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL18_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL18_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL18_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL18_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL18_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL18_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL18_5_CKMIN_R_MASK)
/* CTRLDESCL18_6 Bit Fields */
#define DCU_CTRLDESCL18_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL18_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL18_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL18_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL18_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL18_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL18_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL18_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL18_7 Bit Fields */
#define DCU_CTRLDESCL18_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL18_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL18_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL18_7_FGn_FCOLOR_MASK)
/* CTRLDESCL18_8 Bit Fields */
#define DCU_CTRLDESCL18_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL18_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL18_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL18_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL18_8_FGn_BCOLOR_MASK)
/* CTRLDESCL19_0 Bit Fields */
#define DCU_CTRLDESCL19_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL19_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL19_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_0_WIDTH_SHIFT))&DCU_CTRLDESCL19_0_WIDTH_MASK)
#define DCU_CTRLDESCL19_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL19_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL19_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_0_HEIGHT_SHIFT))&DCU_CTRLDESCL19_0_HEIGHT_MASK)
/* CTRLDESCL19_1 Bit Fields */
#define DCU_CTRLDESCL19_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL19_1_POSX_SHIFT             0
#define DCU_CTRLDESCL19_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_1_POSX_SHIFT))&DCU_CTRLDESCL19_1_POSX_MASK)
#define DCU_CTRLDESCL19_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL19_1_POSY_SHIFT             16
#define DCU_CTRLDESCL19_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_1_POSY_SHIFT))&DCU_CTRLDESCL19_1_POSY_MASK)
/* CTRLDESCL19_2 Bit Fields */
#define DCU_CTRLDESCL19_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL19_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL19_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_2_ADDR_SHIFT))&DCU_CTRLDESCL19_2_ADDR_MASK)
/* CTRLDESCL19_3 Bit Fields */
#define DCU_CTRLDESCL19_3_AB_MASK                0x3u
#define DCU_CTRLDESCL19_3_AB_SHIFT               0
#define DCU_CTRLDESCL19_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_3_AB_SHIFT))&DCU_CTRLDESCL19_3_AB_MASK)
#define DCU_CTRLDESCL19_3_BB_MASK                0x4u
#define DCU_CTRLDESCL19_3_BB_SHIFT               2
#define DCU_CTRLDESCL19_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL19_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL19_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_3_LUOFFS_SHIFT))&DCU_CTRLDESCL19_3_LUOFFS_MASK)
#define DCU_CTRLDESCL19_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL19_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL19_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL19_3_BPP_SHIFT              16
#define DCU_CTRLDESCL19_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_3_BPP_SHIFT))&DCU_CTRLDESCL19_3_BPP_MASK)
#define DCU_CTRLDESCL19_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL19_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL19_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_3_TRANS_SHIFT))&DCU_CTRLDESCL19_3_TRANS_MASK)
#define DCU_CTRLDESCL19_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL19_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL19_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL19_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL19_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL19_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL19_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL19_3_EN_SHIFT               31
/* CTRLDESCL19_4 Bit Fields */
#define DCU_CTRLDESCL19_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL19_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL19_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL19_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL19_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL19_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL19_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL19_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL19_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL19_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL19_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL19_4_CKMAX_R_MASK)
/* CTRLDESCL19_5 Bit Fields */
#define DCU_CTRLDESCL19_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL19_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL19_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL19_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL19_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL19_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL19_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL19_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL19_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL19_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL19_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL19_5_CKMIN_R_MASK)
/* CTRLDESCL19_6 Bit Fields */
#define DCU_CTRLDESCL19_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL19_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL19_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL19_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL19_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL19_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL19_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL19_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL19_7 Bit Fields */
#define DCU_CTRLDESCL19_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL19_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL19_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL19_7_FGn_FCOLOR_MASK)
/* CTRLDESCL19_8 Bit Fields */
#define DCU_CTRLDESCL19_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL19_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL19_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL19_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL19_8_FGn_BCOLOR_MASK)
/* CTRLDESCL20_0 Bit Fields */
#define DCU_CTRLDESCL20_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL20_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL20_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_0_WIDTH_SHIFT))&DCU_CTRLDESCL20_0_WIDTH_MASK)
#define DCU_CTRLDESCL20_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL20_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL20_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_0_HEIGHT_SHIFT))&DCU_CTRLDESCL20_0_HEIGHT_MASK)
/* CTRLDESCL20_1 Bit Fields */
#define DCU_CTRLDESCL20_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL20_1_POSX_SHIFT             0
#define DCU_CTRLDESCL20_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_1_POSX_SHIFT))&DCU_CTRLDESCL20_1_POSX_MASK)
#define DCU_CTRLDESCL20_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL20_1_POSY_SHIFT             16
#define DCU_CTRLDESCL20_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_1_POSY_SHIFT))&DCU_CTRLDESCL20_1_POSY_MASK)
/* CTRLDESCL20_2 Bit Fields */
#define DCU_CTRLDESCL20_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL20_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL20_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_2_ADDR_SHIFT))&DCU_CTRLDESCL20_2_ADDR_MASK)
/* CTRLDESCL20_3 Bit Fields */
#define DCU_CTRLDESCL20_3_AB_MASK                0x3u
#define DCU_CTRLDESCL20_3_AB_SHIFT               0
#define DCU_CTRLDESCL20_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_3_AB_SHIFT))&DCU_CTRLDESCL20_3_AB_MASK)
#define DCU_CTRLDESCL20_3_BB_MASK                0x4u
#define DCU_CTRLDESCL20_3_BB_SHIFT               2
#define DCU_CTRLDESCL20_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL20_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL20_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_3_LUOFFS_SHIFT))&DCU_CTRLDESCL20_3_LUOFFS_MASK)
#define DCU_CTRLDESCL20_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL20_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL20_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL20_3_BPP_SHIFT              16
#define DCU_CTRLDESCL20_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_3_BPP_SHIFT))&DCU_CTRLDESCL20_3_BPP_MASK)
#define DCU_CTRLDESCL20_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL20_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL20_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_3_TRANS_SHIFT))&DCU_CTRLDESCL20_3_TRANS_MASK)
#define DCU_CTRLDESCL20_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL20_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL20_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL20_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL20_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL20_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL20_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL20_3_EN_SHIFT               31
/* CTRLDESCL20_4 Bit Fields */
#define DCU_CTRLDESCL20_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL20_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL20_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL20_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL20_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL20_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL20_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL20_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL20_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL20_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL20_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL20_4_CKMAX_R_MASK)
/* CTRLDESCL20_5 Bit Fields */
#define DCU_CTRLDESCL20_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL20_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL20_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL20_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL20_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL20_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL20_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL20_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL20_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL20_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL20_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL20_5_CKMIN_R_MASK)
/* CTRLDESCL20_6 Bit Fields */
#define DCU_CTRLDESCL20_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL20_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL20_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL20_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL20_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL20_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL20_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL20_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL20_7 Bit Fields */
#define DCU_CTRLDESCL20_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL20_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL20_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL20_7_FGn_FCOLOR_MASK)
/* CTRLDESCL20_8 Bit Fields */
#define DCU_CTRLDESCL20_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL20_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL20_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL20_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL20_8_FGn_BCOLOR_MASK)
/* CTRLDESCL21_0 Bit Fields */
#define DCU_CTRLDESCL21_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL21_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL21_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_0_WIDTH_SHIFT))&DCU_CTRLDESCL21_0_WIDTH_MASK)
#define DCU_CTRLDESCL21_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL21_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL21_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_0_HEIGHT_SHIFT))&DCU_CTRLDESCL21_0_HEIGHT_MASK)
/* CTRLDESCL21_1 Bit Fields */
#define DCU_CTRLDESCL21_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL21_1_POSX_SHIFT             0
#define DCU_CTRLDESCL21_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_1_POSX_SHIFT))&DCU_CTRLDESCL21_1_POSX_MASK)
#define DCU_CTRLDESCL21_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL21_1_POSY_SHIFT             16
#define DCU_CTRLDESCL21_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_1_POSY_SHIFT))&DCU_CTRLDESCL21_1_POSY_MASK)
/* CTRLDESCL21_2 Bit Fields */
#define DCU_CTRLDESCL21_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL21_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL21_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_2_ADDR_SHIFT))&DCU_CTRLDESCL21_2_ADDR_MASK)
/* CTRLDESCL21_3 Bit Fields */
#define DCU_CTRLDESCL21_3_AB_MASK                0x3u
#define DCU_CTRLDESCL21_3_AB_SHIFT               0
#define DCU_CTRLDESCL21_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_3_AB_SHIFT))&DCU_CTRLDESCL21_3_AB_MASK)
#define DCU_CTRLDESCL21_3_BB_MASK                0x4u
#define DCU_CTRLDESCL21_3_BB_SHIFT               2
#define DCU_CTRLDESCL21_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL21_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL21_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_3_LUOFFS_SHIFT))&DCU_CTRLDESCL21_3_LUOFFS_MASK)
#define DCU_CTRLDESCL21_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL21_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL21_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL21_3_BPP_SHIFT              16
#define DCU_CTRLDESCL21_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_3_BPP_SHIFT))&DCU_CTRLDESCL21_3_BPP_MASK)
#define DCU_CTRLDESCL21_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL21_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL21_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_3_TRANS_SHIFT))&DCU_CTRLDESCL21_3_TRANS_MASK)
#define DCU_CTRLDESCL21_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL21_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL21_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL21_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL21_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL21_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL21_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL21_3_EN_SHIFT               31
/* CTRLDESCL21_4 Bit Fields */
#define DCU_CTRLDESCL21_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL21_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL21_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL21_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL21_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL21_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL21_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL21_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL21_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL21_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL21_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL21_4_CKMAX_R_MASK)
/* CTRLDESCL21_5 Bit Fields */
#define DCU_CTRLDESCL21_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL21_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL21_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL21_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL21_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL21_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL21_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL21_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL21_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL21_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL21_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL21_5_CKMIN_R_MASK)
/* CTRLDESCL21_6 Bit Fields */
#define DCU_CTRLDESCL21_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL21_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL21_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL21_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL21_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL21_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL21_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL21_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL21_7 Bit Fields */
#define DCU_CTRLDESCL21_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL21_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL21_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL21_7_FGn_FCOLOR_MASK)
/* CTRLDESCL21_8 Bit Fields */
#define DCU_CTRLDESCL21_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL21_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL21_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL21_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL21_8_FGn_BCOLOR_MASK)
/* CTRLDESCL22_0 Bit Fields */
#define DCU_CTRLDESCL22_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL22_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL22_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_0_WIDTH_SHIFT))&DCU_CTRLDESCL22_0_WIDTH_MASK)
#define DCU_CTRLDESCL22_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL22_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL22_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_0_HEIGHT_SHIFT))&DCU_CTRLDESCL22_0_HEIGHT_MASK)
/* CTRLDESCL22_1 Bit Fields */
#define DCU_CTRLDESCL22_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL22_1_POSX_SHIFT             0
#define DCU_CTRLDESCL22_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_1_POSX_SHIFT))&DCU_CTRLDESCL22_1_POSX_MASK)
#define DCU_CTRLDESCL22_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL22_1_POSY_SHIFT             16
#define DCU_CTRLDESCL22_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_1_POSY_SHIFT))&DCU_CTRLDESCL22_1_POSY_MASK)
/* CTRLDESCL22_2 Bit Fields */
#define DCU_CTRLDESCL22_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL22_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL22_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_2_ADDR_SHIFT))&DCU_CTRLDESCL22_2_ADDR_MASK)
/* CTRLDESCL22_3 Bit Fields */
#define DCU_CTRLDESCL22_3_AB_MASK                0x3u
#define DCU_CTRLDESCL22_3_AB_SHIFT               0
#define DCU_CTRLDESCL22_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_3_AB_SHIFT))&DCU_CTRLDESCL22_3_AB_MASK)
#define DCU_CTRLDESCL22_3_BB_MASK                0x4u
#define DCU_CTRLDESCL22_3_BB_SHIFT               2
#define DCU_CTRLDESCL22_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL22_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL22_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_3_LUOFFS_SHIFT))&DCU_CTRLDESCL22_3_LUOFFS_MASK)
#define DCU_CTRLDESCL22_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL22_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL22_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL22_3_BPP_SHIFT              16
#define DCU_CTRLDESCL22_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_3_BPP_SHIFT))&DCU_CTRLDESCL22_3_BPP_MASK)
#define DCU_CTRLDESCL22_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL22_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL22_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_3_TRANS_SHIFT))&DCU_CTRLDESCL22_3_TRANS_MASK)
#define DCU_CTRLDESCL22_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL22_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL22_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL22_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL22_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL22_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL22_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL22_3_EN_SHIFT               31
/* CTRLDESCL22_4 Bit Fields */
#define DCU_CTRLDESCL22_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL22_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL22_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL22_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL22_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL22_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL22_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL22_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL22_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL22_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL22_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL22_4_CKMAX_R_MASK)
/* CTRLDESCL22_5 Bit Fields */
#define DCU_CTRLDESCL22_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL22_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL22_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL22_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL22_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL22_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL22_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL22_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL22_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL22_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL22_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL22_5_CKMIN_R_MASK)
/* CTRLDESCL22_6 Bit Fields */
#define DCU_CTRLDESCL22_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL22_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL22_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL22_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL22_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL22_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL22_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL22_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL22_7 Bit Fields */
#define DCU_CTRLDESCL22_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL22_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL22_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL22_7_FGn_FCOLOR_MASK)
/* CTRLDESCL22_8 Bit Fields */
#define DCU_CTRLDESCL22_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL22_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL22_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL22_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL22_8_FGn_BCOLOR_MASK)
/* CTRLDESCL23_0 Bit Fields */
#define DCU_CTRLDESCL23_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL23_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL23_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_0_WIDTH_SHIFT))&DCU_CTRLDESCL23_0_WIDTH_MASK)
#define DCU_CTRLDESCL23_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL23_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL23_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_0_HEIGHT_SHIFT))&DCU_CTRLDESCL23_0_HEIGHT_MASK)
/* CTRLDESCL23_1 Bit Fields */
#define DCU_CTRLDESCL23_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL23_1_POSX_SHIFT             0
#define DCU_CTRLDESCL23_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_1_POSX_SHIFT))&DCU_CTRLDESCL23_1_POSX_MASK)
#define DCU_CTRLDESCL23_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL23_1_POSY_SHIFT             16
#define DCU_CTRLDESCL23_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_1_POSY_SHIFT))&DCU_CTRLDESCL23_1_POSY_MASK)
/* CTRLDESCL23_2 Bit Fields */
#define DCU_CTRLDESCL23_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL23_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL23_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_2_ADDR_SHIFT))&DCU_CTRLDESCL23_2_ADDR_MASK)
/* CTRLDESCL23_3 Bit Fields */
#define DCU_CTRLDESCL23_3_AB_MASK                0x3u
#define DCU_CTRLDESCL23_3_AB_SHIFT               0
#define DCU_CTRLDESCL23_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_3_AB_SHIFT))&DCU_CTRLDESCL23_3_AB_MASK)
#define DCU_CTRLDESCL23_3_BB_MASK                0x4u
#define DCU_CTRLDESCL23_3_BB_SHIFT               2
#define DCU_CTRLDESCL23_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL23_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL23_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_3_LUOFFS_SHIFT))&DCU_CTRLDESCL23_3_LUOFFS_MASK)
#define DCU_CTRLDESCL23_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL23_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL23_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL23_3_BPP_SHIFT              16
#define DCU_CTRLDESCL23_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_3_BPP_SHIFT))&DCU_CTRLDESCL23_3_BPP_MASK)
#define DCU_CTRLDESCL23_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL23_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL23_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_3_TRANS_SHIFT))&DCU_CTRLDESCL23_3_TRANS_MASK)
#define DCU_CTRLDESCL23_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL23_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL23_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL23_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL23_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL23_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL23_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL23_3_EN_SHIFT               31
/* CTRLDESCL23_4 Bit Fields */
#define DCU_CTRLDESCL23_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL23_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL23_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL23_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL23_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL23_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL23_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL23_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL23_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL23_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL23_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL23_4_CKMAX_R_MASK)
/* CTRLDESCL23_5 Bit Fields */
#define DCU_CTRLDESCL23_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL23_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL23_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL23_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL23_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL23_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL23_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL23_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL23_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL23_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL23_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL23_5_CKMIN_R_MASK)
/* CTRLDESCL23_6 Bit Fields */
#define DCU_CTRLDESCL23_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL23_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL23_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL23_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL23_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL23_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL23_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL23_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL23_7 Bit Fields */
#define DCU_CTRLDESCL23_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL23_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL23_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL23_7_FGn_FCOLOR_MASK)
/* CTRLDESCL23_8 Bit Fields */
#define DCU_CTRLDESCL23_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL23_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL23_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL23_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL23_8_FGn_BCOLOR_MASK)
/* CTRLDESCL24_0 Bit Fields */
#define DCU_CTRLDESCL24_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL24_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL24_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_0_WIDTH_SHIFT))&DCU_CTRLDESCL24_0_WIDTH_MASK)
#define DCU_CTRLDESCL24_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL24_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL24_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_0_HEIGHT_SHIFT))&DCU_CTRLDESCL24_0_HEIGHT_MASK)
/* CTRLDESCL24_1 Bit Fields */
#define DCU_CTRLDESCL24_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL24_1_POSX_SHIFT             0
#define DCU_CTRLDESCL24_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_1_POSX_SHIFT))&DCU_CTRLDESCL24_1_POSX_MASK)
#define DCU_CTRLDESCL24_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL24_1_POSY_SHIFT             16
#define DCU_CTRLDESCL24_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_1_POSY_SHIFT))&DCU_CTRLDESCL24_1_POSY_MASK)
/* CTRLDESCL24_2 Bit Fields */
#define DCU_CTRLDESCL24_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL24_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL24_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_2_ADDR_SHIFT))&DCU_CTRLDESCL24_2_ADDR_MASK)
/* CTRLDESCL24_3 Bit Fields */
#define DCU_CTRLDESCL24_3_AB_MASK                0x3u
#define DCU_CTRLDESCL24_3_AB_SHIFT               0
#define DCU_CTRLDESCL24_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_3_AB_SHIFT))&DCU_CTRLDESCL24_3_AB_MASK)
#define DCU_CTRLDESCL24_3_BB_MASK                0x4u
#define DCU_CTRLDESCL24_3_BB_SHIFT               2
#define DCU_CTRLDESCL24_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL24_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL24_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_3_LUOFFS_SHIFT))&DCU_CTRLDESCL24_3_LUOFFS_MASK)
#define DCU_CTRLDESCL24_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL24_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL24_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL24_3_BPP_SHIFT              16
#define DCU_CTRLDESCL24_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_3_BPP_SHIFT))&DCU_CTRLDESCL24_3_BPP_MASK)
#define DCU_CTRLDESCL24_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL24_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL24_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_3_TRANS_SHIFT))&DCU_CTRLDESCL24_3_TRANS_MASK)
#define DCU_CTRLDESCL24_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL24_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL24_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL24_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL24_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL24_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL24_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL24_3_EN_SHIFT               31
/* CTRLDESCL24_4 Bit Fields */
#define DCU_CTRLDESCL24_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL24_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL24_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL24_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL24_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL24_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL24_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL24_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL24_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL24_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL24_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL24_4_CKMAX_R_MASK)
/* CTRLDESCL24_5 Bit Fields */
#define DCU_CTRLDESCL24_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL24_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL24_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL24_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL24_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL24_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL24_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL24_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL24_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL24_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL24_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL24_5_CKMIN_R_MASK)
/* CTRLDESCL24_6 Bit Fields */
#define DCU_CTRLDESCL24_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL24_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL24_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL24_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL24_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL24_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL24_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL24_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL24_7 Bit Fields */
#define DCU_CTRLDESCL24_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL24_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL24_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL24_7_FGn_FCOLOR_MASK)
/* CTRLDESCL24_8 Bit Fields */
#define DCU_CTRLDESCL24_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL24_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL24_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL24_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL24_8_FGn_BCOLOR_MASK)
/* CTRLDESCL25_0 Bit Fields */
#define DCU_CTRLDESCL25_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL25_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL25_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_0_WIDTH_SHIFT))&DCU_CTRLDESCL25_0_WIDTH_MASK)
#define DCU_CTRLDESCL25_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL25_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL25_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_0_HEIGHT_SHIFT))&DCU_CTRLDESCL25_0_HEIGHT_MASK)
/* CTRLDESCL25_1 Bit Fields */
#define DCU_CTRLDESCL25_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL25_1_POSX_SHIFT             0
#define DCU_CTRLDESCL25_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_1_POSX_SHIFT))&DCU_CTRLDESCL25_1_POSX_MASK)
#define DCU_CTRLDESCL25_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL25_1_POSY_SHIFT             16
#define DCU_CTRLDESCL25_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_1_POSY_SHIFT))&DCU_CTRLDESCL25_1_POSY_MASK)
/* CTRLDESCL25_2 Bit Fields */
#define DCU_CTRLDESCL25_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL25_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL25_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_2_ADDR_SHIFT))&DCU_CTRLDESCL25_2_ADDR_MASK)
/* CTRLDESCL25_3 Bit Fields */
#define DCU_CTRLDESCL25_3_AB_MASK                0x3u
#define DCU_CTRLDESCL25_3_AB_SHIFT               0
#define DCU_CTRLDESCL25_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_3_AB_SHIFT))&DCU_CTRLDESCL25_3_AB_MASK)
#define DCU_CTRLDESCL25_3_BB_MASK                0x4u
#define DCU_CTRLDESCL25_3_BB_SHIFT               2
#define DCU_CTRLDESCL25_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL25_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL25_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_3_LUOFFS_SHIFT))&DCU_CTRLDESCL25_3_LUOFFS_MASK)
#define DCU_CTRLDESCL25_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL25_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL25_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL25_3_BPP_SHIFT              16
#define DCU_CTRLDESCL25_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_3_BPP_SHIFT))&DCU_CTRLDESCL25_3_BPP_MASK)
#define DCU_CTRLDESCL25_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL25_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL25_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_3_TRANS_SHIFT))&DCU_CTRLDESCL25_3_TRANS_MASK)
#define DCU_CTRLDESCL25_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL25_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL25_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL25_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL25_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL25_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL25_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL25_3_EN_SHIFT               31
/* CTRLDESCL25_4 Bit Fields */
#define DCU_CTRLDESCL25_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL25_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL25_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL25_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL25_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL25_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL25_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL25_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL25_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL25_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL25_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL25_4_CKMAX_R_MASK)
/* CTRLDESCL25_5 Bit Fields */
#define DCU_CTRLDESCL25_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL25_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL25_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL25_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL25_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL25_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL25_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL25_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL25_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL25_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL25_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL25_5_CKMIN_R_MASK)
/* CTRLDESCL25_6 Bit Fields */
#define DCU_CTRLDESCL25_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL25_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL25_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL25_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL25_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL25_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL25_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL25_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL25_7 Bit Fields */
#define DCU_CTRLDESCL25_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL25_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL25_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL25_7_FGn_FCOLOR_MASK)
/* CTRLDESCL25_8 Bit Fields */
#define DCU_CTRLDESCL25_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL25_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL25_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL25_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL25_8_FGn_BCOLOR_MASK)
/* CTRLDESCL26_0 Bit Fields */
#define DCU_CTRLDESCL26_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL26_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL26_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_0_WIDTH_SHIFT))&DCU_CTRLDESCL26_0_WIDTH_MASK)
#define DCU_CTRLDESCL26_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL26_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL26_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_0_HEIGHT_SHIFT))&DCU_CTRLDESCL26_0_HEIGHT_MASK)
/* CTRLDESCL26_1 Bit Fields */
#define DCU_CTRLDESCL26_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL26_1_POSX_SHIFT             0
#define DCU_CTRLDESCL26_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_1_POSX_SHIFT))&DCU_CTRLDESCL26_1_POSX_MASK)
#define DCU_CTRLDESCL26_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL26_1_POSY_SHIFT             16
#define DCU_CTRLDESCL26_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_1_POSY_SHIFT))&DCU_CTRLDESCL26_1_POSY_MASK)
/* CTRLDESCL26_2 Bit Fields */
#define DCU_CTRLDESCL26_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL26_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL26_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_2_ADDR_SHIFT))&DCU_CTRLDESCL26_2_ADDR_MASK)
/* CTRLDESCL26_3 Bit Fields */
#define DCU_CTRLDESCL26_3_AB_MASK                0x3u
#define DCU_CTRLDESCL26_3_AB_SHIFT               0
#define DCU_CTRLDESCL26_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_3_AB_SHIFT))&DCU_CTRLDESCL26_3_AB_MASK)
#define DCU_CTRLDESCL26_3_BB_MASK                0x4u
#define DCU_CTRLDESCL26_3_BB_SHIFT               2
#define DCU_CTRLDESCL26_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL26_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL26_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_3_LUOFFS_SHIFT))&DCU_CTRLDESCL26_3_LUOFFS_MASK)
#define DCU_CTRLDESCL26_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL26_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL26_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL26_3_BPP_SHIFT              16
#define DCU_CTRLDESCL26_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_3_BPP_SHIFT))&DCU_CTRLDESCL26_3_BPP_MASK)
#define DCU_CTRLDESCL26_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL26_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL26_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_3_TRANS_SHIFT))&DCU_CTRLDESCL26_3_TRANS_MASK)
#define DCU_CTRLDESCL26_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL26_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL26_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL26_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL26_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL26_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL26_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL26_3_EN_SHIFT               31
/* CTRLDESCL26_4 Bit Fields */
#define DCU_CTRLDESCL26_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL26_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL26_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL26_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL26_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL26_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL26_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL26_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL26_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL26_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL26_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL26_4_CKMAX_R_MASK)
/* CTRLDESCL26_5 Bit Fields */
#define DCU_CTRLDESCL26_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL26_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL26_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL26_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL26_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL26_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL26_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL26_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL26_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL26_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL26_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL26_5_CKMIN_R_MASK)
/* CTRLDESCL26_6 Bit Fields */
#define DCU_CTRLDESCL26_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL26_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL26_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL26_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL26_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL26_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL26_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL26_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL26_7 Bit Fields */
#define DCU_CTRLDESCL26_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL26_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL26_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL26_7_FGn_FCOLOR_MASK)
/* CTRLDESCL26_8 Bit Fields */
#define DCU_CTRLDESCL26_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL26_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL26_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL26_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL26_8_FGn_BCOLOR_MASK)
/* CTRLDESCL27_0 Bit Fields */
#define DCU_CTRLDESCL27_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL27_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL27_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_0_WIDTH_SHIFT))&DCU_CTRLDESCL27_0_WIDTH_MASK)
#define DCU_CTRLDESCL27_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL27_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL27_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_0_HEIGHT_SHIFT))&DCU_CTRLDESCL27_0_HEIGHT_MASK)
/* CTRLDESCL27_1 Bit Fields */
#define DCU_CTRLDESCL27_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL27_1_POSX_SHIFT             0
#define DCU_CTRLDESCL27_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_1_POSX_SHIFT))&DCU_CTRLDESCL27_1_POSX_MASK)
#define DCU_CTRLDESCL27_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL27_1_POSY_SHIFT             16
#define DCU_CTRLDESCL27_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_1_POSY_SHIFT))&DCU_CTRLDESCL27_1_POSY_MASK)
/* CTRLDESCL27_2 Bit Fields */
#define DCU_CTRLDESCL27_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL27_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL27_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_2_ADDR_SHIFT))&DCU_CTRLDESCL27_2_ADDR_MASK)
/* CTRLDESCL27_3 Bit Fields */
#define DCU_CTRLDESCL27_3_AB_MASK                0x3u
#define DCU_CTRLDESCL27_3_AB_SHIFT               0
#define DCU_CTRLDESCL27_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_3_AB_SHIFT))&DCU_CTRLDESCL27_3_AB_MASK)
#define DCU_CTRLDESCL27_3_BB_MASK                0x4u
#define DCU_CTRLDESCL27_3_BB_SHIFT               2
#define DCU_CTRLDESCL27_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL27_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL27_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_3_LUOFFS_SHIFT))&DCU_CTRLDESCL27_3_LUOFFS_MASK)
#define DCU_CTRLDESCL27_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL27_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL27_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL27_3_BPP_SHIFT              16
#define DCU_CTRLDESCL27_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_3_BPP_SHIFT))&DCU_CTRLDESCL27_3_BPP_MASK)
#define DCU_CTRLDESCL27_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL27_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL27_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_3_TRANS_SHIFT))&DCU_CTRLDESCL27_3_TRANS_MASK)
#define DCU_CTRLDESCL27_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL27_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL27_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL27_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL27_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL27_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL27_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL27_3_EN_SHIFT               31
/* CTRLDESCL27_4 Bit Fields */
#define DCU_CTRLDESCL27_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL27_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL27_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL27_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL27_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL27_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL27_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL27_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL27_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL27_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL27_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL27_4_CKMAX_R_MASK)
/* CTRLDESCL27_5 Bit Fields */
#define DCU_CTRLDESCL27_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL27_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL27_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL27_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL27_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL27_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL27_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL27_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL27_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL27_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL27_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL27_5_CKMIN_R_MASK)
/* CTRLDESCL27_6 Bit Fields */
#define DCU_CTRLDESCL27_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL27_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL27_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL27_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL27_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL27_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL27_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL27_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL27_7 Bit Fields */
#define DCU_CTRLDESCL27_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL27_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL27_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL27_7_FGn_FCOLOR_MASK)
/* CTRLDESCL27_8 Bit Fields */
#define DCU_CTRLDESCL27_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL27_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL27_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL27_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL27_8_FGn_BCOLOR_MASK)
/* CTRLDESCL28_0 Bit Fields */
#define DCU_CTRLDESCL28_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL28_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL28_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_0_WIDTH_SHIFT))&DCU_CTRLDESCL28_0_WIDTH_MASK)
#define DCU_CTRLDESCL28_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL28_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL28_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_0_HEIGHT_SHIFT))&DCU_CTRLDESCL28_0_HEIGHT_MASK)
/* CTRLDESCL28_1 Bit Fields */
#define DCU_CTRLDESCL28_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL28_1_POSX_SHIFT             0
#define DCU_CTRLDESCL28_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_1_POSX_SHIFT))&DCU_CTRLDESCL28_1_POSX_MASK)
#define DCU_CTRLDESCL28_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL28_1_POSY_SHIFT             16
#define DCU_CTRLDESCL28_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_1_POSY_SHIFT))&DCU_CTRLDESCL28_1_POSY_MASK)
/* CTRLDESCL28_2 Bit Fields */
#define DCU_CTRLDESCL28_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL28_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL28_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_2_ADDR_SHIFT))&DCU_CTRLDESCL28_2_ADDR_MASK)
/* CTRLDESCL28_3 Bit Fields */
#define DCU_CTRLDESCL28_3_AB_MASK                0x3u
#define DCU_CTRLDESCL28_3_AB_SHIFT               0
#define DCU_CTRLDESCL28_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_3_AB_SHIFT))&DCU_CTRLDESCL28_3_AB_MASK)
#define DCU_CTRLDESCL28_3_BB_MASK                0x4u
#define DCU_CTRLDESCL28_3_BB_SHIFT               2
#define DCU_CTRLDESCL28_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL28_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL28_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_3_LUOFFS_SHIFT))&DCU_CTRLDESCL28_3_LUOFFS_MASK)
#define DCU_CTRLDESCL28_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL28_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL28_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL28_3_BPP_SHIFT              16
#define DCU_CTRLDESCL28_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_3_BPP_SHIFT))&DCU_CTRLDESCL28_3_BPP_MASK)
#define DCU_CTRLDESCL28_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL28_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL28_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_3_TRANS_SHIFT))&DCU_CTRLDESCL28_3_TRANS_MASK)
#define DCU_CTRLDESCL28_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL28_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL28_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL28_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL28_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL28_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL28_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL28_3_EN_SHIFT               31
/* CTRLDESCL28_4 Bit Fields */
#define DCU_CTRLDESCL28_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL28_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL28_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL28_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL28_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL28_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL28_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL28_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL28_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL28_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL28_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL28_4_CKMAX_R_MASK)
/* CTRLDESCL28_5 Bit Fields */
#define DCU_CTRLDESCL28_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL28_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL28_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL28_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL28_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL28_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL28_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL28_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL28_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL28_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL28_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL28_5_CKMIN_R_MASK)
/* CTRLDESCL28_6 Bit Fields */
#define DCU_CTRLDESCL28_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL28_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL28_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL28_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL28_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL28_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL28_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL28_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL28_7 Bit Fields */
#define DCU_CTRLDESCL28_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL28_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL28_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL28_7_FGn_FCOLOR_MASK)
/* CTRLDESCL28_8 Bit Fields */
#define DCU_CTRLDESCL28_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL28_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL28_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL28_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL28_8_FGn_BCOLOR_MASK)
/* CTRLDESCL29_0 Bit Fields */
#define DCU_CTRLDESCL29_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL29_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL29_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_0_WIDTH_SHIFT))&DCU_CTRLDESCL29_0_WIDTH_MASK)
#define DCU_CTRLDESCL29_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL29_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL29_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_0_HEIGHT_SHIFT))&DCU_CTRLDESCL29_0_HEIGHT_MASK)
/* CTRLDESCL29_1 Bit Fields */
#define DCU_CTRLDESCL29_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL29_1_POSX_SHIFT             0
#define DCU_CTRLDESCL29_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_1_POSX_SHIFT))&DCU_CTRLDESCL29_1_POSX_MASK)
#define DCU_CTRLDESCL29_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL29_1_POSY_SHIFT             16
#define DCU_CTRLDESCL29_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_1_POSY_SHIFT))&DCU_CTRLDESCL29_1_POSY_MASK)
/* CTRLDESCL29_2 Bit Fields */
#define DCU_CTRLDESCL29_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL29_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL29_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_2_ADDR_SHIFT))&DCU_CTRLDESCL29_2_ADDR_MASK)
/* CTRLDESCL29_3 Bit Fields */
#define DCU_CTRLDESCL29_3_AB_MASK                0x3u
#define DCU_CTRLDESCL29_3_AB_SHIFT               0
#define DCU_CTRLDESCL29_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_3_AB_SHIFT))&DCU_CTRLDESCL29_3_AB_MASK)
#define DCU_CTRLDESCL29_3_BB_MASK                0x4u
#define DCU_CTRLDESCL29_3_BB_SHIFT               2
#define DCU_CTRLDESCL29_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL29_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL29_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_3_LUOFFS_SHIFT))&DCU_CTRLDESCL29_3_LUOFFS_MASK)
#define DCU_CTRLDESCL29_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL29_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL29_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL29_3_BPP_SHIFT              16
#define DCU_CTRLDESCL29_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_3_BPP_SHIFT))&DCU_CTRLDESCL29_3_BPP_MASK)
#define DCU_CTRLDESCL29_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL29_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL29_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_3_TRANS_SHIFT))&DCU_CTRLDESCL29_3_TRANS_MASK)
#define DCU_CTRLDESCL29_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL29_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL29_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL29_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL29_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL29_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL29_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL29_3_EN_SHIFT               31
/* CTRLDESCL29_4 Bit Fields */
#define DCU_CTRLDESCL29_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL29_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL29_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL29_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL29_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL29_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL29_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL29_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL29_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL29_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL29_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL29_4_CKMAX_R_MASK)
/* CTRLDESCL29_5 Bit Fields */
#define DCU_CTRLDESCL29_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL29_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL29_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL29_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL29_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL29_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL29_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL29_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL29_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL29_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL29_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL29_5_CKMIN_R_MASK)
/* CTRLDESCL29_6 Bit Fields */
#define DCU_CTRLDESCL29_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL29_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL29_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL29_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL29_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL29_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL29_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL29_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL29_7 Bit Fields */
#define DCU_CTRLDESCL29_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL29_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL29_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL29_7_FGn_FCOLOR_MASK)
/* CTRLDESCL29_8 Bit Fields */
#define DCU_CTRLDESCL29_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL29_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL29_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL29_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL29_8_FGn_BCOLOR_MASK)
/* CTRLDESCL30_0 Bit Fields */
#define DCU_CTRLDESCL30_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL30_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL30_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_0_WIDTH_SHIFT))&DCU_CTRLDESCL30_0_WIDTH_MASK)
#define DCU_CTRLDESCL30_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL30_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL30_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_0_HEIGHT_SHIFT))&DCU_CTRLDESCL30_0_HEIGHT_MASK)
/* CTRLDESCL30_1 Bit Fields */
#define DCU_CTRLDESCL30_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL30_1_POSX_SHIFT             0
#define DCU_CTRLDESCL30_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_1_POSX_SHIFT))&DCU_CTRLDESCL30_1_POSX_MASK)
#define DCU_CTRLDESCL30_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL30_1_POSY_SHIFT             16
#define DCU_CTRLDESCL30_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_1_POSY_SHIFT))&DCU_CTRLDESCL30_1_POSY_MASK)
/* CTRLDESCL30_2 Bit Fields */
#define DCU_CTRLDESCL30_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL30_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL30_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_2_ADDR_SHIFT))&DCU_CTRLDESCL30_2_ADDR_MASK)
/* CTRLDESCL30_3 Bit Fields */
#define DCU_CTRLDESCL30_3_AB_MASK                0x3u
#define DCU_CTRLDESCL30_3_AB_SHIFT               0
#define DCU_CTRLDESCL30_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_3_AB_SHIFT))&DCU_CTRLDESCL30_3_AB_MASK)
#define DCU_CTRLDESCL30_3_BB_MASK                0x4u
#define DCU_CTRLDESCL30_3_BB_SHIFT               2
#define DCU_CTRLDESCL30_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL30_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL30_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_3_LUOFFS_SHIFT))&DCU_CTRLDESCL30_3_LUOFFS_MASK)
#define DCU_CTRLDESCL30_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL30_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL30_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL30_3_BPP_SHIFT              16
#define DCU_CTRLDESCL30_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_3_BPP_SHIFT))&DCU_CTRLDESCL30_3_BPP_MASK)
#define DCU_CTRLDESCL30_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL30_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL30_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_3_TRANS_SHIFT))&DCU_CTRLDESCL30_3_TRANS_MASK)
#define DCU_CTRLDESCL30_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL30_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL30_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL30_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL30_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL30_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL30_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL30_3_EN_SHIFT               31
/* CTRLDESCL30_4 Bit Fields */
#define DCU_CTRLDESCL30_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL30_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL30_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL30_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL30_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL30_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL30_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL30_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL30_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL30_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL30_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL30_4_CKMAX_R_MASK)
/* CTRLDESCL30_5 Bit Fields */
#define DCU_CTRLDESCL30_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL30_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL30_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL30_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL30_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL30_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL30_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL30_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL30_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL30_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL30_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL30_5_CKMIN_R_MASK)
/* CTRLDESCL30_6 Bit Fields */
#define DCU_CTRLDESCL30_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL30_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL30_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL30_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL30_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL30_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL30_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL30_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL30_7 Bit Fields */
#define DCU_CTRLDESCL30_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL30_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL30_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL30_7_FGn_FCOLOR_MASK)
/* CTRLDESCL30_8 Bit Fields */
#define DCU_CTRLDESCL30_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL30_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL30_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL30_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL30_8_FGn_BCOLOR_MASK)
/* CTRLDESCL31_0 Bit Fields */
#define DCU_CTRLDESCL31_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL31_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL31_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_0_WIDTH_SHIFT))&DCU_CTRLDESCL31_0_WIDTH_MASK)
#define DCU_CTRLDESCL31_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL31_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL31_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_0_HEIGHT_SHIFT))&DCU_CTRLDESCL31_0_HEIGHT_MASK)
/* CTRLDESCL31_1 Bit Fields */
#define DCU_CTRLDESCL31_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL31_1_POSX_SHIFT             0
#define DCU_CTRLDESCL31_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_1_POSX_SHIFT))&DCU_CTRLDESCL31_1_POSX_MASK)
#define DCU_CTRLDESCL31_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL31_1_POSY_SHIFT             16
#define DCU_CTRLDESCL31_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_1_POSY_SHIFT))&DCU_CTRLDESCL31_1_POSY_MASK)
/* CTRLDESCL31_2 Bit Fields */
#define DCU_CTRLDESCL31_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL31_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL31_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_2_ADDR_SHIFT))&DCU_CTRLDESCL31_2_ADDR_MASK)
/* CTRLDESCL31_3 Bit Fields */
#define DCU_CTRLDESCL31_3_AB_MASK                0x3u
#define DCU_CTRLDESCL31_3_AB_SHIFT               0
#define DCU_CTRLDESCL31_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_3_AB_SHIFT))&DCU_CTRLDESCL31_3_AB_MASK)
#define DCU_CTRLDESCL31_3_BB_MASK                0x4u
#define DCU_CTRLDESCL31_3_BB_SHIFT               2
#define DCU_CTRLDESCL31_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL31_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL31_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_3_LUOFFS_SHIFT))&DCU_CTRLDESCL31_3_LUOFFS_MASK)
#define DCU_CTRLDESCL31_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL31_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL31_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL31_3_BPP_SHIFT              16
#define DCU_CTRLDESCL31_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_3_BPP_SHIFT))&DCU_CTRLDESCL31_3_BPP_MASK)
#define DCU_CTRLDESCL31_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL31_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL31_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_3_TRANS_SHIFT))&DCU_CTRLDESCL31_3_TRANS_MASK)
#define DCU_CTRLDESCL31_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL31_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL31_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL31_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL31_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL31_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL31_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL31_3_EN_SHIFT               31
/* CTRLDESCL31_4 Bit Fields */
#define DCU_CTRLDESCL31_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL31_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL31_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL31_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL31_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL31_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL31_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL31_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL31_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL31_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL31_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL31_4_CKMAX_R_MASK)
/* CTRLDESCL31_5 Bit Fields */
#define DCU_CTRLDESCL31_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL31_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL31_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL31_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL31_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL31_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL31_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL31_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL31_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL31_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL31_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL31_5_CKMIN_R_MASK)
/* CTRLDESCL31_6 Bit Fields */
#define DCU_CTRLDESCL31_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL31_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL31_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL31_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL31_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL31_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL31_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL31_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL31_7 Bit Fields */
#define DCU_CTRLDESCL31_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL31_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL31_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL31_7_FGn_FCOLOR_MASK)
/* CTRLDESCL31_8 Bit Fields */
#define DCU_CTRLDESCL31_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL31_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL31_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL31_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL31_8_FGn_BCOLOR_MASK)
/* CTRLDESCL32_0 Bit Fields */
#define DCU_CTRLDESCL32_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL32_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL32_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_0_WIDTH_SHIFT))&DCU_CTRLDESCL32_0_WIDTH_MASK)
#define DCU_CTRLDESCL32_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL32_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL32_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_0_HEIGHT_SHIFT))&DCU_CTRLDESCL32_0_HEIGHT_MASK)
/* CTRLDESCL32_1 Bit Fields */
#define DCU_CTRLDESCL32_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL32_1_POSX_SHIFT             0
#define DCU_CTRLDESCL32_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_1_POSX_SHIFT))&DCU_CTRLDESCL32_1_POSX_MASK)
#define DCU_CTRLDESCL32_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL32_1_POSY_SHIFT             16
#define DCU_CTRLDESCL32_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_1_POSY_SHIFT))&DCU_CTRLDESCL32_1_POSY_MASK)
/* CTRLDESCL32_2 Bit Fields */
#define DCU_CTRLDESCL32_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL32_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL32_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_2_ADDR_SHIFT))&DCU_CTRLDESCL32_2_ADDR_MASK)
/* CTRLDESCL32_3 Bit Fields */
#define DCU_CTRLDESCL32_3_AB_MASK                0x3u
#define DCU_CTRLDESCL32_3_AB_SHIFT               0
#define DCU_CTRLDESCL32_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_3_AB_SHIFT))&DCU_CTRLDESCL32_3_AB_MASK)
#define DCU_CTRLDESCL32_3_BB_MASK                0x4u
#define DCU_CTRLDESCL32_3_BB_SHIFT               2
#define DCU_CTRLDESCL32_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL32_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL32_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_3_LUOFFS_SHIFT))&DCU_CTRLDESCL32_3_LUOFFS_MASK)
#define DCU_CTRLDESCL32_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL32_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL32_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL32_3_BPP_SHIFT              16
#define DCU_CTRLDESCL32_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_3_BPP_SHIFT))&DCU_CTRLDESCL32_3_BPP_MASK)
#define DCU_CTRLDESCL32_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL32_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL32_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_3_TRANS_SHIFT))&DCU_CTRLDESCL32_3_TRANS_MASK)
#define DCU_CTRLDESCL32_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL32_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL32_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL32_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL32_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL32_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL32_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL32_3_EN_SHIFT               31
/* CTRLDESCL32_4 Bit Fields */
#define DCU_CTRLDESCL32_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL32_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL32_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL32_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL32_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL32_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL32_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL32_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL32_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL32_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL32_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL32_4_CKMAX_R_MASK)
/* CTRLDESCL32_5 Bit Fields */
#define DCU_CTRLDESCL32_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL32_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL32_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL32_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL32_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL32_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL32_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL32_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL32_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL32_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL32_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL32_5_CKMIN_R_MASK)
/* CTRLDESCL32_6 Bit Fields */
#define DCU_CTRLDESCL32_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL32_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL32_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL32_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL32_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL32_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL32_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL32_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL32_7 Bit Fields */
#define DCU_CTRLDESCL32_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL32_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL32_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL32_7_FGn_FCOLOR_MASK)
/* CTRLDESCL32_8 Bit Fields */
#define DCU_CTRLDESCL32_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL32_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL32_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL32_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL32_8_FGn_BCOLOR_MASK)
/* CTRLDESCL33_0 Bit Fields */
#define DCU_CTRLDESCL33_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL33_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL33_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_0_WIDTH_SHIFT))&DCU_CTRLDESCL33_0_WIDTH_MASK)
#define DCU_CTRLDESCL33_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL33_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL33_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_0_HEIGHT_SHIFT))&DCU_CTRLDESCL33_0_HEIGHT_MASK)
/* CTRLDESCL33_1 Bit Fields */
#define DCU_CTRLDESCL33_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL33_1_POSX_SHIFT             0
#define DCU_CTRLDESCL33_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_1_POSX_SHIFT))&DCU_CTRLDESCL33_1_POSX_MASK)
#define DCU_CTRLDESCL33_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL33_1_POSY_SHIFT             16
#define DCU_CTRLDESCL33_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_1_POSY_SHIFT))&DCU_CTRLDESCL33_1_POSY_MASK)
/* CTRLDESCL33_2 Bit Fields */
#define DCU_CTRLDESCL33_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL33_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL33_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_2_ADDR_SHIFT))&DCU_CTRLDESCL33_2_ADDR_MASK)
/* CTRLDESCL33_3 Bit Fields */
#define DCU_CTRLDESCL33_3_AB_MASK                0x3u
#define DCU_CTRLDESCL33_3_AB_SHIFT               0
#define DCU_CTRLDESCL33_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_3_AB_SHIFT))&DCU_CTRLDESCL33_3_AB_MASK)
#define DCU_CTRLDESCL33_3_BB_MASK                0x4u
#define DCU_CTRLDESCL33_3_BB_SHIFT               2
#define DCU_CTRLDESCL33_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL33_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL33_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_3_LUOFFS_SHIFT))&DCU_CTRLDESCL33_3_LUOFFS_MASK)
#define DCU_CTRLDESCL33_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL33_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL33_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL33_3_BPP_SHIFT              16
#define DCU_CTRLDESCL33_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_3_BPP_SHIFT))&DCU_CTRLDESCL33_3_BPP_MASK)
#define DCU_CTRLDESCL33_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL33_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL33_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_3_TRANS_SHIFT))&DCU_CTRLDESCL33_3_TRANS_MASK)
#define DCU_CTRLDESCL33_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL33_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL33_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL33_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL33_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL33_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL33_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL33_3_EN_SHIFT               31
/* CTRLDESCL33_4 Bit Fields */
#define DCU_CTRLDESCL33_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL33_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL33_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL33_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL33_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL33_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL33_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL33_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL33_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL33_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL33_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL33_4_CKMAX_R_MASK)
/* CTRLDESCL33_5 Bit Fields */
#define DCU_CTRLDESCL33_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL33_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL33_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL33_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL33_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL33_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL33_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL33_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL33_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL33_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL33_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL33_5_CKMIN_R_MASK)
/* CTRLDESCL33_6 Bit Fields */
#define DCU_CTRLDESCL33_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL33_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL33_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL33_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL33_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL33_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL33_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL33_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL33_7 Bit Fields */
#define DCU_CTRLDESCL33_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL33_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL33_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL33_7_FGn_FCOLOR_MASK)
/* CTRLDESCL33_8 Bit Fields */
#define DCU_CTRLDESCL33_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL33_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL33_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL33_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL33_8_FGn_BCOLOR_MASK)
/* CTRLDESCL34_0 Bit Fields */
#define DCU_CTRLDESCL34_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL34_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL34_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_0_WIDTH_SHIFT))&DCU_CTRLDESCL34_0_WIDTH_MASK)
#define DCU_CTRLDESCL34_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL34_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL34_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_0_HEIGHT_SHIFT))&DCU_CTRLDESCL34_0_HEIGHT_MASK)
/* CTRLDESCL34_1 Bit Fields */
#define DCU_CTRLDESCL34_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL34_1_POSX_SHIFT             0
#define DCU_CTRLDESCL34_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_1_POSX_SHIFT))&DCU_CTRLDESCL34_1_POSX_MASK)
#define DCU_CTRLDESCL34_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL34_1_POSY_SHIFT             16
#define DCU_CTRLDESCL34_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_1_POSY_SHIFT))&DCU_CTRLDESCL34_1_POSY_MASK)
/* CTRLDESCL34_2 Bit Fields */
#define DCU_CTRLDESCL34_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL34_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL34_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_2_ADDR_SHIFT))&DCU_CTRLDESCL34_2_ADDR_MASK)
/* CTRLDESCL34_3 Bit Fields */
#define DCU_CTRLDESCL34_3_AB_MASK                0x3u
#define DCU_CTRLDESCL34_3_AB_SHIFT               0
#define DCU_CTRLDESCL34_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_3_AB_SHIFT))&DCU_CTRLDESCL34_3_AB_MASK)
#define DCU_CTRLDESCL34_3_BB_MASK                0x4u
#define DCU_CTRLDESCL34_3_BB_SHIFT               2
#define DCU_CTRLDESCL34_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL34_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL34_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_3_LUOFFS_SHIFT))&DCU_CTRLDESCL34_3_LUOFFS_MASK)
#define DCU_CTRLDESCL34_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL34_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL34_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL34_3_BPP_SHIFT              16
#define DCU_CTRLDESCL34_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_3_BPP_SHIFT))&DCU_CTRLDESCL34_3_BPP_MASK)
#define DCU_CTRLDESCL34_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL34_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL34_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_3_TRANS_SHIFT))&DCU_CTRLDESCL34_3_TRANS_MASK)
#define DCU_CTRLDESCL34_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL34_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL34_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL34_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL34_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL34_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL34_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL34_3_EN_SHIFT               31
/* CTRLDESCL34_4 Bit Fields */
#define DCU_CTRLDESCL34_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL34_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL34_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL34_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL34_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL34_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL34_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL34_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL34_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL34_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL34_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL34_4_CKMAX_R_MASK)
/* CTRLDESCL34_5 Bit Fields */
#define DCU_CTRLDESCL34_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL34_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL34_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL34_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL34_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL34_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL34_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL34_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL34_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL34_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL34_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL34_5_CKMIN_R_MASK)
/* CTRLDESCL34_6 Bit Fields */
#define DCU_CTRLDESCL34_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL34_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL34_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL34_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL34_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL34_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL34_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL34_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL34_7 Bit Fields */
#define DCU_CTRLDESCL34_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL34_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL34_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL34_7_FGn_FCOLOR_MASK)
/* CTRLDESCL34_8 Bit Fields */
#define DCU_CTRLDESCL34_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL34_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL34_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL34_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL34_8_FGn_BCOLOR_MASK)
/* CTRLDESCL35_0 Bit Fields */
#define DCU_CTRLDESCL35_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL35_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL35_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_0_WIDTH_SHIFT))&DCU_CTRLDESCL35_0_WIDTH_MASK)
#define DCU_CTRLDESCL35_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL35_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL35_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_0_HEIGHT_SHIFT))&DCU_CTRLDESCL35_0_HEIGHT_MASK)
/* CTRLDESCL35_1 Bit Fields */
#define DCU_CTRLDESCL35_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL35_1_POSX_SHIFT             0
#define DCU_CTRLDESCL35_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_1_POSX_SHIFT))&DCU_CTRLDESCL35_1_POSX_MASK)
#define DCU_CTRLDESCL35_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL35_1_POSY_SHIFT             16
#define DCU_CTRLDESCL35_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_1_POSY_SHIFT))&DCU_CTRLDESCL35_1_POSY_MASK)
/* CTRLDESCL35_2 Bit Fields */
#define DCU_CTRLDESCL35_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL35_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL35_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_2_ADDR_SHIFT))&DCU_CTRLDESCL35_2_ADDR_MASK)
/* CTRLDESCL35_3 Bit Fields */
#define DCU_CTRLDESCL35_3_AB_MASK                0x3u
#define DCU_CTRLDESCL35_3_AB_SHIFT               0
#define DCU_CTRLDESCL35_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_3_AB_SHIFT))&DCU_CTRLDESCL35_3_AB_MASK)
#define DCU_CTRLDESCL35_3_BB_MASK                0x4u
#define DCU_CTRLDESCL35_3_BB_SHIFT               2
#define DCU_CTRLDESCL35_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL35_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL35_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_3_LUOFFS_SHIFT))&DCU_CTRLDESCL35_3_LUOFFS_MASK)
#define DCU_CTRLDESCL35_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL35_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL35_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL35_3_BPP_SHIFT              16
#define DCU_CTRLDESCL35_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_3_BPP_SHIFT))&DCU_CTRLDESCL35_3_BPP_MASK)
#define DCU_CTRLDESCL35_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL35_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL35_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_3_TRANS_SHIFT))&DCU_CTRLDESCL35_3_TRANS_MASK)
#define DCU_CTRLDESCL35_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL35_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL35_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL35_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL35_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL35_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL35_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL35_3_EN_SHIFT               31
/* CTRLDESCL35_4 Bit Fields */
#define DCU_CTRLDESCL35_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL35_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL35_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL35_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL35_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL35_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL35_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL35_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL35_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL35_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL35_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL35_4_CKMAX_R_MASK)
/* CTRLDESCL35_5 Bit Fields */
#define DCU_CTRLDESCL35_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL35_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL35_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL35_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL35_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL35_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL35_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL35_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL35_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL35_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL35_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL35_5_CKMIN_R_MASK)
/* CTRLDESCL35_6 Bit Fields */
#define DCU_CTRLDESCL35_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL35_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL35_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL35_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL35_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL35_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL35_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL35_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL35_7 Bit Fields */
#define DCU_CTRLDESCL35_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL35_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL35_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL35_7_FGn_FCOLOR_MASK)
/* CTRLDESCL35_8 Bit Fields */
#define DCU_CTRLDESCL35_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL35_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL35_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL35_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL35_8_FGn_BCOLOR_MASK)
/* CTRLDESCL36_0 Bit Fields */
#define DCU_CTRLDESCL36_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL36_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL36_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_0_WIDTH_SHIFT))&DCU_CTRLDESCL36_0_WIDTH_MASK)
#define DCU_CTRLDESCL36_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL36_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL36_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_0_HEIGHT_SHIFT))&DCU_CTRLDESCL36_0_HEIGHT_MASK)
/* CTRLDESCL36_1 Bit Fields */
#define DCU_CTRLDESCL36_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL36_1_POSX_SHIFT             0
#define DCU_CTRLDESCL36_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_1_POSX_SHIFT))&DCU_CTRLDESCL36_1_POSX_MASK)
#define DCU_CTRLDESCL36_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL36_1_POSY_SHIFT             16
#define DCU_CTRLDESCL36_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_1_POSY_SHIFT))&DCU_CTRLDESCL36_1_POSY_MASK)
/* CTRLDESCL36_2 Bit Fields */
#define DCU_CTRLDESCL36_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL36_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL36_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_2_ADDR_SHIFT))&DCU_CTRLDESCL36_2_ADDR_MASK)
/* CTRLDESCL36_3 Bit Fields */
#define DCU_CTRLDESCL36_3_AB_MASK                0x3u
#define DCU_CTRLDESCL36_3_AB_SHIFT               0
#define DCU_CTRLDESCL36_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_3_AB_SHIFT))&DCU_CTRLDESCL36_3_AB_MASK)
#define DCU_CTRLDESCL36_3_BB_MASK                0x4u
#define DCU_CTRLDESCL36_3_BB_SHIFT               2
#define DCU_CTRLDESCL36_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL36_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL36_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_3_LUOFFS_SHIFT))&DCU_CTRLDESCL36_3_LUOFFS_MASK)
#define DCU_CTRLDESCL36_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL36_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL36_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL36_3_BPP_SHIFT              16
#define DCU_CTRLDESCL36_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_3_BPP_SHIFT))&DCU_CTRLDESCL36_3_BPP_MASK)
#define DCU_CTRLDESCL36_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL36_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL36_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_3_TRANS_SHIFT))&DCU_CTRLDESCL36_3_TRANS_MASK)
#define DCU_CTRLDESCL36_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL36_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL36_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL36_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL36_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL36_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL36_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL36_3_EN_SHIFT               31
/* CTRLDESCL36_4 Bit Fields */
#define DCU_CTRLDESCL36_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL36_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL36_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL36_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL36_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL36_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL36_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL36_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL36_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL36_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL36_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL36_4_CKMAX_R_MASK)
/* CTRLDESCL36_5 Bit Fields */
#define DCU_CTRLDESCL36_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL36_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL36_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL36_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL36_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL36_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL36_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL36_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL36_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL36_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL36_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL36_5_CKMIN_R_MASK)
/* CTRLDESCL36_6 Bit Fields */
#define DCU_CTRLDESCL36_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL36_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL36_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL36_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL36_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL36_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL36_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL36_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL36_7 Bit Fields */
#define DCU_CTRLDESCL36_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL36_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL36_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL36_7_FGn_FCOLOR_MASK)
/* CTRLDESCL36_8 Bit Fields */
#define DCU_CTRLDESCL36_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL36_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL36_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL36_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL36_8_FGn_BCOLOR_MASK)
/* CTRLDESCL37_0 Bit Fields */
#define DCU_CTRLDESCL37_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL37_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL37_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_0_WIDTH_SHIFT))&DCU_CTRLDESCL37_0_WIDTH_MASK)
#define DCU_CTRLDESCL37_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL37_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL37_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_0_HEIGHT_SHIFT))&DCU_CTRLDESCL37_0_HEIGHT_MASK)
/* CTRLDESCL37_1 Bit Fields */
#define DCU_CTRLDESCL37_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL37_1_POSX_SHIFT             0
#define DCU_CTRLDESCL37_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_1_POSX_SHIFT))&DCU_CTRLDESCL37_1_POSX_MASK)
#define DCU_CTRLDESCL37_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL37_1_POSY_SHIFT             16
#define DCU_CTRLDESCL37_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_1_POSY_SHIFT))&DCU_CTRLDESCL37_1_POSY_MASK)
/* CTRLDESCL37_2 Bit Fields */
#define DCU_CTRLDESCL37_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL37_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL37_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_2_ADDR_SHIFT))&DCU_CTRLDESCL37_2_ADDR_MASK)
/* CTRLDESCL37_3 Bit Fields */
#define DCU_CTRLDESCL37_3_AB_MASK                0x3u
#define DCU_CTRLDESCL37_3_AB_SHIFT               0
#define DCU_CTRLDESCL37_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_3_AB_SHIFT))&DCU_CTRLDESCL37_3_AB_MASK)
#define DCU_CTRLDESCL37_3_BB_MASK                0x4u
#define DCU_CTRLDESCL37_3_BB_SHIFT               2
#define DCU_CTRLDESCL37_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL37_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL37_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_3_LUOFFS_SHIFT))&DCU_CTRLDESCL37_3_LUOFFS_MASK)
#define DCU_CTRLDESCL37_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL37_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL37_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL37_3_BPP_SHIFT              16
#define DCU_CTRLDESCL37_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_3_BPP_SHIFT))&DCU_CTRLDESCL37_3_BPP_MASK)
#define DCU_CTRLDESCL37_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL37_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL37_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_3_TRANS_SHIFT))&DCU_CTRLDESCL37_3_TRANS_MASK)
#define DCU_CTRLDESCL37_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL37_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL37_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL37_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL37_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL37_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL37_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL37_3_EN_SHIFT               31
/* CTRLDESCL37_4 Bit Fields */
#define DCU_CTRLDESCL37_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL37_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL37_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL37_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL37_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL37_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL37_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL37_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL37_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL37_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL37_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL37_4_CKMAX_R_MASK)
/* CTRLDESCL37_5 Bit Fields */
#define DCU_CTRLDESCL37_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL37_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL37_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL37_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL37_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL37_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL37_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL37_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL37_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL37_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL37_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL37_5_CKMIN_R_MASK)
/* CTRLDESCL37_6 Bit Fields */
#define DCU_CTRLDESCL37_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL37_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL37_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL37_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL37_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL37_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL37_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL37_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL37_7 Bit Fields */
#define DCU_CTRLDESCL37_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL37_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL37_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL37_7_FGn_FCOLOR_MASK)
/* CTRLDESCL37_8 Bit Fields */
#define DCU_CTRLDESCL37_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL37_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL37_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL37_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL37_8_FGn_BCOLOR_MASK)
/* CTRLDESCL38_0 Bit Fields */
#define DCU_CTRLDESCL38_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL38_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL38_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_0_WIDTH_SHIFT))&DCU_CTRLDESCL38_0_WIDTH_MASK)
#define DCU_CTRLDESCL38_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL38_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL38_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_0_HEIGHT_SHIFT))&DCU_CTRLDESCL38_0_HEIGHT_MASK)
/* CTRLDESCL38_1 Bit Fields */
#define DCU_CTRLDESCL38_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL38_1_POSX_SHIFT             0
#define DCU_CTRLDESCL38_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_1_POSX_SHIFT))&DCU_CTRLDESCL38_1_POSX_MASK)
#define DCU_CTRLDESCL38_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL38_1_POSY_SHIFT             16
#define DCU_CTRLDESCL38_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_1_POSY_SHIFT))&DCU_CTRLDESCL38_1_POSY_MASK)
/* CTRLDESCL38_2 Bit Fields */
#define DCU_CTRLDESCL38_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL38_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL38_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_2_ADDR_SHIFT))&DCU_CTRLDESCL38_2_ADDR_MASK)
/* CTRLDESCL38_3 Bit Fields */
#define DCU_CTRLDESCL38_3_AB_MASK                0x3u
#define DCU_CTRLDESCL38_3_AB_SHIFT               0
#define DCU_CTRLDESCL38_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_3_AB_SHIFT))&DCU_CTRLDESCL38_3_AB_MASK)
#define DCU_CTRLDESCL38_3_BB_MASK                0x4u
#define DCU_CTRLDESCL38_3_BB_SHIFT               2
#define DCU_CTRLDESCL38_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL38_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL38_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_3_LUOFFS_SHIFT))&DCU_CTRLDESCL38_3_LUOFFS_MASK)
#define DCU_CTRLDESCL38_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL38_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL38_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL38_3_BPP_SHIFT              16
#define DCU_CTRLDESCL38_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_3_BPP_SHIFT))&DCU_CTRLDESCL38_3_BPP_MASK)
#define DCU_CTRLDESCL38_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL38_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL38_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_3_TRANS_SHIFT))&DCU_CTRLDESCL38_3_TRANS_MASK)
#define DCU_CTRLDESCL38_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL38_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL38_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL38_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL38_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL38_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL38_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL38_3_EN_SHIFT               31
/* CTRLDESCL38_4 Bit Fields */
#define DCU_CTRLDESCL38_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL38_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL38_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL38_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL38_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL38_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL38_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL38_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL38_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL38_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL38_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL38_4_CKMAX_R_MASK)
/* CTRLDESCL38_5 Bit Fields */
#define DCU_CTRLDESCL38_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL38_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL38_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL38_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL38_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL38_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL38_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL38_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL38_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL38_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL38_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL38_5_CKMIN_R_MASK)
/* CTRLDESCL38_6 Bit Fields */
#define DCU_CTRLDESCL38_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL38_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL38_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL38_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL38_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL38_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL38_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL38_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL38_7 Bit Fields */
#define DCU_CTRLDESCL38_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL38_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL38_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL38_7_FGn_FCOLOR_MASK)
/* CTRLDESCL38_8 Bit Fields */
#define DCU_CTRLDESCL38_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL38_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL38_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL38_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL38_8_FGn_BCOLOR_MASK)
/* CTRLDESCL39_0 Bit Fields */
#define DCU_CTRLDESCL39_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL39_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL39_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_0_WIDTH_SHIFT))&DCU_CTRLDESCL39_0_WIDTH_MASK)
#define DCU_CTRLDESCL39_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL39_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL39_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_0_HEIGHT_SHIFT))&DCU_CTRLDESCL39_0_HEIGHT_MASK)
/* CTRLDESCL39_1 Bit Fields */
#define DCU_CTRLDESCL39_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL39_1_POSX_SHIFT             0
#define DCU_CTRLDESCL39_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_1_POSX_SHIFT))&DCU_CTRLDESCL39_1_POSX_MASK)
#define DCU_CTRLDESCL39_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL39_1_POSY_SHIFT             16
#define DCU_CTRLDESCL39_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_1_POSY_SHIFT))&DCU_CTRLDESCL39_1_POSY_MASK)
/* CTRLDESCL39_2 Bit Fields */
#define DCU_CTRLDESCL39_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL39_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL39_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_2_ADDR_SHIFT))&DCU_CTRLDESCL39_2_ADDR_MASK)
/* CTRLDESCL39_3 Bit Fields */
#define DCU_CTRLDESCL39_3_AB_MASK                0x3u
#define DCU_CTRLDESCL39_3_AB_SHIFT               0
#define DCU_CTRLDESCL39_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_3_AB_SHIFT))&DCU_CTRLDESCL39_3_AB_MASK)
#define DCU_CTRLDESCL39_3_BB_MASK                0x4u
#define DCU_CTRLDESCL39_3_BB_SHIFT               2
#define DCU_CTRLDESCL39_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL39_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL39_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_3_LUOFFS_SHIFT))&DCU_CTRLDESCL39_3_LUOFFS_MASK)
#define DCU_CTRLDESCL39_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL39_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL39_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL39_3_BPP_SHIFT              16
#define DCU_CTRLDESCL39_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_3_BPP_SHIFT))&DCU_CTRLDESCL39_3_BPP_MASK)
#define DCU_CTRLDESCL39_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL39_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL39_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_3_TRANS_SHIFT))&DCU_CTRLDESCL39_3_TRANS_MASK)
#define DCU_CTRLDESCL39_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL39_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL39_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL39_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL39_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL39_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL39_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL39_3_EN_SHIFT               31
/* CTRLDESCL39_4 Bit Fields */
#define DCU_CTRLDESCL39_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL39_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL39_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL39_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL39_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL39_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL39_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL39_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL39_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL39_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL39_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL39_4_CKMAX_R_MASK)
/* CTRLDESCL39_5 Bit Fields */
#define DCU_CTRLDESCL39_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL39_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL39_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL39_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL39_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL39_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL39_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL39_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL39_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL39_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL39_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL39_5_CKMIN_R_MASK)
/* CTRLDESCL39_6 Bit Fields */
#define DCU_CTRLDESCL39_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL39_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL39_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL39_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL39_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL39_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL39_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL39_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL39_7 Bit Fields */
#define DCU_CTRLDESCL39_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL39_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL39_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL39_7_FGn_FCOLOR_MASK)
/* CTRLDESCL39_8 Bit Fields */
#define DCU_CTRLDESCL39_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL39_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL39_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL39_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL39_8_FGn_BCOLOR_MASK)
/* CTRLDESCL40_0 Bit Fields */
#define DCU_CTRLDESCL40_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL40_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL40_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_0_WIDTH_SHIFT))&DCU_CTRLDESCL40_0_WIDTH_MASK)
#define DCU_CTRLDESCL40_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL40_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL40_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_0_HEIGHT_SHIFT))&DCU_CTRLDESCL40_0_HEIGHT_MASK)
/* CTRLDESCL40_1 Bit Fields */
#define DCU_CTRLDESCL40_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL40_1_POSX_SHIFT             0
#define DCU_CTRLDESCL40_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_1_POSX_SHIFT))&DCU_CTRLDESCL40_1_POSX_MASK)
#define DCU_CTRLDESCL40_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL40_1_POSY_SHIFT             16
#define DCU_CTRLDESCL40_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_1_POSY_SHIFT))&DCU_CTRLDESCL40_1_POSY_MASK)
/* CTRLDESCL40_2 Bit Fields */
#define DCU_CTRLDESCL40_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL40_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL40_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_2_ADDR_SHIFT))&DCU_CTRLDESCL40_2_ADDR_MASK)
/* CTRLDESCL40_3 Bit Fields */
#define DCU_CTRLDESCL40_3_AB_MASK                0x3u
#define DCU_CTRLDESCL40_3_AB_SHIFT               0
#define DCU_CTRLDESCL40_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_3_AB_SHIFT))&DCU_CTRLDESCL40_3_AB_MASK)
#define DCU_CTRLDESCL40_3_BB_MASK                0x4u
#define DCU_CTRLDESCL40_3_BB_SHIFT               2
#define DCU_CTRLDESCL40_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL40_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL40_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_3_LUOFFS_SHIFT))&DCU_CTRLDESCL40_3_LUOFFS_MASK)
#define DCU_CTRLDESCL40_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL40_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL40_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL40_3_BPP_SHIFT              16
#define DCU_CTRLDESCL40_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_3_BPP_SHIFT))&DCU_CTRLDESCL40_3_BPP_MASK)
#define DCU_CTRLDESCL40_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL40_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL40_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_3_TRANS_SHIFT))&DCU_CTRLDESCL40_3_TRANS_MASK)
#define DCU_CTRLDESCL40_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL40_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL40_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL40_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL40_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL40_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL40_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL40_3_EN_SHIFT               31
/* CTRLDESCL40_4 Bit Fields */
#define DCU_CTRLDESCL40_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL40_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL40_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL40_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL40_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL40_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL40_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL40_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL40_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL40_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL40_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL40_4_CKMAX_R_MASK)
/* CTRLDESCL40_5 Bit Fields */
#define DCU_CTRLDESCL40_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL40_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL40_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL40_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL40_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL40_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL40_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL40_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL40_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL40_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL40_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL40_5_CKMIN_R_MASK)
/* CTRLDESCL40_6 Bit Fields */
#define DCU_CTRLDESCL40_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL40_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL40_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL40_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL40_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL40_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL40_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL40_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL40_7 Bit Fields */
#define DCU_CTRLDESCL40_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL40_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL40_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL40_7_FGn_FCOLOR_MASK)
/* CTRLDESCL40_8 Bit Fields */
#define DCU_CTRLDESCL40_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL40_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL40_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL40_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL40_8_FGn_BCOLOR_MASK)
/* CTRLDESCL41_0 Bit Fields */
#define DCU_CTRLDESCL41_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL41_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL41_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_0_WIDTH_SHIFT))&DCU_CTRLDESCL41_0_WIDTH_MASK)
#define DCU_CTRLDESCL41_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL41_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL41_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_0_HEIGHT_SHIFT))&DCU_CTRLDESCL41_0_HEIGHT_MASK)
/* CTRLDESCL41_1 Bit Fields */
#define DCU_CTRLDESCL41_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL41_1_POSX_SHIFT             0
#define DCU_CTRLDESCL41_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_1_POSX_SHIFT))&DCU_CTRLDESCL41_1_POSX_MASK)
#define DCU_CTRLDESCL41_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL41_1_POSY_SHIFT             16
#define DCU_CTRLDESCL41_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_1_POSY_SHIFT))&DCU_CTRLDESCL41_1_POSY_MASK)
/* CTRLDESCL41_2 Bit Fields */
#define DCU_CTRLDESCL41_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL41_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL41_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_2_ADDR_SHIFT))&DCU_CTRLDESCL41_2_ADDR_MASK)
/* CTRLDESCL41_3 Bit Fields */
#define DCU_CTRLDESCL41_3_AB_MASK                0x3u
#define DCU_CTRLDESCL41_3_AB_SHIFT               0
#define DCU_CTRLDESCL41_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_3_AB_SHIFT))&DCU_CTRLDESCL41_3_AB_MASK)
#define DCU_CTRLDESCL41_3_BB_MASK                0x4u
#define DCU_CTRLDESCL41_3_BB_SHIFT               2
#define DCU_CTRLDESCL41_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL41_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL41_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_3_LUOFFS_SHIFT))&DCU_CTRLDESCL41_3_LUOFFS_MASK)
#define DCU_CTRLDESCL41_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL41_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL41_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL41_3_BPP_SHIFT              16
#define DCU_CTRLDESCL41_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_3_BPP_SHIFT))&DCU_CTRLDESCL41_3_BPP_MASK)
#define DCU_CTRLDESCL41_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL41_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL41_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_3_TRANS_SHIFT))&DCU_CTRLDESCL41_3_TRANS_MASK)
#define DCU_CTRLDESCL41_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL41_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL41_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL41_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL41_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL41_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL41_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL41_3_EN_SHIFT               31
/* CTRLDESCL41_4 Bit Fields */
#define DCU_CTRLDESCL41_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL41_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL41_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL41_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL41_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL41_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL41_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL41_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL41_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL41_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL41_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL41_4_CKMAX_R_MASK)
/* CTRLDESCL41_5 Bit Fields */
#define DCU_CTRLDESCL41_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL41_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL41_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL41_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL41_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL41_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL41_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL41_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL41_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL41_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL41_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL41_5_CKMIN_R_MASK)
/* CTRLDESCL41_6 Bit Fields */
#define DCU_CTRLDESCL41_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL41_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL41_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL41_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL41_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL41_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL41_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL41_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL41_7 Bit Fields */
#define DCU_CTRLDESCL41_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL41_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL41_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL41_7_FGn_FCOLOR_MASK)
/* CTRLDESCL41_8 Bit Fields */
#define DCU_CTRLDESCL41_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL41_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL41_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL41_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL41_8_FGn_BCOLOR_MASK)
/* CTRLDESCL42_0 Bit Fields */
#define DCU_CTRLDESCL42_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL42_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL42_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_0_WIDTH_SHIFT))&DCU_CTRLDESCL42_0_WIDTH_MASK)
#define DCU_CTRLDESCL42_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL42_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL42_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_0_HEIGHT_SHIFT))&DCU_CTRLDESCL42_0_HEIGHT_MASK)
/* CTRLDESCL42_1 Bit Fields */
#define DCU_CTRLDESCL42_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL42_1_POSX_SHIFT             0
#define DCU_CTRLDESCL42_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_1_POSX_SHIFT))&DCU_CTRLDESCL42_1_POSX_MASK)
#define DCU_CTRLDESCL42_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL42_1_POSY_SHIFT             16
#define DCU_CTRLDESCL42_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_1_POSY_SHIFT))&DCU_CTRLDESCL42_1_POSY_MASK)
/* CTRLDESCL42_2 Bit Fields */
#define DCU_CTRLDESCL42_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL42_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL42_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_2_ADDR_SHIFT))&DCU_CTRLDESCL42_2_ADDR_MASK)
/* CTRLDESCL42_3 Bit Fields */
#define DCU_CTRLDESCL42_3_AB_MASK                0x3u
#define DCU_CTRLDESCL42_3_AB_SHIFT               0
#define DCU_CTRLDESCL42_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_3_AB_SHIFT))&DCU_CTRLDESCL42_3_AB_MASK)
#define DCU_CTRLDESCL42_3_BB_MASK                0x4u
#define DCU_CTRLDESCL42_3_BB_SHIFT               2
#define DCU_CTRLDESCL42_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL42_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL42_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_3_LUOFFS_SHIFT))&DCU_CTRLDESCL42_3_LUOFFS_MASK)
#define DCU_CTRLDESCL42_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL42_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL42_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL42_3_BPP_SHIFT              16
#define DCU_CTRLDESCL42_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_3_BPP_SHIFT))&DCU_CTRLDESCL42_3_BPP_MASK)
#define DCU_CTRLDESCL42_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL42_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL42_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_3_TRANS_SHIFT))&DCU_CTRLDESCL42_3_TRANS_MASK)
#define DCU_CTRLDESCL42_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL42_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL42_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL42_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL42_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL42_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL42_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL42_3_EN_SHIFT               31
/* CTRLDESCL42_4 Bit Fields */
#define DCU_CTRLDESCL42_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL42_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL42_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL42_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL42_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL42_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL42_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL42_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL42_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL42_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL42_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL42_4_CKMAX_R_MASK)
/* CTRLDESCL42_5 Bit Fields */
#define DCU_CTRLDESCL42_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL42_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL42_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL42_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL42_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL42_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL42_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL42_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL42_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL42_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL42_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL42_5_CKMIN_R_MASK)
/* CTRLDESCL42_6 Bit Fields */
#define DCU_CTRLDESCL42_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL42_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL42_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL42_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL42_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL42_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL42_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL42_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL42_7 Bit Fields */
#define DCU_CTRLDESCL42_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL42_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL42_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL42_7_FGn_FCOLOR_MASK)
/* CTRLDESCL42_8 Bit Fields */
#define DCU_CTRLDESCL42_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL42_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL42_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL42_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL42_8_FGn_BCOLOR_MASK)
/* CTRLDESCL43_0 Bit Fields */
#define DCU_CTRLDESCL43_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL43_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL43_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_0_WIDTH_SHIFT))&DCU_CTRLDESCL43_0_WIDTH_MASK)
#define DCU_CTRLDESCL43_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL43_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL43_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_0_HEIGHT_SHIFT))&DCU_CTRLDESCL43_0_HEIGHT_MASK)
/* CTRLDESCL43_1 Bit Fields */
#define DCU_CTRLDESCL43_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL43_1_POSX_SHIFT             0
#define DCU_CTRLDESCL43_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_1_POSX_SHIFT))&DCU_CTRLDESCL43_1_POSX_MASK)
#define DCU_CTRLDESCL43_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL43_1_POSY_SHIFT             16
#define DCU_CTRLDESCL43_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_1_POSY_SHIFT))&DCU_CTRLDESCL43_1_POSY_MASK)
/* CTRLDESCL43_2 Bit Fields */
#define DCU_CTRLDESCL43_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL43_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL43_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_2_ADDR_SHIFT))&DCU_CTRLDESCL43_2_ADDR_MASK)
/* CTRLDESCL43_3 Bit Fields */
#define DCU_CTRLDESCL43_3_AB_MASK                0x3u
#define DCU_CTRLDESCL43_3_AB_SHIFT               0
#define DCU_CTRLDESCL43_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_3_AB_SHIFT))&DCU_CTRLDESCL43_3_AB_MASK)
#define DCU_CTRLDESCL43_3_BB_MASK                0x4u
#define DCU_CTRLDESCL43_3_BB_SHIFT               2
#define DCU_CTRLDESCL43_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL43_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL43_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_3_LUOFFS_SHIFT))&DCU_CTRLDESCL43_3_LUOFFS_MASK)
#define DCU_CTRLDESCL43_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL43_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL43_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL43_3_BPP_SHIFT              16
#define DCU_CTRLDESCL43_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_3_BPP_SHIFT))&DCU_CTRLDESCL43_3_BPP_MASK)
#define DCU_CTRLDESCL43_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL43_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL43_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_3_TRANS_SHIFT))&DCU_CTRLDESCL43_3_TRANS_MASK)
#define DCU_CTRLDESCL43_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL43_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL43_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL43_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL43_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL43_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL43_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL43_3_EN_SHIFT               31
/* CTRLDESCL43_4 Bit Fields */
#define DCU_CTRLDESCL43_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL43_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL43_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL43_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL43_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL43_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL43_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL43_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL43_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL43_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL43_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL43_4_CKMAX_R_MASK)
/* CTRLDESCL43_5 Bit Fields */
#define DCU_CTRLDESCL43_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL43_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL43_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL43_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL43_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL43_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL43_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL43_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL43_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL43_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL43_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL43_5_CKMIN_R_MASK)
/* CTRLDESCL43_6 Bit Fields */
#define DCU_CTRLDESCL43_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL43_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL43_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL43_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL43_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL43_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL43_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL43_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL43_7 Bit Fields */
#define DCU_CTRLDESCL43_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL43_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL43_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL43_7_FGn_FCOLOR_MASK)
/* CTRLDESCL43_8 Bit Fields */
#define DCU_CTRLDESCL43_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL43_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL43_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL43_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL43_8_FGn_BCOLOR_MASK)
/* CTRLDESCL44_0 Bit Fields */
#define DCU_CTRLDESCL44_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL44_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL44_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_0_WIDTH_SHIFT))&DCU_CTRLDESCL44_0_WIDTH_MASK)
#define DCU_CTRLDESCL44_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL44_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL44_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_0_HEIGHT_SHIFT))&DCU_CTRLDESCL44_0_HEIGHT_MASK)
/* CTRLDESCL44_1 Bit Fields */
#define DCU_CTRLDESCL44_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL44_1_POSX_SHIFT             0
#define DCU_CTRLDESCL44_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_1_POSX_SHIFT))&DCU_CTRLDESCL44_1_POSX_MASK)
#define DCU_CTRLDESCL44_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL44_1_POSY_SHIFT             16
#define DCU_CTRLDESCL44_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_1_POSY_SHIFT))&DCU_CTRLDESCL44_1_POSY_MASK)
/* CTRLDESCL44_2 Bit Fields */
#define DCU_CTRLDESCL44_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL44_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL44_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_2_ADDR_SHIFT))&DCU_CTRLDESCL44_2_ADDR_MASK)
/* CTRLDESCL44_3 Bit Fields */
#define DCU_CTRLDESCL44_3_AB_MASK                0x3u
#define DCU_CTRLDESCL44_3_AB_SHIFT               0
#define DCU_CTRLDESCL44_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_3_AB_SHIFT))&DCU_CTRLDESCL44_3_AB_MASK)
#define DCU_CTRLDESCL44_3_BB_MASK                0x4u
#define DCU_CTRLDESCL44_3_BB_SHIFT               2
#define DCU_CTRLDESCL44_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL44_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL44_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_3_LUOFFS_SHIFT))&DCU_CTRLDESCL44_3_LUOFFS_MASK)
#define DCU_CTRLDESCL44_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL44_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL44_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL44_3_BPP_SHIFT              16
#define DCU_CTRLDESCL44_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_3_BPP_SHIFT))&DCU_CTRLDESCL44_3_BPP_MASK)
#define DCU_CTRLDESCL44_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL44_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL44_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_3_TRANS_SHIFT))&DCU_CTRLDESCL44_3_TRANS_MASK)
#define DCU_CTRLDESCL44_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL44_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL44_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL44_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL44_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL44_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL44_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL44_3_EN_SHIFT               31
/* CTRLDESCL44_4 Bit Fields */
#define DCU_CTRLDESCL44_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL44_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL44_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL44_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL44_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL44_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL44_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL44_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL44_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL44_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL44_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL44_4_CKMAX_R_MASK)
/* CTRLDESCL44_5 Bit Fields */
#define DCU_CTRLDESCL44_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL44_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL44_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL44_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL44_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL44_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL44_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL44_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL44_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL44_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL44_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL44_5_CKMIN_R_MASK)
/* CTRLDESCL44_6 Bit Fields */
#define DCU_CTRLDESCL44_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL44_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL44_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL44_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL44_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL44_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL44_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL44_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL44_7 Bit Fields */
#define DCU_CTRLDESCL44_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL44_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL44_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL44_7_FGn_FCOLOR_MASK)
/* CTRLDESCL44_8 Bit Fields */
#define DCU_CTRLDESCL44_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL44_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL44_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL44_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL44_8_FGn_BCOLOR_MASK)
/* CTRLDESCL45_0 Bit Fields */
#define DCU_CTRLDESCL45_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL45_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL45_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_0_WIDTH_SHIFT))&DCU_CTRLDESCL45_0_WIDTH_MASK)
#define DCU_CTRLDESCL45_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL45_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL45_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_0_HEIGHT_SHIFT))&DCU_CTRLDESCL45_0_HEIGHT_MASK)
/* CTRLDESCL45_1 Bit Fields */
#define DCU_CTRLDESCL45_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL45_1_POSX_SHIFT             0
#define DCU_CTRLDESCL45_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_1_POSX_SHIFT))&DCU_CTRLDESCL45_1_POSX_MASK)
#define DCU_CTRLDESCL45_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL45_1_POSY_SHIFT             16
#define DCU_CTRLDESCL45_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_1_POSY_SHIFT))&DCU_CTRLDESCL45_1_POSY_MASK)
/* CTRLDESCL45_2 Bit Fields */
#define DCU_CTRLDESCL45_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL45_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL45_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_2_ADDR_SHIFT))&DCU_CTRLDESCL45_2_ADDR_MASK)
/* CTRLDESCL45_3 Bit Fields */
#define DCU_CTRLDESCL45_3_AB_MASK                0x3u
#define DCU_CTRLDESCL45_3_AB_SHIFT               0
#define DCU_CTRLDESCL45_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_3_AB_SHIFT))&DCU_CTRLDESCL45_3_AB_MASK)
#define DCU_CTRLDESCL45_3_BB_MASK                0x4u
#define DCU_CTRLDESCL45_3_BB_SHIFT               2
#define DCU_CTRLDESCL45_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL45_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL45_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_3_LUOFFS_SHIFT))&DCU_CTRLDESCL45_3_LUOFFS_MASK)
#define DCU_CTRLDESCL45_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL45_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL45_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL45_3_BPP_SHIFT              16
#define DCU_CTRLDESCL45_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_3_BPP_SHIFT))&DCU_CTRLDESCL45_3_BPP_MASK)
#define DCU_CTRLDESCL45_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL45_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL45_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_3_TRANS_SHIFT))&DCU_CTRLDESCL45_3_TRANS_MASK)
#define DCU_CTRLDESCL45_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL45_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL45_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL45_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL45_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL45_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL45_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL45_3_EN_SHIFT               31
/* CTRLDESCL45_4 Bit Fields */
#define DCU_CTRLDESCL45_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL45_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL45_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL45_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL45_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL45_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL45_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL45_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL45_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL45_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL45_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL45_4_CKMAX_R_MASK)
/* CTRLDESCL45_5 Bit Fields */
#define DCU_CTRLDESCL45_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL45_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL45_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL45_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL45_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL45_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL45_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL45_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL45_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL45_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL45_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL45_5_CKMIN_R_MASK)
/* CTRLDESCL45_6 Bit Fields */
#define DCU_CTRLDESCL45_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL45_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL45_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL45_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL45_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL45_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL45_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL45_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL45_7 Bit Fields */
#define DCU_CTRLDESCL45_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL45_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL45_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL45_7_FGn_FCOLOR_MASK)
/* CTRLDESCL45_8 Bit Fields */
#define DCU_CTRLDESCL45_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL45_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL45_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL45_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL45_8_FGn_BCOLOR_MASK)
/* CTRLDESCL46_0 Bit Fields */
#define DCU_CTRLDESCL46_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL46_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL46_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_0_WIDTH_SHIFT))&DCU_CTRLDESCL46_0_WIDTH_MASK)
#define DCU_CTRLDESCL46_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL46_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL46_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_0_HEIGHT_SHIFT))&DCU_CTRLDESCL46_0_HEIGHT_MASK)
/* CTRLDESCL46_1 Bit Fields */
#define DCU_CTRLDESCL46_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL46_1_POSX_SHIFT             0
#define DCU_CTRLDESCL46_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_1_POSX_SHIFT))&DCU_CTRLDESCL46_1_POSX_MASK)
#define DCU_CTRLDESCL46_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL46_1_POSY_SHIFT             16
#define DCU_CTRLDESCL46_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_1_POSY_SHIFT))&DCU_CTRLDESCL46_1_POSY_MASK)
/* CTRLDESCL46_2 Bit Fields */
#define DCU_CTRLDESCL46_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL46_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL46_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_2_ADDR_SHIFT))&DCU_CTRLDESCL46_2_ADDR_MASK)
/* CTRLDESCL46_3 Bit Fields */
#define DCU_CTRLDESCL46_3_AB_MASK                0x3u
#define DCU_CTRLDESCL46_3_AB_SHIFT               0
#define DCU_CTRLDESCL46_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_3_AB_SHIFT))&DCU_CTRLDESCL46_3_AB_MASK)
#define DCU_CTRLDESCL46_3_BB_MASK                0x4u
#define DCU_CTRLDESCL46_3_BB_SHIFT               2
#define DCU_CTRLDESCL46_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL46_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL46_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_3_LUOFFS_SHIFT))&DCU_CTRLDESCL46_3_LUOFFS_MASK)
#define DCU_CTRLDESCL46_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL46_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL46_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL46_3_BPP_SHIFT              16
#define DCU_CTRLDESCL46_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_3_BPP_SHIFT))&DCU_CTRLDESCL46_3_BPP_MASK)
#define DCU_CTRLDESCL46_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL46_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL46_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_3_TRANS_SHIFT))&DCU_CTRLDESCL46_3_TRANS_MASK)
#define DCU_CTRLDESCL46_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL46_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL46_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL46_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL46_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL46_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL46_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL46_3_EN_SHIFT               31
/* CTRLDESCL46_4 Bit Fields */
#define DCU_CTRLDESCL46_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL46_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL46_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL46_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL46_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL46_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL46_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL46_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL46_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL46_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL46_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL46_4_CKMAX_R_MASK)
/* CTRLDESCL46_5 Bit Fields */
#define DCU_CTRLDESCL46_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL46_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL46_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL46_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL46_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL46_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL46_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL46_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL46_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL46_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL46_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL46_5_CKMIN_R_MASK)
/* CTRLDESCL46_6 Bit Fields */
#define DCU_CTRLDESCL46_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL46_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL46_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL46_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL46_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL46_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL46_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL46_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL46_7 Bit Fields */
#define DCU_CTRLDESCL46_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL46_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL46_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL46_7_FGn_FCOLOR_MASK)
/* CTRLDESCL46_8 Bit Fields */
#define DCU_CTRLDESCL46_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL46_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL46_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL46_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL46_8_FGn_BCOLOR_MASK)
/* CTRLDESCL47_0 Bit Fields */
#define DCU_CTRLDESCL47_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL47_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL47_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_0_WIDTH_SHIFT))&DCU_CTRLDESCL47_0_WIDTH_MASK)
#define DCU_CTRLDESCL47_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL47_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL47_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_0_HEIGHT_SHIFT))&DCU_CTRLDESCL47_0_HEIGHT_MASK)
/* CTRLDESCL47_1 Bit Fields */
#define DCU_CTRLDESCL47_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL47_1_POSX_SHIFT             0
#define DCU_CTRLDESCL47_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_1_POSX_SHIFT))&DCU_CTRLDESCL47_1_POSX_MASK)
#define DCU_CTRLDESCL47_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL47_1_POSY_SHIFT             16
#define DCU_CTRLDESCL47_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_1_POSY_SHIFT))&DCU_CTRLDESCL47_1_POSY_MASK)
/* CTRLDESCL47_2 Bit Fields */
#define DCU_CTRLDESCL47_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL47_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL47_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_2_ADDR_SHIFT))&DCU_CTRLDESCL47_2_ADDR_MASK)
/* CTRLDESCL47_3 Bit Fields */
#define DCU_CTRLDESCL47_3_AB_MASK                0x3u
#define DCU_CTRLDESCL47_3_AB_SHIFT               0
#define DCU_CTRLDESCL47_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_3_AB_SHIFT))&DCU_CTRLDESCL47_3_AB_MASK)
#define DCU_CTRLDESCL47_3_BB_MASK                0x4u
#define DCU_CTRLDESCL47_3_BB_SHIFT               2
#define DCU_CTRLDESCL47_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL47_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL47_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_3_LUOFFS_SHIFT))&DCU_CTRLDESCL47_3_LUOFFS_MASK)
#define DCU_CTRLDESCL47_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL47_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL47_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL47_3_BPP_SHIFT              16
#define DCU_CTRLDESCL47_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_3_BPP_SHIFT))&DCU_CTRLDESCL47_3_BPP_MASK)
#define DCU_CTRLDESCL47_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL47_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL47_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_3_TRANS_SHIFT))&DCU_CTRLDESCL47_3_TRANS_MASK)
#define DCU_CTRLDESCL47_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL47_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL47_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL47_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL47_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL47_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL47_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL47_3_EN_SHIFT               31
/* CTRLDESCL47_4 Bit Fields */
#define DCU_CTRLDESCL47_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL47_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL47_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL47_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL47_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL47_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL47_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL47_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL47_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL47_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL47_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL47_4_CKMAX_R_MASK)
/* CTRLDESCL47_5 Bit Fields */
#define DCU_CTRLDESCL47_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL47_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL47_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL47_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL47_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL47_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL47_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL47_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL47_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL47_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL47_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL47_5_CKMIN_R_MASK)
/* CTRLDESCL47_6 Bit Fields */
#define DCU_CTRLDESCL47_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL47_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL47_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL47_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL47_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL47_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL47_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL47_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL47_7 Bit Fields */
#define DCU_CTRLDESCL47_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL47_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL47_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL47_7_FGn_FCOLOR_MASK)
/* CTRLDESCL47_8 Bit Fields */
#define DCU_CTRLDESCL47_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL47_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL47_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL47_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL47_8_FGn_BCOLOR_MASK)
/* CTRLDESCL48_0 Bit Fields */
#define DCU_CTRLDESCL48_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL48_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL48_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_0_WIDTH_SHIFT))&DCU_CTRLDESCL48_0_WIDTH_MASK)
#define DCU_CTRLDESCL48_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL48_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL48_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_0_HEIGHT_SHIFT))&DCU_CTRLDESCL48_0_HEIGHT_MASK)
/* CTRLDESCL48_1 Bit Fields */
#define DCU_CTRLDESCL48_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL48_1_POSX_SHIFT             0
#define DCU_CTRLDESCL48_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_1_POSX_SHIFT))&DCU_CTRLDESCL48_1_POSX_MASK)
#define DCU_CTRLDESCL48_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL48_1_POSY_SHIFT             16
#define DCU_CTRLDESCL48_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_1_POSY_SHIFT))&DCU_CTRLDESCL48_1_POSY_MASK)
/* CTRLDESCL48_2 Bit Fields */
#define DCU_CTRLDESCL48_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL48_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL48_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_2_ADDR_SHIFT))&DCU_CTRLDESCL48_2_ADDR_MASK)
/* CTRLDESCL48_3 Bit Fields */
#define DCU_CTRLDESCL48_3_AB_MASK                0x3u
#define DCU_CTRLDESCL48_3_AB_SHIFT               0
#define DCU_CTRLDESCL48_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_3_AB_SHIFT))&DCU_CTRLDESCL48_3_AB_MASK)
#define DCU_CTRLDESCL48_3_BB_MASK                0x4u
#define DCU_CTRLDESCL48_3_BB_SHIFT               2
#define DCU_CTRLDESCL48_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL48_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL48_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_3_LUOFFS_SHIFT))&DCU_CTRLDESCL48_3_LUOFFS_MASK)
#define DCU_CTRLDESCL48_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL48_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL48_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL48_3_BPP_SHIFT              16
#define DCU_CTRLDESCL48_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_3_BPP_SHIFT))&DCU_CTRLDESCL48_3_BPP_MASK)
#define DCU_CTRLDESCL48_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL48_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL48_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_3_TRANS_SHIFT))&DCU_CTRLDESCL48_3_TRANS_MASK)
#define DCU_CTRLDESCL48_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL48_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL48_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL48_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL48_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL48_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL48_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL48_3_EN_SHIFT               31
/* CTRLDESCL48_4 Bit Fields */
#define DCU_CTRLDESCL48_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL48_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL48_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL48_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL48_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL48_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL48_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL48_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL48_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL48_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL48_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL48_4_CKMAX_R_MASK)
/* CTRLDESCL48_5 Bit Fields */
#define DCU_CTRLDESCL48_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL48_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL48_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL48_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL48_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL48_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL48_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL48_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL48_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL48_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL48_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL48_5_CKMIN_R_MASK)
/* CTRLDESCL48_6 Bit Fields */
#define DCU_CTRLDESCL48_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL48_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL48_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL48_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL48_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL48_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL48_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL48_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL48_7 Bit Fields */
#define DCU_CTRLDESCL48_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL48_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL48_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL48_7_FGn_FCOLOR_MASK)
/* CTRLDESCL48_8 Bit Fields */
#define DCU_CTRLDESCL48_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL48_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL48_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL48_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL48_8_FGn_BCOLOR_MASK)
/* CTRLDESCL49_0 Bit Fields */
#define DCU_CTRLDESCL49_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL49_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL49_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_0_WIDTH_SHIFT))&DCU_CTRLDESCL49_0_WIDTH_MASK)
#define DCU_CTRLDESCL49_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL49_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL49_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_0_HEIGHT_SHIFT))&DCU_CTRLDESCL49_0_HEIGHT_MASK)
/* CTRLDESCL49_1 Bit Fields */
#define DCU_CTRLDESCL49_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL49_1_POSX_SHIFT             0
#define DCU_CTRLDESCL49_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_1_POSX_SHIFT))&DCU_CTRLDESCL49_1_POSX_MASK)
#define DCU_CTRLDESCL49_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL49_1_POSY_SHIFT             16
#define DCU_CTRLDESCL49_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_1_POSY_SHIFT))&DCU_CTRLDESCL49_1_POSY_MASK)
/* CTRLDESCL49_2 Bit Fields */
#define DCU_CTRLDESCL49_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL49_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL49_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_2_ADDR_SHIFT))&DCU_CTRLDESCL49_2_ADDR_MASK)
/* CTRLDESCL49_3 Bit Fields */
#define DCU_CTRLDESCL49_3_AB_MASK                0x3u
#define DCU_CTRLDESCL49_3_AB_SHIFT               0
#define DCU_CTRLDESCL49_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_3_AB_SHIFT))&DCU_CTRLDESCL49_3_AB_MASK)
#define DCU_CTRLDESCL49_3_BB_MASK                0x4u
#define DCU_CTRLDESCL49_3_BB_SHIFT               2
#define DCU_CTRLDESCL49_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL49_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL49_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_3_LUOFFS_SHIFT))&DCU_CTRLDESCL49_3_LUOFFS_MASK)
#define DCU_CTRLDESCL49_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL49_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL49_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL49_3_BPP_SHIFT              16
#define DCU_CTRLDESCL49_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_3_BPP_SHIFT))&DCU_CTRLDESCL49_3_BPP_MASK)
#define DCU_CTRLDESCL49_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL49_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL49_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_3_TRANS_SHIFT))&DCU_CTRLDESCL49_3_TRANS_MASK)
#define DCU_CTRLDESCL49_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL49_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL49_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL49_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL49_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL49_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL49_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL49_3_EN_SHIFT               31
/* CTRLDESCL49_4 Bit Fields */
#define DCU_CTRLDESCL49_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL49_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL49_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL49_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL49_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL49_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL49_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL49_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL49_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL49_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL49_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL49_4_CKMAX_R_MASK)
/* CTRLDESCL49_5 Bit Fields */
#define DCU_CTRLDESCL49_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL49_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL49_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL49_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL49_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL49_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL49_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL49_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL49_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL49_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL49_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL49_5_CKMIN_R_MASK)
/* CTRLDESCL49_6 Bit Fields */
#define DCU_CTRLDESCL49_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL49_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL49_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL49_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL49_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL49_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL49_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL49_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL49_7 Bit Fields */
#define DCU_CTRLDESCL49_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL49_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL49_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL49_7_FGn_FCOLOR_MASK)
/* CTRLDESCL49_8 Bit Fields */
#define DCU_CTRLDESCL49_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL49_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL49_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL49_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL49_8_FGn_BCOLOR_MASK)
/* CTRLDESCL50_0 Bit Fields */
#define DCU_CTRLDESCL50_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL50_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL50_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_0_WIDTH_SHIFT))&DCU_CTRLDESCL50_0_WIDTH_MASK)
#define DCU_CTRLDESCL50_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL50_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL50_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_0_HEIGHT_SHIFT))&DCU_CTRLDESCL50_0_HEIGHT_MASK)
/* CTRLDESCL50_1 Bit Fields */
#define DCU_CTRLDESCL50_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL50_1_POSX_SHIFT             0
#define DCU_CTRLDESCL50_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_1_POSX_SHIFT))&DCU_CTRLDESCL50_1_POSX_MASK)
#define DCU_CTRLDESCL50_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL50_1_POSY_SHIFT             16
#define DCU_CTRLDESCL50_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_1_POSY_SHIFT))&DCU_CTRLDESCL50_1_POSY_MASK)
/* CTRLDESCL50_2 Bit Fields */
#define DCU_CTRLDESCL50_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL50_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL50_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_2_ADDR_SHIFT))&DCU_CTRLDESCL50_2_ADDR_MASK)
/* CTRLDESCL50_3 Bit Fields */
#define DCU_CTRLDESCL50_3_AB_MASK                0x3u
#define DCU_CTRLDESCL50_3_AB_SHIFT               0
#define DCU_CTRLDESCL50_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_3_AB_SHIFT))&DCU_CTRLDESCL50_3_AB_MASK)
#define DCU_CTRLDESCL50_3_BB_MASK                0x4u
#define DCU_CTRLDESCL50_3_BB_SHIFT               2
#define DCU_CTRLDESCL50_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL50_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL50_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_3_LUOFFS_SHIFT))&DCU_CTRLDESCL50_3_LUOFFS_MASK)
#define DCU_CTRLDESCL50_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL50_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL50_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL50_3_BPP_SHIFT              16
#define DCU_CTRLDESCL50_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_3_BPP_SHIFT))&DCU_CTRLDESCL50_3_BPP_MASK)
#define DCU_CTRLDESCL50_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL50_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL50_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_3_TRANS_SHIFT))&DCU_CTRLDESCL50_3_TRANS_MASK)
#define DCU_CTRLDESCL50_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL50_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL50_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL50_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL50_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL50_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL50_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL50_3_EN_SHIFT               31
/* CTRLDESCL50_4 Bit Fields */
#define DCU_CTRLDESCL50_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL50_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL50_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL50_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL50_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL50_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL50_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL50_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL50_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL50_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL50_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL50_4_CKMAX_R_MASK)
/* CTRLDESCL50_5 Bit Fields */
#define DCU_CTRLDESCL50_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL50_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL50_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL50_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL50_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL50_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL50_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL50_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL50_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL50_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL50_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL50_5_CKMIN_R_MASK)
/* CTRLDESCL50_6 Bit Fields */
#define DCU_CTRLDESCL50_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL50_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL50_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL50_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL50_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL50_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL50_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL50_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL50_7 Bit Fields */
#define DCU_CTRLDESCL50_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL50_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL50_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL50_7_FGn_FCOLOR_MASK)
/* CTRLDESCL50_8 Bit Fields */
#define DCU_CTRLDESCL50_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL50_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL50_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL50_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL50_8_FGn_BCOLOR_MASK)
/* CTRLDESCL51_0 Bit Fields */
#define DCU_CTRLDESCL51_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL51_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL51_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_0_WIDTH_SHIFT))&DCU_CTRLDESCL51_0_WIDTH_MASK)
#define DCU_CTRLDESCL51_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL51_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL51_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_0_HEIGHT_SHIFT))&DCU_CTRLDESCL51_0_HEIGHT_MASK)
/* CTRLDESCL51_1 Bit Fields */
#define DCU_CTRLDESCL51_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL51_1_POSX_SHIFT             0
#define DCU_CTRLDESCL51_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_1_POSX_SHIFT))&DCU_CTRLDESCL51_1_POSX_MASK)
#define DCU_CTRLDESCL51_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL51_1_POSY_SHIFT             16
#define DCU_CTRLDESCL51_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_1_POSY_SHIFT))&DCU_CTRLDESCL51_1_POSY_MASK)
/* CTRLDESCL51_2 Bit Fields */
#define DCU_CTRLDESCL51_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL51_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL51_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_2_ADDR_SHIFT))&DCU_CTRLDESCL51_2_ADDR_MASK)
/* CTRLDESCL51_3 Bit Fields */
#define DCU_CTRLDESCL51_3_AB_MASK                0x3u
#define DCU_CTRLDESCL51_3_AB_SHIFT               0
#define DCU_CTRLDESCL51_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_3_AB_SHIFT))&DCU_CTRLDESCL51_3_AB_MASK)
#define DCU_CTRLDESCL51_3_BB_MASK                0x4u
#define DCU_CTRLDESCL51_3_BB_SHIFT               2
#define DCU_CTRLDESCL51_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL51_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL51_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_3_LUOFFS_SHIFT))&DCU_CTRLDESCL51_3_LUOFFS_MASK)
#define DCU_CTRLDESCL51_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL51_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL51_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL51_3_BPP_SHIFT              16
#define DCU_CTRLDESCL51_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_3_BPP_SHIFT))&DCU_CTRLDESCL51_3_BPP_MASK)
#define DCU_CTRLDESCL51_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL51_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL51_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_3_TRANS_SHIFT))&DCU_CTRLDESCL51_3_TRANS_MASK)
#define DCU_CTRLDESCL51_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL51_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL51_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL51_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL51_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL51_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL51_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL51_3_EN_SHIFT               31
/* CTRLDESCL51_4 Bit Fields */
#define DCU_CTRLDESCL51_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL51_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL51_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL51_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL51_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL51_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL51_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL51_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL51_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL51_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL51_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL51_4_CKMAX_R_MASK)
/* CTRLDESCL51_5 Bit Fields */
#define DCU_CTRLDESCL51_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL51_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL51_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL51_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL51_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL51_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL51_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL51_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL51_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL51_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL51_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL51_5_CKMIN_R_MASK)
/* CTRLDESCL51_6 Bit Fields */
#define DCU_CTRLDESCL51_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL51_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL51_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL51_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL51_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL51_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL51_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL51_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL51_7 Bit Fields */
#define DCU_CTRLDESCL51_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL51_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL51_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL51_7_FGn_FCOLOR_MASK)
/* CTRLDESCL51_8 Bit Fields */
#define DCU_CTRLDESCL51_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL51_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL51_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL51_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL51_8_FGn_BCOLOR_MASK)
/* CTRLDESCL52_0 Bit Fields */
#define DCU_CTRLDESCL52_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL52_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL52_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_0_WIDTH_SHIFT))&DCU_CTRLDESCL52_0_WIDTH_MASK)
#define DCU_CTRLDESCL52_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL52_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL52_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_0_HEIGHT_SHIFT))&DCU_CTRLDESCL52_0_HEIGHT_MASK)
/* CTRLDESCL52_1 Bit Fields */
#define DCU_CTRLDESCL52_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL52_1_POSX_SHIFT             0
#define DCU_CTRLDESCL52_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_1_POSX_SHIFT))&DCU_CTRLDESCL52_1_POSX_MASK)
#define DCU_CTRLDESCL52_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL52_1_POSY_SHIFT             16
#define DCU_CTRLDESCL52_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_1_POSY_SHIFT))&DCU_CTRLDESCL52_1_POSY_MASK)
/* CTRLDESCL52_2 Bit Fields */
#define DCU_CTRLDESCL52_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL52_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL52_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_2_ADDR_SHIFT))&DCU_CTRLDESCL52_2_ADDR_MASK)
/* CTRLDESCL52_3 Bit Fields */
#define DCU_CTRLDESCL52_3_AB_MASK                0x3u
#define DCU_CTRLDESCL52_3_AB_SHIFT               0
#define DCU_CTRLDESCL52_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_3_AB_SHIFT))&DCU_CTRLDESCL52_3_AB_MASK)
#define DCU_CTRLDESCL52_3_BB_MASK                0x4u
#define DCU_CTRLDESCL52_3_BB_SHIFT               2
#define DCU_CTRLDESCL52_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL52_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL52_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_3_LUOFFS_SHIFT))&DCU_CTRLDESCL52_3_LUOFFS_MASK)
#define DCU_CTRLDESCL52_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL52_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL52_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL52_3_BPP_SHIFT              16
#define DCU_CTRLDESCL52_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_3_BPP_SHIFT))&DCU_CTRLDESCL52_3_BPP_MASK)
#define DCU_CTRLDESCL52_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL52_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL52_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_3_TRANS_SHIFT))&DCU_CTRLDESCL52_3_TRANS_MASK)
#define DCU_CTRLDESCL52_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL52_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL52_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL52_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL52_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL52_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL52_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL52_3_EN_SHIFT               31
/* CTRLDESCL52_4 Bit Fields */
#define DCU_CTRLDESCL52_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL52_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL52_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL52_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL52_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL52_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL52_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL52_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL52_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL52_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL52_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL52_4_CKMAX_R_MASK)
/* CTRLDESCL52_5 Bit Fields */
#define DCU_CTRLDESCL52_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL52_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL52_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL52_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL52_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL52_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL52_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL52_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL52_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL52_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL52_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL52_5_CKMIN_R_MASK)
/* CTRLDESCL52_6 Bit Fields */
#define DCU_CTRLDESCL52_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL52_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL52_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL52_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL52_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL52_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL52_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL52_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL52_7 Bit Fields */
#define DCU_CTRLDESCL52_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL52_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL52_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL52_7_FGn_FCOLOR_MASK)
/* CTRLDESCL52_8 Bit Fields */
#define DCU_CTRLDESCL52_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL52_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL52_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL52_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL52_8_FGn_BCOLOR_MASK)
/* CTRLDESCL53_0 Bit Fields */
#define DCU_CTRLDESCL53_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL53_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL53_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_0_WIDTH_SHIFT))&DCU_CTRLDESCL53_0_WIDTH_MASK)
#define DCU_CTRLDESCL53_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL53_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL53_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_0_HEIGHT_SHIFT))&DCU_CTRLDESCL53_0_HEIGHT_MASK)
/* CTRLDESCL53_1 Bit Fields */
#define DCU_CTRLDESCL53_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL53_1_POSX_SHIFT             0
#define DCU_CTRLDESCL53_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_1_POSX_SHIFT))&DCU_CTRLDESCL53_1_POSX_MASK)
#define DCU_CTRLDESCL53_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL53_1_POSY_SHIFT             16
#define DCU_CTRLDESCL53_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_1_POSY_SHIFT))&DCU_CTRLDESCL53_1_POSY_MASK)
/* CTRLDESCL53_2 Bit Fields */
#define DCU_CTRLDESCL53_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL53_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL53_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_2_ADDR_SHIFT))&DCU_CTRLDESCL53_2_ADDR_MASK)
/* CTRLDESCL53_3 Bit Fields */
#define DCU_CTRLDESCL53_3_AB_MASK                0x3u
#define DCU_CTRLDESCL53_3_AB_SHIFT               0
#define DCU_CTRLDESCL53_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_3_AB_SHIFT))&DCU_CTRLDESCL53_3_AB_MASK)
#define DCU_CTRLDESCL53_3_BB_MASK                0x4u
#define DCU_CTRLDESCL53_3_BB_SHIFT               2
#define DCU_CTRLDESCL53_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL53_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL53_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_3_LUOFFS_SHIFT))&DCU_CTRLDESCL53_3_LUOFFS_MASK)
#define DCU_CTRLDESCL53_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL53_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL53_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL53_3_BPP_SHIFT              16
#define DCU_CTRLDESCL53_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_3_BPP_SHIFT))&DCU_CTRLDESCL53_3_BPP_MASK)
#define DCU_CTRLDESCL53_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL53_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL53_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_3_TRANS_SHIFT))&DCU_CTRLDESCL53_3_TRANS_MASK)
#define DCU_CTRLDESCL53_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL53_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL53_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL53_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL53_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL53_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL53_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL53_3_EN_SHIFT               31
/* CTRLDESCL53_4 Bit Fields */
#define DCU_CTRLDESCL53_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL53_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL53_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL53_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL53_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL53_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL53_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL53_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL53_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL53_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL53_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL53_4_CKMAX_R_MASK)
/* CTRLDESCL53_5 Bit Fields */
#define DCU_CTRLDESCL53_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL53_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL53_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL53_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL53_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL53_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL53_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL53_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL53_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL53_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL53_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL53_5_CKMIN_R_MASK)
/* CTRLDESCL53_6 Bit Fields */
#define DCU_CTRLDESCL53_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL53_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL53_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL53_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL53_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL53_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL53_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL53_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL53_7 Bit Fields */
#define DCU_CTRLDESCL53_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL53_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL53_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL53_7_FGn_FCOLOR_MASK)
/* CTRLDESCL53_8 Bit Fields */
#define DCU_CTRLDESCL53_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL53_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL53_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL53_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL53_8_FGn_BCOLOR_MASK)
/* CTRLDESCL54_0 Bit Fields */
#define DCU_CTRLDESCL54_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL54_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL54_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_0_WIDTH_SHIFT))&DCU_CTRLDESCL54_0_WIDTH_MASK)
#define DCU_CTRLDESCL54_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL54_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL54_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_0_HEIGHT_SHIFT))&DCU_CTRLDESCL54_0_HEIGHT_MASK)
/* CTRLDESCL54_1 Bit Fields */
#define DCU_CTRLDESCL54_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL54_1_POSX_SHIFT             0
#define DCU_CTRLDESCL54_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_1_POSX_SHIFT))&DCU_CTRLDESCL54_1_POSX_MASK)
#define DCU_CTRLDESCL54_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL54_1_POSY_SHIFT             16
#define DCU_CTRLDESCL54_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_1_POSY_SHIFT))&DCU_CTRLDESCL54_1_POSY_MASK)
/* CTRLDESCL54_2 Bit Fields */
#define DCU_CTRLDESCL54_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL54_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL54_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_2_ADDR_SHIFT))&DCU_CTRLDESCL54_2_ADDR_MASK)
/* CTRLDESCL54_3 Bit Fields */
#define DCU_CTRLDESCL54_3_AB_MASK                0x3u
#define DCU_CTRLDESCL54_3_AB_SHIFT               0
#define DCU_CTRLDESCL54_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_3_AB_SHIFT))&DCU_CTRLDESCL54_3_AB_MASK)
#define DCU_CTRLDESCL54_3_BB_MASK                0x4u
#define DCU_CTRLDESCL54_3_BB_SHIFT               2
#define DCU_CTRLDESCL54_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL54_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL54_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_3_LUOFFS_SHIFT))&DCU_CTRLDESCL54_3_LUOFFS_MASK)
#define DCU_CTRLDESCL54_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL54_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL54_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL54_3_BPP_SHIFT              16
#define DCU_CTRLDESCL54_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_3_BPP_SHIFT))&DCU_CTRLDESCL54_3_BPP_MASK)
#define DCU_CTRLDESCL54_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL54_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL54_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_3_TRANS_SHIFT))&DCU_CTRLDESCL54_3_TRANS_MASK)
#define DCU_CTRLDESCL54_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL54_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL54_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL54_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL54_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL54_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL54_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL54_3_EN_SHIFT               31
/* CTRLDESCL54_4 Bit Fields */
#define DCU_CTRLDESCL54_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL54_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL54_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL54_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL54_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL54_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL54_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL54_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL54_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL54_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL54_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL54_4_CKMAX_R_MASK)
/* CTRLDESCL54_5 Bit Fields */
#define DCU_CTRLDESCL54_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL54_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL54_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL54_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL54_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL54_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL54_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL54_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL54_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL54_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL54_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL54_5_CKMIN_R_MASK)
/* CTRLDESCL54_6 Bit Fields */
#define DCU_CTRLDESCL54_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL54_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL54_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL54_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL54_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL54_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL54_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL54_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL54_7 Bit Fields */
#define DCU_CTRLDESCL54_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL54_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL54_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL54_7_FGn_FCOLOR_MASK)
/* CTRLDESCL54_8 Bit Fields */
#define DCU_CTRLDESCL54_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL54_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL54_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL54_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL54_8_FGn_BCOLOR_MASK)
/* CTRLDESCL55_0 Bit Fields */
#define DCU_CTRLDESCL55_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL55_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL55_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_0_WIDTH_SHIFT))&DCU_CTRLDESCL55_0_WIDTH_MASK)
#define DCU_CTRLDESCL55_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL55_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL55_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_0_HEIGHT_SHIFT))&DCU_CTRLDESCL55_0_HEIGHT_MASK)
/* CTRLDESCL55_1 Bit Fields */
#define DCU_CTRLDESCL55_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL55_1_POSX_SHIFT             0
#define DCU_CTRLDESCL55_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_1_POSX_SHIFT))&DCU_CTRLDESCL55_1_POSX_MASK)
#define DCU_CTRLDESCL55_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL55_1_POSY_SHIFT             16
#define DCU_CTRLDESCL55_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_1_POSY_SHIFT))&DCU_CTRLDESCL55_1_POSY_MASK)
/* CTRLDESCL55_2 Bit Fields */
#define DCU_CTRLDESCL55_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL55_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL55_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_2_ADDR_SHIFT))&DCU_CTRLDESCL55_2_ADDR_MASK)
/* CTRLDESCL55_3 Bit Fields */
#define DCU_CTRLDESCL55_3_AB_MASK                0x3u
#define DCU_CTRLDESCL55_3_AB_SHIFT               0
#define DCU_CTRLDESCL55_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_3_AB_SHIFT))&DCU_CTRLDESCL55_3_AB_MASK)
#define DCU_CTRLDESCL55_3_BB_MASK                0x4u
#define DCU_CTRLDESCL55_3_BB_SHIFT               2
#define DCU_CTRLDESCL55_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL55_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL55_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_3_LUOFFS_SHIFT))&DCU_CTRLDESCL55_3_LUOFFS_MASK)
#define DCU_CTRLDESCL55_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL55_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL55_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL55_3_BPP_SHIFT              16
#define DCU_CTRLDESCL55_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_3_BPP_SHIFT))&DCU_CTRLDESCL55_3_BPP_MASK)
#define DCU_CTRLDESCL55_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL55_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL55_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_3_TRANS_SHIFT))&DCU_CTRLDESCL55_3_TRANS_MASK)
#define DCU_CTRLDESCL55_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL55_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL55_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL55_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL55_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL55_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL55_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL55_3_EN_SHIFT               31
/* CTRLDESCL55_4 Bit Fields */
#define DCU_CTRLDESCL55_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL55_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL55_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL55_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL55_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL55_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL55_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL55_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL55_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL55_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL55_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL55_4_CKMAX_R_MASK)
/* CTRLDESCL55_5 Bit Fields */
#define DCU_CTRLDESCL55_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL55_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL55_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL55_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL55_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL55_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL55_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL55_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL55_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL55_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL55_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL55_5_CKMIN_R_MASK)
/* CTRLDESCL55_6 Bit Fields */
#define DCU_CTRLDESCL55_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL55_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL55_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL55_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL55_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL55_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL55_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL55_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL55_7 Bit Fields */
#define DCU_CTRLDESCL55_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL55_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL55_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL55_7_FGn_FCOLOR_MASK)
/* CTRLDESCL55_8 Bit Fields */
#define DCU_CTRLDESCL55_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL55_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL55_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL55_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL55_8_FGn_BCOLOR_MASK)
/* CTRLDESCL56_0 Bit Fields */
#define DCU_CTRLDESCL56_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL56_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL56_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_0_WIDTH_SHIFT))&DCU_CTRLDESCL56_0_WIDTH_MASK)
#define DCU_CTRLDESCL56_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL56_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL56_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_0_HEIGHT_SHIFT))&DCU_CTRLDESCL56_0_HEIGHT_MASK)
/* CTRLDESCL56_1 Bit Fields */
#define DCU_CTRLDESCL56_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL56_1_POSX_SHIFT             0
#define DCU_CTRLDESCL56_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_1_POSX_SHIFT))&DCU_CTRLDESCL56_1_POSX_MASK)
#define DCU_CTRLDESCL56_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL56_1_POSY_SHIFT             16
#define DCU_CTRLDESCL56_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_1_POSY_SHIFT))&DCU_CTRLDESCL56_1_POSY_MASK)
/* CTRLDESCL56_2 Bit Fields */
#define DCU_CTRLDESCL56_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL56_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL56_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_2_ADDR_SHIFT))&DCU_CTRLDESCL56_2_ADDR_MASK)
/* CTRLDESCL56_3 Bit Fields */
#define DCU_CTRLDESCL56_3_AB_MASK                0x3u
#define DCU_CTRLDESCL56_3_AB_SHIFT               0
#define DCU_CTRLDESCL56_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_3_AB_SHIFT))&DCU_CTRLDESCL56_3_AB_MASK)
#define DCU_CTRLDESCL56_3_BB_MASK                0x4u
#define DCU_CTRLDESCL56_3_BB_SHIFT               2
#define DCU_CTRLDESCL56_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL56_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL56_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_3_LUOFFS_SHIFT))&DCU_CTRLDESCL56_3_LUOFFS_MASK)
#define DCU_CTRLDESCL56_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL56_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL56_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL56_3_BPP_SHIFT              16
#define DCU_CTRLDESCL56_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_3_BPP_SHIFT))&DCU_CTRLDESCL56_3_BPP_MASK)
#define DCU_CTRLDESCL56_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL56_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL56_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_3_TRANS_SHIFT))&DCU_CTRLDESCL56_3_TRANS_MASK)
#define DCU_CTRLDESCL56_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL56_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL56_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL56_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL56_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL56_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL56_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL56_3_EN_SHIFT               31
/* CTRLDESCL56_4 Bit Fields */
#define DCU_CTRLDESCL56_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL56_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL56_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL56_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL56_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL56_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL56_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL56_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL56_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL56_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL56_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL56_4_CKMAX_R_MASK)
/* CTRLDESCL56_5 Bit Fields */
#define DCU_CTRLDESCL56_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL56_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL56_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL56_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL56_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL56_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL56_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL56_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL56_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL56_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL56_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL56_5_CKMIN_R_MASK)
/* CTRLDESCL56_6 Bit Fields */
#define DCU_CTRLDESCL56_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL56_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL56_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL56_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL56_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL56_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL56_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL56_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL56_7 Bit Fields */
#define DCU_CTRLDESCL56_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL56_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL56_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL56_7_FGn_FCOLOR_MASK)
/* CTRLDESCL56_8 Bit Fields */
#define DCU_CTRLDESCL56_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL56_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL56_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL56_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL56_8_FGn_BCOLOR_MASK)
/* CTRLDESCL57_0 Bit Fields */
#define DCU_CTRLDESCL57_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL57_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL57_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_0_WIDTH_SHIFT))&DCU_CTRLDESCL57_0_WIDTH_MASK)
#define DCU_CTRLDESCL57_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL57_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL57_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_0_HEIGHT_SHIFT))&DCU_CTRLDESCL57_0_HEIGHT_MASK)
/* CTRLDESCL57_1 Bit Fields */
#define DCU_CTRLDESCL57_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL57_1_POSX_SHIFT             0
#define DCU_CTRLDESCL57_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_1_POSX_SHIFT))&DCU_CTRLDESCL57_1_POSX_MASK)
#define DCU_CTRLDESCL57_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL57_1_POSY_SHIFT             16
#define DCU_CTRLDESCL57_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_1_POSY_SHIFT))&DCU_CTRLDESCL57_1_POSY_MASK)
/* CTRLDESCL57_2 Bit Fields */
#define DCU_CTRLDESCL57_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL57_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL57_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_2_ADDR_SHIFT))&DCU_CTRLDESCL57_2_ADDR_MASK)
/* CTRLDESCL57_3 Bit Fields */
#define DCU_CTRLDESCL57_3_AB_MASK                0x3u
#define DCU_CTRLDESCL57_3_AB_SHIFT               0
#define DCU_CTRLDESCL57_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_3_AB_SHIFT))&DCU_CTRLDESCL57_3_AB_MASK)
#define DCU_CTRLDESCL57_3_BB_MASK                0x4u
#define DCU_CTRLDESCL57_3_BB_SHIFT               2
#define DCU_CTRLDESCL57_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL57_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL57_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_3_LUOFFS_SHIFT))&DCU_CTRLDESCL57_3_LUOFFS_MASK)
#define DCU_CTRLDESCL57_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL57_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL57_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL57_3_BPP_SHIFT              16
#define DCU_CTRLDESCL57_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_3_BPP_SHIFT))&DCU_CTRLDESCL57_3_BPP_MASK)
#define DCU_CTRLDESCL57_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL57_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL57_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_3_TRANS_SHIFT))&DCU_CTRLDESCL57_3_TRANS_MASK)
#define DCU_CTRLDESCL57_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL57_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL57_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL57_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL57_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL57_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL57_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL57_3_EN_SHIFT               31
/* CTRLDESCL57_4 Bit Fields */
#define DCU_CTRLDESCL57_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL57_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL57_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL57_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL57_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL57_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL57_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL57_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL57_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL57_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL57_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL57_4_CKMAX_R_MASK)
/* CTRLDESCL57_5 Bit Fields */
#define DCU_CTRLDESCL57_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL57_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL57_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL57_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL57_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL57_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL57_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL57_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL57_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL57_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL57_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL57_5_CKMIN_R_MASK)
/* CTRLDESCL57_6 Bit Fields */
#define DCU_CTRLDESCL57_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL57_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL57_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL57_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL57_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL57_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL57_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL57_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL57_7 Bit Fields */
#define DCU_CTRLDESCL57_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL57_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL57_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL57_7_FGn_FCOLOR_MASK)
/* CTRLDESCL57_8 Bit Fields */
#define DCU_CTRLDESCL57_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL57_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL57_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL57_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL57_8_FGn_BCOLOR_MASK)
/* CTRLDESCL58_0 Bit Fields */
#define DCU_CTRLDESCL58_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL58_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL58_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_0_WIDTH_SHIFT))&DCU_CTRLDESCL58_0_WIDTH_MASK)
#define DCU_CTRLDESCL58_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL58_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL58_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_0_HEIGHT_SHIFT))&DCU_CTRLDESCL58_0_HEIGHT_MASK)
/* CTRLDESCL58_1 Bit Fields */
#define DCU_CTRLDESCL58_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL58_1_POSX_SHIFT             0
#define DCU_CTRLDESCL58_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_1_POSX_SHIFT))&DCU_CTRLDESCL58_1_POSX_MASK)
#define DCU_CTRLDESCL58_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL58_1_POSY_SHIFT             16
#define DCU_CTRLDESCL58_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_1_POSY_SHIFT))&DCU_CTRLDESCL58_1_POSY_MASK)
/* CTRLDESCL58_2 Bit Fields */
#define DCU_CTRLDESCL58_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL58_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL58_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_2_ADDR_SHIFT))&DCU_CTRLDESCL58_2_ADDR_MASK)
/* CTRLDESCL58_3 Bit Fields */
#define DCU_CTRLDESCL58_3_AB_MASK                0x3u
#define DCU_CTRLDESCL58_3_AB_SHIFT               0
#define DCU_CTRLDESCL58_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_3_AB_SHIFT))&DCU_CTRLDESCL58_3_AB_MASK)
#define DCU_CTRLDESCL58_3_BB_MASK                0x4u
#define DCU_CTRLDESCL58_3_BB_SHIFT               2
#define DCU_CTRLDESCL58_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL58_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL58_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_3_LUOFFS_SHIFT))&DCU_CTRLDESCL58_3_LUOFFS_MASK)
#define DCU_CTRLDESCL58_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL58_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL58_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL58_3_BPP_SHIFT              16
#define DCU_CTRLDESCL58_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_3_BPP_SHIFT))&DCU_CTRLDESCL58_3_BPP_MASK)
#define DCU_CTRLDESCL58_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL58_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL58_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_3_TRANS_SHIFT))&DCU_CTRLDESCL58_3_TRANS_MASK)
#define DCU_CTRLDESCL58_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL58_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL58_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL58_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL58_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL58_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL58_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL58_3_EN_SHIFT               31
/* CTRLDESCL58_4 Bit Fields */
#define DCU_CTRLDESCL58_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL58_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL58_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL58_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL58_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL58_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL58_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL58_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL58_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL58_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL58_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL58_4_CKMAX_R_MASK)
/* CTRLDESCL58_5 Bit Fields */
#define DCU_CTRLDESCL58_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL58_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL58_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL58_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL58_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL58_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL58_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL58_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL58_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL58_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL58_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL58_5_CKMIN_R_MASK)
/* CTRLDESCL58_6 Bit Fields */
#define DCU_CTRLDESCL58_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL58_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL58_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL58_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL58_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL58_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL58_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL58_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL58_7 Bit Fields */
#define DCU_CTRLDESCL58_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL58_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL58_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL58_7_FGn_FCOLOR_MASK)
/* CTRLDESCL58_8 Bit Fields */
#define DCU_CTRLDESCL58_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL58_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL58_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL58_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL58_8_FGn_BCOLOR_MASK)
/* CTRLDESCL59_0 Bit Fields */
#define DCU_CTRLDESCL59_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL59_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL59_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_0_WIDTH_SHIFT))&DCU_CTRLDESCL59_0_WIDTH_MASK)
#define DCU_CTRLDESCL59_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL59_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL59_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_0_HEIGHT_SHIFT))&DCU_CTRLDESCL59_0_HEIGHT_MASK)
/* CTRLDESCL59_1 Bit Fields */
#define DCU_CTRLDESCL59_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL59_1_POSX_SHIFT             0
#define DCU_CTRLDESCL59_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_1_POSX_SHIFT))&DCU_CTRLDESCL59_1_POSX_MASK)
#define DCU_CTRLDESCL59_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL59_1_POSY_SHIFT             16
#define DCU_CTRLDESCL59_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_1_POSY_SHIFT))&DCU_CTRLDESCL59_1_POSY_MASK)
/* CTRLDESCL59_2 Bit Fields */
#define DCU_CTRLDESCL59_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL59_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL59_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_2_ADDR_SHIFT))&DCU_CTRLDESCL59_2_ADDR_MASK)
/* CTRLDESCL59_3 Bit Fields */
#define DCU_CTRLDESCL59_3_AB_MASK                0x3u
#define DCU_CTRLDESCL59_3_AB_SHIFT               0
#define DCU_CTRLDESCL59_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_3_AB_SHIFT))&DCU_CTRLDESCL59_3_AB_MASK)
#define DCU_CTRLDESCL59_3_BB_MASK                0x4u
#define DCU_CTRLDESCL59_3_BB_SHIFT               2
#define DCU_CTRLDESCL59_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL59_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL59_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_3_LUOFFS_SHIFT))&DCU_CTRLDESCL59_3_LUOFFS_MASK)
#define DCU_CTRLDESCL59_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL59_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL59_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL59_3_BPP_SHIFT              16
#define DCU_CTRLDESCL59_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_3_BPP_SHIFT))&DCU_CTRLDESCL59_3_BPP_MASK)
#define DCU_CTRLDESCL59_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL59_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL59_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_3_TRANS_SHIFT))&DCU_CTRLDESCL59_3_TRANS_MASK)
#define DCU_CTRLDESCL59_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL59_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL59_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL59_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL59_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL59_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL59_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL59_3_EN_SHIFT               31
/* CTRLDESCL59_4 Bit Fields */
#define DCU_CTRLDESCL59_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL59_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL59_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL59_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL59_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL59_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL59_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL59_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL59_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL59_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL59_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL59_4_CKMAX_R_MASK)
/* CTRLDESCL59_5 Bit Fields */
#define DCU_CTRLDESCL59_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL59_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL59_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL59_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL59_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL59_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL59_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL59_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL59_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL59_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL59_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL59_5_CKMIN_R_MASK)
/* CTRLDESCL59_6 Bit Fields */
#define DCU_CTRLDESCL59_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL59_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL59_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL59_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL59_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL59_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL59_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL59_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL59_7 Bit Fields */
#define DCU_CTRLDESCL59_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL59_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL59_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL59_7_FGn_FCOLOR_MASK)
/* CTRLDESCL59_8 Bit Fields */
#define DCU_CTRLDESCL59_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL59_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL59_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL59_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL59_8_FGn_BCOLOR_MASK)
/* CTRLDESCL60_0 Bit Fields */
#define DCU_CTRLDESCL60_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL60_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL60_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_0_WIDTH_SHIFT))&DCU_CTRLDESCL60_0_WIDTH_MASK)
#define DCU_CTRLDESCL60_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL60_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL60_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_0_HEIGHT_SHIFT))&DCU_CTRLDESCL60_0_HEIGHT_MASK)
/* CTRLDESCL60_1 Bit Fields */
#define DCU_CTRLDESCL60_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL60_1_POSX_SHIFT             0
#define DCU_CTRLDESCL60_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_1_POSX_SHIFT))&DCU_CTRLDESCL60_1_POSX_MASK)
#define DCU_CTRLDESCL60_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL60_1_POSY_SHIFT             16
#define DCU_CTRLDESCL60_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_1_POSY_SHIFT))&DCU_CTRLDESCL60_1_POSY_MASK)
/* CTRLDESCL60_2 Bit Fields */
#define DCU_CTRLDESCL60_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL60_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL60_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_2_ADDR_SHIFT))&DCU_CTRLDESCL60_2_ADDR_MASK)
/* CTRLDESCL60_3 Bit Fields */
#define DCU_CTRLDESCL60_3_AB_MASK                0x3u
#define DCU_CTRLDESCL60_3_AB_SHIFT               0
#define DCU_CTRLDESCL60_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_3_AB_SHIFT))&DCU_CTRLDESCL60_3_AB_MASK)
#define DCU_CTRLDESCL60_3_BB_MASK                0x4u
#define DCU_CTRLDESCL60_3_BB_SHIFT               2
#define DCU_CTRLDESCL60_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL60_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL60_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_3_LUOFFS_SHIFT))&DCU_CTRLDESCL60_3_LUOFFS_MASK)
#define DCU_CTRLDESCL60_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL60_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL60_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL60_3_BPP_SHIFT              16
#define DCU_CTRLDESCL60_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_3_BPP_SHIFT))&DCU_CTRLDESCL60_3_BPP_MASK)
#define DCU_CTRLDESCL60_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL60_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL60_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_3_TRANS_SHIFT))&DCU_CTRLDESCL60_3_TRANS_MASK)
#define DCU_CTRLDESCL60_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL60_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL60_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL60_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL60_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL60_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL60_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL60_3_EN_SHIFT               31
/* CTRLDESCL60_4 Bit Fields */
#define DCU_CTRLDESCL60_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL60_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL60_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL60_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL60_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL60_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL60_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL60_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL60_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL60_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL60_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL60_4_CKMAX_R_MASK)
/* CTRLDESCL60_5 Bit Fields */
#define DCU_CTRLDESCL60_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL60_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL60_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL60_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL60_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL60_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL60_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL60_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL60_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL60_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL60_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL60_5_CKMIN_R_MASK)
/* CTRLDESCL60_6 Bit Fields */
#define DCU_CTRLDESCL60_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL60_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL60_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL60_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL60_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL60_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL60_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL60_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL60_7 Bit Fields */
#define DCU_CTRLDESCL60_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL60_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL60_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL60_7_FGn_FCOLOR_MASK)
/* CTRLDESCL60_8 Bit Fields */
#define DCU_CTRLDESCL60_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL60_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL60_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL60_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL60_8_FGn_BCOLOR_MASK)
/* CTRLDESCL61_0 Bit Fields */
#define DCU_CTRLDESCL61_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL61_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL61_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_0_WIDTH_SHIFT))&DCU_CTRLDESCL61_0_WIDTH_MASK)
#define DCU_CTRLDESCL61_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL61_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL61_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_0_HEIGHT_SHIFT))&DCU_CTRLDESCL61_0_HEIGHT_MASK)
/* CTRLDESCL61_1 Bit Fields */
#define DCU_CTRLDESCL61_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL61_1_POSX_SHIFT             0
#define DCU_CTRLDESCL61_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_1_POSX_SHIFT))&DCU_CTRLDESCL61_1_POSX_MASK)
#define DCU_CTRLDESCL61_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL61_1_POSY_SHIFT             16
#define DCU_CTRLDESCL61_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_1_POSY_SHIFT))&DCU_CTRLDESCL61_1_POSY_MASK)
/* CTRLDESCL61_2 Bit Fields */
#define DCU_CTRLDESCL61_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL61_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL61_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_2_ADDR_SHIFT))&DCU_CTRLDESCL61_2_ADDR_MASK)
/* CTRLDESCL61_3 Bit Fields */
#define DCU_CTRLDESCL61_3_AB_MASK                0x3u
#define DCU_CTRLDESCL61_3_AB_SHIFT               0
#define DCU_CTRLDESCL61_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_3_AB_SHIFT))&DCU_CTRLDESCL61_3_AB_MASK)
#define DCU_CTRLDESCL61_3_BB_MASK                0x4u
#define DCU_CTRLDESCL61_3_BB_SHIFT               2
#define DCU_CTRLDESCL61_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL61_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL61_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_3_LUOFFS_SHIFT))&DCU_CTRLDESCL61_3_LUOFFS_MASK)
#define DCU_CTRLDESCL61_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL61_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL61_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL61_3_BPP_SHIFT              16
#define DCU_CTRLDESCL61_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_3_BPP_SHIFT))&DCU_CTRLDESCL61_3_BPP_MASK)
#define DCU_CTRLDESCL61_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL61_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL61_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_3_TRANS_SHIFT))&DCU_CTRLDESCL61_3_TRANS_MASK)
#define DCU_CTRLDESCL61_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL61_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL61_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL61_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL61_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL61_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL61_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL61_3_EN_SHIFT               31
/* CTRLDESCL61_4 Bit Fields */
#define DCU_CTRLDESCL61_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL61_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL61_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL61_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL61_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL61_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL61_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL61_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL61_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL61_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL61_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL61_4_CKMAX_R_MASK)
/* CTRLDESCL61_5 Bit Fields */
#define DCU_CTRLDESCL61_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL61_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL61_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL61_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL61_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL61_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL61_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL61_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL61_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL61_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL61_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL61_5_CKMIN_R_MASK)
/* CTRLDESCL61_6 Bit Fields */
#define DCU_CTRLDESCL61_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL61_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL61_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL61_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL61_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL61_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL61_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL61_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL61_7 Bit Fields */
#define DCU_CTRLDESCL61_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL61_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL61_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL61_7_FGn_FCOLOR_MASK)
/* CTRLDESCL61_8 Bit Fields */
#define DCU_CTRLDESCL61_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL61_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL61_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL61_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL61_8_FGn_BCOLOR_MASK)
/* CTRLDESCL62_0 Bit Fields */
#define DCU_CTRLDESCL62_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL62_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL62_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_0_WIDTH_SHIFT))&DCU_CTRLDESCL62_0_WIDTH_MASK)
#define DCU_CTRLDESCL62_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL62_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL62_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_0_HEIGHT_SHIFT))&DCU_CTRLDESCL62_0_HEIGHT_MASK)
/* CTRLDESCL62_1 Bit Fields */
#define DCU_CTRLDESCL62_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL62_1_POSX_SHIFT             0
#define DCU_CTRLDESCL62_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_1_POSX_SHIFT))&DCU_CTRLDESCL62_1_POSX_MASK)
#define DCU_CTRLDESCL62_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL62_1_POSY_SHIFT             16
#define DCU_CTRLDESCL62_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_1_POSY_SHIFT))&DCU_CTRLDESCL62_1_POSY_MASK)
/* CTRLDESCL62_2 Bit Fields */
#define DCU_CTRLDESCL62_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL62_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL62_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_2_ADDR_SHIFT))&DCU_CTRLDESCL62_2_ADDR_MASK)
/* CTRLDESCL62_3 Bit Fields */
#define DCU_CTRLDESCL62_3_AB_MASK                0x3u
#define DCU_CTRLDESCL62_3_AB_SHIFT               0
#define DCU_CTRLDESCL62_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_3_AB_SHIFT))&DCU_CTRLDESCL62_3_AB_MASK)
#define DCU_CTRLDESCL62_3_BB_MASK                0x4u
#define DCU_CTRLDESCL62_3_BB_SHIFT               2
#define DCU_CTRLDESCL62_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL62_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL62_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_3_LUOFFS_SHIFT))&DCU_CTRLDESCL62_3_LUOFFS_MASK)
#define DCU_CTRLDESCL62_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL62_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL62_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL62_3_BPP_SHIFT              16
#define DCU_CTRLDESCL62_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_3_BPP_SHIFT))&DCU_CTRLDESCL62_3_BPP_MASK)
#define DCU_CTRLDESCL62_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL62_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL62_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_3_TRANS_SHIFT))&DCU_CTRLDESCL62_3_TRANS_MASK)
#define DCU_CTRLDESCL62_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL62_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL62_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL62_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL62_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL62_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL62_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL62_3_EN_SHIFT               31
/* CTRLDESCL62_4 Bit Fields */
#define DCU_CTRLDESCL62_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL62_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL62_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL62_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL62_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL62_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL62_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL62_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL62_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL62_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL62_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL62_4_CKMAX_R_MASK)
/* CTRLDESCL62_5 Bit Fields */
#define DCU_CTRLDESCL62_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL62_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL62_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL62_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL62_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL62_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL62_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL62_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL62_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL62_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL62_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL62_5_CKMIN_R_MASK)
/* CTRLDESCL62_6 Bit Fields */
#define DCU_CTRLDESCL62_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL62_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL62_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL62_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL62_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL62_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL62_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL62_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL62_7 Bit Fields */
#define DCU_CTRLDESCL62_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL62_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL62_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL62_7_FGn_FCOLOR_MASK)
/* CTRLDESCL62_8 Bit Fields */
#define DCU_CTRLDESCL62_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL62_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL62_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL62_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL62_8_FGn_BCOLOR_MASK)
/* CTRLDESCL63_0 Bit Fields */
#define DCU_CTRLDESCL63_0_WIDTH_MASK             0x7FFu
#define DCU_CTRLDESCL63_0_WIDTH_SHIFT            0
#define DCU_CTRLDESCL63_0_WIDTH(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_0_WIDTH_SHIFT))&DCU_CTRLDESCL63_0_WIDTH_MASK)
#define DCU_CTRLDESCL63_0_HEIGHT_MASK            0x7FF0000u
#define DCU_CTRLDESCL63_0_HEIGHT_SHIFT           16
#define DCU_CTRLDESCL63_0_HEIGHT(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_0_HEIGHT_SHIFT))&DCU_CTRLDESCL63_0_HEIGHT_MASK)
/* CTRLDESCL63_1 Bit Fields */
#define DCU_CTRLDESCL63_1_POSX_MASK              0xFFFu
#define DCU_CTRLDESCL63_1_POSX_SHIFT             0
#define DCU_CTRLDESCL63_1_POSX(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_1_POSX_SHIFT))&DCU_CTRLDESCL63_1_POSX_MASK)
#define DCU_CTRLDESCL63_1_POSY_MASK              0xFFF0000u
#define DCU_CTRLDESCL63_1_POSY_SHIFT             16
#define DCU_CTRLDESCL63_1_POSY(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_1_POSY_SHIFT))&DCU_CTRLDESCL63_1_POSY_MASK)
/* CTRLDESCL63_2 Bit Fields */
#define DCU_CTRLDESCL63_2_ADDR_MASK              0xFFFFFFFFu
#define DCU_CTRLDESCL63_2_ADDR_SHIFT             0
#define DCU_CTRLDESCL63_2_ADDR(x)                (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_2_ADDR_SHIFT))&DCU_CTRLDESCL63_2_ADDR_MASK)
/* CTRLDESCL63_3 Bit Fields */
#define DCU_CTRLDESCL63_3_AB_MASK                0x3u
#define DCU_CTRLDESCL63_3_AB_SHIFT               0
#define DCU_CTRLDESCL63_3_AB(x)                  (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_3_AB_SHIFT))&DCU_CTRLDESCL63_3_AB_MASK)
#define DCU_CTRLDESCL63_3_BB_MASK                0x4u
#define DCU_CTRLDESCL63_3_BB_SHIFT               2
#define DCU_CTRLDESCL63_3_LUOFFS_MASK            0x7FF0u
#define DCU_CTRLDESCL63_3_LUOFFS_SHIFT           4
#define DCU_CTRLDESCL63_3_LUOFFS(x)              (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_3_LUOFFS_SHIFT))&DCU_CTRLDESCL63_3_LUOFFS_MASK)
#define DCU_CTRLDESCL63_3_RLE_EN_MASK            0x8000u
#define DCU_CTRLDESCL63_3_RLE_EN_SHIFT           15
#define DCU_CTRLDESCL63_3_BPP_MASK               0xF0000u
#define DCU_CTRLDESCL63_3_BPP_SHIFT              16
#define DCU_CTRLDESCL63_3_BPP(x)                 (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_3_BPP_SHIFT))&DCU_CTRLDESCL63_3_BPP_MASK)
#define DCU_CTRLDESCL63_3_TRANS_MASK             0xFF00000u
#define DCU_CTRLDESCL63_3_TRANS_SHIFT            20
#define DCU_CTRLDESCL63_3_TRANS(x)               (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_3_TRANS_SHIFT))&DCU_CTRLDESCL63_3_TRANS_MASK)
#define DCU_CTRLDESCL63_3_SAFETY_EN_MASK         0x10000000u
#define DCU_CTRLDESCL63_3_SAFETY_EN_SHIFT        28
#define DCU_CTRLDESCL63_3_DATA_SEL_MASK          0x20000000u
#define DCU_CTRLDESCL63_3_DATA_SEL_SHIFT         29
#define DCU_CTRLDESCL63_3_TILE_EN_MASK           0x40000000u
#define DCU_CTRLDESCL63_3_TILE_EN_SHIFT          30
#define DCU_CTRLDESCL63_3_EN_MASK                0x80000000u
#define DCU_CTRLDESCL63_3_EN_SHIFT               31
/* CTRLDESCL63_4 Bit Fields */
#define DCU_CTRLDESCL63_4_CKMAX_B_MASK           0xFFu
#define DCU_CTRLDESCL63_4_CKMAX_B_SHIFT          0
#define DCU_CTRLDESCL63_4_CKMAX_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_4_CKMAX_B_SHIFT))&DCU_CTRLDESCL63_4_CKMAX_B_MASK)
#define DCU_CTRLDESCL63_4_CKMAX_G_MASK           0xFF00u
#define DCU_CTRLDESCL63_4_CKMAX_G_SHIFT          8
#define DCU_CTRLDESCL63_4_CKMAX_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_4_CKMAX_G_SHIFT))&DCU_CTRLDESCL63_4_CKMAX_G_MASK)
#define DCU_CTRLDESCL63_4_CKMAX_R_MASK           0xFF0000u
#define DCU_CTRLDESCL63_4_CKMAX_R_SHIFT          16
#define DCU_CTRLDESCL63_4_CKMAX_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_4_CKMAX_R_SHIFT))&DCU_CTRLDESCL63_4_CKMAX_R_MASK)
/* CTRLDESCL63_5 Bit Fields */
#define DCU_CTRLDESCL63_5_CKMIN_B_MASK           0xFFu
#define DCU_CTRLDESCL63_5_CKMIN_B_SHIFT          0
#define DCU_CTRLDESCL63_5_CKMIN_B(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_5_CKMIN_B_SHIFT))&DCU_CTRLDESCL63_5_CKMIN_B_MASK)
#define DCU_CTRLDESCL63_5_CKMIN_G_MASK           0xFF00u
#define DCU_CTRLDESCL63_5_CKMIN_G_SHIFT          8
#define DCU_CTRLDESCL63_5_CKMIN_G(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_5_CKMIN_G_SHIFT))&DCU_CTRLDESCL63_5_CKMIN_G_MASK)
#define DCU_CTRLDESCL63_5_CKMIN_R_MASK           0xFF0000u
#define DCU_CTRLDESCL63_5_CKMIN_R_SHIFT          16
#define DCU_CTRLDESCL63_5_CKMIN_R(x)             (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_5_CKMIN_R_SHIFT))&DCU_CTRLDESCL63_5_CKMIN_R_MASK)
/* CTRLDESCL63_6 Bit Fields */
#define DCU_CTRLDESCL63_6_TILE_HOR_SIZE_MASK     0x7Fu
#define DCU_CTRLDESCL63_6_TILE_HOR_SIZE_SHIFT    0
#define DCU_CTRLDESCL63_6_TILE_HOR_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_6_TILE_HOR_SIZE_SHIFT))&DCU_CTRLDESCL63_6_TILE_HOR_SIZE_MASK)
#define DCU_CTRLDESCL63_6_TILE_VER_SIZE_MASK     0x7FF0000u
#define DCU_CTRLDESCL63_6_TILE_VER_SIZE_SHIFT    16
#define DCU_CTRLDESCL63_6_TILE_VER_SIZE(x)       (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_6_TILE_VER_SIZE_SHIFT))&DCU_CTRLDESCL63_6_TILE_VER_SIZE_MASK)
/* CTRLDESCL63_7 Bit Fields */
#define DCU_CTRLDESCL63_7_FGn_FCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL63_7_FGn_FCOLOR_SHIFT       0
#define DCU_CTRLDESCL63_7_FGn_FCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_7_FGn_FCOLOR_SHIFT))&DCU_CTRLDESCL63_7_FGn_FCOLOR_MASK)
/* CTRLDESCL63_8 Bit Fields */
#define DCU_CTRLDESCL63_8_FGn_BCOLOR_MASK        0xFFFFFFu
#define DCU_CTRLDESCL63_8_FGn_BCOLOR_SHIFT       0
#define DCU_CTRLDESCL63_8_FGn_BCOLOR(x)          (((uint32_t)(((uint32_t)(x))<<DCU_CTRLDESCL63_8_FGn_BCOLOR_SHIFT))&DCU_CTRLDESCL63_8_FGn_BCOLOR_MASK)

/**
 * @}
 */ /* end of group DCU_Register_Masks */


/* DCU - Peripheral instance base addresses */
/** Peripheral DCU0 base pointer */
#define DCU0_BASE_PTR                            ((DCU_MemMapPtr)0x40058000u)
/** Peripheral DCU1 base pointer */
#define DCU1_BASE_PTR                            ((DCU_MemMapPtr)0x400D8000u)
/** Array initializer of DCU peripheral base pointers */
#define DCU_BASE_PTRS                            { DCU0_BASE_PTR, DCU1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- DCU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DCU_Register_Accessor_Macros DCU - Register accessor macros
 * @{
 */


/* DCU - Register instance definitions */
/* DCU0 */
#define DCU0_CTRLDESCCURSOR1                     DCU_CTRLDESCCURSOR1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCCURSOR2                     DCU_CTRLDESCCURSOR2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCCURSOR3                     DCU_CTRLDESCCURSOR3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCCURSOR4                     DCU_CTRLDESCCURSOR4_REG(DCU0_BASE_PTR)
#define DCU0_DCU_MODE                            DCU_DCU_MODE_REG(DCU0_BASE_PTR)
#define DCU0_BGND                                DCU_BGND_REG(DCU0_BASE_PTR)
#define DCU0_DISP_SIZE                           DCU_DISP_SIZE_REG(DCU0_BASE_PTR)
#define DCU0_HSYN_PARA                           DCU_HSYN_PARA_REG(DCU0_BASE_PTR)
#define DCU0_VSYN_PARA                           DCU_VSYN_PARA_REG(DCU0_BASE_PTR)
#define DCU0_SYNPOL                              DCU_SYNPOL_REG(DCU0_BASE_PTR)
#define DCU0_THRESHOLD                           DCU_THRESHOLD_REG(DCU0_BASE_PTR)
#define DCU0_INT_STATUS                          DCU_INT_STATUS_REG(DCU0_BASE_PTR)
#define DCU0_INT_MASK                            DCU_INT_MASK_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_1                            DCU_COLBAR_1_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_2                            DCU_COLBAR_2_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_3                            DCU_COLBAR_3_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_4                            DCU_COLBAR_4_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_5                            DCU_COLBAR_5_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_6                            DCU_COLBAR_6_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_7                            DCU_COLBAR_7_REG(DCU0_BASE_PTR)
#define DCU0_COLBAR_8                            DCU_COLBAR_8_REG(DCU0_BASE_PTR)
#define DCU0_DIV_RATIO                           DCU_DIV_RATIO_REG(DCU0_BASE_PTR)
#define DCU0_SIGN_CALC_1                         DCU_SIGN_CALC_1_REG(DCU0_BASE_PTR)
#define DCU0_SIGN_CALC_2                         DCU_SIGN_CALC_2_REG(DCU0_BASE_PTR)
#define DCU0_CRC_VAL                             DCU_CRC_VAL_REG(DCU0_BASE_PTR)
#define DCU0_PDI_STATUS                          DCU_PDI_STATUS_REG(DCU0_BASE_PTR)
#define DCU0_PDI_STA_MSK                         DCU_PDI_STA_MSK_REG(DCU0_BASE_PTR)
#define DCU0_PARR_ERR_STATUS1                    DCU_PARR_ERR_STATUS1_REG(DCU0_BASE_PTR)
#define DCU0_PARR_ERR_STATUS2                    DCU_PARR_ERR_STATUS2_REG(DCU0_BASE_PTR)
#define DCU0_PARR_ERR_STATUS3                    DCU_PARR_ERR_STATUS3_REG(DCU0_BASE_PTR)
#define DCU0_MASK_PARR_ERR_STATUS1               DCU_MASK_PARR_ERR_STATUS1_REG(DCU0_BASE_PTR)
#define DCU0_MASK_PARR_ERR_STATUS2               DCU_MASK_PARR_ERR_STATUS2_REG(DCU0_BASE_PTR)
#define DCU0_MASK_PARR_ERR_STATUS3               DCU_MASK_PARR_ERR_STATUS3_REG(DCU0_BASE_PTR)
#define DCU0_THRESHOLD_INP_BUF_1                 DCU_THRESHOLD_INP_BUF_1_REG(DCU0_BASE_PTR)
#define DCU0_THRESHOLD_INP_BUF_2                 DCU_THRESHOLD_INP_BUF_2_REG(DCU0_BASE_PTR)
#define DCU0_THRESHOLD_INP_BUF_3                 DCU_THRESHOLD_INP_BUF_3_REG(DCU0_BASE_PTR)
#define DCU0_LUMA_COMP                           DCU_LUMA_COMP_REG(DCU0_BASE_PTR)
#define DCU0_CHROMA_RED                          DCU_CHROMA_RED_REG(DCU0_BASE_PTR)
#define DCU0_CHROMA_GREEN                        DCU_CHROMA_GREEN_REG(DCU0_BASE_PTR)
#define DCU0_CHROMA_BLUE                         DCU_CHROMA_BLUE_REG(DCU0_BASE_PTR)
#define DCU0_CRC_POS                             DCU_CRC_POS_REG(DCU0_BASE_PTR)
#define DCU0_LYR_INTPOL_EN                       DCU_LYR_INTPOL_EN_REG(DCU0_BASE_PTR)
#define DCU0_LYR_LUMA_COMP                       DCU_LYR_LUMA_COMP_REG(DCU0_BASE_PTR)
#define DCU0_LYR_CHRM_RED                        DCU_LYR_CHRM_RED_REG(DCU0_BASE_PTR)
#define DCU0_LYR_CHRM_GRN                        DCU_LYR_CHRM_GRN_REG(DCU0_BASE_PTR)
#define DCU0_LYR_CHRM_BLUE                       DCU_LYR_CHRM_BLUE_REG(DCU0_BASE_PTR)
#define DCU0_COMP_IMSIZE                         DCU_COMP_IMSIZE_REG(DCU0_BASE_PTR)
#define DCU0_UPDATE_MODE                         DCU_UPDATE_MODE_REG(DCU0_BASE_PTR)
#define DCU0_UNDERRUN                            DCU_UNDERRUN_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_0                        DCU_CTRLDESCL0_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_1                        DCU_CTRLDESCL0_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_2                        DCU_CTRLDESCL0_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_3                        DCU_CTRLDESCL0_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_4                        DCU_CTRLDESCL0_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_5                        DCU_CTRLDESCL0_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_6                        DCU_CTRLDESCL0_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_7                        DCU_CTRLDESCL0_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL0_8                        DCU_CTRLDESCL0_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_0                        DCU_CTRLDESCL1_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_1                        DCU_CTRLDESCL1_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_2                        DCU_CTRLDESCL1_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_3                        DCU_CTRLDESCL1_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_4                        DCU_CTRLDESCL1_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_5                        DCU_CTRLDESCL1_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_6                        DCU_CTRLDESCL1_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_7                        DCU_CTRLDESCL1_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL1_8                        DCU_CTRLDESCL1_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_0                        DCU_CTRLDESCL2_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_1                        DCU_CTRLDESCL2_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_2                        DCU_CTRLDESCL2_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_3                        DCU_CTRLDESCL2_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_4                        DCU_CTRLDESCL2_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_5                        DCU_CTRLDESCL2_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_6                        DCU_CTRLDESCL2_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_7                        DCU_CTRLDESCL2_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL2_8                        DCU_CTRLDESCL2_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_0                        DCU_CTRLDESCL3_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_1                        DCU_CTRLDESCL3_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_2                        DCU_CTRLDESCL3_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_3                        DCU_CTRLDESCL3_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_4                        DCU_CTRLDESCL3_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_5                        DCU_CTRLDESCL3_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_6                        DCU_CTRLDESCL3_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_7                        DCU_CTRLDESCL3_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL3_8                        DCU_CTRLDESCL3_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_0                        DCU_CTRLDESCL4_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_1                        DCU_CTRLDESCL4_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_2                        DCU_CTRLDESCL4_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_3                        DCU_CTRLDESCL4_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_4                        DCU_CTRLDESCL4_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_5                        DCU_CTRLDESCL4_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_6                        DCU_CTRLDESCL4_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_7                        DCU_CTRLDESCL4_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL4_8                        DCU_CTRLDESCL4_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_0                        DCU_CTRLDESCL5_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_1                        DCU_CTRLDESCL5_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_2                        DCU_CTRLDESCL5_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_3                        DCU_CTRLDESCL5_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_4                        DCU_CTRLDESCL5_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_5                        DCU_CTRLDESCL5_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_6                        DCU_CTRLDESCL5_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_7                        DCU_CTRLDESCL5_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL5_8                        DCU_CTRLDESCL5_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_0                        DCU_CTRLDESCL6_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_1                        DCU_CTRLDESCL6_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_2                        DCU_CTRLDESCL6_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_3                        DCU_CTRLDESCL6_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_4                        DCU_CTRLDESCL6_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_5                        DCU_CTRLDESCL6_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_6                        DCU_CTRLDESCL6_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_7                        DCU_CTRLDESCL6_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL6_8                        DCU_CTRLDESCL6_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_0                        DCU_CTRLDESCL7_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_1                        DCU_CTRLDESCL7_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_2                        DCU_CTRLDESCL7_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_3                        DCU_CTRLDESCL7_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_4                        DCU_CTRLDESCL7_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_5                        DCU_CTRLDESCL7_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_6                        DCU_CTRLDESCL7_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_7                        DCU_CTRLDESCL7_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL7_8                        DCU_CTRLDESCL7_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_0                        DCU_CTRLDESCL8_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_1                        DCU_CTRLDESCL8_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_2                        DCU_CTRLDESCL8_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_3                        DCU_CTRLDESCL8_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_4                        DCU_CTRLDESCL8_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_5                        DCU_CTRLDESCL8_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_6                        DCU_CTRLDESCL8_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_7                        DCU_CTRLDESCL8_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL8_8                        DCU_CTRLDESCL8_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_0                        DCU_CTRLDESCL9_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_1                        DCU_CTRLDESCL9_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_2                        DCU_CTRLDESCL9_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_3                        DCU_CTRLDESCL9_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_4                        DCU_CTRLDESCL9_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_5                        DCU_CTRLDESCL9_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_6                        DCU_CTRLDESCL9_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_7                        DCU_CTRLDESCL9_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL9_8                        DCU_CTRLDESCL9_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_0                       DCU_CTRLDESCL10_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_1                       DCU_CTRLDESCL10_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_2                       DCU_CTRLDESCL10_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_3                       DCU_CTRLDESCL10_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_4                       DCU_CTRLDESCL10_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_5                       DCU_CTRLDESCL10_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_6                       DCU_CTRLDESCL10_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_7                       DCU_CTRLDESCL10_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL10_8                       DCU_CTRLDESCL10_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_0                       DCU_CTRLDESCL11_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_1                       DCU_CTRLDESCL11_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_2                       DCU_CTRLDESCL11_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_3                       DCU_CTRLDESCL11_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_4                       DCU_CTRLDESCL11_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_5                       DCU_CTRLDESCL11_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_6                       DCU_CTRLDESCL11_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_7                       DCU_CTRLDESCL11_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL11_8                       DCU_CTRLDESCL11_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_0                       DCU_CTRLDESCL12_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_1                       DCU_CTRLDESCL12_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_2                       DCU_CTRLDESCL12_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_3                       DCU_CTRLDESCL12_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_4                       DCU_CTRLDESCL12_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_5                       DCU_CTRLDESCL12_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_6                       DCU_CTRLDESCL12_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_7                       DCU_CTRLDESCL12_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL12_8                       DCU_CTRLDESCL12_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_0                       DCU_CTRLDESCL13_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_1                       DCU_CTRLDESCL13_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_2                       DCU_CTRLDESCL13_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_3                       DCU_CTRLDESCL13_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_4                       DCU_CTRLDESCL13_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_5                       DCU_CTRLDESCL13_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_6                       DCU_CTRLDESCL13_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_7                       DCU_CTRLDESCL13_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL13_8                       DCU_CTRLDESCL13_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_0                       DCU_CTRLDESCL14_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_1                       DCU_CTRLDESCL14_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_2                       DCU_CTRLDESCL14_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_3                       DCU_CTRLDESCL14_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_4                       DCU_CTRLDESCL14_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_5                       DCU_CTRLDESCL14_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_6                       DCU_CTRLDESCL14_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_7                       DCU_CTRLDESCL14_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL14_8                       DCU_CTRLDESCL14_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_0                       DCU_CTRLDESCL15_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_1                       DCU_CTRLDESCL15_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_2                       DCU_CTRLDESCL15_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_3                       DCU_CTRLDESCL15_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_4                       DCU_CTRLDESCL15_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_5                       DCU_CTRLDESCL15_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_6                       DCU_CTRLDESCL15_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_7                       DCU_CTRLDESCL15_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL15_8                       DCU_CTRLDESCL15_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_0                       DCU_CTRLDESCL16_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_1                       DCU_CTRLDESCL16_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_2                       DCU_CTRLDESCL16_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_3                       DCU_CTRLDESCL16_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_4                       DCU_CTRLDESCL16_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_5                       DCU_CTRLDESCL16_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_6                       DCU_CTRLDESCL16_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_7                       DCU_CTRLDESCL16_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL16_8                       DCU_CTRLDESCL16_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_0                       DCU_CTRLDESCL17_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_1                       DCU_CTRLDESCL17_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_2                       DCU_CTRLDESCL17_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_3                       DCU_CTRLDESCL17_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_4                       DCU_CTRLDESCL17_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_5                       DCU_CTRLDESCL17_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_6                       DCU_CTRLDESCL17_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_7                       DCU_CTRLDESCL17_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL17_8                       DCU_CTRLDESCL17_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_0                       DCU_CTRLDESCL18_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_1                       DCU_CTRLDESCL18_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_2                       DCU_CTRLDESCL18_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_3                       DCU_CTRLDESCL18_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_4                       DCU_CTRLDESCL18_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_5                       DCU_CTRLDESCL18_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_6                       DCU_CTRLDESCL18_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_7                       DCU_CTRLDESCL18_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL18_8                       DCU_CTRLDESCL18_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_0                       DCU_CTRLDESCL19_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_1                       DCU_CTRLDESCL19_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_2                       DCU_CTRLDESCL19_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_3                       DCU_CTRLDESCL19_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_4                       DCU_CTRLDESCL19_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_5                       DCU_CTRLDESCL19_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_6                       DCU_CTRLDESCL19_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_7                       DCU_CTRLDESCL19_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL19_8                       DCU_CTRLDESCL19_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_0                       DCU_CTRLDESCL20_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_1                       DCU_CTRLDESCL20_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_2                       DCU_CTRLDESCL20_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_3                       DCU_CTRLDESCL20_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_4                       DCU_CTRLDESCL20_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_5                       DCU_CTRLDESCL20_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_6                       DCU_CTRLDESCL20_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_7                       DCU_CTRLDESCL20_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL20_8                       DCU_CTRLDESCL20_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_0                       DCU_CTRLDESCL21_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_1                       DCU_CTRLDESCL21_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_2                       DCU_CTRLDESCL21_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_3                       DCU_CTRLDESCL21_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_4                       DCU_CTRLDESCL21_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_5                       DCU_CTRLDESCL21_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_6                       DCU_CTRLDESCL21_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_7                       DCU_CTRLDESCL21_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL21_8                       DCU_CTRLDESCL21_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_0                       DCU_CTRLDESCL22_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_1                       DCU_CTRLDESCL22_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_2                       DCU_CTRLDESCL22_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_3                       DCU_CTRLDESCL22_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_4                       DCU_CTRLDESCL22_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_5                       DCU_CTRLDESCL22_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_6                       DCU_CTRLDESCL22_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_7                       DCU_CTRLDESCL22_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL22_8                       DCU_CTRLDESCL22_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_0                       DCU_CTRLDESCL23_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_1                       DCU_CTRLDESCL23_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_2                       DCU_CTRLDESCL23_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_3                       DCU_CTRLDESCL23_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_4                       DCU_CTRLDESCL23_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_5                       DCU_CTRLDESCL23_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_6                       DCU_CTRLDESCL23_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_7                       DCU_CTRLDESCL23_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL23_8                       DCU_CTRLDESCL23_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_0                       DCU_CTRLDESCL24_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_1                       DCU_CTRLDESCL24_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_2                       DCU_CTRLDESCL24_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_3                       DCU_CTRLDESCL24_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_4                       DCU_CTRLDESCL24_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_5                       DCU_CTRLDESCL24_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_6                       DCU_CTRLDESCL24_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_7                       DCU_CTRLDESCL24_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL24_8                       DCU_CTRLDESCL24_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_0                       DCU_CTRLDESCL25_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_1                       DCU_CTRLDESCL25_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_2                       DCU_CTRLDESCL25_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_3                       DCU_CTRLDESCL25_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_4                       DCU_CTRLDESCL25_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_5                       DCU_CTRLDESCL25_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_6                       DCU_CTRLDESCL25_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_7                       DCU_CTRLDESCL25_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL25_8                       DCU_CTRLDESCL25_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_0                       DCU_CTRLDESCL26_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_1                       DCU_CTRLDESCL26_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_2                       DCU_CTRLDESCL26_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_3                       DCU_CTRLDESCL26_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_4                       DCU_CTRLDESCL26_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_5                       DCU_CTRLDESCL26_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_6                       DCU_CTRLDESCL26_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_7                       DCU_CTRLDESCL26_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL26_8                       DCU_CTRLDESCL26_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_0                       DCU_CTRLDESCL27_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_1                       DCU_CTRLDESCL27_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_2                       DCU_CTRLDESCL27_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_3                       DCU_CTRLDESCL27_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_4                       DCU_CTRLDESCL27_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_5                       DCU_CTRLDESCL27_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_6                       DCU_CTRLDESCL27_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_7                       DCU_CTRLDESCL27_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL27_8                       DCU_CTRLDESCL27_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_0                       DCU_CTRLDESCL28_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_1                       DCU_CTRLDESCL28_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_2                       DCU_CTRLDESCL28_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_3                       DCU_CTRLDESCL28_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_4                       DCU_CTRLDESCL28_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_5                       DCU_CTRLDESCL28_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_6                       DCU_CTRLDESCL28_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_7                       DCU_CTRLDESCL28_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL28_8                       DCU_CTRLDESCL28_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_0                       DCU_CTRLDESCL29_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_1                       DCU_CTRLDESCL29_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_2                       DCU_CTRLDESCL29_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_3                       DCU_CTRLDESCL29_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_4                       DCU_CTRLDESCL29_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_5                       DCU_CTRLDESCL29_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_6                       DCU_CTRLDESCL29_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_7                       DCU_CTRLDESCL29_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL29_8                       DCU_CTRLDESCL29_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_0                       DCU_CTRLDESCL30_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_1                       DCU_CTRLDESCL30_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_2                       DCU_CTRLDESCL30_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_3                       DCU_CTRLDESCL30_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_4                       DCU_CTRLDESCL30_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_5                       DCU_CTRLDESCL30_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_6                       DCU_CTRLDESCL30_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_7                       DCU_CTRLDESCL30_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL30_8                       DCU_CTRLDESCL30_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_0                       DCU_CTRLDESCL31_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_1                       DCU_CTRLDESCL31_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_2                       DCU_CTRLDESCL31_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_3                       DCU_CTRLDESCL31_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_4                       DCU_CTRLDESCL31_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_5                       DCU_CTRLDESCL31_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_6                       DCU_CTRLDESCL31_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_7                       DCU_CTRLDESCL31_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL31_8                       DCU_CTRLDESCL31_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_0                       DCU_CTRLDESCL32_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_1                       DCU_CTRLDESCL32_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_2                       DCU_CTRLDESCL32_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_3                       DCU_CTRLDESCL32_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_4                       DCU_CTRLDESCL32_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_5                       DCU_CTRLDESCL32_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_6                       DCU_CTRLDESCL32_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_7                       DCU_CTRLDESCL32_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL32_8                       DCU_CTRLDESCL32_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_0                       DCU_CTRLDESCL33_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_1                       DCU_CTRLDESCL33_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_2                       DCU_CTRLDESCL33_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_3                       DCU_CTRLDESCL33_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_4                       DCU_CTRLDESCL33_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_5                       DCU_CTRLDESCL33_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_6                       DCU_CTRLDESCL33_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_7                       DCU_CTRLDESCL33_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL33_8                       DCU_CTRLDESCL33_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_0                       DCU_CTRLDESCL34_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_1                       DCU_CTRLDESCL34_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_2                       DCU_CTRLDESCL34_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_3                       DCU_CTRLDESCL34_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_4                       DCU_CTRLDESCL34_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_5                       DCU_CTRLDESCL34_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_6                       DCU_CTRLDESCL34_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_7                       DCU_CTRLDESCL34_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL34_8                       DCU_CTRLDESCL34_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_0                       DCU_CTRLDESCL35_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_1                       DCU_CTRLDESCL35_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_2                       DCU_CTRLDESCL35_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_3                       DCU_CTRLDESCL35_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_4                       DCU_CTRLDESCL35_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_5                       DCU_CTRLDESCL35_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_6                       DCU_CTRLDESCL35_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_7                       DCU_CTRLDESCL35_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL35_8                       DCU_CTRLDESCL35_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_0                       DCU_CTRLDESCL36_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_1                       DCU_CTRLDESCL36_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_2                       DCU_CTRLDESCL36_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_3                       DCU_CTRLDESCL36_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_4                       DCU_CTRLDESCL36_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_5                       DCU_CTRLDESCL36_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_6                       DCU_CTRLDESCL36_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_7                       DCU_CTRLDESCL36_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL36_8                       DCU_CTRLDESCL36_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_0                       DCU_CTRLDESCL37_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_1                       DCU_CTRLDESCL37_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_2                       DCU_CTRLDESCL37_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_3                       DCU_CTRLDESCL37_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_4                       DCU_CTRLDESCL37_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_5                       DCU_CTRLDESCL37_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_6                       DCU_CTRLDESCL37_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_7                       DCU_CTRLDESCL37_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL37_8                       DCU_CTRLDESCL37_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_0                       DCU_CTRLDESCL38_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_1                       DCU_CTRLDESCL38_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_2                       DCU_CTRLDESCL38_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_3                       DCU_CTRLDESCL38_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_4                       DCU_CTRLDESCL38_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_5                       DCU_CTRLDESCL38_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_6                       DCU_CTRLDESCL38_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_7                       DCU_CTRLDESCL38_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL38_8                       DCU_CTRLDESCL38_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_0                       DCU_CTRLDESCL39_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_1                       DCU_CTRLDESCL39_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_2                       DCU_CTRLDESCL39_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_3                       DCU_CTRLDESCL39_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_4                       DCU_CTRLDESCL39_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_5                       DCU_CTRLDESCL39_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_6                       DCU_CTRLDESCL39_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_7                       DCU_CTRLDESCL39_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL39_8                       DCU_CTRLDESCL39_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_0                       DCU_CTRLDESCL40_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_1                       DCU_CTRLDESCL40_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_2                       DCU_CTRLDESCL40_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_3                       DCU_CTRLDESCL40_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_4                       DCU_CTRLDESCL40_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_5                       DCU_CTRLDESCL40_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_6                       DCU_CTRLDESCL40_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_7                       DCU_CTRLDESCL40_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL40_8                       DCU_CTRLDESCL40_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_0                       DCU_CTRLDESCL41_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_1                       DCU_CTRLDESCL41_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_2                       DCU_CTRLDESCL41_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_3                       DCU_CTRLDESCL41_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_4                       DCU_CTRLDESCL41_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_5                       DCU_CTRLDESCL41_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_6                       DCU_CTRLDESCL41_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_7                       DCU_CTRLDESCL41_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL41_8                       DCU_CTRLDESCL41_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_0                       DCU_CTRLDESCL42_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_1                       DCU_CTRLDESCL42_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_2                       DCU_CTRLDESCL42_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_3                       DCU_CTRLDESCL42_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_4                       DCU_CTRLDESCL42_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_5                       DCU_CTRLDESCL42_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_6                       DCU_CTRLDESCL42_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_7                       DCU_CTRLDESCL42_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL42_8                       DCU_CTRLDESCL42_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_0                       DCU_CTRLDESCL43_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_1                       DCU_CTRLDESCL43_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_2                       DCU_CTRLDESCL43_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_3                       DCU_CTRLDESCL43_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_4                       DCU_CTRLDESCL43_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_5                       DCU_CTRLDESCL43_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_6                       DCU_CTRLDESCL43_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_7                       DCU_CTRLDESCL43_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL43_8                       DCU_CTRLDESCL43_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_0                       DCU_CTRLDESCL44_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_1                       DCU_CTRLDESCL44_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_2                       DCU_CTRLDESCL44_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_3                       DCU_CTRLDESCL44_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_4                       DCU_CTRLDESCL44_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_5                       DCU_CTRLDESCL44_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_6                       DCU_CTRLDESCL44_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_7                       DCU_CTRLDESCL44_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL44_8                       DCU_CTRLDESCL44_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_0                       DCU_CTRLDESCL45_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_1                       DCU_CTRLDESCL45_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_2                       DCU_CTRLDESCL45_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_3                       DCU_CTRLDESCL45_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_4                       DCU_CTRLDESCL45_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_5                       DCU_CTRLDESCL45_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_6                       DCU_CTRLDESCL45_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_7                       DCU_CTRLDESCL45_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL45_8                       DCU_CTRLDESCL45_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_0                       DCU_CTRLDESCL46_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_1                       DCU_CTRLDESCL46_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_2                       DCU_CTRLDESCL46_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_3                       DCU_CTRLDESCL46_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_4                       DCU_CTRLDESCL46_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_5                       DCU_CTRLDESCL46_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_6                       DCU_CTRLDESCL46_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_7                       DCU_CTRLDESCL46_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL46_8                       DCU_CTRLDESCL46_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_0                       DCU_CTRLDESCL47_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_1                       DCU_CTRLDESCL47_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_2                       DCU_CTRLDESCL47_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_3                       DCU_CTRLDESCL47_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_4                       DCU_CTRLDESCL47_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_5                       DCU_CTRLDESCL47_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_6                       DCU_CTRLDESCL47_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_7                       DCU_CTRLDESCL47_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL47_8                       DCU_CTRLDESCL47_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_0                       DCU_CTRLDESCL48_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_1                       DCU_CTRLDESCL48_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_2                       DCU_CTRLDESCL48_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_3                       DCU_CTRLDESCL48_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_4                       DCU_CTRLDESCL48_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_5                       DCU_CTRLDESCL48_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_6                       DCU_CTRLDESCL48_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_7                       DCU_CTRLDESCL48_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL48_8                       DCU_CTRLDESCL48_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_0                       DCU_CTRLDESCL49_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_1                       DCU_CTRLDESCL49_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_2                       DCU_CTRLDESCL49_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_3                       DCU_CTRLDESCL49_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_4                       DCU_CTRLDESCL49_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_5                       DCU_CTRLDESCL49_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_6                       DCU_CTRLDESCL49_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_7                       DCU_CTRLDESCL49_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL49_8                       DCU_CTRLDESCL49_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_0                       DCU_CTRLDESCL50_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_1                       DCU_CTRLDESCL50_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_2                       DCU_CTRLDESCL50_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_3                       DCU_CTRLDESCL50_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_4                       DCU_CTRLDESCL50_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_5                       DCU_CTRLDESCL50_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_6                       DCU_CTRLDESCL50_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_7                       DCU_CTRLDESCL50_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL50_8                       DCU_CTRLDESCL50_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_0                       DCU_CTRLDESCL51_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_1                       DCU_CTRLDESCL51_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_2                       DCU_CTRLDESCL51_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_3                       DCU_CTRLDESCL51_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_4                       DCU_CTRLDESCL51_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_5                       DCU_CTRLDESCL51_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_6                       DCU_CTRLDESCL51_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_7                       DCU_CTRLDESCL51_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL51_8                       DCU_CTRLDESCL51_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_0                       DCU_CTRLDESCL52_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_1                       DCU_CTRLDESCL52_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_2                       DCU_CTRLDESCL52_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_3                       DCU_CTRLDESCL52_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_4                       DCU_CTRLDESCL52_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_5                       DCU_CTRLDESCL52_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_6                       DCU_CTRLDESCL52_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_7                       DCU_CTRLDESCL52_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL52_8                       DCU_CTRLDESCL52_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_0                       DCU_CTRLDESCL53_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_1                       DCU_CTRLDESCL53_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_2                       DCU_CTRLDESCL53_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_3                       DCU_CTRLDESCL53_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_4                       DCU_CTRLDESCL53_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_5                       DCU_CTRLDESCL53_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_6                       DCU_CTRLDESCL53_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_7                       DCU_CTRLDESCL53_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL53_8                       DCU_CTRLDESCL53_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_0                       DCU_CTRLDESCL54_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_1                       DCU_CTRLDESCL54_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_2                       DCU_CTRLDESCL54_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_3                       DCU_CTRLDESCL54_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_4                       DCU_CTRLDESCL54_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_5                       DCU_CTRLDESCL54_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_6                       DCU_CTRLDESCL54_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_7                       DCU_CTRLDESCL54_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL54_8                       DCU_CTRLDESCL54_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_0                       DCU_CTRLDESCL55_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_1                       DCU_CTRLDESCL55_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_2                       DCU_CTRLDESCL55_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_3                       DCU_CTRLDESCL55_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_4                       DCU_CTRLDESCL55_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_5                       DCU_CTRLDESCL55_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_6                       DCU_CTRLDESCL55_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_7                       DCU_CTRLDESCL55_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL55_8                       DCU_CTRLDESCL55_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_0                       DCU_CTRLDESCL56_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_1                       DCU_CTRLDESCL56_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_2                       DCU_CTRLDESCL56_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_3                       DCU_CTRLDESCL56_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_4                       DCU_CTRLDESCL56_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_5                       DCU_CTRLDESCL56_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_6                       DCU_CTRLDESCL56_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_7                       DCU_CTRLDESCL56_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL56_8                       DCU_CTRLDESCL56_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_0                       DCU_CTRLDESCL57_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_1                       DCU_CTRLDESCL57_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_2                       DCU_CTRLDESCL57_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_3                       DCU_CTRLDESCL57_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_4                       DCU_CTRLDESCL57_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_5                       DCU_CTRLDESCL57_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_6                       DCU_CTRLDESCL57_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_7                       DCU_CTRLDESCL57_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL57_8                       DCU_CTRLDESCL57_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_0                       DCU_CTRLDESCL58_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_1                       DCU_CTRLDESCL58_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_2                       DCU_CTRLDESCL58_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_3                       DCU_CTRLDESCL58_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_4                       DCU_CTRLDESCL58_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_5                       DCU_CTRLDESCL58_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_6                       DCU_CTRLDESCL58_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_7                       DCU_CTRLDESCL58_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL58_8                       DCU_CTRLDESCL58_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_0                       DCU_CTRLDESCL59_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_1                       DCU_CTRLDESCL59_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_2                       DCU_CTRLDESCL59_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_3                       DCU_CTRLDESCL59_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_4                       DCU_CTRLDESCL59_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_5                       DCU_CTRLDESCL59_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_6                       DCU_CTRLDESCL59_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_7                       DCU_CTRLDESCL59_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL59_8                       DCU_CTRLDESCL59_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_0                       DCU_CTRLDESCL60_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_1                       DCU_CTRLDESCL60_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_2                       DCU_CTRLDESCL60_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_3                       DCU_CTRLDESCL60_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_4                       DCU_CTRLDESCL60_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_5                       DCU_CTRLDESCL60_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_6                       DCU_CTRLDESCL60_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_7                       DCU_CTRLDESCL60_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL60_8                       DCU_CTRLDESCL60_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_0                       DCU_CTRLDESCL61_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_1                       DCU_CTRLDESCL61_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_2                       DCU_CTRLDESCL61_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_3                       DCU_CTRLDESCL61_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_4                       DCU_CTRLDESCL61_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_5                       DCU_CTRLDESCL61_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_6                       DCU_CTRLDESCL61_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_7                       DCU_CTRLDESCL61_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL61_8                       DCU_CTRLDESCL61_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_0                       DCU_CTRLDESCL62_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_1                       DCU_CTRLDESCL62_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_2                       DCU_CTRLDESCL62_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_3                       DCU_CTRLDESCL62_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_4                       DCU_CTRLDESCL62_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_5                       DCU_CTRLDESCL62_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_6                       DCU_CTRLDESCL62_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_7                       DCU_CTRLDESCL62_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL62_8                       DCU_CTRLDESCL62_8_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_0                       DCU_CTRLDESCL63_0_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_1                       DCU_CTRLDESCL63_1_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_2                       DCU_CTRLDESCL63_2_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_3                       DCU_CTRLDESCL63_3_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_4                       DCU_CTRLDESCL63_4_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_5                       DCU_CTRLDESCL63_5_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_6                       DCU_CTRLDESCL63_6_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_7                       DCU_CTRLDESCL63_7_REG(DCU0_BASE_PTR)
#define DCU0_CTRLDESCL63_8                       DCU_CTRLDESCL63_8_REG(DCU0_BASE_PTR)
/* DCU1 */
#define DCU1_CTRLDESCCURSOR1                     DCU_CTRLDESCCURSOR1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCCURSOR2                     DCU_CTRLDESCCURSOR2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCCURSOR3                     DCU_CTRLDESCCURSOR3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCCURSOR4                     DCU_CTRLDESCCURSOR4_REG(DCU1_BASE_PTR)
#define DCU1_DCU_MODE                            DCU_DCU_MODE_REG(DCU1_BASE_PTR)
#define DCU1_BGND                                DCU_BGND_REG(DCU1_BASE_PTR)
#define DCU1_DISP_SIZE                           DCU_DISP_SIZE_REG(DCU1_BASE_PTR)
#define DCU1_HSYN_PARA                           DCU_HSYN_PARA_REG(DCU1_BASE_PTR)
#define DCU1_VSYN_PARA                           DCU_VSYN_PARA_REG(DCU1_BASE_PTR)
#define DCU1_SYNPOL                              DCU_SYNPOL_REG(DCU1_BASE_PTR)
#define DCU1_THRESHOLD                           DCU_THRESHOLD_REG(DCU1_BASE_PTR)
#define DCU1_INT_STATUS                          DCU_INT_STATUS_REG(DCU1_BASE_PTR)
#define DCU1_INT_MASK                            DCU_INT_MASK_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_1                            DCU_COLBAR_1_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_2                            DCU_COLBAR_2_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_3                            DCU_COLBAR_3_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_4                            DCU_COLBAR_4_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_5                            DCU_COLBAR_5_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_6                            DCU_COLBAR_6_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_7                            DCU_COLBAR_7_REG(DCU1_BASE_PTR)
#define DCU1_COLBAR_8                            DCU_COLBAR_8_REG(DCU1_BASE_PTR)
#define DCU1_DIV_RATIO                           DCU_DIV_RATIO_REG(DCU1_BASE_PTR)
#define DCU1_SIGN_CALC_1                         DCU_SIGN_CALC_1_REG(DCU1_BASE_PTR)
#define DCU1_SIGN_CALC_2                         DCU_SIGN_CALC_2_REG(DCU1_BASE_PTR)
#define DCU1_CRC_VAL                             DCU_CRC_VAL_REG(DCU1_BASE_PTR)
#define DCU1_PDI_STATUS                          DCU_PDI_STATUS_REG(DCU1_BASE_PTR)
#define DCU1_PDI_STA_MSK                         DCU_PDI_STA_MSK_REG(DCU1_BASE_PTR)
#define DCU1_PARR_ERR_STATUS1                    DCU_PARR_ERR_STATUS1_REG(DCU1_BASE_PTR)
#define DCU1_PARR_ERR_STATUS2                    DCU_PARR_ERR_STATUS2_REG(DCU1_BASE_PTR)
#define DCU1_PARR_ERR_STATUS3                    DCU_PARR_ERR_STATUS3_REG(DCU1_BASE_PTR)
#define DCU1_MASK_PARR_ERR_STATUS1               DCU_MASK_PARR_ERR_STATUS1_REG(DCU1_BASE_PTR)
#define DCU1_MASK_PARR_ERR_STATUS2               DCU_MASK_PARR_ERR_STATUS2_REG(DCU1_BASE_PTR)
#define DCU1_MASK_PARR_ERR_STATUS3               DCU_MASK_PARR_ERR_STATUS3_REG(DCU1_BASE_PTR)
#define DCU1_THRESHOLD_INP_BUF_1                 DCU_THRESHOLD_INP_BUF_1_REG(DCU1_BASE_PTR)
#define DCU1_THRESHOLD_INP_BUF_2                 DCU_THRESHOLD_INP_BUF_2_REG(DCU1_BASE_PTR)
#define DCU1_THRESHOLD_INP_BUF_3                 DCU_THRESHOLD_INP_BUF_3_REG(DCU1_BASE_PTR)
#define DCU1_LUMA_COMP                           DCU_LUMA_COMP_REG(DCU1_BASE_PTR)
#define DCU1_CHROMA_RED                          DCU_CHROMA_RED_REG(DCU1_BASE_PTR)
#define DCU1_CHROMA_GREEN                        DCU_CHROMA_GREEN_REG(DCU1_BASE_PTR)
#define DCU1_CHROMA_BLUE                         DCU_CHROMA_BLUE_REG(DCU1_BASE_PTR)
#define DCU1_CRC_POS                             DCU_CRC_POS_REG(DCU1_BASE_PTR)
#define DCU1_LYR_INTPOL_EN                       DCU_LYR_INTPOL_EN_REG(DCU1_BASE_PTR)
#define DCU1_LYR_LUMA_COMP                       DCU_LYR_LUMA_COMP_REG(DCU1_BASE_PTR)
#define DCU1_LYR_CHRM_RED                        DCU_LYR_CHRM_RED_REG(DCU1_BASE_PTR)
#define DCU1_LYR_CHRM_GRN                        DCU_LYR_CHRM_GRN_REG(DCU1_BASE_PTR)
#define DCU1_LYR_CHRM_BLUE                       DCU_LYR_CHRM_BLUE_REG(DCU1_BASE_PTR)
#define DCU1_COMP_IMSIZE                         DCU_COMP_IMSIZE_REG(DCU1_BASE_PTR)
#define DCU1_UPDATE_MODE                         DCU_UPDATE_MODE_REG(DCU1_BASE_PTR)
#define DCU1_UNDERRUN                            DCU_UNDERRUN_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_0                        DCU_CTRLDESCL0_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_1                        DCU_CTRLDESCL0_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_2                        DCU_CTRLDESCL0_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_3                        DCU_CTRLDESCL0_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_4                        DCU_CTRLDESCL0_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_5                        DCU_CTRLDESCL0_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_6                        DCU_CTRLDESCL0_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_7                        DCU_CTRLDESCL0_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL0_8                        DCU_CTRLDESCL0_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_0                        DCU_CTRLDESCL1_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_1                        DCU_CTRLDESCL1_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_2                        DCU_CTRLDESCL1_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_3                        DCU_CTRLDESCL1_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_4                        DCU_CTRLDESCL1_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_5                        DCU_CTRLDESCL1_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_6                        DCU_CTRLDESCL1_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_7                        DCU_CTRLDESCL1_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL1_8                        DCU_CTRLDESCL1_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_0                        DCU_CTRLDESCL2_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_1                        DCU_CTRLDESCL2_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_2                        DCU_CTRLDESCL2_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_3                        DCU_CTRLDESCL2_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_4                        DCU_CTRLDESCL2_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_5                        DCU_CTRLDESCL2_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_6                        DCU_CTRLDESCL2_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_7                        DCU_CTRLDESCL2_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL2_8                        DCU_CTRLDESCL2_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_0                        DCU_CTRLDESCL3_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_1                        DCU_CTRLDESCL3_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_2                        DCU_CTRLDESCL3_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_3                        DCU_CTRLDESCL3_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_4                        DCU_CTRLDESCL3_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_5                        DCU_CTRLDESCL3_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_6                        DCU_CTRLDESCL3_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_7                        DCU_CTRLDESCL3_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL3_8                        DCU_CTRLDESCL3_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_0                        DCU_CTRLDESCL4_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_1                        DCU_CTRLDESCL4_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_2                        DCU_CTRLDESCL4_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_3                        DCU_CTRLDESCL4_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_4                        DCU_CTRLDESCL4_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_5                        DCU_CTRLDESCL4_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_6                        DCU_CTRLDESCL4_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_7                        DCU_CTRLDESCL4_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL4_8                        DCU_CTRLDESCL4_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_0                        DCU_CTRLDESCL5_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_1                        DCU_CTRLDESCL5_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_2                        DCU_CTRLDESCL5_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_3                        DCU_CTRLDESCL5_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_4                        DCU_CTRLDESCL5_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_5                        DCU_CTRLDESCL5_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_6                        DCU_CTRLDESCL5_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_7                        DCU_CTRLDESCL5_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL5_8                        DCU_CTRLDESCL5_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_0                        DCU_CTRLDESCL6_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_1                        DCU_CTRLDESCL6_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_2                        DCU_CTRLDESCL6_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_3                        DCU_CTRLDESCL6_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_4                        DCU_CTRLDESCL6_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_5                        DCU_CTRLDESCL6_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_6                        DCU_CTRLDESCL6_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_7                        DCU_CTRLDESCL6_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL6_8                        DCU_CTRLDESCL6_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_0                        DCU_CTRLDESCL7_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_1                        DCU_CTRLDESCL7_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_2                        DCU_CTRLDESCL7_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_3                        DCU_CTRLDESCL7_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_4                        DCU_CTRLDESCL7_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_5                        DCU_CTRLDESCL7_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_6                        DCU_CTRLDESCL7_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_7                        DCU_CTRLDESCL7_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL7_8                        DCU_CTRLDESCL7_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_0                        DCU_CTRLDESCL8_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_1                        DCU_CTRLDESCL8_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_2                        DCU_CTRLDESCL8_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_3                        DCU_CTRLDESCL8_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_4                        DCU_CTRLDESCL8_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_5                        DCU_CTRLDESCL8_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_6                        DCU_CTRLDESCL8_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_7                        DCU_CTRLDESCL8_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL8_8                        DCU_CTRLDESCL8_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_0                        DCU_CTRLDESCL9_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_1                        DCU_CTRLDESCL9_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_2                        DCU_CTRLDESCL9_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_3                        DCU_CTRLDESCL9_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_4                        DCU_CTRLDESCL9_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_5                        DCU_CTRLDESCL9_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_6                        DCU_CTRLDESCL9_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_7                        DCU_CTRLDESCL9_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL9_8                        DCU_CTRLDESCL9_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_0                       DCU_CTRLDESCL10_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_1                       DCU_CTRLDESCL10_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_2                       DCU_CTRLDESCL10_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_3                       DCU_CTRLDESCL10_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_4                       DCU_CTRLDESCL10_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_5                       DCU_CTRLDESCL10_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_6                       DCU_CTRLDESCL10_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_7                       DCU_CTRLDESCL10_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL10_8                       DCU_CTRLDESCL10_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_0                       DCU_CTRLDESCL11_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_1                       DCU_CTRLDESCL11_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_2                       DCU_CTRLDESCL11_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_3                       DCU_CTRLDESCL11_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_4                       DCU_CTRLDESCL11_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_5                       DCU_CTRLDESCL11_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_6                       DCU_CTRLDESCL11_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_7                       DCU_CTRLDESCL11_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL11_8                       DCU_CTRLDESCL11_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_0                       DCU_CTRLDESCL12_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_1                       DCU_CTRLDESCL12_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_2                       DCU_CTRLDESCL12_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_3                       DCU_CTRLDESCL12_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_4                       DCU_CTRLDESCL12_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_5                       DCU_CTRLDESCL12_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_6                       DCU_CTRLDESCL12_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_7                       DCU_CTRLDESCL12_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL12_8                       DCU_CTRLDESCL12_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_0                       DCU_CTRLDESCL13_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_1                       DCU_CTRLDESCL13_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_2                       DCU_CTRLDESCL13_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_3                       DCU_CTRLDESCL13_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_4                       DCU_CTRLDESCL13_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_5                       DCU_CTRLDESCL13_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_6                       DCU_CTRLDESCL13_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_7                       DCU_CTRLDESCL13_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL13_8                       DCU_CTRLDESCL13_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_0                       DCU_CTRLDESCL14_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_1                       DCU_CTRLDESCL14_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_2                       DCU_CTRLDESCL14_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_3                       DCU_CTRLDESCL14_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_4                       DCU_CTRLDESCL14_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_5                       DCU_CTRLDESCL14_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_6                       DCU_CTRLDESCL14_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_7                       DCU_CTRLDESCL14_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL14_8                       DCU_CTRLDESCL14_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_0                       DCU_CTRLDESCL15_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_1                       DCU_CTRLDESCL15_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_2                       DCU_CTRLDESCL15_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_3                       DCU_CTRLDESCL15_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_4                       DCU_CTRLDESCL15_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_5                       DCU_CTRLDESCL15_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_6                       DCU_CTRLDESCL15_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_7                       DCU_CTRLDESCL15_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL15_8                       DCU_CTRLDESCL15_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_0                       DCU_CTRLDESCL16_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_1                       DCU_CTRLDESCL16_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_2                       DCU_CTRLDESCL16_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_3                       DCU_CTRLDESCL16_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_4                       DCU_CTRLDESCL16_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_5                       DCU_CTRLDESCL16_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_6                       DCU_CTRLDESCL16_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_7                       DCU_CTRLDESCL16_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL16_8                       DCU_CTRLDESCL16_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_0                       DCU_CTRLDESCL17_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_1                       DCU_CTRLDESCL17_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_2                       DCU_CTRLDESCL17_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_3                       DCU_CTRLDESCL17_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_4                       DCU_CTRLDESCL17_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_5                       DCU_CTRLDESCL17_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_6                       DCU_CTRLDESCL17_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_7                       DCU_CTRLDESCL17_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL17_8                       DCU_CTRLDESCL17_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_0                       DCU_CTRLDESCL18_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_1                       DCU_CTRLDESCL18_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_2                       DCU_CTRLDESCL18_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_3                       DCU_CTRLDESCL18_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_4                       DCU_CTRLDESCL18_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_5                       DCU_CTRLDESCL18_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_6                       DCU_CTRLDESCL18_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_7                       DCU_CTRLDESCL18_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL18_8                       DCU_CTRLDESCL18_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_0                       DCU_CTRLDESCL19_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_1                       DCU_CTRLDESCL19_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_2                       DCU_CTRLDESCL19_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_3                       DCU_CTRLDESCL19_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_4                       DCU_CTRLDESCL19_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_5                       DCU_CTRLDESCL19_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_6                       DCU_CTRLDESCL19_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_7                       DCU_CTRLDESCL19_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL19_8                       DCU_CTRLDESCL19_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_0                       DCU_CTRLDESCL20_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_1                       DCU_CTRLDESCL20_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_2                       DCU_CTRLDESCL20_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_3                       DCU_CTRLDESCL20_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_4                       DCU_CTRLDESCL20_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_5                       DCU_CTRLDESCL20_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_6                       DCU_CTRLDESCL20_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_7                       DCU_CTRLDESCL20_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL20_8                       DCU_CTRLDESCL20_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_0                       DCU_CTRLDESCL21_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_1                       DCU_CTRLDESCL21_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_2                       DCU_CTRLDESCL21_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_3                       DCU_CTRLDESCL21_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_4                       DCU_CTRLDESCL21_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_5                       DCU_CTRLDESCL21_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_6                       DCU_CTRLDESCL21_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_7                       DCU_CTRLDESCL21_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL21_8                       DCU_CTRLDESCL21_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_0                       DCU_CTRLDESCL22_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_1                       DCU_CTRLDESCL22_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_2                       DCU_CTRLDESCL22_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_3                       DCU_CTRLDESCL22_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_4                       DCU_CTRLDESCL22_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_5                       DCU_CTRLDESCL22_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_6                       DCU_CTRLDESCL22_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_7                       DCU_CTRLDESCL22_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL22_8                       DCU_CTRLDESCL22_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_0                       DCU_CTRLDESCL23_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_1                       DCU_CTRLDESCL23_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_2                       DCU_CTRLDESCL23_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_3                       DCU_CTRLDESCL23_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_4                       DCU_CTRLDESCL23_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_5                       DCU_CTRLDESCL23_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_6                       DCU_CTRLDESCL23_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_7                       DCU_CTRLDESCL23_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL23_8                       DCU_CTRLDESCL23_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_0                       DCU_CTRLDESCL24_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_1                       DCU_CTRLDESCL24_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_2                       DCU_CTRLDESCL24_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_3                       DCU_CTRLDESCL24_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_4                       DCU_CTRLDESCL24_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_5                       DCU_CTRLDESCL24_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_6                       DCU_CTRLDESCL24_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_7                       DCU_CTRLDESCL24_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL24_8                       DCU_CTRLDESCL24_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_0                       DCU_CTRLDESCL25_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_1                       DCU_CTRLDESCL25_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_2                       DCU_CTRLDESCL25_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_3                       DCU_CTRLDESCL25_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_4                       DCU_CTRLDESCL25_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_5                       DCU_CTRLDESCL25_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_6                       DCU_CTRLDESCL25_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_7                       DCU_CTRLDESCL25_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL25_8                       DCU_CTRLDESCL25_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_0                       DCU_CTRLDESCL26_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_1                       DCU_CTRLDESCL26_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_2                       DCU_CTRLDESCL26_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_3                       DCU_CTRLDESCL26_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_4                       DCU_CTRLDESCL26_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_5                       DCU_CTRLDESCL26_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_6                       DCU_CTRLDESCL26_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_7                       DCU_CTRLDESCL26_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL26_8                       DCU_CTRLDESCL26_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_0                       DCU_CTRLDESCL27_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_1                       DCU_CTRLDESCL27_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_2                       DCU_CTRLDESCL27_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_3                       DCU_CTRLDESCL27_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_4                       DCU_CTRLDESCL27_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_5                       DCU_CTRLDESCL27_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_6                       DCU_CTRLDESCL27_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_7                       DCU_CTRLDESCL27_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL27_8                       DCU_CTRLDESCL27_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_0                       DCU_CTRLDESCL28_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_1                       DCU_CTRLDESCL28_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_2                       DCU_CTRLDESCL28_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_3                       DCU_CTRLDESCL28_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_4                       DCU_CTRLDESCL28_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_5                       DCU_CTRLDESCL28_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_6                       DCU_CTRLDESCL28_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_7                       DCU_CTRLDESCL28_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL28_8                       DCU_CTRLDESCL28_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_0                       DCU_CTRLDESCL29_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_1                       DCU_CTRLDESCL29_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_2                       DCU_CTRLDESCL29_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_3                       DCU_CTRLDESCL29_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_4                       DCU_CTRLDESCL29_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_5                       DCU_CTRLDESCL29_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_6                       DCU_CTRLDESCL29_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_7                       DCU_CTRLDESCL29_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL29_8                       DCU_CTRLDESCL29_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_0                       DCU_CTRLDESCL30_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_1                       DCU_CTRLDESCL30_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_2                       DCU_CTRLDESCL30_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_3                       DCU_CTRLDESCL30_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_4                       DCU_CTRLDESCL30_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_5                       DCU_CTRLDESCL30_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_6                       DCU_CTRLDESCL30_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_7                       DCU_CTRLDESCL30_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL30_8                       DCU_CTRLDESCL30_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_0                       DCU_CTRLDESCL31_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_1                       DCU_CTRLDESCL31_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_2                       DCU_CTRLDESCL31_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_3                       DCU_CTRLDESCL31_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_4                       DCU_CTRLDESCL31_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_5                       DCU_CTRLDESCL31_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_6                       DCU_CTRLDESCL31_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_7                       DCU_CTRLDESCL31_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL31_8                       DCU_CTRLDESCL31_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_0                       DCU_CTRLDESCL32_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_1                       DCU_CTRLDESCL32_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_2                       DCU_CTRLDESCL32_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_3                       DCU_CTRLDESCL32_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_4                       DCU_CTRLDESCL32_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_5                       DCU_CTRLDESCL32_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_6                       DCU_CTRLDESCL32_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_7                       DCU_CTRLDESCL32_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL32_8                       DCU_CTRLDESCL32_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_0                       DCU_CTRLDESCL33_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_1                       DCU_CTRLDESCL33_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_2                       DCU_CTRLDESCL33_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_3                       DCU_CTRLDESCL33_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_4                       DCU_CTRLDESCL33_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_5                       DCU_CTRLDESCL33_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_6                       DCU_CTRLDESCL33_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_7                       DCU_CTRLDESCL33_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL33_8                       DCU_CTRLDESCL33_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_0                       DCU_CTRLDESCL34_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_1                       DCU_CTRLDESCL34_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_2                       DCU_CTRLDESCL34_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_3                       DCU_CTRLDESCL34_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_4                       DCU_CTRLDESCL34_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_5                       DCU_CTRLDESCL34_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_6                       DCU_CTRLDESCL34_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_7                       DCU_CTRLDESCL34_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL34_8                       DCU_CTRLDESCL34_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_0                       DCU_CTRLDESCL35_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_1                       DCU_CTRLDESCL35_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_2                       DCU_CTRLDESCL35_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_3                       DCU_CTRLDESCL35_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_4                       DCU_CTRLDESCL35_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_5                       DCU_CTRLDESCL35_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_6                       DCU_CTRLDESCL35_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_7                       DCU_CTRLDESCL35_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL35_8                       DCU_CTRLDESCL35_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_0                       DCU_CTRLDESCL36_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_1                       DCU_CTRLDESCL36_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_2                       DCU_CTRLDESCL36_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_3                       DCU_CTRLDESCL36_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_4                       DCU_CTRLDESCL36_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_5                       DCU_CTRLDESCL36_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_6                       DCU_CTRLDESCL36_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_7                       DCU_CTRLDESCL36_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL36_8                       DCU_CTRLDESCL36_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_0                       DCU_CTRLDESCL37_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_1                       DCU_CTRLDESCL37_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_2                       DCU_CTRLDESCL37_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_3                       DCU_CTRLDESCL37_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_4                       DCU_CTRLDESCL37_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_5                       DCU_CTRLDESCL37_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_6                       DCU_CTRLDESCL37_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_7                       DCU_CTRLDESCL37_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL37_8                       DCU_CTRLDESCL37_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_0                       DCU_CTRLDESCL38_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_1                       DCU_CTRLDESCL38_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_2                       DCU_CTRLDESCL38_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_3                       DCU_CTRLDESCL38_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_4                       DCU_CTRLDESCL38_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_5                       DCU_CTRLDESCL38_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_6                       DCU_CTRLDESCL38_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_7                       DCU_CTRLDESCL38_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL38_8                       DCU_CTRLDESCL38_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_0                       DCU_CTRLDESCL39_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_1                       DCU_CTRLDESCL39_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_2                       DCU_CTRLDESCL39_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_3                       DCU_CTRLDESCL39_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_4                       DCU_CTRLDESCL39_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_5                       DCU_CTRLDESCL39_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_6                       DCU_CTRLDESCL39_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_7                       DCU_CTRLDESCL39_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL39_8                       DCU_CTRLDESCL39_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_0                       DCU_CTRLDESCL40_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_1                       DCU_CTRLDESCL40_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_2                       DCU_CTRLDESCL40_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_3                       DCU_CTRLDESCL40_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_4                       DCU_CTRLDESCL40_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_5                       DCU_CTRLDESCL40_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_6                       DCU_CTRLDESCL40_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_7                       DCU_CTRLDESCL40_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL40_8                       DCU_CTRLDESCL40_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_0                       DCU_CTRLDESCL41_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_1                       DCU_CTRLDESCL41_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_2                       DCU_CTRLDESCL41_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_3                       DCU_CTRLDESCL41_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_4                       DCU_CTRLDESCL41_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_5                       DCU_CTRLDESCL41_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_6                       DCU_CTRLDESCL41_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_7                       DCU_CTRLDESCL41_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL41_8                       DCU_CTRLDESCL41_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_0                       DCU_CTRLDESCL42_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_1                       DCU_CTRLDESCL42_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_2                       DCU_CTRLDESCL42_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_3                       DCU_CTRLDESCL42_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_4                       DCU_CTRLDESCL42_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_5                       DCU_CTRLDESCL42_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_6                       DCU_CTRLDESCL42_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_7                       DCU_CTRLDESCL42_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL42_8                       DCU_CTRLDESCL42_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_0                       DCU_CTRLDESCL43_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_1                       DCU_CTRLDESCL43_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_2                       DCU_CTRLDESCL43_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_3                       DCU_CTRLDESCL43_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_4                       DCU_CTRLDESCL43_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_5                       DCU_CTRLDESCL43_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_6                       DCU_CTRLDESCL43_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_7                       DCU_CTRLDESCL43_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL43_8                       DCU_CTRLDESCL43_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_0                       DCU_CTRLDESCL44_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_1                       DCU_CTRLDESCL44_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_2                       DCU_CTRLDESCL44_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_3                       DCU_CTRLDESCL44_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_4                       DCU_CTRLDESCL44_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_5                       DCU_CTRLDESCL44_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_6                       DCU_CTRLDESCL44_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_7                       DCU_CTRLDESCL44_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL44_8                       DCU_CTRLDESCL44_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_0                       DCU_CTRLDESCL45_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_1                       DCU_CTRLDESCL45_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_2                       DCU_CTRLDESCL45_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_3                       DCU_CTRLDESCL45_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_4                       DCU_CTRLDESCL45_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_5                       DCU_CTRLDESCL45_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_6                       DCU_CTRLDESCL45_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_7                       DCU_CTRLDESCL45_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL45_8                       DCU_CTRLDESCL45_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_0                       DCU_CTRLDESCL46_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_1                       DCU_CTRLDESCL46_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_2                       DCU_CTRLDESCL46_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_3                       DCU_CTRLDESCL46_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_4                       DCU_CTRLDESCL46_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_5                       DCU_CTRLDESCL46_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_6                       DCU_CTRLDESCL46_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_7                       DCU_CTRLDESCL46_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL46_8                       DCU_CTRLDESCL46_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_0                       DCU_CTRLDESCL47_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_1                       DCU_CTRLDESCL47_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_2                       DCU_CTRLDESCL47_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_3                       DCU_CTRLDESCL47_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_4                       DCU_CTRLDESCL47_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_5                       DCU_CTRLDESCL47_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_6                       DCU_CTRLDESCL47_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_7                       DCU_CTRLDESCL47_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL47_8                       DCU_CTRLDESCL47_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_0                       DCU_CTRLDESCL48_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_1                       DCU_CTRLDESCL48_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_2                       DCU_CTRLDESCL48_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_3                       DCU_CTRLDESCL48_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_4                       DCU_CTRLDESCL48_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_5                       DCU_CTRLDESCL48_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_6                       DCU_CTRLDESCL48_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_7                       DCU_CTRLDESCL48_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL48_8                       DCU_CTRLDESCL48_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_0                       DCU_CTRLDESCL49_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_1                       DCU_CTRLDESCL49_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_2                       DCU_CTRLDESCL49_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_3                       DCU_CTRLDESCL49_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_4                       DCU_CTRLDESCL49_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_5                       DCU_CTRLDESCL49_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_6                       DCU_CTRLDESCL49_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_7                       DCU_CTRLDESCL49_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL49_8                       DCU_CTRLDESCL49_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_0                       DCU_CTRLDESCL50_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_1                       DCU_CTRLDESCL50_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_2                       DCU_CTRLDESCL50_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_3                       DCU_CTRLDESCL50_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_4                       DCU_CTRLDESCL50_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_5                       DCU_CTRLDESCL50_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_6                       DCU_CTRLDESCL50_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_7                       DCU_CTRLDESCL50_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL50_8                       DCU_CTRLDESCL50_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_0                       DCU_CTRLDESCL51_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_1                       DCU_CTRLDESCL51_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_2                       DCU_CTRLDESCL51_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_3                       DCU_CTRLDESCL51_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_4                       DCU_CTRLDESCL51_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_5                       DCU_CTRLDESCL51_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_6                       DCU_CTRLDESCL51_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_7                       DCU_CTRLDESCL51_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL51_8                       DCU_CTRLDESCL51_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_0                       DCU_CTRLDESCL52_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_1                       DCU_CTRLDESCL52_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_2                       DCU_CTRLDESCL52_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_3                       DCU_CTRLDESCL52_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_4                       DCU_CTRLDESCL52_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_5                       DCU_CTRLDESCL52_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_6                       DCU_CTRLDESCL52_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_7                       DCU_CTRLDESCL52_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL52_8                       DCU_CTRLDESCL52_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_0                       DCU_CTRLDESCL53_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_1                       DCU_CTRLDESCL53_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_2                       DCU_CTRLDESCL53_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_3                       DCU_CTRLDESCL53_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_4                       DCU_CTRLDESCL53_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_5                       DCU_CTRLDESCL53_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_6                       DCU_CTRLDESCL53_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_7                       DCU_CTRLDESCL53_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL53_8                       DCU_CTRLDESCL53_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_0                       DCU_CTRLDESCL54_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_1                       DCU_CTRLDESCL54_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_2                       DCU_CTRLDESCL54_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_3                       DCU_CTRLDESCL54_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_4                       DCU_CTRLDESCL54_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_5                       DCU_CTRLDESCL54_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_6                       DCU_CTRLDESCL54_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_7                       DCU_CTRLDESCL54_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL54_8                       DCU_CTRLDESCL54_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_0                       DCU_CTRLDESCL55_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_1                       DCU_CTRLDESCL55_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_2                       DCU_CTRLDESCL55_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_3                       DCU_CTRLDESCL55_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_4                       DCU_CTRLDESCL55_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_5                       DCU_CTRLDESCL55_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_6                       DCU_CTRLDESCL55_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_7                       DCU_CTRLDESCL55_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL55_8                       DCU_CTRLDESCL55_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_0                       DCU_CTRLDESCL56_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_1                       DCU_CTRLDESCL56_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_2                       DCU_CTRLDESCL56_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_3                       DCU_CTRLDESCL56_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_4                       DCU_CTRLDESCL56_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_5                       DCU_CTRLDESCL56_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_6                       DCU_CTRLDESCL56_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_7                       DCU_CTRLDESCL56_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL56_8                       DCU_CTRLDESCL56_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_0                       DCU_CTRLDESCL57_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_1                       DCU_CTRLDESCL57_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_2                       DCU_CTRLDESCL57_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_3                       DCU_CTRLDESCL57_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_4                       DCU_CTRLDESCL57_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_5                       DCU_CTRLDESCL57_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_6                       DCU_CTRLDESCL57_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_7                       DCU_CTRLDESCL57_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL57_8                       DCU_CTRLDESCL57_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_0                       DCU_CTRLDESCL58_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_1                       DCU_CTRLDESCL58_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_2                       DCU_CTRLDESCL58_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_3                       DCU_CTRLDESCL58_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_4                       DCU_CTRLDESCL58_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_5                       DCU_CTRLDESCL58_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_6                       DCU_CTRLDESCL58_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_7                       DCU_CTRLDESCL58_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL58_8                       DCU_CTRLDESCL58_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_0                       DCU_CTRLDESCL59_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_1                       DCU_CTRLDESCL59_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_2                       DCU_CTRLDESCL59_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_3                       DCU_CTRLDESCL59_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_4                       DCU_CTRLDESCL59_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_5                       DCU_CTRLDESCL59_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_6                       DCU_CTRLDESCL59_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_7                       DCU_CTRLDESCL59_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL59_8                       DCU_CTRLDESCL59_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_0                       DCU_CTRLDESCL60_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_1                       DCU_CTRLDESCL60_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_2                       DCU_CTRLDESCL60_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_3                       DCU_CTRLDESCL60_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_4                       DCU_CTRLDESCL60_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_5                       DCU_CTRLDESCL60_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_6                       DCU_CTRLDESCL60_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_7                       DCU_CTRLDESCL60_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL60_8                       DCU_CTRLDESCL60_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_0                       DCU_CTRLDESCL61_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_1                       DCU_CTRLDESCL61_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_2                       DCU_CTRLDESCL61_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_3                       DCU_CTRLDESCL61_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_4                       DCU_CTRLDESCL61_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_5                       DCU_CTRLDESCL61_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_6                       DCU_CTRLDESCL61_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_7                       DCU_CTRLDESCL61_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL61_8                       DCU_CTRLDESCL61_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_0                       DCU_CTRLDESCL62_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_1                       DCU_CTRLDESCL62_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_2                       DCU_CTRLDESCL62_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_3                       DCU_CTRLDESCL62_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_4                       DCU_CTRLDESCL62_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_5                       DCU_CTRLDESCL62_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_6                       DCU_CTRLDESCL62_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_7                       DCU_CTRLDESCL62_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL62_8                       DCU_CTRLDESCL62_8_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_0                       DCU_CTRLDESCL63_0_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_1                       DCU_CTRLDESCL63_1_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_2                       DCU_CTRLDESCL63_2_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_3                       DCU_CTRLDESCL63_3_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_4                       DCU_CTRLDESCL63_4_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_5                       DCU_CTRLDESCL63_5_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_6                       DCU_CTRLDESCL63_6_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_7                       DCU_CTRLDESCL63_7_REG(DCU1_BASE_PTR)
#define DCU1_CTRLDESCL63_8                       DCU_CTRLDESCL63_8_REG(DCU1_BASE_PTR)

/**
 * @}
 */ /* end of group DCU_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group DCU_Peripheral */


/* ----------------------------------------------------------------------------
   -- DDRMC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DDRMC_Peripheral DDRMC
 * @{
 */

/** DDRMC - Peripheral register structure */
typedef struct DDRMC_MemMap {
  uint32_t CR00;                                   /**< Control Register 0, offset: 0x0 */
  uint32_t CR01;                                   /**< Control Register 1, offset: 0x4 */
  uint32_t CR02;                                   /**< Control Register 2, offset: 0x8 */
  uint32_t CR03;                                   /**< Control Register 3, offset: 0xC */
  uint32_t CR04;                                   /**< Control Register 4, offset: 0x10 */
  uint32_t CR05;                                   /**< Control Register 5, offset: 0x14 */
  uint8_t RESERVED_0[12];
  uint32_t CR09;                                   /**< Control Register 9, offset: 0x24 */
  uint32_t CR10;                                   /**< Control Register 10, offset: 0x28 */
  uint32_t CR11;                                   /**< Control Register 11, offset: 0x2C */
  uint32_t CR12;                                   /**< Control Register 12, offset: 0x30 */
  uint32_t CR13;                                   /**< Control Register 13, offset: 0x34 */
  uint32_t CR14;                                   /**< Control Register 14, offset: 0x38 */
  uint8_t RESERVED_1[4];
  uint32_t CR16;                                   /**< Control Register 16, offset: 0x40 */
  uint32_t CR17;                                   /**< Control Register 17, offset: 0x44 */
  uint32_t CR18;                                   /**< Control Register 18, offset: 0x48 */
  uint8_t RESERVED_2[4];
  uint32_t CR20;                                   /**< Control Register 20, offset: 0x50 */
  uint32_t CR21;                                   /**< Control Register 21, offset: 0x54 */
  uint32_t CR22;                                   /**< Control Register 22, offset: 0x58 */
  uint32_t CR23;                                   /**< Control register 23, offset: 0x5C */
  uint32_t CR24;                                   /**< Control Register 24, offset: 0x60 */
  uint32_t CR25;                                   /**< Control Register 25, offset: 0x64 */
  uint32_t CR26;                                   /**< Control Register 26, offset: 0x68 */
  uint8_t RESERVED_3[4];
  uint32_t CR28;                                   /**< Control Register 28, offset: 0x70 */
  uint32_t CR29;                                   /**< Control Register 29, offset: 0x74 */
  uint32_t CR30;                                   /**< Control Register 30, offset: 0x78 */
  uint32_t CR31;                                   /**< Control Register 31, offset: 0x7C */
  uint8_t RESERVED_4[4];
  uint32_t CR33;                                   /**< Control Register 33, offset: 0x84 */
  uint32_t CR34;                                   /**< Control Register 34, offset: 0x88 */
  uint32_t CR35;                                   /**< Control Register 35, offset: 0x8C */
  uint32_t CR36;                                   /**< Control register 36, offset: 0x90 */
  uint32_t CR37;                                   /**< Control Register 37, offset: 0x94 */
  uint32_t CR38;                                   /**< Control Register 38, offset: 0x98 */
  uint32_t CR39;                                   /**< Control Register 39, offset: 0x9C */
  uint8_t RESERVED_5[4];
  uint32_t CR41;                                   /**< Control Register 41, offset: 0xA4 */
  uint8_t RESERVED_6[12];
  uint32_t CR45;                                   /**< Control Register 45, offset: 0xB4 */
  uint32_t CR46;                                   /**< Control Register 46, offset: 0xB8 */
  uint32_t CR47;                                   /**< Control Register 47, offset: 0xBC */
  uint32_t CR48;                                   /**< Control Register 48, offset: 0xC0 */
  uint32_t CR49;                                   /**< Control Register 49, offset: 0xC4 */
  uint8_t RESERVED_7[4];
  uint32_t CR51;                                   /**< Control Register 51, offset: 0xCC */
  uint32_t CR52;                                   /**< Control Register 52, offset: 0xD0 */
  uint8_t RESERVED_8[16];
  uint32_t CR57;                                   /**< Control Register 57, offset: 0xE4 */
  uint32_t CR58;                                   /**< Control Register 58, offset: 0xE8 */
  uint32_t CR59;                                   /**< Control Register 59, offset: 0xEC */
  uint32_t CR60;                                   /**< Control Register 60, offset: 0xF0 */
  uint32_t CR61;                                   /**< Control Register 61, offset: 0xF4 */
  uint32_t CR62;                                   /**< Control Register 62, offset: 0xF8 */
  uint32_t CR63;                                   /**< Control Register 63, offset: 0xFC */
  uint32_t CR64;                                   /**< Control Register 64, offset: 0x100 */
  uint32_t CR65;                                   /**< Control Register 65, offset: 0x104 */
  uint32_t CR66;                                   /**< Control Register 66, offset: 0x108 */
  uint32_t CR67;                                   /**< Control Register 67, offset: 0x10C */
  uint8_t RESERVED_9[4];
  uint32_t CR69;                                   /**< Control Register 69, offset: 0x114 */
  uint32_t CR70;                                   /**< Control Register 70, offset: 0x118 */
  uint32_t CR71;                                   /**< Control Register 71, offset: 0x11C */
  uint32_t CR72;                                   /**< Control Register 72, offset: 0x120 */
  uint32_t CR73;                                   /**< Control Register 73, offset: 0x124 */
  uint32_t CR74;                                   /**< Control Register 74, offset: 0x128 */
  uint32_t CR75;                                   /**< Control Register 75, offset: 0x12C */
  uint32_t CR76;                                   /**< Control Register 76, offset: 0x130 */
  uint32_t CR77;                                   /**< Control Register 77, offset: 0x134 */
  uint32_t CR78;                                   /**< Control Register 78, offset: 0x138 */
  uint32_t CR79;                                   /**< Control Register 79, offset: 0x13C */
  uint32_t CR80;                                   /**< Control Register 80, offset: 0x140 */
  uint32_t CR81;                                   /**< Control Register 81, offset: 0x144 */
  uint32_t CR82;                                   /**< Control Register 82, offset: 0x148 */
  uint32_t CR83;                                   /**< Control Register 83, offset: 0x14C */
  uint32_t CR84;                                   /**< Control Register 84, offset: 0x150 */
  uint32_t CR85;                                   /**< Control Register 85, offset: 0x154 */
  uint32_t CR86;                                   /**< Control Register 86, offset: 0x158 */
  uint32_t CR87;                                   /**< Control Register 87, offset: 0x15C */
  uint32_t CR88;                                   /**< Control Register 88, offset: 0x160 */
  uint32_t CR89;                                   /**< Control Register 89, offset: 0x164 */
  uint8_t RESERVED_10[4];
  uint32_t CR91;                                   /**< Control Register 91, offset: 0x16C */
  uint32_t CR92;                                   /**< Control Register 92, offset: 0x170 */
  uint32_t CR93;                                   /**< Control Register 93, offset: 0x174 */
  uint32_t CR94;                                   /**< Control Register 94, offset: 0x178 */
  uint32_t CR95;                                   /**< Control Register 95, offset: 0x17C */
  uint32_t CR96;                                   /**< Control Register 96, offset: 0x180 */
  uint32_t CR97;                                   /**< Control Register 97, offset: 0x184 */
  uint32_t CR98;                                   /**< Control Register 98, offset: 0x188 */
  uint32_t CR99;                                   /**< Control Register 99, offset: 0x18C */
  uint32_t CR100;                                  /**< Control Register 100, offset: 0x190 */
  uint32_t CR101;                                  /**< Control Register 101, offset: 0x194 */
  uint32_t CR102;                                  /**< Control Register 102, offset: 0x198 */
  uint32_t CR103;                                  /**< Control Register 103, offset: 0x19C */
  uint32_t CR104;                                  /**< Control Register 104, offset: 0x1A0 */
  uint32_t CR105;                                  /**< Control Register 105, offset: 0x1A4 */
  uint32_t CR106;                                  /**< Control Register 106, offset: 0x1A8 */
  uint32_t CR107;                                  /**< Control Register 107, offset: 0x1AC */
  uint32_t CR108;                                  /**< Control Register 108, offset: 0x1B0 */
  uint32_t CR109;                                  /**< Control Register 109, offset: 0x1B4 */
  uint32_t CR110;                                  /**< Control Register 110, offset: 0x1B8 */
  uint8_t RESERVED_11[4];
  uint32_t CR112;                                  /**< Control Register 112, offset: 0x1C0 */
  uint32_t CR113;                                  /**< Control Register 113, offset: 0x1C4 */
  uint32_t CR114;                                  /**< Control Register 114, offset: 0x1C8 */
  uint32_t CR115;                                  /**< Control Register 114, offset: 0x1CC */
  uint8_t RESERVED_12[4];
  uint32_t CR117;                                  /**< Control Register 117, offset: 0x1D4 */
  uint32_t CR118;                                  /**< Control Register 118, offset: 0x1D8 */
  uint32_t CR119;                                  /**< Control Register 119, offset: 0x1DC */
  uint32_t CR120;                                  /**< Control Register 120, offset: 0x1E0 */
  uint32_t CR121;                                  /**< Control Register 121, offset: 0x1E4 */
  uint32_t CR122;                                  /**< Control Register 122, offset: 0x1E8 */
  uint32_t CR123;                                  /**< Control Register 123, offset: 0x1EC */
  uint32_t CR124;                                  /**< Control Register 124, offset: 0x1F0 */
  uint32_t CR125;                                  /**< Control Register 125, offset: 0x1F4 */
  uint32_t CR126;                                  /**< Control Register 126, offset: 0x1F8 */
  uint32_t CR127;                                  /**< Controla Register 127, offset: 0x1FC */
  uint8_t RESERVED_13[12];
  uint32_t CR131;                                  /**< Control Register 131, offset: 0x20C */
  uint32_t CR132;                                  /**< Control Register 132, offset: 0x210 */
  uint8_t RESERVED_14[12];
  uint32_t CR136;                                  /**< Control Register 137, offset: 0x220 */
  uint32_t CR137;                                  /**< Control Register 137, offset: 0x224 */
  uint32_t CR138;                                  /**< Control Register 138, offset: 0x228 */
  uint32_t CR139;                                  /**< Control Register 139, offset: 0x22C */
  uint32_t CR140;                                  /**< Control Register 140, offset: 0x230 */
  uint32_t CR141;                                  /**< Control Register 141, offset: 0x234 */
  uint32_t CR142;                                  /**< Control Register 142, offset: 0x238 */
  uint32_t CR143;                                  /**< Control Register 143, offset: 0x23C */
  uint32_t CR144;                                  /**< Control Register 144, offset: 0x240 */
  uint32_t CR145;                                  /**< Control Register 145, offset: 0x244 */
  uint32_t CR146;                                  /**< Control Register 146, offset: 0x248 */
  uint32_t CR147;                                  /**< Control Register 147, offset: 0x24C */
  uint32_t CR148;                                  /**< Control Register 148, offset: 0x250 */
  uint32_t CR149;                                  /**< Control Register 149, offset: 0x254 */
  uint32_t CR150;                                  /**< Control Register 150, offset: 0x258 */
  uint32_t CR151;                                  /**< Control Register 151, offset: 0x25C */
  uint32_t CR152;                                  /**< Control Register 152, offset: 0x260 */
  uint32_t CR153;                                  /**< Control Register 153, offset: 0x264 */
  uint32_t CR154;                                  /**< Control Register 154, offset: 0x268 */
  uint32_t CR155;                                  /**< Control Register 155, offset: 0x26C */
  uint8_t RESERVED_15[8];
  uint32_t CR158;                                  /**< Control Register 158, offset: 0x278 */
  uint32_t CR159;                                  /**< Control Register 159, offset: 0x27C */
  uint8_t RESERVED_16[384];
  uint32_t PHY_DQ_TR0;                             /**< PHY DQ Timing Register, offset: 0x400 */
  uint32_t PHY_DQS_TR0;                            /**< PHY DQS Timing Register, offset: 0x404 */
  uint32_t PHY_GATE_CR0;                           /**< PHY Gate Control Register, offset: 0x408 */
  uint32_t PHY_DLL_MASTER_CR0;                     /**< PHY DLL Master Control Register, offset: 0x40C */
  uint32_t PHY_DLL_SLAVE_CR0;                      /**< PHY DLL Slave Control Register, offset: 0x410 */
  uint8_t RESERVED_17[24];
  uint32_t PHY_DLL_STATUS_REG0;                    /**< PHY DLL Status Register, offset: 0x42C */
  uint8_t RESERVED_18[16];
  uint32_t PHY_DQ_TR1;                             /**< PHY DQ Timing Register, offset: 0x440 */
  uint32_t PHY_DQS_TR1;                            /**< PHY DQS Timing Register, offset: 0x444 */
  uint32_t PHY_GATE_CR1;                           /**< PHY Gate Control Register, offset: 0x448 */
  uint32_t PHY_DLL_MASTER_CR1;                     /**< PHY DLL Master Control Register, offset: 0x44C */
  uint32_t PHY_DLL_SLAVE_CR1;                      /**< PHY DLL Slave Control Register, offset: 0x450 */
  uint8_t RESERVED_19[24];
  uint32_t PHY_DLL_STATUS_REG1;                    /**< PHY DLL Status Register, offset: 0x46C */
  uint8_t RESERVED_20[16];
  uint32_t PHY_DQ_TR2;                             /**< PHY DQ Timing Register, offset: 0x480 */
  uint32_t PHY_DQS_TR2;                            /**< PHY DQS Timing Register, offset: 0x484 */
  uint32_t PHY_GATE_CR2;                           /**< PHY Gate Control Register, offset: 0x488 */
  uint32_t PHY_DLL_MASTER_CR2;                     /**< PHY DLL Master Control Register, offset: 0x48C */
  uint32_t PHY_DLL_SLAVE_CR2;                      /**< PHY DLL Slave Control Register, offset: 0x490 */
  uint8_t RESERVED_21[24];
  uint32_t PHY_DLL_STATUS_REG2;                    /**< PHY DLL Status Register, offset: 0x4AC */
  uint8_t RESERVED_22[16];
  uint32_t PHY48;                                   /**< 0x4C0 */
  uint32_t PHY_DLL_SLAVE_CTL_LPDDR2_REG;           /**< PHY DLL Slave_Control_LPDDR2_Register, offset: 0x4C4 */
  uint32_t PHY_GB_CR;                              /**< PHY Global Control Register, offset: 0x4C8 */
  uint32_t PHY51;
  uint32_t PHY52;
  uint32_t PHY53;
  uint32_t PHY54;
  uint32_t PHY55;
  uint32_t PHY56;
  uint32_t PHY57;
  uint32_t PHY58;
  uint32_t PHY59;
  uint32_t PHY60;
  uint32_t PHY61;
  uint32_t PHY62;
  uint32_t PHY63;
  uint32_t PHY64;
  uint32_t PHY65;
  uint32_t PHY66;
  uint32_t PHY67;
  uint32_t PHY68;
} volatile *DDRMC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DDRMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DDRMC_Register_Accessor_Macros DDRMC - Register accessor macros
 * @{
 */


/* DDRMC - Register accessors */
#define DDRMC_CR00_REG(base)                     ((base)->CR00)
#define DDRMC_CR01_REG(base)                     ((base)->CR01)
#define DDRMC_CR02_REG(base)                     ((base)->CR02)
#define DDRMC_CR03_REG(base)                     ((base)->CR03)
#define DDRMC_CR04_REG(base)                     ((base)->CR04)
#define DDRMC_CR05_REG(base)                     ((base)->CR05)
#define DDRMC_CR09_REG(base)                     ((base)->CR09)
#define DDRMC_CR10_REG(base)                     ((base)->CR10)
#define DDRMC_CR11_REG(base)                     ((base)->CR11)
#define DDRMC_CR12_REG(base)                     ((base)->CR12)
#define DDRMC_CR13_REG(base)                     ((base)->CR13)
#define DDRMC_CR14_REG(base)                     ((base)->CR14)
#define DDRMC_CR16_REG(base)                     ((base)->CR16)
#define DDRMC_CR17_REG(base)                     ((base)->CR17)
#define DDRMC_CR18_REG(base)                     ((base)->CR18)
#define DDRMC_CR20_REG(base)                     ((base)->CR20)
#define DDRMC_CR21_REG(base)                     ((base)->CR21)
#define DDRMC_CR22_REG(base)                     ((base)->CR22)
#define DDRMC_CR23_REG(base)                     ((base)->CR23)
#define DDRMC_CR24_REG(base)                     ((base)->CR24)
#define DDRMC_CR25_REG(base)                     ((base)->CR25)
#define DDRMC_CR26_REG(base)                     ((base)->CR26)
#define DDRMC_CR28_REG(base)                     ((base)->CR28)
#define DDRMC_CR29_REG(base)                     ((base)->CR29)
#define DDRMC_CR30_REG(base)                     ((base)->CR30)
#define DDRMC_CR31_REG(base)                     ((base)->CR31)
#define DDRMC_CR33_REG(base)                     ((base)->CR33)
#define DDRMC_CR34_REG(base)                     ((base)->CR34)
#define DDRMC_CR35_REG(base)                     ((base)->CR35)
#define DDRMC_CR36_REG(base)                     ((base)->CR36)
#define DDRMC_CR37_REG(base)                     ((base)->CR37)
#define DDRMC_CR38_REG(base)                     ((base)->CR38)
#define DDRMC_CR39_REG(base)                     ((base)->CR39)
#define DDRMC_CR41_REG(base)                     ((base)->CR41)
#define DDRMC_CR45_REG(base)                     ((base)->CR45)
#define DDRMC_CR46_REG(base)                     ((base)->CR46)
#define DDRMC_CR47_REG(base)                     ((base)->CR47)
#define DDRMC_CR48_REG(base)                     ((base)->CR48)
#define DDRMC_CR49_REG(base)                     ((base)->CR49)
#define DDRMC_CR51_REG(base)                     ((base)->CR51)
#define DDRMC_CR52_REG(base)                     ((base)->CR52)
#define DDRMC_CR57_REG(base)                     ((base)->CR57)
#define DDRMC_CR58_REG(base)                     ((base)->CR58)
#define DDRMC_CR59_REG(base)                     ((base)->CR59)
#define DDRMC_CR60_REG(base)                     ((base)->CR60)
#define DDRMC_CR61_REG(base)                     ((base)->CR61)
#define DDRMC_CR62_REG(base)                     ((base)->CR62)
#define DDRMC_CR63_REG(base)                     ((base)->CR63)
#define DDRMC_CR64_REG(base)                     ((base)->CR64)
#define DDRMC_CR65_REG(base)                     ((base)->CR65)
#define DDRMC_CR66_REG(base)                     ((base)->CR66)
#define DDRMC_CR67_REG(base)                     ((base)->CR67)
#define DDRMC_CR69_REG(base)                     ((base)->CR69)
#define DDRMC_CR70_REG(base)                     ((base)->CR70)
#define DDRMC_CR71_REG(base)                     ((base)->CR71)
#define DDRMC_CR72_REG(base)                     ((base)->CR72)
#define DDRMC_CR73_REG(base)                     ((base)->CR73)
#define DDRMC_CR74_REG(base)                     ((base)->CR74)
#define DDRMC_CR75_REG(base)                     ((base)->CR75)
#define DDRMC_CR76_REG(base)                     ((base)->CR76)
#define DDRMC_CR77_REG(base)                     ((base)->CR77)
#define DDRMC_CR78_REG(base)                     ((base)->CR78)
#define DDRMC_CR79_REG(base)                     ((base)->CR79)
#define DDRMC_CR80_REG(base)                     ((base)->CR80)
#define DDRMC_CR81_REG(base)                     ((base)->CR81)
#define DDRMC_CR82_REG(base)                     ((base)->CR82)
#define DDRMC_CR83_REG(base)                     ((base)->CR83)
#define DDRMC_CR84_REG(base)                     ((base)->CR84)
#define DDRMC_CR85_REG(base)                     ((base)->CR85)
#define DDRMC_CR86_REG(base)                     ((base)->CR86)
#define DDRMC_CR87_REG(base)                     ((base)->CR87)
#define DDRMC_CR88_REG(base)                     ((base)->CR88)
#define DDRMC_CR89_REG(base)                     ((base)->CR89)
#define DDRMC_CR91_REG(base)                     ((base)->CR91)
#define DDRMC_CR92_REG(base)                     ((base)->CR92)
#define DDRMC_CR93_REG(base)                     ((base)->CR93)
#define DDRMC_CR94_REG(base)                     ((base)->CR94)
#define DDRMC_CR95_REG(base)                     ((base)->CR95)
#define DDRMC_CR96_REG(base)                     ((base)->CR96)
#define DDRMC_CR97_REG(base)                     ((base)->CR97)
#define DDRMC_CR98_REG(base)                     ((base)->CR98)
#define DDRMC_CR99_REG(base)                     ((base)->CR99)
#define DDRMC_CR100_REG(base)                    ((base)->CR100)
#define DDRMC_CR101_REG(base)                    ((base)->CR101)
#define DDRMC_CR102_REG(base)                    ((base)->CR102)
#define DDRMC_CR103_REG(base)                    ((base)->CR103)
#define DDRMC_CR104_REG(base)                    ((base)->CR104)
#define DDRMC_CR105_REG(base)                    ((base)->CR105)
#define DDRMC_CR106_REG(base)                    ((base)->CR106)
#define DDRMC_CR107_REG(base)                    ((base)->CR107)
#define DDRMC_CR108_REG(base)                    ((base)->CR108)
#define DDRMC_CR109_REG(base)                    ((base)->CR109)
#define DDRMC_CR110_REG(base)                    ((base)->CR110)
#define DDRMC_CR112_REG(base)                    ((base)->CR112)
#define DDRMC_CR113_REG(base)                    ((base)->CR113)
#define DDRMC_CR114_REG(base)                    ((base)->CR114)
#define DDRMC_CR117_REG(base)                    ((base)->CR117)
#define DDRMC_CR118_REG(base)                    ((base)->CR118)
#define DDRMC_CR119_REG(base)                    ((base)->CR119)
#define DDRMC_CR120_REG(base)                    ((base)->CR120)
#define DDRMC_CR121_REG(base)                    ((base)->CR121)
#define DDRMC_CR122_REG(base)                    ((base)->CR122)
#define DDRMC_CR123_REG(base)                    ((base)->CR123)
#define DDRMC_CR124_REG(base)                    ((base)->CR124)
#define DDRMC_CR125_REG(base)                    ((base)->CR125)
#define DDRMC_CR126_REG(base)                    ((base)->CR126)
#define DDRMC_CR127_REG(base)                    ((base)->CR127)
#define DDRMC_CR131_REG(base)                    ((base)->CR131)
#define DDRMC_CR132_REG(base)                    ((base)->CR132)
#define DDRMC_CR137_REG(base)                    ((base)->CR137)
#define DDRMC_CR138_REG(base)                    ((base)->CR138)
#define DDRMC_CR139_REG(base)                    ((base)->CR139)
#define DDRMC_CR140_REG(base)                    ((base)->CR140)
#define DDRMC_CR141_REG(base)                    ((base)->CR141)
#define DDRMC_CR142_REG(base)                    ((base)->CR142)
#define DDRMC_CR143_REG(base)                    ((base)->CR143)
#define DDRMC_CR144_REG(base)                    ((base)->CR144)
#define DDRMC_CR145_REG(base)                    ((base)->CR145)
#define DDRMC_CR146_REG(base)                    ((base)->CR146)
#define DDRMC_CR147_REG(base)                    ((base)->CR147)
#define DDRMC_CR148_REG(base)                    ((base)->CR148)
#define DDRMC_CR149_REG(base)                    ((base)->CR149)
#define DDRMC_CR150_REG(base)                    ((base)->CR150)
#define DDRMC_CR151_REG(base)                    ((base)->CR151)
#define DDRMC_CR152_REG(base)                    ((base)->CR152)
#define DDRMC_CR153_REG(base)                    ((base)->CR153)
#define DDRMC_CR154_REG(base)                    ((base)->CR154)
#define DDRMC_CR155_REG(base)                    ((base)->CR155)
#define DDRMC_CR158_REG(base)                    ((base)->CR158)
#define DDRMC_CR159_REG(base)                    ((base)->CR159)
#define DDRMC_PHY_DQ_TR0_REG(base)               ((base)->PHY_DQ_TR0)
#define DDRMC_PHY_DQS_TR0_REG(base)              ((base)->PHY_DQS_TR0)
#define DDRMC_PHY_GATE_CR0_REG(base)             ((base)->PHY_GATE_CR0)
#define DDRMC_PHY_DLL_MASTER_CR0_REG(base)       ((base)->PHY_DLL_MASTER_CR0)
#define DDRMC_PHY_DLL_SLAVE_CR0_REG(base)        ((base)->PHY_DLL_SLAVE_CR0)
#define DDRMC_PHY_DLL_STATUS_REG0_REG(base)      ((base)->PHY_DLL_STATUS_REG0)
#define DDRMC_PHY_DQ_TR1_REG(base)               ((base)->PHY_DQ_TR1)
#define DDRMC_PHY_DQS_TR1_REG(base)              ((base)->PHY_DQS_TR1)
#define DDRMC_PHY_GATE_CR1_REG(base)             ((base)->PHY_GATE_CR1)
#define DDRMC_PHY_DLL_MASTER_CR1_REG(base)       ((base)->PHY_DLL_MASTER_CR1)
#define DDRMC_PHY_DLL_SLAVE_CR1_REG(base)        ((base)->PHY_DLL_SLAVE_CR1)
#define DDRMC_PHY_DLL_STATUS_REG1_REG(base)      ((base)->PHY_DLL_STATUS_REG1)
#define DDRMC_PHY_DQ_TR2_REG(base)               ((base)->PHY_DQ_TR2)
#define DDRMC_PHY_DQS_TR2_REG(base)              ((base)->PHY_DQS_TR2)
#define DDRMC_PHY_GATE_CR2_REG(base)             ((base)->PHY_GATE_CR2)
#define DDRMC_PHY_DLL_MASTER_CR2_REG(base)       ((base)->PHY_DLL_MASTER_CR2)
#define DDRMC_PHY_DLL_SLAVE_CR2_REG(base)        ((base)->PHY_DLL_SLAVE_CR2)
#define DDRMC_PHY_DLL_STATUS_REG2_REG(base)      ((base)->PHY_DLL_STATUS_REG2)
#define DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_REG(base) ((base)->PHY_DLL_SLAVE_CTL_LPDDR2_REG)
#define DDRMC_PHY_GB_CR_REG(base)                ((base)->PHY_GB_CR)

/**
 * @}
 */ /* end of group DDRMC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DDRMC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DDRMC_Register_Masks DDRMC Register Masks
 * @{
 */

/* CR00 Bit Fields */
#define DDRMC_CR00_START_MASK                    0x1u
#define DDRMC_CR00_START_SHIFT                   0
#define DDRMC_CR00_DRAM_CLASS_MASK               0xF00u
#define DDRMC_CR00_DRAM_CLASS_SHIFT              8
#define DDRMC_CR00_DRAM_CLASS(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR00_DRAM_CLASS_SHIFT))&DDRMC_CR00_DRAM_CLASS_MASK)
#define DDRMC_CR00_VERSION_MASK                  0xFFFF0000u
#define DDRMC_CR00_VERSION_SHIFT                 16
#define DDRMC_CR00_VERSION(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR00_VERSION_SHIFT))&DDRMC_CR00_VERSION_MASK)
/* CR01 Bit Fields */
#define DDRMC_CR01_MAX_ROW_REG_MASK              0x1Fu
#define DDRMC_CR01_MAX_ROW_REG_SHIFT             0
#define DDRMC_CR01_MAX_ROW_REG(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR01_MAX_ROW_REG_SHIFT))&DDRMC_CR01_MAX_ROW_REG_MASK)
#define DDRMC_CR01_MAX_COL_REG_MASK              0xF00u
#define DDRMC_CR01_MAX_COL_REG_SHIFT             8
#define DDRMC_CR01_MAX_COL_REG(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR01_MAX_COL_REG_SHIFT))&DDRMC_CR01_MAX_COL_REG_MASK)
#define DDRMC_CR01_MAX_CS_REG_MASK               0x10000u
#define DDRMC_CR01_MAX_CS_REG_SHIFT              16
/* CR02 Bit Fields */
#define DDRMC_CR02_TINIT_MASK                    0xFFFFFFu
#define DDRMC_CR02_TINIT_SHIFT                   0
#define DDRMC_CR02_TINIT(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR02_TINIT_SHIFT))&DDRMC_CR02_TINIT_MASK)
/* CR03 Bit Fields */
#define DDRMC_CR03_TINIT3_MASK                   0xFFFFFFu
#define DDRMC_CR03_TINIT3_SHIFT                  0
#define DDRMC_CR03_TINIT3(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR03_TINIT3_SHIFT))&DDRMC_CR03_TINIT3_MASK)
/* CR04 Bit Fields */
#define DDRMC_CR04_TINIT4_MASK                   0xFFFFFFu
#define DDRMC_CR04_TINIT4_SHIFT                  0
#define DDRMC_CR04_TINIT4(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR04_TINIT4_SHIFT))&DDRMC_CR04_TINIT4_MASK)
/* CR05 Bit Fields */
#define DDRMC_CR05_TINIT5_MASK                   0xFFFFFFu
#define DDRMC_CR05_TINIT5_SHIFT                  0
#define DDRMC_CR05_TINIT5(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR05_TINIT5_SHIFT))&DDRMC_CR05_TINIT5_MASK)
/* CR09 Bit Fields */
#define DDRMC_CR09_NO_MRR_MASK                   0x1000000u
#define DDRMC_CR09_NO_MRR_SHIFT                  24
/* CR10 Bit Fields */
#define DDRMC_CR10_TRST_PWRON_MASK               0xFFFFFFFFu
#define DDRMC_CR10_TRST_PWRON_SHIFT              0
#define DDRMC_CR10_TRST_PWRON(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR10_TRST_PWRON_SHIFT))&DDRMC_CR10_TRST_PWRON_MASK)
/* CR11 Bit Fields */
#define DDRMC_CR11_CKE_INACTIVE_MASK             0xFFFFFFFFu
#define DDRMC_CR11_CKE_INACTIVE_SHIFT            0
#define DDRMC_CR11_CKE_INACTIVE(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR11_CKE_INACTIVE_SHIFT))&DDRMC_CR11_CKE_INACTIVE_MASK)
/* CR12 Bit Fields */
#define DDRMC_CR12_CASLAT_LIN_MASK               0x3Fu
#define DDRMC_CR12_CASLAT_LIN_SHIFT              0
#define DDRMC_CR12_CASLAT_LIN(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR12_CASLAT_LIN_SHIFT))&DDRMC_CR12_CASLAT_LIN_MASK)
#define DDRMC_CR12_WRLAT_MASK                    0x1F00u
#define DDRMC_CR12_WRLAT_SHIFT                   8
#define DDRMC_CR12_WRLAT(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR12_WRLAT_SHIFT))&DDRMC_CR12_WRLAT_MASK)
/* CR13 Bit Fields */
#define DDRMC_CR13_TBST_INT_INTERVAL_MASK        0x7u
#define DDRMC_CR13_TBST_INT_INTERVAL_SHIFT       0
#define DDRMC_CR13_TBST_INT_INTERVAL(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_CR13_TBST_INT_INTERVAL_SHIFT))&DDRMC_CR13_TBST_INT_INTERVAL_MASK)
#define DDRMC_CR13_TCCD_MASK                     0x1F00u
#define DDRMC_CR13_TCCD_SHIFT                    8
#define DDRMC_CR13_TCCD(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR13_TCCD_SHIFT))&DDRMC_CR13_TCCD_MASK)
#define DDRMC_CR13_TRRD_MASK                     0xFF0000u
#define DDRMC_CR13_TRRD_SHIFT                    16
#define DDRMC_CR13_TRRD(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR13_TRRD_SHIFT))&DDRMC_CR13_TRRD_MASK)
#define DDRMC_CR13_TRC_MASK                      0xFF000000u
#define DDRMC_CR13_TRC_SHIFT                     24
#define DDRMC_CR13_TRC(x)                        (((uint32_t)(((uint32_t)(x))<<DDRMC_CR13_TRC_SHIFT))&DDRMC_CR13_TRC_MASK)
/* CR14 Bit Fields */
#define DDRMC_CR14_TRAS_MIN_MASK                 0xFFu
#define DDRMC_CR14_TRAS_MIN_SHIFT                0
#define DDRMC_CR14_TRAS_MIN(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR14_TRAS_MIN_SHIFT))&DDRMC_CR14_TRAS_MIN_MASK)
#define DDRMC_CR14_TWTR_MASK                     0xF00u
#define DDRMC_CR14_TWTR_SHIFT                    8
#define DDRMC_CR14_TWTR(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR14_TWTR_SHIFT))&DDRMC_CR14_TWTR_MASK)
#define DDRMC_CR14_TRP_MASK                      0x1F0000u
#define DDRMC_CR14_TRP_SHIFT                     16
#define DDRMC_CR14_TRP(x)                        (((uint32_t)(((uint32_t)(x))<<DDRMC_CR14_TRP_SHIFT))&DDRMC_CR14_TRP_MASK)
#define DDRMC_CR14_TFAW_MASK                     0x3F000000u
#define DDRMC_CR14_TFAW_SHIFT                    24
#define DDRMC_CR14_TFAW(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR14_TFAW_SHIFT))&DDRMC_CR14_TFAW_MASK)
/* CR16 Bit Fields */
#define DDRMC_CR16_TRTP_MASK                     0xF0000u
#define DDRMC_CR16_TRTP_SHIFT                    16
#define DDRMC_CR16_TRTP(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR16_TRTP_SHIFT))&DDRMC_CR16_TRTP_MASK)
#define DDRMC_CR16_TMRD_MASK                     0x1F000000u
#define DDRMC_CR16_TMRD_SHIFT                    24
#define DDRMC_CR16_TMRD(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR16_TMRD_SHIFT))&DDRMC_CR16_TMRD_MASK)
/* CR17 Bit Fields */
#define DDRMC_CR17_TMOD_MASK                     0xFFu
#define DDRMC_CR17_TMOD_SHIFT                    0
#define DDRMC_CR17_TMOD(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR17_TMOD_SHIFT))&DDRMC_CR17_TMOD_MASK)
#define DDRMC_CR17_TRAS_MAX_MASK                 0x1FFFF00u
#define DDRMC_CR17_TRAS_MAX_SHIFT                8
#define DDRMC_CR17_TRAS_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR17_TRAS_MAX_SHIFT))&DDRMC_CR17_TRAS_MAX_MASK)
/* CR18 Bit Fields */
#define DDRMC_CR18_TCKE_MASK                     0x7u
#define DDRMC_CR18_TCKE_SHIFT                    0
#define DDRMC_CR18_TCKE(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR18_TCKE_SHIFT))&DDRMC_CR18_TCKE_MASK)
#define DDRMC_CR18_TCKESR_MASK                   0x1F00u
#define DDRMC_CR18_TCKESR_SHIFT                  8
#define DDRMC_CR18_TCKESR(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR18_TCKESR_SHIFT))&DDRMC_CR18_TCKESR_MASK)
/* CR20 Bit Fields */
#define DDRMC_CR20_WRITEINTERP_MASK              0x10000u
#define DDRMC_CR20_WRITEINTERP_SHIFT             16
#define DDRMC_CR20_AP_MASK                       0x1000000u
#define DDRMC_CR20_AP_SHIFT                      24
/* CR21 Bit Fields */
#define DDRMC_CR21_CCMAP_MASK                    0x1u
#define DDRMC_CR21_CCMAP_SHIFT                   0
#define DDRMC_CR21_TRAS_LOCKOUT_MASK             0x100u
#define DDRMC_CR21_TRAS_LOCKOUT_SHIFT            8
#define DDRMC_CR21_TRCD_INT_MASK                 0xFF0000u
#define DDRMC_CR21_TRCD_INT_SHIFT                16
#define DDRMC_CR21_TRCD_INT(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR21_TRCD_INT_SHIFT))&DDRMC_CR21_TRCD_INT_MASK)
#define DDRMC_CR21_TWR_INT_MASK                  0x3F000000u
#define DDRMC_CR21_TWR_INT_SHIFT                 24
#define DDRMC_CR21_TWR_INT(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR21_TWR_INT_SHIFT))&DDRMC_CR21_TWR_INT_MASK)
/* CR22 Bit Fields */
#define DDRMC_CR22_TDAL_MASK                     0x3F0000u
#define DDRMC_CR22_TDAL_SHIFT                    16
#define DDRMC_CR22_TDAL(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR22_TDAL_SHIFT))&DDRMC_CR22_TDAL_MASK)
/* CR23 Bit Fields */
#define DDRMC_CR23_TDLL_MASK                     0xFFFFu
#define DDRMC_CR23_TDLL_SHIFT                    0
#define DDRMC_CR23_TDLL(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR23_TDLL_SHIFT))&DDRMC_CR23_TDLL_MASK)
#define DDRMC_CR23_TMRR_MASK                     0xF0000u
#define DDRMC_CR23_TMRR_SHIFT                    16
#define DDRMC_CR23_TMRR(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR23_TMRR_SHIFT))&DDRMC_CR23_TMRR_MASK)
#define DDRMC_CR23_BSTLEN_MASK                   0x7000000u
#define DDRMC_CR23_BSTLEN_SHIFT                  24
#define DDRMC_CR23_BSTLEN(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR23_BSTLEN_SHIFT))&DDRMC_CR23_BSTLEN_MASK)
/* CR24 Bit Fields */
#define DDRMC_CR24_TRP_AB_MASK                   0x1Fu
#define DDRMC_CR24_TRP_AB_SHIFT                  0
#define DDRMC_CR24_TRP_AB(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR24_TRP_AB_SHIFT))&DDRMC_CR24_TRP_AB_MASK)
#define DDRMC_CR24_ADD_MIR_MASK                  0x1000000u
#define DDRMC_CR24_ADD_MIR_SHIFT                 24
/* CR25 Bit Fields */
#define DDRMC_CR25_AREF_MASK                     0x1u
#define DDRMC_CR25_AREF_SHIFT                    0
#define DDRMC_CR25_AUTO_REFMOD_MASK              0x100u
#define DDRMC_CR25_AUTO_REFMOD_SHIFT             8
#define DDRMC_CR25_TREF_EN_MASK                  0x10000u
#define DDRMC_CR25_TREF_EN_SHIFT                 16
/* CR26 Bit Fields */
#define DDRMC_CR26_TRFC_MASK                     0x3FFu
#define DDRMC_CR26_TRFC_SHIFT                    0
#define DDRMC_CR26_TRFC(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR26_TRFC_SHIFT))&DDRMC_CR26_TRFC_MASK)
#define DDRMC_CR26_TREF_MASK                     0xFFFF0000u
#define DDRMC_CR26_TREF_SHIFT                    16
#define DDRMC_CR26_TREF(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR26_TREF_SHIFT))&DDRMC_CR26_TREF_MASK)
/* CR28 Bit Fields */
#define DDRMC_CR28_TREF_INT_MASK                 0xFFFFu
#define DDRMC_CR28_TREF_INT_SHIFT                0
#define DDRMC_CR28_TREF_INT(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR28_TREF_INT_SHIFT))&DDRMC_CR28_TREF_INT_MASK)
/* CR29 Bit Fields */
#define DDRMC_CR29_TPDEX_MASK                    0xFFFFu
#define DDRMC_CR29_TPDEX_SHIFT                   0
#define DDRMC_CR29_TPDEX(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR29_TPDEX_SHIFT))&DDRMC_CR29_TPDEX_MASK)
/* CR30 Bit Fields */
#define DDRMC_CR30_TXPDLL_MASK                   0xFFFFu
#define DDRMC_CR30_TXPDLL_SHIFT                  0
#define DDRMC_CR30_TXPDLL(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR30_TXPDLL_SHIFT))&DDRMC_CR30_TXPDLL_MASK)
/* CR31 Bit Fields */
#define DDRMC_CR31_TXSR_MASK                     0xFFFFu
#define DDRMC_CR31_TXSR_SHIFT                    0
#define DDRMC_CR31_TXSR(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR31_TXSR_SHIFT))&DDRMC_CR31_TXSR_MASK)
#define DDRMC_CR31_TXSNR_MASK                    0xFFFF0000u
#define DDRMC_CR31_TXSNR_SHIFT                   16
#define DDRMC_CR31_TXSNR(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR31_TXSNR_SHIFT))&DDRMC_CR31_TXSNR_MASK)
/* CR33 Bit Fields */
#define DDRMC_CR33_PWUP_SREF_EX_MASK             0x1u
#define DDRMC_CR33_PWUP_SREF_EX_SHIFT            0
#define DDRMC_CR33_SREF_EX_NOREF_MASK            0x100u
#define DDRMC_CR33_SREF_EX_NOREF_SHIFT           8
#define DDRMC_CR33_EN_QK_SREF_MASK               0x10000u
#define DDRMC_CR33_EN_QK_SREF_SHIFT              16
#define DDRMC_CR33_CKE_DELAY_MASK                0x7000000u
#define DDRMC_CR33_CKE_DELAY_SHIFT               24
#define DDRMC_CR33_CKE_DELAY(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR33_CKE_DELAY_SHIFT))&DDRMC_CR33_CKE_DELAY_MASK)
/* CR34 Bit Fields */
#define DDRMC_CR34_LP_REFEN_MASK                 0x1u
#define DDRMC_CR34_LP_REFEN_SHIFT                0
#define DDRMC_CR34_CKSRE_MASK                    0xF00u
#define DDRMC_CR34_CKSRE_SHIFT                   8
#define DDRMC_CR34_CKSRE(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR34_CKSRE_SHIFT))&DDRMC_CR34_CKSRE_MASK)
#define DDRMC_CR34_CKSRX_MASK                    0xF0000u
#define DDRMC_CR34_CKSRX_SHIFT                   16
#define DDRMC_CR34_CKSRX(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR34_CKSRX_SHIFT))&DDRMC_CR34_CKSRX_MASK)
/* CR35 Bit Fields */
#define DDRMC_CR35_LP_CMD_MASK                   0xFF00u
#define DDRMC_CR35_LP_CMD_SHIFT                  8
#define DDRMC_CR35_LP_CMD(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR35_LP_CMD_SHIFT))&DDRMC_CR35_LP_CMD_MASK)
#define DDRMC_CR35_LP_ST_MASK                    0x3F0000u
#define DDRMC_CR35_LP_ST_SHIFT                   16
#define DDRMC_CR35_LP_ST(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR35_LP_ST_SHIFT))&DDRMC_CR35_LP_ST_MASK)
#define DDRMC_CR35_LP_ARBST_MASK                 0xF000000u
#define DDRMC_CR35_LP_ARBST_SHIFT                24
#define DDRMC_CR35_LP_ARBST(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR35_LP_ARBST_SHIFT))&DDRMC_CR35_LP_ARBST_MASK)
/* CR36 Bit Fields */
#define DDRMC_CR36_LPAUTO_MASK                   0x7u
#define DDRMC_CR36_LPAUTO_SHIFT                  0
#define DDRMC_CR36_LPAUTO(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR36_LPAUTO_SHIFT))&DDRMC_CR36_LPAUTO_MASK)
#define DDRMC_CR36_LP_AEXEN_MASK                 0x700u
#define DDRMC_CR36_LP_AEXEN_SHIFT                8
#define DDRMC_CR36_LP_AEXEN(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR36_LP_AEXEN_SHIFT))&DDRMC_CR36_LP_AEXEN_MASK)
#define DDRMC_CR36_LP_AMEMEN_MASK                0x30000u
#define DDRMC_CR36_LP_AMEMEN_SHIFT               16
#define DDRMC_CR36_LP_AMEMEN(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR36_LP_AMEMEN_SHIFT))&DDRMC_CR36_LP_AMEMEN_MASK)
/* CR37 Bit Fields */
#define DDRMC_CR37_LP_A_PD_IDL_MASK              0xFFFu
#define DDRMC_CR37_LP_A_PD_IDL_SHIFT             0
#define DDRMC_CR37_LP_A_PD_IDL(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR37_LP_A_PD_IDL_SHIFT))&DDRMC_CR37_LP_A_PD_IDL_MASK)
#define DDRMC_CR37_LP_A_SR_IDL_MASK              0xFF0000u
#define DDRMC_CR37_LP_A_SR_IDL_SHIFT             16
#define DDRMC_CR37_LP_A_SR_IDL(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR37_LP_A_SR_IDL_SHIFT))&DDRMC_CR37_LP_A_SR_IDL_MASK)
#define DDRMC_CR37_LP_A_SR_MC_IDL_MASK           0xFF000000u
#define DDRMC_CR37_LP_A_SR_MC_IDL_SHIFT          24
#define DDRMC_CR37_LP_A_SR_MC_IDL(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR37_LP_A_SR_MC_IDL_SHIFT))&DDRMC_CR37_LP_A_SR_MC_IDL_MASK)
/* CR38 Bit Fields */
#define DDRMC_CR38_FREQ_CHG_EN_MASK              0x100u
#define DDRMC_CR38_FREQ_CHG_EN_SHIFT             8
#define DDRMC_CR38_FRQ_CHG_HOEN_MASK             0x10000u
#define DDRMC_CR38_FRQ_CHG_HOEN_SHIFT            16
#define DDRMC_CR38_FREQ_CHG_HOCL_MASK            0x1000000u
#define DDRMC_CR38_FREQ_CHG_HOCL_SHIFT           24
/* CR39 Bit Fields */
#define DDRMC_CR39_FRQ_CH_DLLOFF_MASK            0x3u
#define DDRMC_CR39_FRQ_CH_DLLOFF_SHIFT           0
#define DDRMC_CR39_FRQ_CH_DLLOFF(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR39_FRQ_CH_DLLOFF_SHIFT))&DDRMC_CR39_FRQ_CH_DLLOFF_MASK)
#define DDRMC_CR39_PHY_INI_STA_MASK              0xFF00u
#define DDRMC_CR39_PHY_INI_STA_SHIFT             8
#define DDRMC_CR39_PHY_INI_STA(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR39_PHY_INI_STA_SHIFT))&DDRMC_CR39_PHY_INI_STA_MASK)
#define DDRMC_CR39_PHY_INI_COM_MASK              0xFFFF0000u
#define DDRMC_CR39_PHY_INI_COM_SHIFT             16
#define DDRMC_CR39_PHY_INI_COM(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR39_PHY_INI_COM_SHIFT))&DDRMC_CR39_PHY_INI_COM_MASK)
/* CR41 Bit Fields */
#define DDRMC_CR41_PHY_INI_STRT_INI_DIS_MASK     0x1u
#define DDRMC_CR41_PHY_INI_STRT_INI_DIS_SHIFT    0
/* CR45 Bit Fields */
#define DDRMC_CR45_WRMD_MASK                     0x3FFFFFFu
#define DDRMC_CR45_WRMD_SHIFT                    0
#define DDRMC_CR45_WRMD(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR45_WRMD_SHIFT))&DDRMC_CR45_WRMD_MASK)
/* CR46 Bit Fields */
#define DDRMC_CR46_MRW_STAT_MASK                 0xFFu
#define DDRMC_CR46_MRW_STAT_SHIFT                0
#define DDRMC_CR46_MRW_STAT(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR46_MRW_STAT_SHIFT))&DDRMC_CR46_MRW_STAT_MASK)
#define DDRMC_CR46_RMD_MASK                      0x1FFFF00u
#define DDRMC_CR46_RMD_SHIFT                     8
#define DDRMC_CR46_RMD(x)                        (((uint32_t)(((uint32_t)(x))<<DDRMC_CR46_RMD_SHIFT))&DDRMC_CR46_RMD_MASK)
/* CR47 Bit Fields */
#define DDRMC_CR47_PERI_MRR_DA_MASK              0xFFFFu
#define DDRMC_CR47_PERI_MRR_DA_SHIFT             0
#define DDRMC_CR47_PERI_MRR_DA(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR47_PERI_MRR_DA_SHIFT))&DDRMC_CR47_PERI_MRR_DA_MASK)
#define DDRMC_CR47_AU_TMPCHK_VAL_MASK            0xF0000u
#define DDRMC_CR47_AU_TMPCHK_VAL_SHIFT           16
#define DDRMC_CR47_AU_TMPCHK_VAL(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR47_AU_TMPCHK_VAL_SHIFT))&DDRMC_CR47_AU_TMPCHK_VAL_MASK)
#define DDRMC_CR47_REF_AU_TMPCHK_MASK            0xFF000000u
#define DDRMC_CR47_REF_AU_TMPCHK_SHIFT           24
#define DDRMC_CR47_REF_AU_TMPCHK(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR47_REF_AU_TMPCHK_SHIFT))&DDRMC_CR47_REF_AU_TMPCHK_MASK)
/* CR48 Bit Fields */
#define DDRMC_CR48_MR0_DA_0_MASK                 0xFFFFu
#define DDRMC_CR48_MR0_DA_0_SHIFT                0
#define DDRMC_CR48_MR0_DA_0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR48_MR0_DA_0_SHIFT))&DDRMC_CR48_MR0_DA_0_MASK)
#define DDRMC_CR48_MR1_DA_0_MASK                 0xFFFF0000u
#define DDRMC_CR48_MR1_DA_0_SHIFT                16
#define DDRMC_CR48_MR1_DA_0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR48_MR1_DA_0_SHIFT))&DDRMC_CR48_MR1_DA_0_MASK)
/* CR49 Bit Fields */
#define DDRMC_CR49_MR2_DA_0_MASK                 0xFFFFu
#define DDRMC_CR49_MR2_DA_0_SHIFT                0
#define DDRMC_CR49_MR2_DA_0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR49_MR2_DA_0_SHIFT))&DDRMC_CR49_MR2_DA_0_MASK)
/* CR51 Bit Fields */
#define DDRMC_CR51_MR_SINDA0_MASK                0xFFFFu
#define DDRMC_CR51_MR_SINDA0_SHIFT               0
#define DDRMC_CR51_MR_SINDA0(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR51_MR_SINDA0_SHIFT))&DDRMC_CR51_MR_SINDA0_MASK)
#define DDRMC_CR51_MR3_DA0_MASK                  0xFFFF0000u
#define DDRMC_CR51_MR3_DA0_SHIFT                 16
#define DDRMC_CR51_MR3_DA0(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR51_MR3_DA0_SHIFT))&DDRMC_CR51_MR3_DA0_MASK)
/* CR52 Bit Fields */
#define DDRMC_CR52_MR18_DA0_MASK                 0xFFu
#define DDRMC_CR52_MR18_DA0_SHIFT                0
#define DDRMC_CR52_MR18_DA0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR52_MR18_DA0_SHIFT))&DDRMC_CR52_MR18_DA0_MASK)
#define DDRMC_CR52_MR16_DA0_MASK                 0xFF00u
#define DDRMC_CR52_MR16_DA0_SHIFT                8
#define DDRMC_CR52_MR16_DA0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR52_MR16_DA0_SHIFT))&DDRMC_CR52_MR16_DA0_MASK)
#define DDRMC_CR52_MR17_DA0_MASK                 0xFF0000u
#define DDRMC_CR52_MR17_DA0_SHIFT                16
#define DDRMC_CR52_MR17_DA0(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR52_MR17_DA0_SHIFT))&DDRMC_CR52_MR17_DA0_MASK)
/* CR57 Bit Fields */
#define DDRMC_CR57_CTRL_RAW_MASK                 0x3000000u
#define DDRMC_CR57_CTRL_RAW_SHIFT                24
#define DDRMC_CR57_CTRL_RAW(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR57_CTRL_RAW_SHIFT))&DDRMC_CR57_CTRL_RAW_MASK)
/* CR58 Bit Fields */
#define DDRMC_CR58_FWC_MASK                      0x1u
#define DDRMC_CR58_FWC_SHIFT                     0
#define DDRMC_CR58_XOR_CHK_BITS_MASK             0x3FFF00u
#define DDRMC_CR58_XOR_CHK_BITS_SHIFT            8
#define DDRMC_CR58_XOR_CHK_BITS(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR58_XOR_CHK_BITS_SHIFT))&DDRMC_CR58_XOR_CHK_BITS_MASK)
#define DDRMC_CR58_ECC_DIS_WCRER_MASK            0x1000000u
#define DDRMC_CR58_ECC_DIS_WCRER_SHIFT           24
/* CR59 Bit Fields */
#define DDRMC_CR59_ECC_U_ADR_MASK                0xFFFFFFFFu
#define DDRMC_CR59_ECC_U_ADR_SHIFT               0
#define DDRMC_CR59_ECC_U_ADR(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR59_ECC_U_ADR_SHIFT))&DDRMC_CR59_ECC_U_ADR_MASK)
/* CR60 Bit Fields */
#define DDRMC_CR60_ECC_U_SYND_MASK               0x7Fu
#define DDRMC_CR60_ECC_U_SYND_SHIFT              0
#define DDRMC_CR60_ECC_U_SYND(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR60_ECC_U_SYND_SHIFT))&DDRMC_CR60_ECC_U_SYND_MASK)
/* CR61 Bit Fields */
#define DDRMC_CR61_ECC_U_DATA_MASK               0xFFFFFFFFu
#define DDRMC_CR61_ECC_U_DATA_SHIFT              0
#define DDRMC_CR61_ECC_U_DATA(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR61_ECC_U_DATA_SHIFT))&DDRMC_CR61_ECC_U_DATA_MASK)
/* CR62 Bit Fields */
#define DDRMC_CR62_ECC_C_ADDR_MASK               0xFFFFFFFFu
#define DDRMC_CR62_ECC_C_ADDR_SHIFT              0
#define DDRMC_CR62_ECC_C_ADDR(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR62_ECC_C_ADDR_SHIFT))&DDRMC_CR62_ECC_C_ADDR_MASK)
/* CR63 Bit Fields */
#define DDRMC_CR63_ECC_C_SYND_MASK               0x3Fu
#define DDRMC_CR63_ECC_C_SYND_SHIFT              0
#define DDRMC_CR63_ECC_C_SYND(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR63_ECC_C_SYND_SHIFT))&DDRMC_CR63_ECC_C_SYND_MASK)
/* CR64 Bit Fields */
#define DDRMC_CR64_ECC_C_DATA_MASK               0xFFFFFFFFu
#define DDRMC_CR64_ECC_C_DATA_SHIFT              0
#define DDRMC_CR64_ECC_C_DATA(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR64_ECC_C_DATA_SHIFT))&DDRMC_CR64_ECC_C_DATA_MASK)
/* CR65 Bit Fields */
#define DDRMC_CR65_ECC_U_ID_MASK                 0x1FFFu
#define DDRMC_CR65_ECC_U_ID_SHIFT                0
#define DDRMC_CR65_ECC_U_ID(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR65_ECC_U_ID_SHIFT))&DDRMC_CR65_ECC_U_ID_MASK)
#define DDRMC_CR65_ECC_C_ID_MASK                 0x3FFF0000u
#define DDRMC_CR65_ECC_C_ID_SHIFT                16
#define DDRMC_CR65_ECC_C_ID(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR65_ECC_C_ID_SHIFT))&DDRMC_CR65_ECC_C_ID_MASK)
/* CR66 Bit Fields */
#define DDRMC_CR66_ZQINIT_MASK                   0xFFFu
#define DDRMC_CR66_ZQINIT_SHIFT                  0
#define DDRMC_CR66_ZQINIT(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR66_ZQINIT_SHIFT))&DDRMC_CR66_ZQINIT_MASK)
#define DDRMC_CR66_ZQCL_MASK                     0xFFF0000u
#define DDRMC_CR66_ZQCL_SHIFT                    16
#define DDRMC_CR66_ZQCL(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR66_ZQCL_SHIFT))&DDRMC_CR66_ZQCL_MASK)
/* CR67 Bit Fields */
#define DDRMC_CR67_ZQCS_MASK                     0xFFFu
#define DDRMC_CR67_ZQCS_SHIFT                    0
#define DDRMC_CR67_ZQCS(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR67_ZQCS_SHIFT))&DDRMC_CR67_ZQCS_MASK)
/* CR69 Bit Fields */
#define DDRMC_CR69_ZQ_REQ_MASK                   0xFu
#define DDRMC_CR69_ZQ_REQ_SHIFT                  0
#define DDRMC_CR69_ZQ_REQ(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR69_ZQ_REQ_SHIFT))&DDRMC_CR69_ZQ_REQ_MASK)
#define DDRMC_CR69_ZQ_ON_SREF_EX_MASK            0xF00u
#define DDRMC_CR69_ZQ_ON_SREF_EX_SHIFT           8
#define DDRMC_CR69_ZQ_ON_SREF_EX(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR69_ZQ_ON_SREF_EX_SHIFT))&DDRMC_CR69_ZQ_ON_SREF_EX_MASK)
/* CR70 Bit Fields */
#define DDRMC_CR70_REF_PER_ZQ_MASK               0xFFFFFFFFu
#define DDRMC_CR70_REF_PER_ZQ_SHIFT              0
#define DDRMC_CR70_REF_PER_ZQ(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR70_REF_PER_ZQ_SHIFT))&DDRMC_CR70_REF_PER_ZQ_MASK)
/* CR71 Bit Fields */
#define DDRMC_CR71_ZQ_IN_PROG_MASK               0x1u
#define DDRMC_CR71_ZQ_IN_PROG_SHIFT              0
#define DDRMC_CR71_ZQRESET_MASK                  0xFFF00u
#define DDRMC_CR71_ZQRESET_SHIFT                 8
#define DDRMC_CR71_ZQRESET(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR71_ZQRESET_SHIFT))&DDRMC_CR71_ZQRESET_MASK)
/* CR72 Bit Fields */
#define DDRMC_CR72_NO_ZQ_INIT_MASK               0x10000u
#define DDRMC_CR72_NO_ZQ_INIT_SHIFT              16
#define DDRMC_CR72_ZQCS_ROTATE_MASK              0x1000000u
#define DDRMC_CR72_ZQCS_ROTATE_SHIFT             24
/* CR73 Bit Fields */
#define DDRMC_CR73_BANK_DIFF_MASK                0x3u
#define DDRMC_CR73_BANK_DIFF_SHIFT               0
#define DDRMC_CR73_BANK_DIFF(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR73_BANK_DIFF_SHIFT))&DDRMC_CR73_BANK_DIFF_MASK)
#define DDRMC_CR73_ROW_DIFF_MASK                 0x300u
#define DDRMC_CR73_ROW_DIFF_SHIFT                8
#define DDRMC_CR73_ROW_DIFF(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR73_ROW_DIFF_SHIFT))&DDRMC_CR73_ROW_DIFF_MASK)
#define DDRMC_CR73_COL_DIFF_MASK                 0x70000u
#define DDRMC_CR73_COL_DIFF_SHIFT                16
#define DDRMC_CR73_COL_DIFF(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR73_COL_DIFF_SHIFT))&DDRMC_CR73_COL_DIFF_MASK)
#define DDRMC_CR73_APREBIT_MASK                  0xF000000u
#define DDRMC_CR73_APREBIT_SHIFT                 24
#define DDRMC_CR73_APREBIT(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR73_APREBIT_SHIFT))&DDRMC_CR73_APREBIT_MASK)
/* CR74 Bit Fields */
#define DDRMC_CR74_AGE_CNT_MASK                  0xFFu
#define DDRMC_CR74_AGE_CNT_SHIFT                 0
#define DDRMC_CR74_AGE_CNT(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR74_AGE_CNT_SHIFT))&DDRMC_CR74_AGE_CNT_MASK)
#define DDRMC_CR74_CMD_AGE_CNT_MASK              0xFF00u
#define DDRMC_CR74_CMD_AGE_CNT_SHIFT             8
#define DDRMC_CR74_CMD_AGE_CNT(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR74_CMD_AGE_CNT_SHIFT))&DDRMC_CR74_CMD_AGE_CNT_MASK)
#define DDRMC_CR74_ADDR_CMP_EN_MASK              0x10000u
#define DDRMC_CR74_ADDR_CMP_EN_SHIFT             16
#define DDRMC_CR74_BANKSPLT_EN_MASK              0x1000000u
#define DDRMC_CR74_BANKSPLT_EN_SHIFT             24
/* CR75 Bit Fields */
#define DDRMC_CR75_PLEN_MASK                     0x1u
#define DDRMC_CR75_PLEN_SHIFT                    0
#define DDRMC_CR75_PRI_EN_MASK                   0x100u
#define DDRMC_CR75_PRI_EN_SHIFT                  8
#define DDRMC_CR75_RW_EN_MASK                    0x10000u
#define DDRMC_CR75_RW_EN_SHIFT                   16
#define DDRMC_CR75_RW_PG_EN_MASK                 0x1000000u
#define DDRMC_CR75_RW_PG_EN_SHIFT                24
/* CR76 Bit Fields */
#define DDRMC_CR76_CS_EN_MASK                    0x1u
#define DDRMC_CR76_CS_EN_SHIFT                   0
#define DDRMC_CR76_W2R_SPLT_EN_MASK              0x100u
#define DDRMC_CR76_W2R_SPLT_EN_SHIFT             8
#define DDRMC_CR76_D_RW_G_BKCN_MASK              0x30000u
#define DDRMC_CR76_D_RW_G_BKCN_SHIFT             16
#define DDRMC_CR76_D_RW_G_BKCN(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR76_D_RW_G_BKCN_SHIFT))&DDRMC_CR76_D_RW_G_BKCN_MASK)
#define DDRMC_CR76_NQENT_ACTDIS_MASK             0x7000000u
#define DDRMC_CR76_NQENT_ACTDIS_SHIFT            24
#define DDRMC_CR76_NQENT_ACTDIS(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR76_NQENT_ACTDIS_SHIFT))&DDRMC_CR76_NQENT_ACTDIS_MASK)
/* CR77 Bit Fields */
#define DDRMC_CR77_SWAP_EN_MASK                  0x1u
#define DDRMC_CR77_SWAP_EN_SHIFT                 0
#define DDRMC_CR77_DI_RD_INTLEAVE_MASK           0x100u
#define DDRMC_CR77_DI_RD_INTLEAVE_SHIFT          8
#define DDRMC_CR77_IN_DRAM_CMD_MASK              0x30000u
#define DDRMC_CR77_IN_DRAM_CMD_SHIFT             16
#define DDRMC_CR77_IN_DRAM_CMD(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR77_IN_DRAM_CMD_SHIFT))&DDRMC_CR77_IN_DRAM_CMD_MASK)
#define DDRMC_CR77_CS_MAP_MASK                   0x1000000u
#define DDRMC_CR77_CS_MAP_SHIFT                  24
/* CR78 Bit Fields */
#define DDRMC_CR78_BUR_ON_FLY_BIT_MASK           0xFu
#define DDRMC_CR78_BUR_ON_FLY_BIT_SHIFT          0
#define DDRMC_CR78_BUR_ON_FLY_BIT(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR78_BUR_ON_FLY_BIT_SHIFT))&DDRMC_CR78_BUR_ON_FLY_BIT_MASK)
#define DDRMC_CR78_REDUC_MASK                    0x100u
#define DDRMC_CR78_REDUC_SHIFT                   8
#define DDRMC_CR78_LPDDR2_S4_MASK                0x10000u
#define DDRMC_CR78_LPDDR2_S4_SHIFT               16
#define DDRMC_CR78_Q_FULLNESS_MASK               0x7000000u
#define DDRMC_CR78_Q_FULLNESS_SHIFT              24
#define DDRMC_CR78_Q_FULLNESS(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR78_Q_FULLNESS_SHIFT))&DDRMC_CR78_Q_FULLNESS_MASK)
/* CR79 Bit Fields */
#define DDRMC_CR79_INODR_ACT_MASK                0x1u
#define DDRMC_CR79_INODR_ACT_SHIFT               0
#define DDRMC_CR79_CTLBUSY_MASK                  0x100u
#define DDRMC_CR79_CTLBUSY_SHIFT                 8
#define DDRMC_CR79_CTLUPD_REQ_MASK               0x10000u
#define DDRMC_CR79_CTLUPD_REQ_SHIFT              16
#define DDRMC_CR79_CTLUPD_AREF_MASK              0x1000000u
#define DDRMC_CR79_CTLUPD_AREF_SHIFT             24
/* CR80 Bit Fields */
#define DDRMC_CR80_INT_STAT_MASK                 0x1FFFFFFFu
#define DDRMC_CR80_INT_STAT_SHIFT                0
#define DDRMC_CR80_INT_STAT(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR80_INT_STAT_SHIFT))&DDRMC_CR80_INT_STAT_MASK)
/* CR81 Bit Fields */
#define DDRMC_CR81_INT_ACK_MASK                  0xFFFFFFFu
#define DDRMC_CR81_INT_ACK_SHIFT                 0
#define DDRMC_CR81_INT_ACK(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR81_INT_ACK_SHIFT))&DDRMC_CR81_INT_ACK_MASK)
/* CR82 Bit Fields */
#define DDRMC_CR82_INT_MASK_MASK                 0x1FFFFFFFu
#define DDRMC_CR82_INT_MASK_SHIFT                0
#define DDRMC_CR82_INT_MASK(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR82_INT_MASK_SHIFT))&DDRMC_CR82_INT_MASK_MASK)
/* CR83 Bit Fields */
#define DDRMC_CR83_OORAD_MASK                    0xFFFFFFFFu
#define DDRMC_CR83_OORAD_SHIFT                   0
#define DDRMC_CR83_OORAD(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR83_OORAD_SHIFT))&DDRMC_CR83_OORAD_MASK)
/* CR84 Bit Fields */
#define DDRMC_CR84_OORLEN_MASK                   0x7Fu
#define DDRMC_CR84_OORLEN_SHIFT                  0
#define DDRMC_CR84_OORLEN(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR84_OORLEN_SHIFT))&DDRMC_CR84_OORLEN_MASK)
#define DDRMC_CR84_OORTYP_MASK                   0x3F00u
#define DDRMC_CR84_OORTYP_SHIFT                  8
#define DDRMC_CR84_OORTYP(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR84_OORTYP_SHIFT))&DDRMC_CR84_OORTYP_MASK)
#define DDRMC_CR84_OORID_MASK                    0x3FFF0000u
#define DDRMC_CR84_OORID_SHIFT                   16
#define DDRMC_CR84_OORID(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR84_OORID_SHIFT))&DDRMC_CR84_OORID_MASK)
/* CR85 Bit Fields */
#define DDRMC_CR85_P_CMDERRADD_MASK              0xFFFFFFFFu
#define DDRMC_CR85_P_CMDERRADD_SHIFT             0
#define DDRMC_CR85_P_CMDERRADD(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR85_P_CMDERRADD_SHIFT))&DDRMC_CR85_P_CMDERRADD_MASK)
/* CR86 Bit Fields */
#define DDRMC_CR86_P_CMDERRID_MASK               0x3FFFu
#define DDRMC_CR86_P_CMDERRID_SHIFT              0
#define DDRMC_CR86_P_CMDERRID(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR86_P_CMDERRID_SHIFT))&DDRMC_CR86_P_CMDERRID_MASK)
#define DDRMC_CR86_P_CMDERR_TYP_MASK             0x30000u
#define DDRMC_CR86_P_CMDERR_TYP_SHIFT            16
#define DDRMC_CR86_P_CMDERR_TYP(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR86_P_CMDERR_TYP_SHIFT))&DDRMC_CR86_P_CMDERR_TYP_MASK)
/* CR87 Bit Fields */
#define DDRMC_CR87_ODT_RD_MAPCS0_MASK            0x10000u
#define DDRMC_CR87_ODT_RD_MAPCS0_SHIFT           16
#define DDRMC_CR87_ODT_WR_MAPCS0_MASK            0x1000000u
#define DDRMC_CR87_ODT_WR_MAPCS0_SHIFT           24
/* CR88 Bit Fields */
#define DDRMC_CR88_TODTL_CMD_MASK                0x1F0000u
#define DDRMC_CR88_TODTL_CMD_SHIFT               16
#define DDRMC_CR88_TODTL_CMD(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR88_TODTL_CMD_SHIFT))&DDRMC_CR88_TODTL_CMD_MASK)
/* CR89 Bit Fields */
#define DDRMC_CR89_AODT_RWSMCS_MASK              0xFu
#define DDRMC_CR89_AODT_RWSMCS_SHIFT             0
#define DDRMC_CR89_AODT_RWSMCS(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR89_AODT_RWSMCS_SHIFT))&DDRMC_CR89_AODT_RWSMCS_MASK)
#define DDRMC_CR89_AODT_WRSMCS_MASK              0xF00u
#define DDRMC_CR89_AODT_WRSMCS_SHIFT             8
#define DDRMC_CR89_AODT_WRSMCS(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR89_AODT_WRSMCS_SHIFT))&DDRMC_CR89_AODT_WRSMCS_MASK)
/* CR91 Bit Fields */
#define DDRMC_CR91_R2R_SMCSDL_MASK               0x700u
#define DDRMC_CR91_R2R_SMCSDL_SHIFT              8
#define DDRMC_CR91_R2R_SMCSDL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR91_R2R_SMCSDL_SHIFT))&DDRMC_CR91_R2R_SMCSDL_MASK)
#define DDRMC_CR91_R2W_SMCSDL_MASK               0x70000u
#define DDRMC_CR91_R2W_SMCSDL_SHIFT              16
#define DDRMC_CR91_R2W_SMCSDL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR91_R2W_SMCSDL_SHIFT))&DDRMC_CR91_R2W_SMCSDL_MASK)
#define DDRMC_CR91_W2R_SMCSDL_MASK               0x7000000u
#define DDRMC_CR91_W2R_SMCSDL_SHIFT              24
#define DDRMC_CR91_W2R_SMCSDL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR91_W2R_SMCSDL_SHIFT))&DDRMC_CR91_W2R_SMCSDL_MASK)
/* CR92 Bit Fields */
#define DDRMC_CR92_W2W_SMCSDL_MASK               0x7u
#define DDRMC_CR92_W2W_SMCSDL_SHIFT              0
#define DDRMC_CR92_W2W_SMCSDL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR92_W2W_SMCSDL_SHIFT))&DDRMC_CR92_W2W_SMCSDL_MASK)
#define DDRMC_CR92_TDQSCK_MAX_MASK               0x300u
#define DDRMC_CR92_TDQSCK_MAX_SHIFT              8
#define DDRMC_CR92_TDQSCK_MAX(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR92_TDQSCK_MAX_SHIFT))&DDRMC_CR92_TDQSCK_MAX_MASK)
#define DDRMC_CR92_TDQSCK_MIN_MASK               0x30000u
#define DDRMC_CR92_TDQSCK_MIN_SHIFT              16
#define DDRMC_CR92_TDQSCK_MIN(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR92_TDQSCK_MIN_SHIFT))&DDRMC_CR92_TDQSCK_MIN_MASK)
/* CR93 Bit Fields */
#define DDRMC_CR93_SW_LVL_MODE_MASK              0x300u
#define DDRMC_CR93_SW_LVL_MODE_SHIFT             8
#define DDRMC_CR93_SW_LVL_MODE(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR93_SW_LVL_MODE_SHIFT))&DDRMC_CR93_SW_LVL_MODE_MASK)
#define DDRMC_CR93_SWLVL_LOAD_MASK               0x10000u
#define DDRMC_CR93_SWLVL_LOAD_SHIFT              16
#define DDRMC_CR93_SWLVL_START_MASK              0x1000000u
#define DDRMC_CR93_SWLVL_START_SHIFT             24
/* CR94 Bit Fields */
#define DDRMC_CR94_SWLVL_EXIT_MASK               0x1u
#define DDRMC_CR94_SWLVL_EXIT_SHIFT              0
#define DDRMC_CR94_SWLVL_OP_DONE_MASK            0x100u
#define DDRMC_CR94_SWLVL_OP_DONE_SHIFT           8
#define DDRMC_CR94_LVL_STATUS_MASK               0x70000u
#define DDRMC_CR94_LVL_STATUS_SHIFT              16
#define DDRMC_CR94_LVL_STATUS(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR94_LVL_STATUS_SHIFT))&DDRMC_CR94_LVL_STATUS_MASK)
#define DDRMC_CR94_SWLVL_RESP_0_MASK             0xFF000000u
#define DDRMC_CR94_SWLVL_RESP_0_SHIFT            24
#define DDRMC_CR94_SWLVL_RESP_0(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR94_SWLVL_RESP_0_SHIFT))&DDRMC_CR94_SWLVL_RESP_0_MASK)
/* CR95 Bit Fields */
#define DDRMC_CR95_SWLVL_RESP_1_MASK             0xFFu
#define DDRMC_CR95_SWLVL_RESP_1_SHIFT            0
#define DDRMC_CR95_SWLVL_RESP_1(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR95_SWLVL_RESP_1_SHIFT))&DDRMC_CR95_SWLVL_RESP_1_MASK)
#define DDRMC_CR95_SWLVL_RESP_2_MASK             0xFF00u
#define DDRMC_CR95_SWLVL_RESP_2_SHIFT            8
#define DDRMC_CR95_SWLVL_RESP_2(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR95_SWLVL_RESP_2_SHIFT))&DDRMC_CR95_SWLVL_RESP_2_MASK)
#define DDRMC_CR95_WRLVL_REQ_MASK                0x10000u
#define DDRMC_CR95_WRLVL_REQ_SHIFT               16
#define DDRMC_CR95_WRLVL_CS_MASK                 0x1000000u
#define DDRMC_CR95_WRLVL_CS_SHIFT                24
/* CR96 Bit Fields */
#define DDRMC_CR96_WLDQSEN_MASK                  0x3Fu
#define DDRMC_CR96_WLDQSEN_SHIFT                 0
#define DDRMC_CR96_WLDQSEN(x)                    (((uint32_t)(((uint32_t)(x))<<DDRMC_CR96_WLDQSEN_SHIFT))&DDRMC_CR96_WLDQSEN_MASK)
#define DDRMC_CR96_WLMRD_MASK                    0x3F00u
#define DDRMC_CR96_WLMRD_SHIFT                   8
#define DDRMC_CR96_WLMRD(x)                      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR96_WLMRD_SHIFT))&DDRMC_CR96_WLMRD_MASK)
#define DDRMC_CR96_WRLVL_EN_MASK                 0x10000u
#define DDRMC_CR96_WRLVL_EN_SHIFT                16
/* CR97 Bit Fields */
#define DDRMC_CR97_WRLVL_REFRESH_INTERVAL_MASK   0xFFFFu
#define DDRMC_CR97_WRLVL_REFRESH_INTERVAL_SHIFT  0
#define DDRMC_CR97_WRLVL_REFRESH_INTERVAL(x)     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR97_WRLVL_REFRESH_INTERVAL_SHIFT))&DDRMC_CR97_WRLVL_REFRESH_INTERVAL_MASK)
#define DDRMC_CR97_WRLVL_ERR_STAT_MASK           0xFF0000u
#define DDRMC_CR97_WRLVL_ERR_STAT_SHIFT          16
#define DDRMC_CR97_WRLVL_ERR_STAT(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR97_WRLVL_ERR_STAT_SHIFT))&DDRMC_CR97_WRLVL_ERR_STAT_MASK)
#define DDRMC_CR97_WRLVL_REG_EN_MASK             0x1000000u
#define DDRMC_CR97_WRLVL_REG_EN_SHIFT            24
/* CR98 Bit Fields */
#define DDRMC_CR98_WRLVL_DL_0_MASK               0xFFFFu
#define DDRMC_CR98_WRLVL_DL_0_SHIFT              0
#define DDRMC_CR98_WRLVL_DL_0(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR98_WRLVL_DL_0_SHIFT))&DDRMC_CR98_WRLVL_DL_0_MASK)
/* CR99 Bit Fields */
#define DDRMC_CR99_WRLVL_DL_1_MASK               0xFFFFu
#define DDRMC_CR99_WRLVL_DL_1_SHIFT              0
#define DDRMC_CR99_WRLVL_DL_1(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR99_WRLVL_DL_1_SHIFT))&DDRMC_CR99_WRLVL_DL_1_MASK)
/* CR100 Bit Fields */
#define DDRMC_CR100_WRLVL_DL_2_MASK              0xFFFFu
#define DDRMC_CR100_WRLVL_DL_2_SHIFT             0
#define DDRMC_CR100_WRLVL_DL_2(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR100_WRLVL_DL_2_SHIFT))&DDRMC_CR100_WRLVL_DL_2_MASK)
/* CR101 Bit Fields */
#define DDRMC_CR101_RDLVL_REQ_MASK               0x1u
#define DDRMC_CR101_RDLVL_REQ_SHIFT              0
#define DDRMC_CR101_RDLVL_GT_REQ_MASK            0x100u
#define DDRMC_CR101_RDLVL_GT_REQ_SHIFT           8
#define DDRMC_CR101_RDLVL_CS_MASK                0x10000u
#define DDRMC_CR101_RDLVL_CS_SHIFT               16
#define DDRMC_CR101_RDLVL_EDGE_MASK              0x1000000u
#define DDRMC_CR101_RDLVL_EDGE_SHIFT             24
/* CR102 Bit Fields */
#define DDRMC_CR102_RDLVL_BGN_DLEN_MASK          0x1u
#define DDRMC_CR102_RDLVL_BGN_DLEN_SHIFT         0
#define DDRMC_CR102_RDLVL_REG_EN_MASK            0x100u
#define DDRMC_CR102_RDLVL_REG_EN_SHIFT           8
#define DDRMC_CR102_RDLVL_GT_REGEN_MASK          0x10000u
#define DDRMC_CR102_RDLVL_GT_REGEN_SHIFT         16
/* CR103 Bit Fields */
#define DDRMC_CR103_RDLVL_BGN_DL0_MASK           0xFFFFu
#define DDRMC_CR103_RDLVL_BGN_DL0_SHIFT          0
#define DDRMC_CR103_RDLVL_BGN_DL0(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR103_RDLVL_BGN_DL0_SHIFT))&DDRMC_CR103_RDLVL_BGN_DL0_MASK)
#define DDRMC_CR103_RDLVL_END_DL0_MASK           0xFFFF0000u
#define DDRMC_CR103_RDLVL_END_DL0_SHIFT          16
#define DDRMC_CR103_RDLVL_END_DL0(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR103_RDLVL_END_DL0_SHIFT))&DDRMC_CR103_RDLVL_END_DL0_MASK)
/* CR104 Bit Fields */
#define DDRMC_CR104_RDLVL_MP_DL0_MASK            0xFFFFu
#define DDRMC_CR104_RDLVL_MP_DL0_SHIFT           0
#define DDRMC_CR104_RDLVL_MP_DL0(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR104_RDLVL_MP_DL0_SHIFT))&DDRMC_CR104_RDLVL_MP_DL0_MASK)
#define DDRMC_CR104_RDLVL_OFF_DL0_MASK           0xFFFF0000u
#define DDRMC_CR104_RDLVL_OFF_DL0_SHIFT          16
#define DDRMC_CR104_RDLVL_OFF_DL0(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR104_RDLVL_OFF_DL0_SHIFT))&DDRMC_CR104_RDLVL_OFF_DL0_MASK)
/* CR105 Bit Fields */
#define DDRMC_CR105_RDLVL_OFF_DIR_0_MASK         0x1u
#define DDRMC_CR105_RDLVL_OFF_DIR_0_SHIFT        0
#define DDRMC_CR105_RDLVL_DL_0_MASK              0xFF00u
#define DDRMC_CR105_RDLVL_DL_0_SHIFT             8
#define DDRMC_CR105_RDLVL_DL_0(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR105_RDLVL_DL_0_SHIFT))&DDRMC_CR105_RDLVL_DL_0_MASK)
/* CR106 Bit Fields */
#define DDRMC_CR106_RDLVL_GTDL_0_MASK            0xFFu
#define DDRMC_CR106_RDLVL_GTDL_0_SHIFT           0
#define DDRMC_CR106_RDLVL_GTDL_0(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR106_RDLVL_GTDL_0_SHIFT))&DDRMC_CR106_RDLVL_GTDL_0_MASK)
/* CR107 Bit Fields */
#define DDRMC_CR107_RDLVL_BGN_DL1_MASK           0xFF0000u
#define DDRMC_CR107_RDLVL_BGN_DL1_SHIFT          16
#define DDRMC_CR107_RDLVL_BGN_DL1(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR107_RDLVL_BGN_DL1_SHIFT))&DDRMC_CR107_RDLVL_BGN_DL1_MASK)
/* CR108 Bit Fields */
#define DDRMC_CR108_RDLVL_END_DL1_MASK           0xFFFFu
#define DDRMC_CR108_RDLVL_END_DL1_SHIFT          0
#define DDRMC_CR108_RDLVL_END_DL1(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR108_RDLVL_END_DL1_SHIFT))&DDRMC_CR108_RDLVL_END_DL1_MASK)
#define DDRMC_CR108_RDLVL_MP_DL1_MASK            0xFFFF0000u
#define DDRMC_CR108_RDLVL_MP_DL1_SHIFT           16
#define DDRMC_CR108_RDLVL_MP_DL1(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR108_RDLVL_MP_DL1_SHIFT))&DDRMC_CR108_RDLVL_MP_DL1_MASK)
/* CR109 Bit Fields */
#define DDRMC_CR109_RDLVL_OFF_DL1_MASK           0xFFFFu
#define DDRMC_CR109_RDLVL_OFF_DL1_SHIFT          0
#define DDRMC_CR109_RDLVL_OFF_DL1(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR109_RDLVL_OFF_DL1_SHIFT))&DDRMC_CR109_RDLVL_OFF_DL1_MASK)
#define DDRMC_CR109_RDLVL_OFF_DIR1_MASK          0x10000u
#define DDRMC_CR109_RDLVL_OFF_DIR1_SHIFT         16
/* CR110 Bit Fields */
#define DDRMC_CR110_RDLVL_DL_1_MASK              0xFFu
#define DDRMC_CR110_RDLVL_DL_1_SHIFT             0
#define DDRMC_CR110_RDLVL_DL_1(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR110_RDLVL_DL_1_SHIFT))&DDRMC_CR110_RDLVL_DL_1_MASK)
#define DDRMC_CR110_RDLVL_GTDL_1_MASK            0xFF0000u
#define DDRMC_CR110_RDLVL_GTDL_1_SHIFT           16
#define DDRMC_CR110_RDLVL_GTDL_1(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR110_RDLVL_GTDL_1_SHIFT))&DDRMC_CR110_RDLVL_GTDL_1_MASK)
/* CR112 Bit Fields */
#define DDRMC_CR112_RDLVL_BGN_DL2_MASK           0xFFFFu
#define DDRMC_CR112_RDLVL_BGN_DL2_SHIFT          0
#define DDRMC_CR112_RDLVL_BGN_DL2(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR112_RDLVL_BGN_DL2_SHIFT))&DDRMC_CR112_RDLVL_BGN_DL2_MASK)
#define DDRMC_CR112_RDLVL_END_DL2_MASK           0xFFFF0000u
#define DDRMC_CR112_RDLVL_END_DL2_SHIFT          16
#define DDRMC_CR112_RDLVL_END_DL2(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR112_RDLVL_END_DL2_SHIFT))&DDRMC_CR112_RDLVL_END_DL2_MASK)
/* CR113 Bit Fields */
#define DDRMC_CR113_RDLVL_MP_DL2_MASK            0xFFFFu
#define DDRMC_CR113_RDLVL_MP_DL2_SHIFT           0
#define DDRMC_CR113_RDLVL_MP_DL2(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR113_RDLVL_MP_DL2_SHIFT))&DDRMC_CR113_RDLVL_MP_DL2_MASK)
#define DDRMC_CR113_RDLVL_OFF_DL2_MASK           0xFFFF0000u
#define DDRMC_CR113_RDLVL_OFF_DL2_SHIFT          16
#define DDRMC_CR113_RDLVL_OFF_DL2(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR113_RDLVL_OFF_DL2_SHIFT))&DDRMC_CR113_RDLVL_OFF_DL2_MASK)
/* CR114 Bit Fields */
#define DDRMC_CR114_RDLVL_OFF_DIR2_MASK          0x1u
#define DDRMC_CR114_RDLVL_OFF_DIR2_SHIFT         0
/* CR117 Bit Fields */
#define DDRMC_CR117_AXI0_R_PRI_MASK              0x3u
#define DDRMC_CR117_AXI0_R_PRI_SHIFT             0
#define DDRMC_CR117_AXI0_R_PRI(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR117_AXI0_R_PRI_SHIFT))&DDRMC_CR117_AXI0_R_PRI_MASK)
#define DDRMC_CR117_AXI0_W_PRI_MASK              0x300u
#define DDRMC_CR117_AXI0_W_PRI_SHIFT             8
#define DDRMC_CR117_AXI0_W_PRI(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR117_AXI0_W_PRI_SHIFT))&DDRMC_CR117_AXI0_W_PRI_MASK)
#define DDRMC_CR117_AXI0_FITYPREG_MASK           0x30000u
#define DDRMC_CR117_AXI0_FITYPREG_SHIFT          16
#define DDRMC_CR117_AXI0_FITYPREG(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR117_AXI0_FITYPREG_SHIFT))&DDRMC_CR117_AXI0_FITYPREG_MASK)
/* CR118 Bit Fields */
#define DDRMC_CR118_AXI1_R_PRI_MASK              0x30000u
#define DDRMC_CR118_AXI1_R_PRI_SHIFT             16
#define DDRMC_CR118_AXI1_R_PRI(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR118_AXI1_R_PRI_SHIFT))&DDRMC_CR118_AXI1_R_PRI_MASK)
#define DDRMC_CR118_AXI1_W_PRI_MASK              0x3000000u
#define DDRMC_CR118_AXI1_W_PRI_SHIFT             24
#define DDRMC_CR118_AXI1_W_PRI(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR118_AXI1_W_PRI_SHIFT))&DDRMC_CR118_AXI1_W_PRI_MASK)
/* CR119 Bit Fields */
#define DDRMC_CR119_AXI1_FITYPREG_MASK           0x3u
#define DDRMC_CR119_AXI1_FITYPREG_SHIFT          0
#define DDRMC_CR119_AXI1_FITYPREG(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR119_AXI1_FITYPREG_SHIFT))&DDRMC_CR119_AXI1_FITYPREG_MASK)
#define DDRMC_CR119_AXI_ASTB_DIS_MASK            0x30000u
#define DDRMC_CR119_AXI_ASTB_DIS_SHIFT           16
#define DDRMC_CR119_AXI_ASTB_DIS(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR119_AXI_ASTB_DIS_SHIFT))&DDRMC_CR119_AXI_ASTB_DIS_MASK)
#define DDRMC_CR119_WRR_LATCTL_MASK              0x1000000u
#define DDRMC_CR119_WRR_LATCTL_SHIFT             24
/* CR120 Bit Fields */
#define DDRMC_CR120_W_RR_WSHR_MASK               0x1u
#define DDRMC_CR120_W_RR_WSHR_SHIFT              0
#define DDRMC_CR120_WRR_ERR_MASK                 0xF00u
#define DDRMC_CR120_WRR_ERR_SHIFT                8
#define DDRMC_CR120_WRR_ERR(x)                   (((uint32_t)(((uint32_t)(x))<<DDRMC_CR120_WRR_ERR_SHIFT))&DDRMC_CR120_WRR_ERR_MASK)
#define DDRMC_CR120_AXI0_PRI0_RPRI_MASK          0xF0000u
#define DDRMC_CR120_AXI0_PRI0_RPRI_SHIFT         16
#define DDRMC_CR120_AXI0_PRI0_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR120_AXI0_PRI0_RPRI_SHIFT))&DDRMC_CR120_AXI0_PRI0_RPRI_MASK)
#define DDRMC_CR120_AXI0_PRI1_RPRI_MASK          0xF000000u
#define DDRMC_CR120_AXI0_PRI1_RPRI_SHIFT         24
#define DDRMC_CR120_AXI0_PRI1_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR120_AXI0_PRI1_RPRI_SHIFT))&DDRMC_CR120_AXI0_PRI1_RPRI_MASK)
/* CR121 Bit Fields */
#define DDRMC_CR121_AXI0_PRI2_RPRI_MASK          0xFu
#define DDRMC_CR121_AXI0_PRI2_RPRI_SHIFT         0
#define DDRMC_CR121_AXI0_PRI2_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR121_AXI0_PRI2_RPRI_SHIFT))&DDRMC_CR121_AXI0_PRI2_RPRI_MASK)
#define DDRMC_CR121_AXI0_PRI3_RPRI_MASK          0xF00u
#define DDRMC_CR121_AXI0_PRI3_RPRI_SHIFT         8
#define DDRMC_CR121_AXI0_PRI3_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR121_AXI0_PRI3_RPRI_SHIFT))&DDRMC_CR121_AXI0_PRI3_RPRI_MASK)
#define DDRMC_CR121_AXI0_P_ODR_MASK              0x10000u
#define DDRMC_CR121_AXI0_P_ODR_SHIFT             16
/* CR122 Bit Fields */
#define DDRMC_CR122_AXI0_PRIRLX_MASK             0x3FFu
#define DDRMC_CR122_AXI0_PRIRLX_SHIFT            0
#define DDRMC_CR122_AXI0_PRIRLX(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR122_AXI0_PRIRLX_SHIFT))&DDRMC_CR122_AXI0_PRIRLX_MASK)
#define DDRMC_CR122_AXI1_PRI0_RPRI_MASK          0xF0000u
#define DDRMC_CR122_AXI1_PRI0_RPRI_SHIFT         16
#define DDRMC_CR122_AXI1_PRI0_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR122_AXI1_PRI0_RPRI_SHIFT))&DDRMC_CR122_AXI1_PRI0_RPRI_MASK)
#define DDRMC_CR122_AXI1_PRI1_RPRI_MASK          0xF000000u
#define DDRMC_CR122_AXI1_PRI1_RPRI_SHIFT         24
#define DDRMC_CR122_AXI1_PRI1_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR122_AXI1_PRI1_RPRI_SHIFT))&DDRMC_CR122_AXI1_PRI1_RPRI_MASK)
/* CR123 Bit Fields */
#define DDRMC_CR123_AXI1_PRI2_RPRI_MASK          0xFu
#define DDRMC_CR123_AXI1_PRI2_RPRI_SHIFT         0
#define DDRMC_CR123_AXI1_PRI2_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR123_AXI1_PRI2_RPRI_SHIFT))&DDRMC_CR123_AXI1_PRI2_RPRI_MASK)
#define DDRMC_CR123_AXI1_PRI3_RPRI_MASK          0xF00u
#define DDRMC_CR123_AXI1_PRI3_RPRI_SHIFT         8
#define DDRMC_CR123_AXI1_PRI3_RPRI(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR123_AXI1_PRI3_RPRI_SHIFT))&DDRMC_CR123_AXI1_PRI3_RPRI_MASK)
#define DDRMC_CR123_AXI1_P_ODR_MASK              0x10000u
#define DDRMC_CR123_AXI1_P_ODR_SHIFT             16
/* CR124 Bit Fields */
#define DDRMC_CR124_AXI1_PRIRLX_MASK             0x3FFu
#define DDRMC_CR124_AXI1_PRIRLX_SHIFT            0
#define DDRMC_CR124_AXI1_PRIRLX(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR124_AXI1_PRIRLX_SHIFT))&DDRMC_CR124_AXI1_PRIRLX_MASK)
#define DDRMC_CR124_CKE_STAT_MASK                0x30000u
#define DDRMC_CR124_CKE_STAT_SHIFT               16
#define DDRMC_CR124_CKE_STAT(x)                  (((uint32_t)(((uint32_t)(x))<<DDRMC_CR124_CKE_STAT_SHIFT))&DDRMC_CR124_CKE_STAT_MASK)
#define DDRMC_CR124_MEM_RST_VAL_MASK             0x1000000u
#define DDRMC_CR124_MEM_RST_VAL_SHIFT            24
/* CR125 Bit Fields */
#define DDRMC_CR125_DLL_RST_DELAY_MASK           0xFFFFu
#define DDRMC_CR125_DLL_RST_DELAY_SHIFT          0
#define DDRMC_CR125_DLL_RST_DELAY(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR125_DLL_RST_DELAY_SHIFT))&DDRMC_CR125_DLL_RST_DELAY_MASK)
#define DDRMC_CR125_DLL_RST_ADJ_DLY_MASK         0xFF0000u
#define DDRMC_CR125_DLL_RST_ADJ_DLY_SHIFT        16
#define DDRMC_CR125_DLL_RST_ADJ_DLY(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_CR125_DLL_RST_ADJ_DLY_SHIFT))&DDRMC_CR125_DLL_RST_ADJ_DLY_MASK)
#define DDRMC_CR125_PHY_WRLAT_MASK               0x1F000000u
#define DDRMC_CR125_PHY_WRLAT_SHIFT              24
#define DDRMC_CR125_PHY_WRLAT(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR125_PHY_WRLAT_SHIFT))&DDRMC_CR125_PHY_WRLAT_MASK)
/* CR126 Bit Fields */
#define DDRMC_CR126_UP_ERR_STAT_MASK             0x7Fu
#define DDRMC_CR126_UP_ERR_STAT_SHIFT            0
#define DDRMC_CR126_UP_ERR_STAT(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR126_UP_ERR_STAT_SHIFT))&DDRMC_CR126_UP_ERR_STAT_MASK)
#define DDRMC_CR126_PHY_RDLAT_MASK               0x3F00u
#define DDRMC_CR126_PHY_RDLAT_SHIFT              8
#define DDRMC_CR126_PHY_RDLAT(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR126_PHY_RDLAT_SHIFT))&DDRMC_CR126_PHY_RDLAT_MASK)
#define DDRMC_CR126_PHY_RDDATA_EN_MASK           0x3F000000u
#define DDRMC_CR126_PHY_RDDATA_EN_SHIFT          24
#define DDRMC_CR126_PHY_RDDATA_EN(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR126_PHY_RDDATA_EN_SHIFT))&DDRMC_CR126_PHY_RDDATA_EN_MASK)
/* CR127 Bit Fields */
#define DDRMC_CR127_DRAM_CK_DI_MASK              0x1u
#define DDRMC_CR127_DRAM_CK_DI_SHIFT             0
/* CR131 Bit Fields */
#define DDRMC_CR131_PHYUPD_INT_MASK              0xFFFFFFFFu
#define DDRMC_CR131_PHYUPD_INT_SHIFT             0
#define DDRMC_CR131_PHYUPD_INT(x)                (((uint32_t)(((uint32_t)(x))<<DDRMC_CR131_PHYUPD_INT_SHIFT))&DDRMC_CR131_PHYUPD_INT_MASK)
/* CR132 Bit Fields */
#define DDRMC_CR132_RDLAT_ADJ_MASK               0x3Fu
#define DDRMC_CR132_RDLAT_ADJ_SHIFT              0
#define DDRMC_CR132_RDLAT_ADJ(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR132_RDLAT_ADJ_SHIFT))&DDRMC_CR132_RDLAT_ADJ_MASK)
#define DDRMC_CR132_WRLAT_ADJ_MASK               0x1F00u
#define DDRMC_CR132_WRLAT_ADJ_SHIFT              8
#define DDRMC_CR132_WRLAT_ADJ(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR132_WRLAT_ADJ_SHIFT))&DDRMC_CR132_WRLAT_ADJ_MASK)
/* CR137 Bit Fields */
#define DDRMC_CR137_PHYCTL_DL_MASK               0xF0000u
#define DDRMC_CR137_PHYCTL_DL_SHIFT              16
#define DDRMC_CR137_PHYCTL_DL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR137_PHYCTL_DL_SHIFT))&DDRMC_CR137_PHYCTL_DL_MASK)
/* CR138 Bit Fields */
#define DDRMC_CR138_PHYDRAM_CK_DIS_MASK          0xFu
#define DDRMC_CR138_PHYDRAM_CK_DIS_SHIFT         0
#define DDRMC_CR138_PHYDRAM_CK_DIS(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR138_PHYDRAM_CK_DIS_SHIFT))&DDRMC_CR138_PHYDRAM_CK_DIS_MASK)
#define DDRMC_CR138_PHYDRAM_CK_EN_MASK           0x700u
#define DDRMC_CR138_PHYDRAM_CK_EN_SHIFT          8
#define DDRMC_CR138_PHYDRAM_CK_EN(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR138_PHYDRAM_CK_EN_SHIFT))&DDRMC_CR138_PHYDRAM_CK_EN_MASK)
#define DDRMC_CR138_PHY_WRLV_MXDL_MASK           0xFFFF0000u
#define DDRMC_CR138_PHY_WRLV_MXDL_SHIFT          16
#define DDRMC_CR138_PHY_WRLV_MXDL(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR138_PHY_WRLV_MXDL_SHIFT))&DDRMC_CR138_PHY_WRLV_MXDL_MASK)
/* CR139 Bit Fields */
#define DDRMC_CR139_PHY_WRLV_EN_MASK             0xFFu
#define DDRMC_CR139_PHY_WRLV_EN_SHIFT            0
#define DDRMC_CR139_PHY_WRLV_EN(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR139_PHY_WRLV_EN_SHIFT))&DDRMC_CR139_PHY_WRLV_EN_MASK)
#define DDRMC_CR139_PHY_WRLV_DLL_MASK            0xFF00u
#define DDRMC_CR139_PHY_WRLV_DLL_SHIFT           8
#define DDRMC_CR139_PHY_WRLV_DLL(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR139_PHY_WRLV_DLL_SHIFT))&DDRMC_CR139_PHY_WRLV_DLL_MASK)
#define DDRMC_CR139_PHY_WRLV_LOAD_MASK           0xFF0000u
#define DDRMC_CR139_PHY_WRLV_LOAD_SHIFT          16
#define DDRMC_CR139_PHY_WRLV_LOAD(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR139_PHY_WRLV_LOAD_SHIFT))&DDRMC_CR139_PHY_WRLV_LOAD_MASK)
#define DDRMC_CR139_PHY_WRLV_RESPLAT_MASK        0xFF000000u
#define DDRMC_CR139_PHY_WRLV_RESPLAT_SHIFT       24
#define DDRMC_CR139_PHY_WRLV_RESPLAT(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_CR139_PHY_WRLV_RESPLAT_SHIFT))&DDRMC_CR139_PHY_WRLV_RESPLAT_MASK)
/* CR140 Bit Fields */
#define DDRMC_CR140_PHY_WRLV_WW_MASK             0x3FFu
#define DDRMC_CR140_PHY_WRLV_WW_SHIFT            0
#define DDRMC_CR140_PHY_WRLV_WW(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR140_PHY_WRLV_WW_SHIFT))&DDRMC_CR140_PHY_WRLV_WW_MASK)
/* CR141 Bit Fields */
#define DDRMC_CR141_PHY_WRLV_RESP_MASK           0xFFFFFFFFu
#define DDRMC_CR141_PHY_WRLV_RESP_SHIFT          0
#define DDRMC_CR141_PHY_WRLV_RESP(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR141_PHY_WRLV_RESP_SHIFT))&DDRMC_CR141_PHY_WRLV_RESP_MASK)
/* CR142 Bit Fields */
#define DDRMC_CR142_PHY_WRLV_MAX_MASK            0xFFFFFFFFu
#define DDRMC_CR142_PHY_WRLV_MAX_SHIFT           0
#define DDRMC_CR142_PHY_WRLV_MAX(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR142_PHY_WRLV_MAX_SHIFT))&DDRMC_CR142_PHY_WRLV_MAX_MASK)
/* CR143 Bit Fields */
#define DDRMC_CR143_RDLV_MXDL_MASK               0xFFFFu
#define DDRMC_CR143_RDLV_MXDL_SHIFT              0
#define DDRMC_CR143_RDLV_MXDL(x)                 (((uint32_t)(((uint32_t)(x))<<DDRMC_CR143_RDLV_MXDL_SHIFT))&DDRMC_CR143_RDLV_MXDL_MASK)
#define DDRMC_CR143_RDLV_GAT_MXDL_MASK           0xFFFF0000u
#define DDRMC_CR143_RDLV_GAT_MXDL_SHIFT          16
#define DDRMC_CR143_RDLV_GAT_MXDL(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR143_RDLV_GAT_MXDL_SHIFT))&DDRMC_CR143_RDLV_GAT_MXDL_MASK)
/* CR144 Bit Fields */
#define DDRMC_CR144_PHY_RDLV_EN_MASK             0xFFu
#define DDRMC_CR144_PHY_RDLV_EN_SHIFT            0
#define DDRMC_CR144_PHY_RDLV_EN(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR144_PHY_RDLV_EN_SHIFT))&DDRMC_CR144_PHY_RDLV_EN_MASK)
#define DDRMC_CR144_PHY_RDLV_DLL_MASK            0xFF00u
#define DDRMC_CR144_PHY_RDLV_DLL_SHIFT           8
#define DDRMC_CR144_PHY_RDLV_DLL(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR144_PHY_RDLV_DLL_SHIFT))&DDRMC_CR144_PHY_RDLV_DLL_MASK)
#define DDRMC_CR144_PHY_RDLV_LOAD_MASK           0xFF0000u
#define DDRMC_CR144_PHY_RDLV_LOAD_SHIFT          16
#define DDRMC_CR144_PHY_RDLV_LOAD(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR144_PHY_RDLV_LOAD_SHIFT))&DDRMC_CR144_PHY_RDLV_LOAD_MASK)
#define DDRMC_CR144_PHY_RDLVL_RES_MASK           0xFF000000u
#define DDRMC_CR144_PHY_RDLVL_RES_SHIFT          24
#define DDRMC_CR144_PHY_RDLVL_RES(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR144_PHY_RDLVL_RES_SHIFT))&DDRMC_CR144_PHY_RDLVL_RES_MASK)
/* CR145 Bit Fields */
#define DDRMC_CR145_PHY_RDLV_RR_MASK             0x3FFu
#define DDRMC_CR145_PHY_RDLV_RR_SHIFT            0
#define DDRMC_CR145_PHY_RDLV_RR(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR145_PHY_RDLV_RR_SHIFT))&DDRMC_CR145_PHY_RDLV_RR_MASK)
/* CR146 Bit Fields */
#define DDRMC_CR146_PHY_RDLVL_RESP_MASK          0xFFFFFFFFu
#define DDRMC_CR146_PHY_RDLVL_RESP_SHIFT         0
#define DDRMC_CR146_PHY_RDLVL_RESP(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR146_PHY_RDLVL_RESP_SHIFT))&DDRMC_CR146_PHY_RDLVL_RESP_MASK)
/* CR147 Bit Fields */
#define DDRMC_CR147_RDLV_RESP_MASK_MASK          0xFFFFFu
#define DDRMC_CR147_RDLV_RESP_MASK_SHIFT         0
#define DDRMC_CR147_RDLV_RESP_MASK(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_CR147_RDLV_RESP_MASK_SHIFT))&DDRMC_CR147_RDLV_RESP_MASK_MASK)
/* CR148 Bit Fields */
#define DDRMC_CR148_RDLV_GATE_RESP_MASK_MASK     0xFFFFFu
#define DDRMC_CR148_RDLV_GATE_RESP_MASK_SHIFT    0
#define DDRMC_CR148_RDLV_GATE_RESP_MASK(x)       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR148_RDLV_GATE_RESP_MASK_SHIFT))&DDRMC_CR148_RDLV_GATE_RESP_MASK_MASK)
#define DDRMC_CR148_RDLVL_EN_MASK                0x1000000u
#define DDRMC_CR148_RDLVL_EN_SHIFT               24
/* CR149 Bit Fields */
#define DDRMC_CR149_RDLVL_GATE_EN_MASK           0x1u
#define DDRMC_CR149_RDLVL_GATE_EN_SHIFT          0
#define DDRMC_CR149_RDLV_GT_CHKENS_MASK          0x100u
#define DDRMC_CR149_RDLV_GT_CHKENS_SHIFT         8
/* CR150 Bit Fields */
#define DDRMC_CR150_PHY_RDLVLMAX_MASK            0xFFFFFFFFu
#define DDRMC_CR150_PHY_RDLVLMAX_SHIFT           0
#define DDRMC_CR150_PHY_RDLVLMAX(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR150_PHY_RDLVLMAX_SHIFT))&DDRMC_CR150_PHY_RDLVLMAX_MASK)
/* CR151 Bit Fields */
#define DDRMC_CR151_RDLVL_DQ_ZERO_CNT_MASK       0xFu
#define DDRMC_CR151_RDLVL_DQ_ZERO_CNT_SHIFT      0
#define DDRMC_CR151_RDLVL_DQ_ZERO_CNT(x)         (((uint32_t)(((uint32_t)(x))<<DDRMC_CR151_RDLVL_DQ_ZERO_CNT_SHIFT))&DDRMC_CR151_RDLVL_DQ_ZERO_CNT_MASK)
#define DDRMC_CR151_RDLV_GAT_DQ_ZERO_CNT_MASK    0xF00u
#define DDRMC_CR151_RDLV_GAT_DQ_ZERO_CNT_SHIFT   8
#define DDRMC_CR151_RDLV_GAT_DQ_ZERO_CNT(x)      (((uint32_t)(((uint32_t)(x))<<DDRMC_CR151_RDLV_GAT_DQ_ZERO_CNT_SHIFT))&DDRMC_CR151_RDLV_GAT_DQ_ZERO_CNT_MASK)
#define DDRMC_CR151_RDLV_ERR_STA_MASK            0x3FFF0000u
#define DDRMC_CR151_RDLV_ERR_STA_SHIFT           16
#define DDRMC_CR151_RDLV_ERR_STA(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_CR151_RDLV_ERR_STA_SHIFT))&DDRMC_CR151_RDLV_ERR_STA_MASK)
/* CR152 Bit Fields */
#define DDRMC_CR152_RDLV_REFINT_MASK             0xFFFFu
#define DDRMC_CR152_RDLV_REFINT_SHIFT            0
#define DDRMC_CR152_RDLV_REFINT(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR152_RDLV_REFINT_SHIFT))&DDRMC_CR152_RDLV_REFINT_MASK)
#define DDRMC_CR152_RDLV_GTREFINT_MASK           0xFFFF0000u
#define DDRMC_CR152_RDLV_GTREFINT_SHIFT          16
#define DDRMC_CR152_RDLV_GTREFINT(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR152_RDLV_GTREFINT_SHIFT))&DDRMC_CR152_RDLV_GTREFINT_MASK)
/* CR153 Bit Fields */
#define DDRMC_CR153_EN_1T_TMG_MASK               0x100u
#define DDRMC_CR153_EN_1T_TMG_SHIFT              8
/* CR154 Bit Fields */
#define DDRMC_CR154_PAD_ZQ_CMP_OUT_SMP_MASK      0x3000u
#define DDRMC_CR154_PAD_ZQ_CMP_OUT_SMP_SHIFT     12
#define DDRMC_CR154_PAD_ZQ_CMP_OUT_SMP(x)        (((uint32_t)(((uint32_t)(x))<<DDRMC_CR154_PAD_ZQ_CMP_OUT_SMP_SHIFT))&DDRMC_CR154_PAD_ZQ_CMP_OUT_SMP_MASK)
#define DDRMC_CR154_PAD_ZQ_HW_FOR_MASK           0x4000u
#define DDRMC_CR154_PAD_ZQ_HW_FOR_SHIFT          14
#define DDRMC_CR154_PAD_ZQ_MODE_MASK             0x600000u
#define DDRMC_CR154_PAD_ZQ_MODE_SHIFT            21
#define DDRMC_CR154_PAD_ZQ_MODE(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_CR154_PAD_ZQ_MODE_SHIFT))&DDRMC_CR154_PAD_ZQ_MODE_MASK)
#define DDRMC_CR154_PAD_ZQ_EARLY_CMP_EN_TIMER_MASK 0xF8000000u
#define DDRMC_CR154_PAD_ZQ_EARLY_CMP_EN_TIMER_SHIFT 27
#define DDRMC_CR154_PAD_ZQ_EARLY_CMP_EN_TIMER(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_CR154_PAD_ZQ_EARLY_CMP_EN_TIMER_SHIFT))&DDRMC_CR154_PAD_ZQ_EARLY_CMP_EN_TIMER_MASK)
/* CR155 Bit Fields */
#define DDRMC_CR155_PAD_ODT_BYTE1_MASK           0x7u
#define DDRMC_CR155_PAD_ODT_BYTE1_SHIFT          0
#define DDRMC_CR155_PAD_ODT_BYTE1(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR155_PAD_ODT_BYTE1_SHIFT))&DDRMC_CR155_PAD_ODT_BYTE1_MASK)
#define DDRMC_CR155_PAD_ODT_BYTE0_MASK           0x38u
#define DDRMC_CR155_PAD_ODT_BYTE0_SHIFT          3
#define DDRMC_CR155_PAD_ODT_BYTE0(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_CR155_PAD_ODT_BYTE0_SHIFT))&DDRMC_CR155_PAD_ODT_BYTE0_MASK)
#define DDRMC_CR155_AXI0_COBUF_MASK              0x100u
#define DDRMC_CR155_AXI0_COBUF_SHIFT             8
#define DDRMC_CR155_AXI1_COBUF_MASK              0x200u
#define DDRMC_CR155_AXI1_COBUF_SHIFT             9
#define DDRMC_CR155_AXI0_AWCACHE_MASK            0x400u
#define DDRMC_CR155_AXI0_AWCACHE_SHIFT           10
#define DDRMC_CR155_AXI1_AWCACHE_MASK            0x800u
#define DDRMC_CR155_AXI1_AWCACHE_SHIFT           11
#define DDRMC_CR155_PAD_IBE_SEL0_MASK            0x10000u
#define DDRMC_CR155_PAD_IBE_SEL0_SHIFT           16
#define DDRMC_CR155_PAD_IBE_SEL1_MASK            0x20000u
#define DDRMC_CR155_PAD_IBE_SEL1_SHIFT           17
#define DDRMC_CR155_PAD_IBE0_MASK                0x40000u
#define DDRMC_CR155_PAD_IBE0_SHIFT               18
#define DDRMC_CR155_PAD_IBE1_MASK                0x80000u
#define DDRMC_CR155_PAD_IBE1_SHIFT               19
/* CR158 Bit Fields */
#define DDRMC_CR158_TWR_MASK                     0x3Fu
#define DDRMC_CR158_TWR_SHIFT                    0
#define DDRMC_CR158_TWR(x)                       (((uint32_t)(((uint32_t)(x))<<DDRMC_CR158_TWR_SHIFT))&DDRMC_CR158_TWR_MASK)
/* CR159 Bit Fields */
#define DDRMC_CR159_TODTH_MASK                   0xFu
#define DDRMC_CR159_TODTH_SHIFT                  0
#define DDRMC_CR159_TODTH(x)                     (((uint32_t)(((uint32_t)(x))<<DDRMC_CR159_TODTH_SHIFT))&DDRMC_CR159_TODTH_MASK)
/* PHY_DQ_TR0 Bit Fields */
#define DDRMC_PHY_DQ_TR0_OE_END_MASK             0x7u
#define DDRMC_PHY_DQ_TR0_OE_END_SHIFT            0
#define DDRMC_PHY_DQ_TR0_OE_END(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR0_OE_END_SHIFT))&DDRMC_PHY_DQ_TR0_OE_END_MASK)
#define DDRMC_PHY_DQ_TR0_OE_START_MASK           0x70u
#define DDRMC_PHY_DQ_TR0_OE_START_SHIFT          4
#define DDRMC_PHY_DQ_TR0_OE_START(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR0_OE_START_SHIFT))&DDRMC_PHY_DQ_TR0_OE_START_MASK)
#define DDRMC_PHY_DQ_TR0_TSEL_END_MASK           0xF00u
#define DDRMC_PHY_DQ_TR0_TSEL_END_SHIFT          8
#define DDRMC_PHY_DQ_TR0_TSEL_END(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR0_TSEL_END_SHIFT))&DDRMC_PHY_DQ_TR0_TSEL_END_MASK)
#define DDRMC_PHY_DQ_TR0_TSEL_START_MASK         0xF000u
#define DDRMC_PHY_DQ_TR0_TSEL_START_SHIFT        12
#define DDRMC_PHY_DQ_TR0_TSEL_START(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR0_TSEL_START_SHIFT))&DDRMC_PHY_DQ_TR0_TSEL_START_MASK)
/* PHY_DQS_TR0 Bit Fields */
#define DDRMC_PHY_DQS_TR0_OE_END_MASK            0xFu
#define DDRMC_PHY_DQS_TR0_OE_END_SHIFT           0
#define DDRMC_PHY_DQS_TR0_OE_END(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR0_OE_END_SHIFT))&DDRMC_PHY_DQS_TR0_OE_END_MASK)
#define DDRMC_PHY_DQS_TR0_OE_START_MASK          0xF0u
#define DDRMC_PHY_DQS_TR0_OE_START_SHIFT         4
#define DDRMC_PHY_DQS_TR0_OE_START(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR0_OE_START_SHIFT))&DDRMC_PHY_DQS_TR0_OE_START_MASK)
#define DDRMC_PHY_DQS_TR0_TSEL_END_MASK          0xF00u
#define DDRMC_PHY_DQS_TR0_TSEL_END_SHIFT         8
#define DDRMC_PHY_DQS_TR0_TSEL_END(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR0_TSEL_END_SHIFT))&DDRMC_PHY_DQS_TR0_TSEL_END_MASK)
#define DDRMC_PHY_DQS_TR0_TSEL_START_MASK        0xF000u
#define DDRMC_PHY_DQS_TR0_TSEL_START_SHIFT       12
#define DDRMC_PHY_DQS_TR0_TSEL_START(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR0_TSEL_START_SHIFT))&DDRMC_PHY_DQS_TR0_TSEL_START_MASK)
/* PHY_GATE_CR0 Bit Fields */
#define DDRMC_PHY_GATE_CR0_Gate_CFG_MASK         0x7u
#define DDRMC_PHY_GATE_CR0_Gate_CFG_SHIFT        0
#define DDRMC_PHY_GATE_CR0_Gate_CFG(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR0_Gate_CFG_SHIFT))&DDRMC_PHY_GATE_CR0_Gate_CFG_MASK)
#define DDRMC_PHY_GATE_CR0_RD_DL_SET_MASK        0x380000u
#define DDRMC_PHY_GATE_CR0_RD_DL_SET_SHIFT       19
#define DDRMC_PHY_GATE_CR0_RD_DL_SET(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR0_RD_DL_SET_SHIFT))&DDRMC_PHY_GATE_CR0_RD_DL_SET_MASK)
#define DDRMC_PHY_GATE_CR0_WRLVL_CLKDL_MASK      0x2000000u
#define DDRMC_PHY_GATE_CR0_WRLVL_CLKDL_SHIFT     25
#define DDRMC_PHY_GATE_CR0_SW_HALF_CYCLE_SHIFT_MASK 0x8000000u
#define DDRMC_PHY_GATE_CR0_SW_HALF_CYCLE_SHIFT_SHIFT 27
#define DDRMC_PHY_GATE_CR0_EN_HALF_CAS_MASK      0x20000000u
#define DDRMC_PHY_GATE_CR0_EN_HALF_CAS_SHIFT     29
/* PHY_DLL_MASTER_CR0 Bit Fields */
#define DDRMC_PHY_DLL_MASTER_CR0_DLL_START_POINT_MASK 0xFFu
#define DDRMC_PHY_DLL_MASTER_CR0_DLL_START_POINT_SHIFT 0
#define DDRMC_PHY_DLL_MASTER_CR0_DLL_START_POINT(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_MASTER_CR0_DLL_START_POINT_SHIFT))&DDRMC_PHY_DLL_MASTER_CR0_DLL_START_POINT_MASK)
/* PHY_DLL_SLAVE_CR0 Bit Fields */
#define DDRMC_PHY_DLL_SLAVE_CR0_DLL_WRITE_DL_MASK 0x7F00u
#define DDRMC_PHY_DLL_SLAVE_CR0_DLL_WRITE_DL_SHIFT 8
#define DDRMC_PHY_DLL_SLAVE_CR0_DLL_WRITE_DL(x)  (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_SLAVE_CR0_DLL_WRITE_DL_SHIFT))&DDRMC_PHY_DLL_SLAVE_CR0_DLL_WRITE_DL_MASK)
/* PHY_DLL_STATUS_REG0 Bit Fields */
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_MASK  0x1u
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_SHIFT 0
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_VALUE_MASK 0xFF00u
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_VALUE_SHIFT 8
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG0_DLL_LOCK_VALUE_MASK)
#define DDRMC_PHY_DLL_STATUS_REG0_LOCK_MASK      0xFF0000u
#define DDRMC_PHY_DLL_STATUS_REG0_LOCK_SHIFT     16
#define DDRMC_PHY_DLL_STATUS_REG0_LOCK(x)        (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG0_LOCK_SHIFT))&DDRMC_PHY_DLL_STATUS_REG0_LOCK_MASK)
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_UNLOCK_VALUE_MASK 0xFF000000u
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_UNLOCK_VALUE_SHIFT 24
#define DDRMC_PHY_DLL_STATUS_REG0_DLL_UNLOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG0_DLL_UNLOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG0_DLL_UNLOCK_VALUE_MASK)
/* PHY_DQ_TR1 Bit Fields */
#define DDRMC_PHY_DQ_TR1_OE_END_MASK             0x7u
#define DDRMC_PHY_DQ_TR1_OE_END_SHIFT            0
#define DDRMC_PHY_DQ_TR1_OE_END(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR1_OE_END_SHIFT))&DDRMC_PHY_DQ_TR1_OE_END_MASK)
#define DDRMC_PHY_DQ_TR1_OE_START_MASK           0x70u
#define DDRMC_PHY_DQ_TR1_OE_START_SHIFT          4
#define DDRMC_PHY_DQ_TR1_OE_START(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR1_OE_START_SHIFT))&DDRMC_PHY_DQ_TR1_OE_START_MASK)
#define DDRMC_PHY_DQ_TR1_TSEL_END_MASK           0xF00u
#define DDRMC_PHY_DQ_TR1_TSEL_END_SHIFT          8
#define DDRMC_PHY_DQ_TR1_TSEL_END(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR1_TSEL_END_SHIFT))&DDRMC_PHY_DQ_TR1_TSEL_END_MASK)
#define DDRMC_PHY_DQ_TR1_TSEL_START_MASK         0xF000u
#define DDRMC_PHY_DQ_TR1_TSEL_START_SHIFT        12
#define DDRMC_PHY_DQ_TR1_TSEL_START(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR1_TSEL_START_SHIFT))&DDRMC_PHY_DQ_TR1_TSEL_START_MASK)
/* PHY_DQS_TR1 Bit Fields */
#define DDRMC_PHY_DQS_TR1_OE_END_MASK            0xFu
#define DDRMC_PHY_DQS_TR1_OE_END_SHIFT           0
#define DDRMC_PHY_DQS_TR1_OE_END(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR1_OE_END_SHIFT))&DDRMC_PHY_DQS_TR1_OE_END_MASK)
#define DDRMC_PHY_DQS_TR1_OE_START_MASK          0xF0u
#define DDRMC_PHY_DQS_TR1_OE_START_SHIFT         4
#define DDRMC_PHY_DQS_TR1_OE_START(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR1_OE_START_SHIFT))&DDRMC_PHY_DQS_TR1_OE_START_MASK)
#define DDRMC_PHY_DQS_TR1_TSEL_END_MASK          0xF00u
#define DDRMC_PHY_DQS_TR1_TSEL_END_SHIFT         8
#define DDRMC_PHY_DQS_TR1_TSEL_END(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR1_TSEL_END_SHIFT))&DDRMC_PHY_DQS_TR1_TSEL_END_MASK)
#define DDRMC_PHY_DQS_TR1_TSEL_START_MASK        0xF000u
#define DDRMC_PHY_DQS_TR1_TSEL_START_SHIFT       12
#define DDRMC_PHY_DQS_TR1_TSEL_START(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR1_TSEL_START_SHIFT))&DDRMC_PHY_DQS_TR1_TSEL_START_MASK)
/* PHY_GATE_CR1 Bit Fields */
#define DDRMC_PHY_GATE_CR1_Gate_CFG_MASK         0x7u
#define DDRMC_PHY_GATE_CR1_Gate_CFG_SHIFT        0
#define DDRMC_PHY_GATE_CR1_Gate_CFG(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR1_Gate_CFG_SHIFT))&DDRMC_PHY_GATE_CR1_Gate_CFG_MASK)
#define DDRMC_PHY_GATE_CR1_RD_DL_SET_MASK        0x380000u
#define DDRMC_PHY_GATE_CR1_RD_DL_SET_SHIFT       19
#define DDRMC_PHY_GATE_CR1_RD_DL_SET(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR1_RD_DL_SET_SHIFT))&DDRMC_PHY_GATE_CR1_RD_DL_SET_MASK)
#define DDRMC_PHY_GATE_CR1_WRLVL_CLKDL_MASK      0x2000000u
#define DDRMC_PHY_GATE_CR1_WRLVL_CLKDL_SHIFT     25
#define DDRMC_PHY_GATE_CR1_SW_HALF_CYCLE_SHIFT_MASK 0x8000000u
#define DDRMC_PHY_GATE_CR1_SW_HALF_CYCLE_SHIFT_SHIFT 27
#define DDRMC_PHY_GATE_CR1_EN_HALF_CAS_MASK      0x20000000u
#define DDRMC_PHY_GATE_CR1_EN_HALF_CAS_SHIFT     29
/* PHY_DLL_MASTER_CR1 Bit Fields */
#define DDRMC_PHY_DLL_MASTER_CR1_DLL_START_POINT_MASK 0xFFu
#define DDRMC_PHY_DLL_MASTER_CR1_DLL_START_POINT_SHIFT 0
#define DDRMC_PHY_DLL_MASTER_CR1_DLL_START_POINT(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_MASTER_CR1_DLL_START_POINT_SHIFT))&DDRMC_PHY_DLL_MASTER_CR1_DLL_START_POINT_MASK)
/* PHY_DLL_SLAVE_CR1 Bit Fields */
#define DDRMC_PHY_DLL_SLAVE_CR1_DLL_WRITE_DL_MASK 0x7F00u
#define DDRMC_PHY_DLL_SLAVE_CR1_DLL_WRITE_DL_SHIFT 8
#define DDRMC_PHY_DLL_SLAVE_CR1_DLL_WRITE_DL(x)  (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_SLAVE_CR1_DLL_WRITE_DL_SHIFT))&DDRMC_PHY_DLL_SLAVE_CR1_DLL_WRITE_DL_MASK)
/* PHY_DLL_STATUS_REG1 Bit Fields */
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_MASK  0x1u
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_SHIFT 0
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_VALUE_MASK 0xFF00u
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_VALUE_SHIFT 8
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG1_DLL_LOCK_VALUE_MASK)
#define DDRMC_PHY_DLL_STATUS_REG1_LOCK_MASK      0xFF0000u
#define DDRMC_PHY_DLL_STATUS_REG1_LOCK_SHIFT     16
#define DDRMC_PHY_DLL_STATUS_REG1_LOCK(x)        (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG1_LOCK_SHIFT))&DDRMC_PHY_DLL_STATUS_REG1_LOCK_MASK)
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_UNLOCK_VALUE_MASK 0xFF000000u
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_UNLOCK_VALUE_SHIFT 24
#define DDRMC_PHY_DLL_STATUS_REG1_DLL_UNLOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG1_DLL_UNLOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG1_DLL_UNLOCK_VALUE_MASK)
/* PHY_DQ_TR2 Bit Fields */
#define DDRMC_PHY_DQ_TR2_OE_END_MASK             0x7u
#define DDRMC_PHY_DQ_TR2_OE_END_SHIFT            0
#define DDRMC_PHY_DQ_TR2_OE_END(x)               (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR2_OE_END_SHIFT))&DDRMC_PHY_DQ_TR2_OE_END_MASK)
#define DDRMC_PHY_DQ_TR2_OE_START_MASK           0x70u
#define DDRMC_PHY_DQ_TR2_OE_START_SHIFT          4
#define DDRMC_PHY_DQ_TR2_OE_START(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR2_OE_START_SHIFT))&DDRMC_PHY_DQ_TR2_OE_START_MASK)
#define DDRMC_PHY_DQ_TR2_TSEL_END_MASK           0xF00u
#define DDRMC_PHY_DQ_TR2_TSEL_END_SHIFT          8
#define DDRMC_PHY_DQ_TR2_TSEL_END(x)             (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR2_TSEL_END_SHIFT))&DDRMC_PHY_DQ_TR2_TSEL_END_MASK)
#define DDRMC_PHY_DQ_TR2_TSEL_START_MASK         0xF000u
#define DDRMC_PHY_DQ_TR2_TSEL_START_SHIFT        12
#define DDRMC_PHY_DQ_TR2_TSEL_START(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQ_TR2_TSEL_START_SHIFT))&DDRMC_PHY_DQ_TR2_TSEL_START_MASK)
/* PHY_DQS_TR2 Bit Fields */
#define DDRMC_PHY_DQS_TR2_OE_END_MASK            0xFu
#define DDRMC_PHY_DQS_TR2_OE_END_SHIFT           0
#define DDRMC_PHY_DQS_TR2_OE_END(x)              (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR2_OE_END_SHIFT))&DDRMC_PHY_DQS_TR2_OE_END_MASK)
#define DDRMC_PHY_DQS_TR2_OE_START_MASK          0xF0u
#define DDRMC_PHY_DQS_TR2_OE_START_SHIFT         4
#define DDRMC_PHY_DQS_TR2_OE_START(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR2_OE_START_SHIFT))&DDRMC_PHY_DQS_TR2_OE_START_MASK)
#define DDRMC_PHY_DQS_TR2_TSEL_END_MASK          0xF00u
#define DDRMC_PHY_DQS_TR2_TSEL_END_SHIFT         8
#define DDRMC_PHY_DQS_TR2_TSEL_END(x)            (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR2_TSEL_END_SHIFT))&DDRMC_PHY_DQS_TR2_TSEL_END_MASK)
#define DDRMC_PHY_DQS_TR2_TSEL_START_MASK        0xF000u
#define DDRMC_PHY_DQS_TR2_TSEL_START_SHIFT       12
#define DDRMC_PHY_DQS_TR2_TSEL_START(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DQS_TR2_TSEL_START_SHIFT))&DDRMC_PHY_DQS_TR2_TSEL_START_MASK)
/* PHY_GATE_CR2 Bit Fields */
#define DDRMC_PHY_GATE_CR2_Gate_CFG_MASK         0x7u
#define DDRMC_PHY_GATE_CR2_Gate_CFG_SHIFT        0
#define DDRMC_PHY_GATE_CR2_Gate_CFG(x)           (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR2_Gate_CFG_SHIFT))&DDRMC_PHY_GATE_CR2_Gate_CFG_MASK)
#define DDRMC_PHY_GATE_CR2_RD_DL_SET_MASK        0x380000u
#define DDRMC_PHY_GATE_CR2_RD_DL_SET_SHIFT       19
#define DDRMC_PHY_GATE_CR2_RD_DL_SET(x)          (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_GATE_CR2_RD_DL_SET_SHIFT))&DDRMC_PHY_GATE_CR2_RD_DL_SET_MASK)
#define DDRMC_PHY_GATE_CR2_WRLVL_CLKDL_MASK      0x2000000u
#define DDRMC_PHY_GATE_CR2_WRLVL_CLKDL_SHIFT     25
#define DDRMC_PHY_GATE_CR2_SW_HALF_CYCLE_SHIFT_MASK 0x8000000u
#define DDRMC_PHY_GATE_CR2_SW_HALF_CYCLE_SHIFT_SHIFT 27
#define DDRMC_PHY_GATE_CR2_EN_HALF_CAS_MASK      0x20000000u
#define DDRMC_PHY_GATE_CR2_EN_HALF_CAS_SHIFT     29
/* PHY_DLL_MASTER_CR2 Bit Fields */
#define DDRMC_PHY_DLL_MASTER_CR2_DLL_START_POINT_MASK 0xFFu
#define DDRMC_PHY_DLL_MASTER_CR2_DLL_START_POINT_SHIFT 0
#define DDRMC_PHY_DLL_MASTER_CR2_DLL_START_POINT(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_MASTER_CR2_DLL_START_POINT_SHIFT))&DDRMC_PHY_DLL_MASTER_CR2_DLL_START_POINT_MASK)
/* PHY_DLL_SLAVE_CR2 Bit Fields */
#define DDRMC_PHY_DLL_SLAVE_CR2_DLL_WRITE_DL_MASK 0x7F00u
#define DDRMC_PHY_DLL_SLAVE_CR2_DLL_WRITE_DL_SHIFT 8
#define DDRMC_PHY_DLL_SLAVE_CR2_DLL_WRITE_DL(x)  (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_SLAVE_CR2_DLL_WRITE_DL_SHIFT))&DDRMC_PHY_DLL_SLAVE_CR2_DLL_WRITE_DL_MASK)
/* PHY_DLL_STATUS_REG2 Bit Fields */
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_MASK  0x1u
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_SHIFT 0
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_VALUE_MASK 0xFF00u
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_VALUE_SHIFT 8
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG2_DLL_LOCK_VALUE_MASK)
#define DDRMC_PHY_DLL_STATUS_REG2_LOCK_MASK      0xFF0000u
#define DDRMC_PHY_DLL_STATUS_REG2_LOCK_SHIFT     16
#define DDRMC_PHY_DLL_STATUS_REG2_LOCK(x)        (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG2_LOCK_SHIFT))&DDRMC_PHY_DLL_STATUS_REG2_LOCK_MASK)
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_UNLOCK_VALUE_MASK 0xFF000000u
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_UNLOCK_VALUE_SHIFT 24
#define DDRMC_PHY_DLL_STATUS_REG2_DLL_UNLOCK_VALUE(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_STATUS_REG2_DLL_UNLOCK_VALUE_SHIFT))&DDRMC_PHY_DLL_STATUS_REG2_DLL_UNLOCK_VALUE_MASK)
/* PHY_DLL_SLAVE_CTL_LPDDR2_REG Bit Fields */
#define DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_PHY_RDLV_DL_MASK 0xFF0000u
#define DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_PHY_RDLV_DL_SHIFT 16
#define DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_PHY_RDLV_DL(x) (((uint32_t)(((uint32_t)(x))<<DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_PHY_RDLV_DL_SHIFT))&DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_PHY_RDLV_DL_MASK)
/* PHY_GB_CR Bit Fields */
#define DDRMC_PHY_GB_CR_CLEAR_FIFO_MASK          0x10u
#define DDRMC_PHY_GB_CR_CLEAR_FIFO_SHIFT         4
#define DDRMC_PHY_GB_CR_EN_SW_HALF_CYCLE_MASK    0x100u
#define DDRMC_PHY_GB_CR_EN_SW_HALF_CYCLE_SHIFT   8
#define DDRMC_PHY_GB_CR_DDR_SEL_MASK             0x800u
#define DDRMC_PHY_GB_CR_DDR_SEL_SHIFT            11
#define DDRMC_PHY_GB_CR_DDR3_MODE_MASK           0x1000u
#define DDRMC_PHY_GB_CR_DDR3_MODE_SHIFT          12
#define DDRMC_PHY_GB_CR_DFI_MOBILE_EN_MASK       0x2000u
#define DDRMC_PHY_GB_CR_DFI_MOBILE_EN_SHIFT      13

/**
 * @}
 */ /* end of group DDRMC_Register_Masks */


/* DDRMC - Peripheral instance base addresses */
/** Peripheral DDRMC base pointer */
#define DDRMC_BASE_PTR                           ((DDRMC_MemMapPtr)0x400AE000u)
/** Array initializer of DDRMC peripheral base pointers */
#define DDRMC_BASE_PTRS                          { DDRMC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- DDRMC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DDRMC_Register_Accessor_Macros DDRMC - Register accessor macros
 * @{
 */


/* DDRMC - Register instance definitions */
/* DDRMC */
#define DDRMC_CR00                               DDRMC_CR00_REG(DDRMC_BASE_PTR)
#define DDRMC_CR01                               DDRMC_CR01_REG(DDRMC_BASE_PTR)
#define DDRMC_CR02                               DDRMC_CR02_REG(DDRMC_BASE_PTR)
#define DDRMC_CR03                               DDRMC_CR03_REG(DDRMC_BASE_PTR)
#define DDRMC_CR04                               DDRMC_CR04_REG(DDRMC_BASE_PTR)
#define DDRMC_CR05                               DDRMC_CR05_REG(DDRMC_BASE_PTR)
#define DDRMC_CR09                               DDRMC_CR09_REG(DDRMC_BASE_PTR)
#define DDRMC_CR10                               DDRMC_CR10_REG(DDRMC_BASE_PTR)
#define DDRMC_CR11                               DDRMC_CR11_REG(DDRMC_BASE_PTR)
#define DDRMC_CR12                               DDRMC_CR12_REG(DDRMC_BASE_PTR)
#define DDRMC_CR13                               DDRMC_CR13_REG(DDRMC_BASE_PTR)
#define DDRMC_CR14                               DDRMC_CR14_REG(DDRMC_BASE_PTR)
#define DDRMC_CR16                               DDRMC_CR16_REG(DDRMC_BASE_PTR)
#define DDRMC_CR17                               DDRMC_CR17_REG(DDRMC_BASE_PTR)
#define DDRMC_CR18                               DDRMC_CR18_REG(DDRMC_BASE_PTR)
#define DDRMC_CR20                               DDRMC_CR20_REG(DDRMC_BASE_PTR)
#define DDRMC_CR21                               DDRMC_CR21_REG(DDRMC_BASE_PTR)
#define DDRMC_CR22                               DDRMC_CR22_REG(DDRMC_BASE_PTR)
#define DDRMC_CR23                               DDRMC_CR23_REG(DDRMC_BASE_PTR)
#define DDRMC_CR24                               DDRMC_CR24_REG(DDRMC_BASE_PTR)
#define DDRMC_CR25                               DDRMC_CR25_REG(DDRMC_BASE_PTR)
#define DDRMC_CR26                               DDRMC_CR26_REG(DDRMC_BASE_PTR)
#define DDRMC_CR28                               DDRMC_CR28_REG(DDRMC_BASE_PTR)
#define DDRMC_CR29                               DDRMC_CR29_REG(DDRMC_BASE_PTR)
#define DDRMC_CR30                               DDRMC_CR30_REG(DDRMC_BASE_PTR)
#define DDRMC_CR31                               DDRMC_CR31_REG(DDRMC_BASE_PTR)
#define DDRMC_CR33                               DDRMC_CR33_REG(DDRMC_BASE_PTR)
#define DDRMC_CR34                               DDRMC_CR34_REG(DDRMC_BASE_PTR)
#define DDRMC_CR35                               DDRMC_CR35_REG(DDRMC_BASE_PTR)
#define DDRMC_CR36                               DDRMC_CR36_REG(DDRMC_BASE_PTR)
#define DDRMC_CR37                               DDRMC_CR37_REG(DDRMC_BASE_PTR)
#define DDRMC_CR38                               DDRMC_CR38_REG(DDRMC_BASE_PTR)
#define DDRMC_CR39                               DDRMC_CR39_REG(DDRMC_BASE_PTR)
#define DDRMC_CR41                               DDRMC_CR41_REG(DDRMC_BASE_PTR)
#define DDRMC_CR45                               DDRMC_CR45_REG(DDRMC_BASE_PTR)
#define DDRMC_CR46                               DDRMC_CR46_REG(DDRMC_BASE_PTR)
#define DDRMC_CR47                               DDRMC_CR47_REG(DDRMC_BASE_PTR)
#define DDRMC_CR48                               DDRMC_CR48_REG(DDRMC_BASE_PTR)
#define DDRMC_CR49                               DDRMC_CR49_REG(DDRMC_BASE_PTR)
#define DDRMC_CR51                               DDRMC_CR51_REG(DDRMC_BASE_PTR)
#define DDRMC_CR52                               DDRMC_CR52_REG(DDRMC_BASE_PTR)
#define DDRMC_CR57                               DDRMC_CR57_REG(DDRMC_BASE_PTR)
#define DDRMC_CR58                               DDRMC_CR58_REG(DDRMC_BASE_PTR)
#define DDRMC_CR59                               DDRMC_CR59_REG(DDRMC_BASE_PTR)
#define DDRMC_CR60                               DDRMC_CR60_REG(DDRMC_BASE_PTR)
#define DDRMC_CR61                               DDRMC_CR61_REG(DDRMC_BASE_PTR)
#define DDRMC_CR62                               DDRMC_CR62_REG(DDRMC_BASE_PTR)
#define DDRMC_CR63                               DDRMC_CR63_REG(DDRMC_BASE_PTR)
#define DDRMC_CR64                               DDRMC_CR64_REG(DDRMC_BASE_PTR)
#define DDRMC_CR65                               DDRMC_CR65_REG(DDRMC_BASE_PTR)
#define DDRMC_CR66                               DDRMC_CR66_REG(DDRMC_BASE_PTR)
#define DDRMC_CR67                               DDRMC_CR67_REG(DDRMC_BASE_PTR)
#define DDRMC_CR69                               DDRMC_CR69_REG(DDRMC_BASE_PTR)
#define DDRMC_CR70                               DDRMC_CR70_REG(DDRMC_BASE_PTR)
#define DDRMC_CR71                               DDRMC_CR71_REG(DDRMC_BASE_PTR)
#define DDRMC_CR72                               DDRMC_CR72_REG(DDRMC_BASE_PTR)
#define DDRMC_CR73                               DDRMC_CR73_REG(DDRMC_BASE_PTR)
#define DDRMC_CR74                               DDRMC_CR74_REG(DDRMC_BASE_PTR)
#define DDRMC_CR75                               DDRMC_CR75_REG(DDRMC_BASE_PTR)
#define DDRMC_CR76                               DDRMC_CR76_REG(DDRMC_BASE_PTR)
#define DDRMC_CR77                               DDRMC_CR77_REG(DDRMC_BASE_PTR)
#define DDRMC_CR78                               DDRMC_CR78_REG(DDRMC_BASE_PTR)
#define DDRMC_CR79                               DDRMC_CR79_REG(DDRMC_BASE_PTR)
#define DDRMC_CR80                               DDRMC_CR80_REG(DDRMC_BASE_PTR)
#define DDRMC_CR81                               DDRMC_CR81_REG(DDRMC_BASE_PTR)
#define DDRMC_CR82                               DDRMC_CR82_REG(DDRMC_BASE_PTR)
#define DDRMC_CR83                               DDRMC_CR83_REG(DDRMC_BASE_PTR)
#define DDRMC_CR84                               DDRMC_CR84_REG(DDRMC_BASE_PTR)
#define DDRMC_CR85                               DDRMC_CR85_REG(DDRMC_BASE_PTR)
#define DDRMC_CR86                               DDRMC_CR86_REG(DDRMC_BASE_PTR)
#define DDRMC_CR87                               DDRMC_CR87_REG(DDRMC_BASE_PTR)
#define DDRMC_CR88                               DDRMC_CR88_REG(DDRMC_BASE_PTR)
#define DDRMC_CR89                               DDRMC_CR89_REG(DDRMC_BASE_PTR)
#define DDRMC_CR91                               DDRMC_CR91_REG(DDRMC_BASE_PTR)
#define DDRMC_CR92                               DDRMC_CR92_REG(DDRMC_BASE_PTR)
#define DDRMC_CR93                               DDRMC_CR93_REG(DDRMC_BASE_PTR)
#define DDRMC_CR94                               DDRMC_CR94_REG(DDRMC_BASE_PTR)
#define DDRMC_CR95                               DDRMC_CR95_REG(DDRMC_BASE_PTR)
#define DDRMC_CR96                               DDRMC_CR96_REG(DDRMC_BASE_PTR)
#define DDRMC_CR97                               DDRMC_CR97_REG(DDRMC_BASE_PTR)
#define DDRMC_CR98                               DDRMC_CR98_REG(DDRMC_BASE_PTR)
#define DDRMC_CR99                               DDRMC_CR99_REG(DDRMC_BASE_PTR)
#define DDRMC_CR100                              DDRMC_CR100_REG(DDRMC_BASE_PTR)
#define DDRMC_CR101                              DDRMC_CR101_REG(DDRMC_BASE_PTR)
#define DDRMC_CR102                              DDRMC_CR102_REG(DDRMC_BASE_PTR)
#define DDRMC_CR103                              DDRMC_CR103_REG(DDRMC_BASE_PTR)
#define DDRMC_CR104                              DDRMC_CR104_REG(DDRMC_BASE_PTR)
#define DDRMC_CR105                              DDRMC_CR105_REG(DDRMC_BASE_PTR)
#define DDRMC_CR106                              DDRMC_CR106_REG(DDRMC_BASE_PTR)
#define DDRMC_CR107                              DDRMC_CR107_REG(DDRMC_BASE_PTR)
#define DDRMC_CR108                              DDRMC_CR108_REG(DDRMC_BASE_PTR)
#define DDRMC_CR109                              DDRMC_CR109_REG(DDRMC_BASE_PTR)
#define DDRMC_CR110                              DDRMC_CR110_REG(DDRMC_BASE_PTR)
#define DDRMC_CR112                              DDRMC_CR112_REG(DDRMC_BASE_PTR)
#define DDRMC_CR113                              DDRMC_CR113_REG(DDRMC_BASE_PTR)
#define DDRMC_CR114                              DDRMC_CR114_REG(DDRMC_BASE_PTR)
#define DDRMC_CR117                              DDRMC_CR117_REG(DDRMC_BASE_PTR)
#define DDRMC_CR118                              DDRMC_CR118_REG(DDRMC_BASE_PTR)
#define DDRMC_CR119                              DDRMC_CR119_REG(DDRMC_BASE_PTR)
#define DDRMC_CR120                              DDRMC_CR120_REG(DDRMC_BASE_PTR)
#define DDRMC_CR121                              DDRMC_CR121_REG(DDRMC_BASE_PTR)
#define DDRMC_CR122                              DDRMC_CR122_REG(DDRMC_BASE_PTR)
#define DDRMC_CR123                              DDRMC_CR123_REG(DDRMC_BASE_PTR)
#define DDRMC_CR124                              DDRMC_CR124_REG(DDRMC_BASE_PTR)
#define DDRMC_CR125                              DDRMC_CR125_REG(DDRMC_BASE_PTR)
#define DDRMC_CR126                              DDRMC_CR126_REG(DDRMC_BASE_PTR)
#define DDRMC_CR127                              DDRMC_CR127_REG(DDRMC_BASE_PTR)
#define DDRMC_CR131                              DDRMC_CR131_REG(DDRMC_BASE_PTR)
#define DDRMC_CR132                              DDRMC_CR132_REG(DDRMC_BASE_PTR)
#define DDRMC_CR137                              DDRMC_CR137_REG(DDRMC_BASE_PTR)
#define DDRMC_CR138                              DDRMC_CR138_REG(DDRMC_BASE_PTR)
#define DDRMC_CR139                              DDRMC_CR139_REG(DDRMC_BASE_PTR)
#define DDRMC_CR140                              DDRMC_CR140_REG(DDRMC_BASE_PTR)
#define DDRMC_CR141                              DDRMC_CR141_REG(DDRMC_BASE_PTR)
#define DDRMC_CR142                              DDRMC_CR142_REG(DDRMC_BASE_PTR)
#define DDRMC_CR143                              DDRMC_CR143_REG(DDRMC_BASE_PTR)
#define DDRMC_CR144                              DDRMC_CR144_REG(DDRMC_BASE_PTR)
#define DDRMC_CR145                              DDRMC_CR145_REG(DDRMC_BASE_PTR)
#define DDRMC_CR146                              DDRMC_CR146_REG(DDRMC_BASE_PTR)
#define DDRMC_CR147                              DDRMC_CR147_REG(DDRMC_BASE_PTR)
#define DDRMC_CR148                              DDRMC_CR148_REG(DDRMC_BASE_PTR)
#define DDRMC_CR149                              DDRMC_CR149_REG(DDRMC_BASE_PTR)
#define DDRMC_CR150                              DDRMC_CR150_REG(DDRMC_BASE_PTR)
#define DDRMC_CR151                              DDRMC_CR151_REG(DDRMC_BASE_PTR)
#define DDRMC_CR152                              DDRMC_CR152_REG(DDRMC_BASE_PTR)
#define DDRMC_CR153                              DDRMC_CR153_REG(DDRMC_BASE_PTR)
#define DDRMC_CR154                              DDRMC_CR154_REG(DDRMC_BASE_PTR)
#define DDRMC_CR155                              DDRMC_CR155_REG(DDRMC_BASE_PTR)
#define DDRMC_CR158                              DDRMC_CR158_REG(DDRMC_BASE_PTR)
#define DDRMC_CR159                              DDRMC_CR159_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQ_TR0                         DDRMC_PHY_DQ_TR0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQS_TR0                        DDRMC_PHY_DQS_TR0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_GATE_CR0                       DDRMC_PHY_GATE_CR0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_MASTER_CR0                 DDRMC_PHY_DLL_MASTER_CR0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_SLAVE_CR0                  DDRMC_PHY_DLL_SLAVE_CR0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_STATUS_REG0                DDRMC_PHY_DLL_STATUS_REG0_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQ_TR1                         DDRMC_PHY_DQ_TR1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQS_TR1                        DDRMC_PHY_DQS_TR1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_GATE_CR1                       DDRMC_PHY_GATE_CR1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_MASTER_CR1                 DDRMC_PHY_DLL_MASTER_CR1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_SLAVE_CR1                  DDRMC_PHY_DLL_SLAVE_CR1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_STATUS_REG1                DDRMC_PHY_DLL_STATUS_REG1_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQ_TR2                         DDRMC_PHY_DQ_TR2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DQS_TR2                        DDRMC_PHY_DQS_TR2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_GATE_CR2                       DDRMC_PHY_GATE_CR2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_MASTER_CR2                 DDRMC_PHY_DLL_MASTER_CR2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_SLAVE_CR2                  DDRMC_PHY_DLL_SLAVE_CR2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_STATUS_REG2                DDRMC_PHY_DLL_STATUS_REG2_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG       DDRMC_PHY_DLL_SLAVE_CTL_LPDDR2_REG_REG(DDRMC_BASE_PTR)
#define DDRMC_PHY_GB_CR                          DDRMC_PHY_GB_CR_REG(DDRMC_BASE_PTR)

/**
 * @}
 */ /* end of group DDRMC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group DDRMC_Peripheral */


/* ----------------------------------------------------------------------------
   -- DMA
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMA_Peripheral DMA
 * @{
 */

/** DMA - Peripheral register structure */
typedef struct DMA_MemMap {
  uint32_t CR;                                     /**< Control Register, offset: 0x0 */
  uint32_t ES;                                     /**< Error Status Register, offset: 0x4 */
  uint8_t RESERVED_0[4];
  uint32_t ERQ;                                    /**< Enable Request Register, offset: 0xC */
  uint8_t RESERVED_1[4];
  uint32_t EEI;                                    /**< Enable Error Interrupt Register, offset: 0x14 */
  uint8_t CEEI;                                    /**< Clear Enable Error Interrupt Register, offset: 0x18 */
  uint8_t SEEI;                                    /**< Set Enable Error Interrupt Register, offset: 0x19 */
  uint8_t CERQ;                                    /**< Clear Enable Request Register, offset: 0x1A */
  uint8_t SERQ;                                    /**< Set Enable Request Register, offset: 0x1B */
  uint8_t CDNE;                                    /**< Clear DONE Status Bit Register, offset: 0x1C */
  uint8_t SSRT;                                    /**< Set START Bit Register, offset: 0x1D */
  uint8_t CERR;                                    /**< Clear Error Register, offset: 0x1E */
  uint8_t CINT;                                    /**< Clear Interrupt Request Register, offset: 0x1F */
  uint8_t RESERVED_2[4];
  uint32_t INT;                                    /**< Interrupt Request Register, offset: 0x24 */
  uint8_t RESERVED_3[4];
  uint32_t ERR;                                    /**< Error Register, offset: 0x2C */
  uint8_t RESERVED_4[4];
  uint32_t HRS;                                    /**< Hardware Request Status Register, offset: 0x34 */
  uint8_t RESERVED_5[200];
  uint8_t DCHPRI3;                                 /**< Channel n Priority Register, offset: 0x100 */
  uint8_t DCHPRI2;                                 /**< Channel n Priority Register, offset: 0x101 */
  uint8_t DCHPRI1;                                 /**< Channel n Priority Register, offset: 0x102 */
  uint8_t DCHPRI0;                                 /**< Channel n Priority Register, offset: 0x103 */
  uint8_t DCHPRI7;                                 /**< Channel n Priority Register, offset: 0x104 */
  uint8_t DCHPRI6;                                 /**< Channel n Priority Register, offset: 0x105 */
  uint8_t DCHPRI5;                                 /**< Channel n Priority Register, offset: 0x106 */
  uint8_t DCHPRI4;                                 /**< Channel n Priority Register, offset: 0x107 */
  uint8_t DCHPRI11;                                /**< Channel n Priority Register, offset: 0x108 */
  uint8_t DCHPRI10;                                /**< Channel n Priority Register, offset: 0x109 */
  uint8_t DCHPRI9;                                 /**< Channel n Priority Register, offset: 0x10A */
  uint8_t DCHPRI8;                                 /**< Channel n Priority Register, offset: 0x10B */
  uint8_t DCHPRI15;                                /**< Channel n Priority Register, offset: 0x10C */
  uint8_t DCHPRI14;                                /**< Channel n Priority Register, offset: 0x10D */
  uint8_t DCHPRI13;                                /**< Channel n Priority Register, offset: 0x10E */
  uint8_t DCHPRI12;                                /**< Channel n Priority Register, offset: 0x10F */
  uint8_t DCHPRI19;                                /**< Channel n Priority Register, offset: 0x110 */
  uint8_t DCHPRI18;                                /**< Channel n Priority Register, offset: 0x111 */
  uint8_t DCHPRI17;                                /**< Channel n Priority Register, offset: 0x112 */
  uint8_t DCHPRI16;                                /**< Channel n Priority Register, offset: 0x113 */
  uint8_t DCHPRI23;                                /**< Channel n Priority Register, offset: 0x114 */
  uint8_t DCHPRI22;                                /**< Channel n Priority Register, offset: 0x115 */
  uint8_t DCHPRI21;                                /**< Channel n Priority Register, offset: 0x116 */
  uint8_t DCHPRI20;                                /**< Channel n Priority Register, offset: 0x117 */
  uint8_t DCHPRI27;                                /**< Channel n Priority Register, offset: 0x118 */
  uint8_t DCHPRI26;                                /**< Channel n Priority Register, offset: 0x119 */
  uint8_t DCHPRI25;                                /**< Channel n Priority Register, offset: 0x11A */
  uint8_t DCHPRI24;                                /**< Channel n Priority Register, offset: 0x11B */
  uint8_t DCHPRI31;                                /**< Channel n Priority Register, offset: 0x11C */
  uint8_t DCHPRI30;                                /**< Channel n Priority Register, offset: 0x11D */
  uint8_t DCHPRI29;                                /**< Channel n Priority Register, offset: 0x11E */
  uint8_t DCHPRI28;                                /**< Channel n Priority Register, offset: 0x11F */
  uint8_t RESERVED_6[3808];
  struct {                                         /* offset: 0x1000, array step: 0x20 */
    uint32_t SADDR;                                  /**< TCD Source Address, array offset: 0x1000, array step: 0x20 */
    uint16_t SOFF;                                   /**< TCD Signed Source Address Offset, array offset: 0x1004, array step: 0x20 */
    uint16_t ATTR;                                   /**< TCD Transfer Attributes, array offset: 0x1006, array step: 0x20 */
    union {                                          /* offset: 0x1008, array step: 0x20 */
      uint32_t NBYTES_MLNO;                            /**< TCD Minor Byte Count (Minor Loop Disabled), array offset: 0x1008, array step: 0x20 */
      uint32_t NBYTES_MLOFFNO;                         /**< TCD Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 */
      uint32_t NBYTES_MLOFFYES;                        /**< TCD Signed Minor Loop Offset (Minor Loop and Offset Enabled), array offset: 0x1008, array step: 0x20 */
    };
    uint32_t SLAST;                                  /**< TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 */
    uint32_t DADDR;                                  /**< TCD Destination Address, array offset: 0x1010, array step: 0x20 */
    uint16_t DOFF;                                   /**< TCD Signed Destination Address Offset, array offset: 0x1014, array step: 0x20 */
    union {                                          /* offset: 0x1016, array step: 0x20 */
      uint16_t CITER_ELINKNO;                          /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1016, array step: 0x20 */
      uint16_t CITER_ELINKYES;                         /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1016, array step: 0x20 */
    };
    uint32_t DLAST_SGA;                              /**< TCD Last Destination Address Adjustment/Scatter Gather Address, array offset: 0x1018, array step: 0x20 */
    uint16_t CSR;                                    /**< TCD Control and Status, array offset: 0x101C, array step: 0x20 */
    union {                                          /* offset: 0x101E, array step: 0x20 */
      uint16_t BITER_ELINKNO;                          /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101E, array step: 0x20 */
      uint16_t BITER_ELINKYES;                         /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101E, array step: 0x20 */
    };
  } TCD[32];
} volatile *DMA_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DMA - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMA_Register_Accessor_Macros DMA - Register accessor macros
 * @{
 */


/* DMA - Register accessors */
#define DMA_CR_REG(base)                         ((base)->CR)
#define DMA_ES_REG(base)                         ((base)->ES)
#define DMA_ERQ_REG(base)                        ((base)->ERQ)
#define DMA_EEI_REG(base)                        ((base)->EEI)
#define DMA_CEEI_REG(base)                       ((base)->CEEI)
#define DMA_SEEI_REG(base)                       ((base)->SEEI)
#define DMA_CERQ_REG(base)                       ((base)->CERQ)
#define DMA_SERQ_REG(base)                       ((base)->SERQ)
#define DMA_CDNE_REG(base)                       ((base)->CDNE)
#define DMA_SSRT_REG(base)                       ((base)->SSRT)
#define DMA_CERR_REG(base)                       ((base)->CERR)
#define DMA_CINT_REG(base)                       ((base)->CINT)
#define DMA_INT_REG(base)                        ((base)->INT)
#define DMA_ERR_REG(base)                        ((base)->ERR)
#define DMA_HRS_REG(base)                        ((base)->HRS)
#define DMA_DCHPRI3_REG(base)                    ((base)->DCHPRI3)
#define DMA_DCHPRI2_REG(base)                    ((base)->DCHPRI2)
#define DMA_DCHPRI1_REG(base)                    ((base)->DCHPRI1)
#define DMA_DCHPRI0_REG(base)                    ((base)->DCHPRI0)
#define DMA_DCHPRI7_REG(base)                    ((base)->DCHPRI7)
#define DMA_DCHPRI6_REG(base)                    ((base)->DCHPRI6)
#define DMA_DCHPRI5_REG(base)                    ((base)->DCHPRI5)
#define DMA_DCHPRI4_REG(base)                    ((base)->DCHPRI4)
#define DMA_DCHPRI11_REG(base)                   ((base)->DCHPRI11)
#define DMA_DCHPRI10_REG(base)                   ((base)->DCHPRI10)
#define DMA_DCHPRI9_REG(base)                    ((base)->DCHPRI9)
#define DMA_DCHPRI8_REG(base)                    ((base)->DCHPRI8)
#define DMA_DCHPRI15_REG(base)                   ((base)->DCHPRI15)
#define DMA_DCHPRI14_REG(base)                   ((base)->DCHPRI14)
#define DMA_DCHPRI13_REG(base)                   ((base)->DCHPRI13)
#define DMA_DCHPRI12_REG(base)                   ((base)->DCHPRI12)
#define DMA_DCHPRI19_REG(base)                   ((base)->DCHPRI19)
#define DMA_DCHPRI18_REG(base)                   ((base)->DCHPRI18)
#define DMA_DCHPRI17_REG(base)                   ((base)->DCHPRI17)
#define DMA_DCHPRI16_REG(base)                   ((base)->DCHPRI16)
#define DMA_DCHPRI23_REG(base)                   ((base)->DCHPRI23)
#define DMA_DCHPRI22_REG(base)                   ((base)->DCHPRI22)
#define DMA_DCHPRI21_REG(base)                   ((base)->DCHPRI21)
#define DMA_DCHPRI20_REG(base)                   ((base)->DCHPRI20)
#define DMA_DCHPRI27_REG(base)                   ((base)->DCHPRI27)
#define DMA_DCHPRI26_REG(base)                   ((base)->DCHPRI26)
#define DMA_DCHPRI25_REG(base)                   ((base)->DCHPRI25)
#define DMA_DCHPRI24_REG(base)                   ((base)->DCHPRI24)
#define DMA_DCHPRI31_REG(base)                   ((base)->DCHPRI31)
#define DMA_DCHPRI30_REG(base)                   ((base)->DCHPRI30)
#define DMA_DCHPRI29_REG(base)                   ((base)->DCHPRI29)
#define DMA_DCHPRI28_REG(base)                   ((base)->DCHPRI28)
#define DMA_SADDR_REG(base,index)                ((base)->TCD[index].SADDR)
#define DMA_SOFF_REG(base,index)                 ((base)->TCD[index].SOFF)
#define DMA_ATTR_REG(base,index)                 ((base)->TCD[index].ATTR)
#define DMA_NBYTES_MLNO_REG(base,index)          ((base)->TCD[index].NBYTES_MLNO)
#define DMA_NBYTES_MLOFFNO_REG(base,index)       ((base)->TCD[index].NBYTES_MLOFFNO)
#define DMA_NBYTES_MLOFFYES_REG(base,index)      ((base)->TCD[index].NBYTES_MLOFFYES)
#define DMA_SLAST_REG(base,index)                ((base)->TCD[index].SLAST)
#define DMA_DADDR_REG(base,index)                ((base)->TCD[index].DADDR)
#define DMA_DOFF_REG(base,index)                 ((base)->TCD[index].DOFF)
#define DMA_CITER_ELINKNO_REG(base,index)        ((base)->TCD[index].CITER_ELINKNO)
#define DMA_CITER_ELINKYES_REG(base,index)       ((base)->TCD[index].CITER_ELINKYES)
#define DMA_DLAST_SGA_REG(base,index)            ((base)->TCD[index].DLAST_SGA)
#define DMA_CSR_REG(base,index)                  ((base)->TCD[index].CSR)
#define DMA_BITER_ELINKNO_REG(base,index)        ((base)->TCD[index].BITER_ELINKNO)
#define DMA_BITER_ELINKYES_REG(base,index)       ((base)->TCD[index].BITER_ELINKYES)

/**
 * @}
 */ /* end of group DMA_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DMA Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMA_Register_Masks DMA Register Masks
 * @{
 */

/* CR Bit Fields */
#define DMA_CR_EDBG_MASK                         0x2u
#define DMA_CR_EDBG_SHIFT                        1
#define DMA_CR_ERCA_MASK                         0x4u
#define DMA_CR_ERCA_SHIFT                        2
#define DMA_CR_ERGA_MASK                         0x8u
#define DMA_CR_ERGA_SHIFT                        3
#define DMA_CR_HOE_MASK                          0x10u
#define DMA_CR_HOE_SHIFT                         4
#define DMA_CR_HALT_MASK                         0x20u
#define DMA_CR_HALT_SHIFT                        5
#define DMA_CR_CLM_MASK                          0x40u
#define DMA_CR_CLM_SHIFT                         6
#define DMA_CR_EMLM_MASK                         0x80u
#define DMA_CR_EMLM_SHIFT                        7
#define DMA_CR_GRP0PRI_MASK                      0x300u
#define DMA_CR_GRP0PRI_SHIFT                     8
#define DMA_CR_GRP0PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP0PRI_SHIFT))&DMA_CR_GRP0PRI_MASK)
#define DMA_CR_GRP1PRI_MASK                      0xC00u
#define DMA_CR_GRP1PRI_SHIFT                     10
#define DMA_CR_GRP1PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP1PRI_SHIFT))&DMA_CR_GRP1PRI_MASK)
#define DMA_CR_ECX_MASK                          0x10000u
#define DMA_CR_ECX_SHIFT                         16
#define DMA_CR_CX_MASK                           0x20000u
#define DMA_CR_CX_SHIFT                          17
/* ES Bit Fields */
#define DMA_ES_DBE_MASK                          0x1u
#define DMA_ES_DBE_SHIFT                         0
#define DMA_ES_SBE_MASK                          0x2u
#define DMA_ES_SBE_SHIFT                         1
#define DMA_ES_SGE_MASK                          0x4u
#define DMA_ES_SGE_SHIFT                         2
#define DMA_ES_NCE_MASK                          0x8u
#define DMA_ES_NCE_SHIFT                         3
#define DMA_ES_DOE_MASK                          0x10u
#define DMA_ES_DOE_SHIFT                         4
#define DMA_ES_DAE_MASK                          0x20u
#define DMA_ES_DAE_SHIFT                         5
#define DMA_ES_SOE_MASK                          0x40u
#define DMA_ES_SOE_SHIFT                         6
#define DMA_ES_SAE_MASK                          0x80u
#define DMA_ES_SAE_SHIFT                         7
#define DMA_ES_ERRCHN_MASK                       0x1F00u
#define DMA_ES_ERRCHN_SHIFT                      8
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK)
#define DMA_ES_CPE_MASK                          0x4000u
#define DMA_ES_CPE_SHIFT                         14
#define DMA_ES_GPE_MASK                          0x8000u
#define DMA_ES_GPE_SHIFT                         15
#define DMA_ES_ECX_MASK                          0x10000u
#define DMA_ES_ECX_SHIFT                         16
#define DMA_ES_VLD_MASK                          0x80000000u
#define DMA_ES_VLD_SHIFT                         31
/* ERQ Bit Fields */
#define DMA_ERQ_ERQ0_MASK                        0x1u
#define DMA_ERQ_ERQ0_SHIFT                       0
#define DMA_ERQ_ERQ1_MASK                        0x2u
#define DMA_ERQ_ERQ1_SHIFT                       1
#define DMA_ERQ_ERQ2_MASK                        0x4u
#define DMA_ERQ_ERQ2_SHIFT                       2
#define DMA_ERQ_ERQ3_MASK                        0x8u
#define DMA_ERQ_ERQ3_SHIFT                       3
#define DMA_ERQ_ERQ4_MASK                        0x10u
#define DMA_ERQ_ERQ4_SHIFT                       4
#define DMA_ERQ_ERQ5_MASK                        0x20u
#define DMA_ERQ_ERQ5_SHIFT                       5
#define DMA_ERQ_ERQ6_MASK                        0x40u
#define DMA_ERQ_ERQ6_SHIFT                       6
#define DMA_ERQ_ERQ7_MASK                        0x80u
#define DMA_ERQ_ERQ7_SHIFT                       7
#define DMA_ERQ_ERQ8_MASK                        0x100u
#define DMA_ERQ_ERQ8_SHIFT                       8
#define DMA_ERQ_ERQ9_MASK                        0x200u
#define DMA_ERQ_ERQ9_SHIFT                       9
#define DMA_ERQ_ERQ10_MASK                       0x400u
#define DMA_ERQ_ERQ10_SHIFT                      10
#define DMA_ERQ_ERQ11_MASK                       0x800u
#define DMA_ERQ_ERQ11_SHIFT                      11
#define DMA_ERQ_ERQ12_MASK                       0x1000u
#define DMA_ERQ_ERQ12_SHIFT                      12
#define DMA_ERQ_ERQ13_MASK                       0x2000u
#define DMA_ERQ_ERQ13_SHIFT                      13
#define DMA_ERQ_ERQ14_MASK                       0x4000u
#define DMA_ERQ_ERQ14_SHIFT                      14
#define DMA_ERQ_ERQ15_MASK                       0x8000u
#define DMA_ERQ_ERQ15_SHIFT                      15
#define DMA_ERQ_ERQ16_MASK                       0x10000u
#define DMA_ERQ_ERQ16_SHIFT                      16
#define DMA_ERQ_ERQ17_MASK                       0x20000u
#define DMA_ERQ_ERQ17_SHIFT                      17
#define DMA_ERQ_ERQ18_MASK                       0x40000u
#define DMA_ERQ_ERQ18_SHIFT                      18
#define DMA_ERQ_ERQ19_MASK                       0x80000u
#define DMA_ERQ_ERQ19_SHIFT                      19
#define DMA_ERQ_ERQ20_MASK                       0x100000u
#define DMA_ERQ_ERQ20_SHIFT                      20
#define DMA_ERQ_ERQ21_MASK                       0x200000u
#define DMA_ERQ_ERQ21_SHIFT                      21
#define DMA_ERQ_ERQ22_MASK                       0x400000u
#define DMA_ERQ_ERQ22_SHIFT                      22
#define DMA_ERQ_ERQ23_MASK                       0x800000u
#define DMA_ERQ_ERQ23_SHIFT                      23
#define DMA_ERQ_ERQ24_MASK                       0x1000000u
#define DMA_ERQ_ERQ24_SHIFT                      24
#define DMA_ERQ_ERQ25_MASK                       0x2000000u
#define DMA_ERQ_ERQ25_SHIFT                      25
#define DMA_ERQ_ERQ26_MASK                       0x4000000u
#define DMA_ERQ_ERQ26_SHIFT                      26
#define DMA_ERQ_ERQ27_MASK                       0x8000000u
#define DMA_ERQ_ERQ27_SHIFT                      27
#define DMA_ERQ_ERQ28_MASK                       0x10000000u
#define DMA_ERQ_ERQ28_SHIFT                      28
#define DMA_ERQ_ERQ29_MASK                       0x20000000u
#define DMA_ERQ_ERQ29_SHIFT                      29
#define DMA_ERQ_ERQ30_MASK                       0x40000000u
#define DMA_ERQ_ERQ30_SHIFT                      30
#define DMA_ERQ_ERQ31_MASK                       0x80000000u
#define DMA_ERQ_ERQ31_SHIFT                      31
/* EEI Bit Fields */
#define DMA_EEI_EEI0_MASK                        0x1u
#define DMA_EEI_EEI0_SHIFT                       0
#define DMA_EEI_EEI1_MASK                        0x2u
#define DMA_EEI_EEI1_SHIFT                       1
#define DMA_EEI_EEI2_MASK                        0x4u
#define DMA_EEI_EEI2_SHIFT                       2
#define DMA_EEI_EEI3_MASK                        0x8u
#define DMA_EEI_EEI3_SHIFT                       3
#define DMA_EEI_EEI4_MASK                        0x10u
#define DMA_EEI_EEI4_SHIFT                       4
#define DMA_EEI_EEI5_MASK                        0x20u
#define DMA_EEI_EEI5_SHIFT                       5
#define DMA_EEI_EEI6_MASK                        0x40u
#define DMA_EEI_EEI6_SHIFT                       6
#define DMA_EEI_EEI7_MASK                        0x80u
#define DMA_EEI_EEI7_SHIFT                       7
#define DMA_EEI_EEI8_MASK                        0x100u
#define DMA_EEI_EEI8_SHIFT                       8
#define DMA_EEI_EEI9_MASK                        0x200u
#define DMA_EEI_EEI9_SHIFT                       9
#define DMA_EEI_EEI10_MASK                       0x400u
#define DMA_EEI_EEI10_SHIFT                      10
#define DMA_EEI_EEI11_MASK                       0x800u
#define DMA_EEI_EEI11_SHIFT                      11
#define DMA_EEI_EEI12_MASK                       0x1000u
#define DMA_EEI_EEI12_SHIFT                      12
#define DMA_EEI_EEI13_MASK                       0x2000u
#define DMA_EEI_EEI13_SHIFT                      13
#define DMA_EEI_EEI14_MASK                       0x4000u
#define DMA_EEI_EEI14_SHIFT                      14
#define DMA_EEI_EEI15_MASK                       0x8000u
#define DMA_EEI_EEI15_SHIFT                      15
#define DMA_EEI_EEI16_MASK                       0x10000u
#define DMA_EEI_EEI16_SHIFT                      16
#define DMA_EEI_EEI17_MASK                       0x20000u
#define DMA_EEI_EEI17_SHIFT                      17
#define DMA_EEI_EEI18_MASK                       0x40000u
#define DMA_EEI_EEI18_SHIFT                      18
#define DMA_EEI_EEI19_MASK                       0x80000u
#define DMA_EEI_EEI19_SHIFT                      19
#define DMA_EEI_EEI20_MASK                       0x100000u
#define DMA_EEI_EEI20_SHIFT                      20
#define DMA_EEI_EEI21_MASK                       0x200000u
#define DMA_EEI_EEI21_SHIFT                      21
#define DMA_EEI_EEI22_MASK                       0x400000u
#define DMA_EEI_EEI22_SHIFT                      22
#define DMA_EEI_EEI23_MASK                       0x800000u
#define DMA_EEI_EEI23_SHIFT                      23
#define DMA_EEI_EEI24_MASK                       0x1000000u
#define DMA_EEI_EEI24_SHIFT                      24
#define DMA_EEI_EEI25_MASK                       0x2000000u
#define DMA_EEI_EEI25_SHIFT                      25
#define DMA_EEI_EEI26_MASK                       0x4000000u
#define DMA_EEI_EEI26_SHIFT                      26
#define DMA_EEI_EEI27_MASK                       0x8000000u
#define DMA_EEI_EEI27_SHIFT                      27
#define DMA_EEI_EEI28_MASK                       0x10000000u
#define DMA_EEI_EEI28_SHIFT                      28
#define DMA_EEI_EEI29_MASK                       0x20000000u
#define DMA_EEI_EEI29_SHIFT                      29
#define DMA_EEI_EEI30_MASK                       0x40000000u
#define DMA_EEI_EEI30_SHIFT                      30
#define DMA_EEI_EEI31_MASK                       0x80000000u
#define DMA_EEI_EEI31_SHIFT                      31
/* CEEI Bit Fields */
#define DMA_CEEI_CEEI_MASK                       0x1Fu
#define DMA_CEEI_CEEI_SHIFT                      0
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK)
#define DMA_CEEI_CAEE_MASK                       0x40u
#define DMA_CEEI_CAEE_SHIFT                      6
#define DMA_CEEI_NOP_MASK                        0x80u
#define DMA_CEEI_NOP_SHIFT                       7
/* SEEI Bit Fields */
#define DMA_SEEI_SEEI_MASK                       0x1Fu
#define DMA_SEEI_SEEI_SHIFT                      0
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK)
#define DMA_SEEI_SAEE_MASK                       0x40u
#define DMA_SEEI_SAEE_SHIFT                      6
#define DMA_SEEI_NOP_MASK                        0x80u
#define DMA_SEEI_NOP_SHIFT                       7
/* CERQ Bit Fields */
#define DMA_CERQ_CERQ_MASK                       0x1Fu
#define DMA_CERQ_CERQ_SHIFT                      0
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK)
#define DMA_CERQ_CAER_MASK                       0x40u
#define DMA_CERQ_CAER_SHIFT                      6
#define DMA_CERQ_NOP_MASK                        0x80u
#define DMA_CERQ_NOP_SHIFT                       7
/* SERQ Bit Fields */
#define DMA_SERQ_SERQ_MASK                       0x1Fu
#define DMA_SERQ_SERQ_SHIFT                      0
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK)
#define DMA_SERQ_SAER_MASK                       0x40u
#define DMA_SERQ_SAER_SHIFT                      6
#define DMA_SERQ_NOP_MASK                        0x80u
#define DMA_SERQ_NOP_SHIFT                       7
/* CDNE Bit Fields */
#define DMA_CDNE_CDNE_MASK                       0x1Fu
#define DMA_CDNE_CDNE_SHIFT                      0
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK)
#define DMA_CDNE_CADN_MASK                       0x40u
#define DMA_CDNE_CADN_SHIFT                      6
#define DMA_CDNE_NOP_MASK                        0x80u
#define DMA_CDNE_NOP_SHIFT                       7
/* SSRT Bit Fields */
#define DMA_SSRT_SSRT_MASK                       0x1Fu
#define DMA_SSRT_SSRT_SHIFT                      0
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK)
#define DMA_SSRT_SAST_MASK                       0x40u
#define DMA_SSRT_SAST_SHIFT                      6
#define DMA_SSRT_NOP_MASK                        0x80u
#define DMA_SSRT_NOP_SHIFT                       7
/* CERR Bit Fields */
#define DMA_CERR_CERR_MASK                       0x1Fu
#define DMA_CERR_CERR_SHIFT                      0
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK)
#define DMA_CERR_CAEI_MASK                       0x40u
#define DMA_CERR_CAEI_SHIFT                      6
#define DMA_CERR_NOP_MASK                        0x80u
#define DMA_CERR_NOP_SHIFT                       7
/* CINT Bit Fields */
#define DMA_CINT_CINT_MASK                       0x1Fu
#define DMA_CINT_CINT_SHIFT                      0
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK)
#define DMA_CINT_CAIR_MASK                       0x40u
#define DMA_CINT_CAIR_SHIFT                      6
#define DMA_CINT_NOP_MASK                        0x80u
#define DMA_CINT_NOP_SHIFT                       7
/* INT Bit Fields */
#define DMA_INT_INT0_MASK                        0x1u
#define DMA_INT_INT0_SHIFT                       0
#define DMA_INT_INT1_MASK                        0x2u
#define DMA_INT_INT1_SHIFT                       1
#define DMA_INT_INT2_MASK                        0x4u
#define DMA_INT_INT2_SHIFT                       2
#define DMA_INT_INT3_MASK                        0x8u
#define DMA_INT_INT3_SHIFT                       3
#define DMA_INT_INT4_MASK                        0x10u
#define DMA_INT_INT4_SHIFT                       4
#define DMA_INT_INT5_MASK                        0x20u
#define DMA_INT_INT5_SHIFT                       5
#define DMA_INT_INT6_MASK                        0x40u
#define DMA_INT_INT6_SHIFT                       6
#define DMA_INT_INT7_MASK                        0x80u
#define DMA_INT_INT7_SHIFT                       7
#define DMA_INT_INT8_MASK                        0x100u
#define DMA_INT_INT8_SHIFT                       8
#define DMA_INT_INT9_MASK                        0x200u
#define DMA_INT_INT9_SHIFT                       9
#define DMA_INT_INT10_MASK                       0x400u
#define DMA_INT_INT10_SHIFT                      10
#define DMA_INT_INT11_MASK                       0x800u
#define DMA_INT_INT11_SHIFT                      11
#define DMA_INT_INT12_MASK                       0x1000u
#define DMA_INT_INT12_SHIFT                      12
#define DMA_INT_INT13_MASK                       0x2000u
#define DMA_INT_INT13_SHIFT                      13
#define DMA_INT_INT14_MASK                       0x4000u
#define DMA_INT_INT14_SHIFT                      14
#define DMA_INT_INT15_MASK                       0x8000u
#define DMA_INT_INT15_SHIFT                      15
#define DMA_INT_INT16_MASK                       0x10000u
#define DMA_INT_INT16_SHIFT                      16
#define DMA_INT_INT17_MASK                       0x20000u
#define DMA_INT_INT17_SHIFT                      17
#define DMA_INT_INT18_MASK                       0x40000u
#define DMA_INT_INT18_SHIFT                      18
#define DMA_INT_INT19_MASK                       0x80000u
#define DMA_INT_INT19_SHIFT                      19
#define DMA_INT_INT20_MASK                       0x100000u
#define DMA_INT_INT20_SHIFT                      20
#define DMA_INT_INT21_MASK                       0x200000u
#define DMA_INT_INT21_SHIFT                      21
#define DMA_INT_INT22_MASK                       0x400000u
#define DMA_INT_INT22_SHIFT                      22
#define DMA_INT_INT23_MASK                       0x800000u
#define DMA_INT_INT23_SHIFT                      23
#define DMA_INT_INT24_MASK                       0x1000000u
#define DMA_INT_INT24_SHIFT                      24
#define DMA_INT_INT25_MASK                       0x2000000u
#define DMA_INT_INT25_SHIFT                      25
#define DMA_INT_INT26_MASK                       0x4000000u
#define DMA_INT_INT26_SHIFT                      26
#define DMA_INT_INT27_MASK                       0x8000000u
#define DMA_INT_INT27_SHIFT                      27
#define DMA_INT_INT28_MASK                       0x10000000u
#define DMA_INT_INT28_SHIFT                      28
#define DMA_INT_INT29_MASK                       0x20000000u
#define DMA_INT_INT29_SHIFT                      29
#define DMA_INT_INT30_MASK                       0x40000000u
#define DMA_INT_INT30_SHIFT                      30
#define DMA_INT_INT31_MASK                       0x80000000u
#define DMA_INT_INT31_SHIFT                      31
/* ERR Bit Fields */
#define DMA_ERR_ERR0_MASK                        0x1u
#define DMA_ERR_ERR0_SHIFT                       0
#define DMA_ERR_ERR1_MASK                        0x2u
#define DMA_ERR_ERR1_SHIFT                       1
#define DMA_ERR_ERR2_MASK                        0x4u
#define DMA_ERR_ERR2_SHIFT                       2
#define DMA_ERR_ERR3_MASK                        0x8u
#define DMA_ERR_ERR3_SHIFT                       3
#define DMA_ERR_ERR4_MASK                        0x10u
#define DMA_ERR_ERR4_SHIFT                       4
#define DMA_ERR_ERR5_MASK                        0x20u
#define DMA_ERR_ERR5_SHIFT                       5
#define DMA_ERR_ERR6_MASK                        0x40u
#define DMA_ERR_ERR6_SHIFT                       6
#define DMA_ERR_ERR7_MASK                        0x80u
#define DMA_ERR_ERR7_SHIFT                       7
#define DMA_ERR_ERR8_MASK                        0x100u
#define DMA_ERR_ERR8_SHIFT                       8
#define DMA_ERR_ERR9_MASK                        0x200u
#define DMA_ERR_ERR9_SHIFT                       9
#define DMA_ERR_ERR10_MASK                       0x400u
#define DMA_ERR_ERR10_SHIFT                      10
#define DMA_ERR_ERR11_MASK                       0x800u
#define DMA_ERR_ERR11_SHIFT                      11
#define DMA_ERR_ERR12_MASK                       0x1000u
#define DMA_ERR_ERR12_SHIFT                      12
#define DMA_ERR_ERR13_MASK                       0x2000u
#define DMA_ERR_ERR13_SHIFT                      13
#define DMA_ERR_ERR14_MASK                       0x4000u
#define DMA_ERR_ERR14_SHIFT                      14
#define DMA_ERR_ERR15_MASK                       0x8000u
#define DMA_ERR_ERR15_SHIFT                      15
#define DMA_ERR_ERR16_MASK                       0x10000u
#define DMA_ERR_ERR16_SHIFT                      16
#define DMA_ERR_ERR17_MASK                       0x20000u
#define DMA_ERR_ERR17_SHIFT                      17
#define DMA_ERR_ERR18_MASK                       0x40000u
#define DMA_ERR_ERR18_SHIFT                      18
#define DMA_ERR_ERR19_MASK                       0x80000u
#define DMA_ERR_ERR19_SHIFT                      19
#define DMA_ERR_ERR20_MASK                       0x100000u
#define DMA_ERR_ERR20_SHIFT                      20
#define DMA_ERR_ERR21_MASK                       0x200000u
#define DMA_ERR_ERR21_SHIFT                      21
#define DMA_ERR_ERR22_MASK                       0x400000u
#define DMA_ERR_ERR22_SHIFT                      22
#define DMA_ERR_ERR23_MASK                       0x800000u
#define DMA_ERR_ERR23_SHIFT                      23
#define DMA_ERR_ERR24_MASK                       0x1000000u
#define DMA_ERR_ERR24_SHIFT                      24
#define DMA_ERR_ERR25_MASK                       0x2000000u
#define DMA_ERR_ERR25_SHIFT                      25
#define DMA_ERR_ERR26_MASK                       0x4000000u
#define DMA_ERR_ERR26_SHIFT                      26
#define DMA_ERR_ERR27_MASK                       0x8000000u
#define DMA_ERR_ERR27_SHIFT                      27
#define DMA_ERR_ERR28_MASK                       0x10000000u
#define DMA_ERR_ERR28_SHIFT                      28
#define DMA_ERR_ERR29_MASK                       0x20000000u
#define DMA_ERR_ERR29_SHIFT                      29
#define DMA_ERR_ERR30_MASK                       0x40000000u
#define DMA_ERR_ERR30_SHIFT                      30
#define DMA_ERR_ERR31_MASK                       0x80000000u
#define DMA_ERR_ERR31_SHIFT                      31
/* HRS Bit Fields */
#define DMA_HRS_HRS0_MASK                        0x1u
#define DMA_HRS_HRS0_SHIFT                       0
#define DMA_HRS_HRS1_MASK                        0x2u
#define DMA_HRS_HRS1_SHIFT                       1
#define DMA_HRS_HRS2_MASK                        0x4u
#define DMA_HRS_HRS2_SHIFT                       2
#define DMA_HRS_HRS3_MASK                        0x8u
#define DMA_HRS_HRS3_SHIFT                       3
#define DMA_HRS_HRS4_MASK                        0x10u
#define DMA_HRS_HRS4_SHIFT                       4
#define DMA_HRS_HRS5_MASK                        0x20u
#define DMA_HRS_HRS5_SHIFT                       5
#define DMA_HRS_HRS6_MASK                        0x40u
#define DMA_HRS_HRS6_SHIFT                       6
#define DMA_HRS_HRS7_MASK                        0x80u
#define DMA_HRS_HRS7_SHIFT                       7
#define DMA_HRS_HRS8_MASK                        0x100u
#define DMA_HRS_HRS8_SHIFT                       8
#define DMA_HRS_HRS9_MASK                        0x200u
#define DMA_HRS_HRS9_SHIFT                       9
#define DMA_HRS_HRS10_MASK                       0x400u
#define DMA_HRS_HRS10_SHIFT                      10
#define DMA_HRS_HRS11_MASK                       0x800u
#define DMA_HRS_HRS11_SHIFT                      11
#define DMA_HRS_HRS12_MASK                       0x1000u
#define DMA_HRS_HRS12_SHIFT                      12
#define DMA_HRS_HRS13_MASK                       0x2000u
#define DMA_HRS_HRS13_SHIFT                      13
#define DMA_HRS_HRS14_MASK                       0x4000u
#define DMA_HRS_HRS14_SHIFT                      14
#define DMA_HRS_HRS15_MASK                       0x8000u
#define DMA_HRS_HRS15_SHIFT                      15
#define DMA_HRS_HRS16_MASK                       0x10000u
#define DMA_HRS_HRS16_SHIFT                      16
#define DMA_HRS_HRS17_MASK                       0x20000u
#define DMA_HRS_HRS17_SHIFT                      17
#define DMA_HRS_HRS18_MASK                       0x40000u
#define DMA_HRS_HRS18_SHIFT                      18
#define DMA_HRS_HRS19_MASK                       0x80000u
#define DMA_HRS_HRS19_SHIFT                      19
#define DMA_HRS_HRS20_MASK                       0x100000u
#define DMA_HRS_HRS20_SHIFT                      20
#define DMA_HRS_HRS21_MASK                       0x200000u
#define DMA_HRS_HRS21_SHIFT                      21
#define DMA_HRS_HRS22_MASK                       0x400000u
#define DMA_HRS_HRS22_SHIFT                      22
#define DMA_HRS_HRS23_MASK                       0x800000u
#define DMA_HRS_HRS23_SHIFT                      23
#define DMA_HRS_HRS24_MASK                       0x1000000u
#define DMA_HRS_HRS24_SHIFT                      24
#define DMA_HRS_HRS25_MASK                       0x2000000u
#define DMA_HRS_HRS25_SHIFT                      25
#define DMA_HRS_HRS26_MASK                       0x4000000u
#define DMA_HRS_HRS26_SHIFT                      26
#define DMA_HRS_HRS27_MASK                       0x8000000u
#define DMA_HRS_HRS27_SHIFT                      27
#define DMA_HRS_HRS28_MASK                       0x10000000u
#define DMA_HRS_HRS28_SHIFT                      28
#define DMA_HRS_HRS29_MASK                       0x20000000u
#define DMA_HRS_HRS29_SHIFT                      29
#define DMA_HRS_HRS30_MASK                       0x40000000u
#define DMA_HRS_HRS30_SHIFT                      30
#define DMA_HRS_HRS31_MASK                       0x80000000u
#define DMA_HRS_HRS31_SHIFT                      31
/* DCHPRI3 Bit Fields */
#define DMA_DCHPRI3_CHPRI_MASK                   0xFu
#define DMA_DCHPRI3_CHPRI_SHIFT                  0
#define DMA_DCHPRI3_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI3_CHPRI_SHIFT))&DMA_DCHPRI3_CHPRI_MASK)
#define DMA_DCHPRI3_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI3_GRPPRI_SHIFT                 4
#define DMA_DCHPRI3_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI3_GRPPRI_SHIFT))&DMA_DCHPRI3_GRPPRI_MASK)
#define DMA_DCHPRI3_DPA_MASK                     0x40u
#define DMA_DCHPRI3_DPA_SHIFT                    6
#define DMA_DCHPRI3_ECP_MASK                     0x80u
#define DMA_DCHPRI3_ECP_SHIFT                    7
/* DCHPRI2 Bit Fields */
#define DMA_DCHPRI2_CHPRI_MASK                   0xFu
#define DMA_DCHPRI2_CHPRI_SHIFT                  0
#define DMA_DCHPRI2_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI2_CHPRI_SHIFT))&DMA_DCHPRI2_CHPRI_MASK)
#define DMA_DCHPRI2_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI2_GRPPRI_SHIFT                 4
#define DMA_DCHPRI2_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI2_GRPPRI_SHIFT))&DMA_DCHPRI2_GRPPRI_MASK)
#define DMA_DCHPRI2_DPA_MASK                     0x40u
#define DMA_DCHPRI2_DPA_SHIFT                    6
#define DMA_DCHPRI2_ECP_MASK                     0x80u
#define DMA_DCHPRI2_ECP_SHIFT                    7
/* DCHPRI1 Bit Fields */
#define DMA_DCHPRI1_CHPRI_MASK                   0xFu
#define DMA_DCHPRI1_CHPRI_SHIFT                  0
#define DMA_DCHPRI1_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI1_CHPRI_SHIFT))&DMA_DCHPRI1_CHPRI_MASK)
#define DMA_DCHPRI1_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI1_GRPPRI_SHIFT                 4
#define DMA_DCHPRI1_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI1_GRPPRI_SHIFT))&DMA_DCHPRI1_GRPPRI_MASK)
#define DMA_DCHPRI1_DPA_MASK                     0x40u
#define DMA_DCHPRI1_DPA_SHIFT                    6
#define DMA_DCHPRI1_ECP_MASK                     0x80u
#define DMA_DCHPRI1_ECP_SHIFT                    7
/* DCHPRI0 Bit Fields */
#define DMA_DCHPRI0_CHPRI_MASK                   0xFu
#define DMA_DCHPRI0_CHPRI_SHIFT                  0
#define DMA_DCHPRI0_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI0_CHPRI_SHIFT))&DMA_DCHPRI0_CHPRI_MASK)
#define DMA_DCHPRI0_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI0_GRPPRI_SHIFT                 4
#define DMA_DCHPRI0_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI0_GRPPRI_SHIFT))&DMA_DCHPRI0_GRPPRI_MASK)
#define DMA_DCHPRI0_DPA_MASK                     0x40u
#define DMA_DCHPRI0_DPA_SHIFT                    6
#define DMA_DCHPRI0_ECP_MASK                     0x80u
#define DMA_DCHPRI0_ECP_SHIFT                    7
/* DCHPRI7 Bit Fields */
#define DMA_DCHPRI7_CHPRI_MASK                   0xFu
#define DMA_DCHPRI7_CHPRI_SHIFT                  0
#define DMA_DCHPRI7_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI7_CHPRI_SHIFT))&DMA_DCHPRI7_CHPRI_MASK)
#define DMA_DCHPRI7_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI7_GRPPRI_SHIFT                 4
#define DMA_DCHPRI7_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI7_GRPPRI_SHIFT))&DMA_DCHPRI7_GRPPRI_MASK)
#define DMA_DCHPRI7_DPA_MASK                     0x40u
#define DMA_DCHPRI7_DPA_SHIFT                    6
#define DMA_DCHPRI7_ECP_MASK                     0x80u
#define DMA_DCHPRI7_ECP_SHIFT                    7
/* DCHPRI6 Bit Fields */
#define DMA_DCHPRI6_CHPRI_MASK                   0xFu
#define DMA_DCHPRI6_CHPRI_SHIFT                  0
#define DMA_DCHPRI6_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI6_CHPRI_SHIFT))&DMA_DCHPRI6_CHPRI_MASK)
#define DMA_DCHPRI6_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI6_GRPPRI_SHIFT                 4
#define DMA_DCHPRI6_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI6_GRPPRI_SHIFT))&DMA_DCHPRI6_GRPPRI_MASK)
#define DMA_DCHPRI6_DPA_MASK                     0x40u
#define DMA_DCHPRI6_DPA_SHIFT                    6
#define DMA_DCHPRI6_ECP_MASK                     0x80u
#define DMA_DCHPRI6_ECP_SHIFT                    7
/* DCHPRI5 Bit Fields */
#define DMA_DCHPRI5_CHPRI_MASK                   0xFu
#define DMA_DCHPRI5_CHPRI_SHIFT                  0
#define DMA_DCHPRI5_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI5_CHPRI_SHIFT))&DMA_DCHPRI5_CHPRI_MASK)
#define DMA_DCHPRI5_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI5_GRPPRI_SHIFT                 4
#define DMA_DCHPRI5_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI5_GRPPRI_SHIFT))&DMA_DCHPRI5_GRPPRI_MASK)
#define DMA_DCHPRI5_DPA_MASK                     0x40u
#define DMA_DCHPRI5_DPA_SHIFT                    6
#define DMA_DCHPRI5_ECP_MASK                     0x80u
#define DMA_DCHPRI5_ECP_SHIFT                    7
/* DCHPRI4 Bit Fields */
#define DMA_DCHPRI4_CHPRI_MASK                   0xFu
#define DMA_DCHPRI4_CHPRI_SHIFT                  0
#define DMA_DCHPRI4_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI4_CHPRI_SHIFT))&DMA_DCHPRI4_CHPRI_MASK)
#define DMA_DCHPRI4_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI4_GRPPRI_SHIFT                 4
#define DMA_DCHPRI4_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI4_GRPPRI_SHIFT))&DMA_DCHPRI4_GRPPRI_MASK)
#define DMA_DCHPRI4_DPA_MASK                     0x40u
#define DMA_DCHPRI4_DPA_SHIFT                    6
#define DMA_DCHPRI4_ECP_MASK                     0x80u
#define DMA_DCHPRI4_ECP_SHIFT                    7
/* DCHPRI11 Bit Fields */
#define DMA_DCHPRI11_CHPRI_MASK                  0xFu
#define DMA_DCHPRI11_CHPRI_SHIFT                 0
#define DMA_DCHPRI11_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI11_CHPRI_SHIFT))&DMA_DCHPRI11_CHPRI_MASK)
#define DMA_DCHPRI11_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI11_GRPPRI_SHIFT                4
#define DMA_DCHPRI11_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI11_GRPPRI_SHIFT))&DMA_DCHPRI11_GRPPRI_MASK)
#define DMA_DCHPRI11_DPA_MASK                    0x40u
#define DMA_DCHPRI11_DPA_SHIFT                   6
#define DMA_DCHPRI11_ECP_MASK                    0x80u
#define DMA_DCHPRI11_ECP_SHIFT                   7
/* DCHPRI10 Bit Fields */
#define DMA_DCHPRI10_CHPRI_MASK                  0xFu
#define DMA_DCHPRI10_CHPRI_SHIFT                 0
#define DMA_DCHPRI10_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI10_CHPRI_SHIFT))&DMA_DCHPRI10_CHPRI_MASK)
#define DMA_DCHPRI10_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI10_GRPPRI_SHIFT                4
#define DMA_DCHPRI10_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI10_GRPPRI_SHIFT))&DMA_DCHPRI10_GRPPRI_MASK)
#define DMA_DCHPRI10_DPA_MASK                    0x40u
#define DMA_DCHPRI10_DPA_SHIFT                   6
#define DMA_DCHPRI10_ECP_MASK                    0x80u
#define DMA_DCHPRI10_ECP_SHIFT                   7
/* DCHPRI9 Bit Fields */
#define DMA_DCHPRI9_CHPRI_MASK                   0xFu
#define DMA_DCHPRI9_CHPRI_SHIFT                  0
#define DMA_DCHPRI9_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI9_CHPRI_SHIFT))&DMA_DCHPRI9_CHPRI_MASK)
#define DMA_DCHPRI9_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI9_GRPPRI_SHIFT                 4
#define DMA_DCHPRI9_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI9_GRPPRI_SHIFT))&DMA_DCHPRI9_GRPPRI_MASK)
#define DMA_DCHPRI9_DPA_MASK                     0x40u
#define DMA_DCHPRI9_DPA_SHIFT                    6
#define DMA_DCHPRI9_ECP_MASK                     0x80u
#define DMA_DCHPRI9_ECP_SHIFT                    7
/* DCHPRI8 Bit Fields */
#define DMA_DCHPRI8_CHPRI_MASK                   0xFu
#define DMA_DCHPRI8_CHPRI_SHIFT                  0
#define DMA_DCHPRI8_CHPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI8_CHPRI_SHIFT))&DMA_DCHPRI8_CHPRI_MASK)
#define DMA_DCHPRI8_GRPPRI_MASK                  0x30u
#define DMA_DCHPRI8_GRPPRI_SHIFT                 4
#define DMA_DCHPRI8_GRPPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI8_GRPPRI_SHIFT))&DMA_DCHPRI8_GRPPRI_MASK)
#define DMA_DCHPRI8_DPA_MASK                     0x40u
#define DMA_DCHPRI8_DPA_SHIFT                    6
#define DMA_DCHPRI8_ECP_MASK                     0x80u
#define DMA_DCHPRI8_ECP_SHIFT                    7
/* DCHPRI15 Bit Fields */
#define DMA_DCHPRI15_CHPRI_MASK                  0xFu
#define DMA_DCHPRI15_CHPRI_SHIFT                 0
#define DMA_DCHPRI15_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI15_CHPRI_SHIFT))&DMA_DCHPRI15_CHPRI_MASK)
#define DMA_DCHPRI15_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI15_GRPPRI_SHIFT                4
#define DMA_DCHPRI15_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI15_GRPPRI_SHIFT))&DMA_DCHPRI15_GRPPRI_MASK)
#define DMA_DCHPRI15_DPA_MASK                    0x40u
#define DMA_DCHPRI15_DPA_SHIFT                   6
#define DMA_DCHPRI15_ECP_MASK                    0x80u
#define DMA_DCHPRI15_ECP_SHIFT                   7
/* DCHPRI14 Bit Fields */
#define DMA_DCHPRI14_CHPRI_MASK                  0xFu
#define DMA_DCHPRI14_CHPRI_SHIFT                 0
#define DMA_DCHPRI14_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI14_CHPRI_SHIFT))&DMA_DCHPRI14_CHPRI_MASK)
#define DMA_DCHPRI14_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI14_GRPPRI_SHIFT                4
#define DMA_DCHPRI14_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI14_GRPPRI_SHIFT))&DMA_DCHPRI14_GRPPRI_MASK)
#define DMA_DCHPRI14_DPA_MASK                    0x40u
#define DMA_DCHPRI14_DPA_SHIFT                   6
#define DMA_DCHPRI14_ECP_MASK                    0x80u
#define DMA_DCHPRI14_ECP_SHIFT                   7
/* DCHPRI13 Bit Fields */
#define DMA_DCHPRI13_CHPRI_MASK                  0xFu
#define DMA_DCHPRI13_CHPRI_SHIFT                 0
#define DMA_DCHPRI13_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI13_CHPRI_SHIFT))&DMA_DCHPRI13_CHPRI_MASK)
#define DMA_DCHPRI13_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI13_GRPPRI_SHIFT                4
#define DMA_DCHPRI13_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI13_GRPPRI_SHIFT))&DMA_DCHPRI13_GRPPRI_MASK)
#define DMA_DCHPRI13_DPA_MASK                    0x40u
#define DMA_DCHPRI13_DPA_SHIFT                   6
#define DMA_DCHPRI13_ECP_MASK                    0x80u
#define DMA_DCHPRI13_ECP_SHIFT                   7
/* DCHPRI12 Bit Fields */
#define DMA_DCHPRI12_CHPRI_MASK                  0xFu
#define DMA_DCHPRI12_CHPRI_SHIFT                 0
#define DMA_DCHPRI12_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI12_CHPRI_SHIFT))&DMA_DCHPRI12_CHPRI_MASK)
#define DMA_DCHPRI12_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI12_GRPPRI_SHIFT                4
#define DMA_DCHPRI12_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI12_GRPPRI_SHIFT))&DMA_DCHPRI12_GRPPRI_MASK)
#define DMA_DCHPRI12_DPA_MASK                    0x40u
#define DMA_DCHPRI12_DPA_SHIFT                   6
#define DMA_DCHPRI12_ECP_MASK                    0x80u
#define DMA_DCHPRI12_ECP_SHIFT                   7
/* DCHPRI19 Bit Fields */
#define DMA_DCHPRI19_CHPRI_MASK                  0xFu
#define DMA_DCHPRI19_CHPRI_SHIFT                 0
#define DMA_DCHPRI19_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI19_CHPRI_SHIFT))&DMA_DCHPRI19_CHPRI_MASK)
#define DMA_DCHPRI19_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI19_GRPPRI_SHIFT                4
#define DMA_DCHPRI19_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI19_GRPPRI_SHIFT))&DMA_DCHPRI19_GRPPRI_MASK)
#define DMA_DCHPRI19_DPA_MASK                    0x40u
#define DMA_DCHPRI19_DPA_SHIFT                   6
#define DMA_DCHPRI19_ECP_MASK                    0x80u
#define DMA_DCHPRI19_ECP_SHIFT                   7
/* DCHPRI18 Bit Fields */
#define DMA_DCHPRI18_CHPRI_MASK                  0xFu
#define DMA_DCHPRI18_CHPRI_SHIFT                 0
#define DMA_DCHPRI18_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI18_CHPRI_SHIFT))&DMA_DCHPRI18_CHPRI_MASK)
#define DMA_DCHPRI18_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI18_GRPPRI_SHIFT                4
#define DMA_DCHPRI18_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI18_GRPPRI_SHIFT))&DMA_DCHPRI18_GRPPRI_MASK)
#define DMA_DCHPRI18_DPA_MASK                    0x40u
#define DMA_DCHPRI18_DPA_SHIFT                   6
#define DMA_DCHPRI18_ECP_MASK                    0x80u
#define DMA_DCHPRI18_ECP_SHIFT                   7
/* DCHPRI17 Bit Fields */
#define DMA_DCHPRI17_CHPRI_MASK                  0xFu
#define DMA_DCHPRI17_CHPRI_SHIFT                 0
#define DMA_DCHPRI17_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI17_CHPRI_SHIFT))&DMA_DCHPRI17_CHPRI_MASK)
#define DMA_DCHPRI17_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI17_GRPPRI_SHIFT                4
#define DMA_DCHPRI17_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI17_GRPPRI_SHIFT))&DMA_DCHPRI17_GRPPRI_MASK)
#define DMA_DCHPRI17_DPA_MASK                    0x40u
#define DMA_DCHPRI17_DPA_SHIFT                   6
#define DMA_DCHPRI17_ECP_MASK                    0x80u
#define DMA_DCHPRI17_ECP_SHIFT                   7
/* DCHPRI16 Bit Fields */
#define DMA_DCHPRI16_CHPRI_MASK                  0xFu
#define DMA_DCHPRI16_CHPRI_SHIFT                 0
#define DMA_DCHPRI16_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI16_CHPRI_SHIFT))&DMA_DCHPRI16_CHPRI_MASK)
#define DMA_DCHPRI16_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI16_GRPPRI_SHIFT                4
#define DMA_DCHPRI16_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI16_GRPPRI_SHIFT))&DMA_DCHPRI16_GRPPRI_MASK)
#define DMA_DCHPRI16_DPA_MASK                    0x40u
#define DMA_DCHPRI16_DPA_SHIFT                   6
#define DMA_DCHPRI16_ECP_MASK                    0x80u
#define DMA_DCHPRI16_ECP_SHIFT                   7
/* DCHPRI23 Bit Fields */
#define DMA_DCHPRI23_CHPRI_MASK                  0xFu
#define DMA_DCHPRI23_CHPRI_SHIFT                 0
#define DMA_DCHPRI23_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI23_CHPRI_SHIFT))&DMA_DCHPRI23_CHPRI_MASK)
#define DMA_DCHPRI23_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI23_GRPPRI_SHIFT                4
#define DMA_DCHPRI23_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI23_GRPPRI_SHIFT))&DMA_DCHPRI23_GRPPRI_MASK)
#define DMA_DCHPRI23_DPA_MASK                    0x40u
#define DMA_DCHPRI23_DPA_SHIFT                   6
#define DMA_DCHPRI23_ECP_MASK                    0x80u
#define DMA_DCHPRI23_ECP_SHIFT                   7
/* DCHPRI22 Bit Fields */
#define DMA_DCHPRI22_CHPRI_MASK                  0xFu
#define DMA_DCHPRI22_CHPRI_SHIFT                 0
#define DMA_DCHPRI22_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI22_CHPRI_SHIFT))&DMA_DCHPRI22_CHPRI_MASK)
#define DMA_DCHPRI22_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI22_GRPPRI_SHIFT                4
#define DMA_DCHPRI22_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI22_GRPPRI_SHIFT))&DMA_DCHPRI22_GRPPRI_MASK)
#define DMA_DCHPRI22_DPA_MASK                    0x40u
#define DMA_DCHPRI22_DPA_SHIFT                   6
#define DMA_DCHPRI22_ECP_MASK                    0x80u
#define DMA_DCHPRI22_ECP_SHIFT                   7
/* DCHPRI21 Bit Fields */
#define DMA_DCHPRI21_CHPRI_MASK                  0xFu
#define DMA_DCHPRI21_CHPRI_SHIFT                 0
#define DMA_DCHPRI21_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI21_CHPRI_SHIFT))&DMA_DCHPRI21_CHPRI_MASK)
#define DMA_DCHPRI21_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI21_GRPPRI_SHIFT                4
#define DMA_DCHPRI21_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI21_GRPPRI_SHIFT))&DMA_DCHPRI21_GRPPRI_MASK)
#define DMA_DCHPRI21_DPA_MASK                    0x40u
#define DMA_DCHPRI21_DPA_SHIFT                   6
#define DMA_DCHPRI21_ECP_MASK                    0x80u
#define DMA_DCHPRI21_ECP_SHIFT                   7
/* DCHPRI20 Bit Fields */
#define DMA_DCHPRI20_CHPRI_MASK                  0xFu
#define DMA_DCHPRI20_CHPRI_SHIFT                 0
#define DMA_DCHPRI20_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI20_CHPRI_SHIFT))&DMA_DCHPRI20_CHPRI_MASK)
#define DMA_DCHPRI20_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI20_GRPPRI_SHIFT                4
#define DMA_DCHPRI20_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI20_GRPPRI_SHIFT))&DMA_DCHPRI20_GRPPRI_MASK)
#define DMA_DCHPRI20_DPA_MASK                    0x40u
#define DMA_DCHPRI20_DPA_SHIFT                   6
#define DMA_DCHPRI20_ECP_MASK                    0x80u
#define DMA_DCHPRI20_ECP_SHIFT                   7
/* DCHPRI27 Bit Fields */
#define DMA_DCHPRI27_CHPRI_MASK                  0xFu
#define DMA_DCHPRI27_CHPRI_SHIFT                 0
#define DMA_DCHPRI27_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI27_CHPRI_SHIFT))&DMA_DCHPRI27_CHPRI_MASK)
#define DMA_DCHPRI27_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI27_GRPPRI_SHIFT                4
#define DMA_DCHPRI27_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI27_GRPPRI_SHIFT))&DMA_DCHPRI27_GRPPRI_MASK)
#define DMA_DCHPRI27_DPA_MASK                    0x40u
#define DMA_DCHPRI27_DPA_SHIFT                   6
#define DMA_DCHPRI27_ECP_MASK                    0x80u
#define DMA_DCHPRI27_ECP_SHIFT                   7
/* DCHPRI26 Bit Fields */
#define DMA_DCHPRI26_CHPRI_MASK                  0xFu
#define DMA_DCHPRI26_CHPRI_SHIFT                 0
#define DMA_DCHPRI26_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI26_CHPRI_SHIFT))&DMA_DCHPRI26_CHPRI_MASK)
#define DMA_DCHPRI26_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI26_GRPPRI_SHIFT                4
#define DMA_DCHPRI26_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI26_GRPPRI_SHIFT))&DMA_DCHPRI26_GRPPRI_MASK)
#define DMA_DCHPRI26_DPA_MASK                    0x40u
#define DMA_DCHPRI26_DPA_SHIFT                   6
#define DMA_DCHPRI26_ECP_MASK                    0x80u
#define DMA_DCHPRI26_ECP_SHIFT                   7
/* DCHPRI25 Bit Fields */
#define DMA_DCHPRI25_CHPRI_MASK                  0xFu
#define DMA_DCHPRI25_CHPRI_SHIFT                 0
#define DMA_DCHPRI25_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI25_CHPRI_SHIFT))&DMA_DCHPRI25_CHPRI_MASK)
#define DMA_DCHPRI25_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI25_GRPPRI_SHIFT                4
#define DMA_DCHPRI25_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI25_GRPPRI_SHIFT))&DMA_DCHPRI25_GRPPRI_MASK)
#define DMA_DCHPRI25_DPA_MASK                    0x40u
#define DMA_DCHPRI25_DPA_SHIFT                   6
#define DMA_DCHPRI25_ECP_MASK                    0x80u
#define DMA_DCHPRI25_ECP_SHIFT                   7
/* DCHPRI24 Bit Fields */
#define DMA_DCHPRI24_CHPRI_MASK                  0xFu
#define DMA_DCHPRI24_CHPRI_SHIFT                 0
#define DMA_DCHPRI24_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI24_CHPRI_SHIFT))&DMA_DCHPRI24_CHPRI_MASK)
#define DMA_DCHPRI24_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI24_GRPPRI_SHIFT                4
#define DMA_DCHPRI24_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI24_GRPPRI_SHIFT))&DMA_DCHPRI24_GRPPRI_MASK)
#define DMA_DCHPRI24_DPA_MASK                    0x40u
#define DMA_DCHPRI24_DPA_SHIFT                   6
#define DMA_DCHPRI24_ECP_MASK                    0x80u
#define DMA_DCHPRI24_ECP_SHIFT                   7
/* DCHPRI31 Bit Fields */
#define DMA_DCHPRI31_CHPRI_MASK                  0xFu
#define DMA_DCHPRI31_CHPRI_SHIFT                 0
#define DMA_DCHPRI31_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI31_CHPRI_SHIFT))&DMA_DCHPRI31_CHPRI_MASK)
#define DMA_DCHPRI31_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI31_GRPPRI_SHIFT                4
#define DMA_DCHPRI31_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI31_GRPPRI_SHIFT))&DMA_DCHPRI31_GRPPRI_MASK)
#define DMA_DCHPRI31_DPA_MASK                    0x40u
#define DMA_DCHPRI31_DPA_SHIFT                   6
#define DMA_DCHPRI31_ECP_MASK                    0x80u
#define DMA_DCHPRI31_ECP_SHIFT                   7
/* DCHPRI30 Bit Fields */
#define DMA_DCHPRI30_CHPRI_MASK                  0xFu
#define DMA_DCHPRI30_CHPRI_SHIFT                 0
#define DMA_DCHPRI30_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI30_CHPRI_SHIFT))&DMA_DCHPRI30_CHPRI_MASK)
#define DMA_DCHPRI30_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI30_GRPPRI_SHIFT                4
#define DMA_DCHPRI30_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI30_GRPPRI_SHIFT))&DMA_DCHPRI30_GRPPRI_MASK)
#define DMA_DCHPRI30_DPA_MASK                    0x40u
#define DMA_DCHPRI30_DPA_SHIFT                   6
#define DMA_DCHPRI30_ECP_MASK                    0x80u
#define DMA_DCHPRI30_ECP_SHIFT                   7
/* DCHPRI29 Bit Fields */
#define DMA_DCHPRI29_CHPRI_MASK                  0xFu
#define DMA_DCHPRI29_CHPRI_SHIFT                 0
#define DMA_DCHPRI29_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI29_CHPRI_SHIFT))&DMA_DCHPRI29_CHPRI_MASK)
#define DMA_DCHPRI29_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI29_GRPPRI_SHIFT                4
#define DMA_DCHPRI29_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI29_GRPPRI_SHIFT))&DMA_DCHPRI29_GRPPRI_MASK)
#define DMA_DCHPRI29_DPA_MASK                    0x40u
#define DMA_DCHPRI29_DPA_SHIFT                   6
#define DMA_DCHPRI29_ECP_MASK                    0x80u
#define DMA_DCHPRI29_ECP_SHIFT                   7
/* DCHPRI28 Bit Fields */
#define DMA_DCHPRI28_CHPRI_MASK                  0xFu
#define DMA_DCHPRI28_CHPRI_SHIFT                 0
#define DMA_DCHPRI28_CHPRI(x)                    (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI28_CHPRI_SHIFT))&DMA_DCHPRI28_CHPRI_MASK)
#define DMA_DCHPRI28_GRPPRI_MASK                 0x30u
#define DMA_DCHPRI28_GRPPRI_SHIFT                4
#define DMA_DCHPRI28_GRPPRI(x)                   (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI28_GRPPRI_SHIFT))&DMA_DCHPRI28_GRPPRI_MASK)
#define DMA_DCHPRI28_DPA_MASK                    0x40u
#define DMA_DCHPRI28_DPA_SHIFT                   6
#define DMA_DCHPRI28_ECP_MASK                    0x80u
#define DMA_DCHPRI28_ECP_SHIFT                   7
/* SADDR Bit Fields */
#define DMA_SADDR_SADDR_MASK                     0xFFFFFFFFu
#define DMA_SADDR_SADDR_SHIFT                    0
#define DMA_SADDR_SADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SADDR_SADDR_SHIFT))&DMA_SADDR_SADDR_MASK)
/* SOFF Bit Fields */
#define DMA_SOFF_SOFF_MASK                       0xFFFFu
#define DMA_SOFF_SOFF_SHIFT                      0
#define DMA_SOFF_SOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_SOFF_SOFF_SHIFT))&DMA_SOFF_SOFF_MASK)
/* ATTR Bit Fields */
#define DMA_ATTR_DSIZE_MASK                      0x7u
#define DMA_ATTR_DSIZE_SHIFT                     0
#define DMA_ATTR_DSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DSIZE_SHIFT))&DMA_ATTR_DSIZE_MASK)
#define DMA_ATTR_DMOD_MASK                       0xF8u
#define DMA_ATTR_DMOD_SHIFT                      3
#define DMA_ATTR_DMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DMOD_SHIFT))&DMA_ATTR_DMOD_MASK)
#define DMA_ATTR_SSIZE_MASK                      0x700u
#define DMA_ATTR_SSIZE_SHIFT                     8
#define DMA_ATTR_SSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SSIZE_SHIFT))&DMA_ATTR_SSIZE_MASK)
#define DMA_ATTR_SMOD_MASK                       0xF800u
#define DMA_ATTR_SMOD_SHIFT                      11
#define DMA_ATTR_SMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SMOD_SHIFT))&DMA_ATTR_SMOD_MASK)
/* NBYTES_MLNO Bit Fields */
#define DMA_NBYTES_MLNO_NBYTES_MASK              0xFFFFFFFFu
#define DMA_NBYTES_MLNO_NBYTES_SHIFT             0
#define DMA_NBYTES_MLNO_NBYTES(x)                (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLNO_NBYTES_SHIFT))&DMA_NBYTES_MLNO_NBYTES_MASK)
/* NBYTES_MLOFFNO Bit Fields */
#define DMA_NBYTES_MLOFFNO_NBYTES_OE_MASK        0x3FFFFFFFu
#define DMA_NBYTES_MLOFFNO_NBYTES_OE_SHIFT       0
#define DMA_NBYTES_MLOFFNO_NBYTES_OE(x)          (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_NBYTES_OE_SHIFT))&DMA_NBYTES_MLOFFNO_NBYTES_OE_MASK)
#define DMA_NBYTES_MLOFFNO_DMLOE_MASK            0x40000000u
#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT           30
#define DMA_NBYTES_MLOFFNO_SMLOE_MASK            0x80000000u
#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT           31
/* NBYTES_MLOFFYES Bit Fields */
#define DMA_NBYTES_MLOFFYES_NBYTES_OD_MASK       0x3FFu
#define DMA_NBYTES_MLOFFYES_NBYTES_OD_SHIFT      0
#define DMA_NBYTES_MLOFFYES_NBYTES_OD(x)         (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_NBYTES_OD_SHIFT))&DMA_NBYTES_MLOFFYES_NBYTES_OD_MASK)
#define DMA_NBYTES_MLOFFYES_NBYTES               DMA_NBYTES_MLOFFYES_NBYTES_OD
#define DMA_NBYTES_MLOFFYES_NBYTES_MASK          DMA_NBYTES_MLOFFYES_NBYTES_OD_MASK
#define DMA_NBYTES_MLOFFYES_MLOFF_MASK           0x3FFFFC00u
#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT          10
#define DMA_NBYTES_MLOFFYES_MLOFF(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_NBYTES_MLOFFYES_DMLOE_MASK           0x40000000u
#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT          30
#define DMA_NBYTES_MLOFFYES_SMLOE_MASK           0x80000000u
#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT          31
/* SLAST Bit Fields */
#define DMA_SLAST_SLAST_MASK                     0xFFFFFFFFu
#define DMA_SLAST_SLAST_SHIFT                    0
#define DMA_SLAST_SLAST(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SLAST_SLAST_SHIFT))&DMA_SLAST_SLAST_MASK)
/* DADDR Bit Fields */
#define DMA_DADDR_DADDR_MASK                     0xFFFFFFFFu
#define DMA_DADDR_DADDR_SHIFT                    0
#define DMA_DADDR_DADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_DADDR_DADDR_SHIFT))&DMA_DADDR_DADDR_MASK)
/* DOFF Bit Fields */
#define DMA_DOFF_DOFF_MASK                       0xFFFFu
#define DMA_DOFF_DOFF_SHIFT                      0
#define DMA_DOFF_DOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_DOFF_DOFF_SHIFT))&DMA_DOFF_DOFF_MASK)
/* CITER_ELINKNO Bit Fields */
#define DMA_CITER_ELINKNO_CITER_MASK             0x7FFFu
#define DMA_CITER_ELINKNO_CITER_SHIFT            0
#define DMA_CITER_ELINKNO_CITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_CITER_SHIFT))&DMA_CITER_ELINKNO_CITER_MASK)
#define DMA_CITER_ELINKNO_ELINK_MASK             0x8000u
#define DMA_CITER_ELINKNO_ELINK_SHIFT            15
/* CITER_ELINKYES Bit Fields */
#define DMA_CITER_ELINKYES_CITER_LE_MASK         0x1FFu
#define DMA_CITER_ELINKYES_CITER_LE_SHIFT        0
#define DMA_CITER_ELINKYES_CITER_LE(x)           (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_CITER_LE_SHIFT))&DMA_CITER_ELINKYES_CITER_LE_MASK)
#define DMA_CITER_ELINKYES_LINKCH_MASK           0x3E00u
#define DMA_CITER_ELINKYES_LINKCH_SHIFT          9
#define DMA_CITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_LINKCH_SHIFT))&DMA_CITER_ELINKYES_LINKCH_MASK)
#define DMA_CITER_ELINKYES_ELINK_MASK            0x8000u
#define DMA_CITER_ELINKYES_ELINK_SHIFT           15
/* DLAST_SGA Bit Fields */
#define DMA_DLAST_SGA_DLASTSGA_MASK              0xFFFFFFFFu
#define DMA_DLAST_SGA_DLASTSGA_SHIFT             0
#define DMA_DLAST_SGA_DLASTSGA(x)                (((uint32_t)(((uint32_t)(x))<<DMA_DLAST_SGA_DLASTSGA_SHIFT))&DMA_DLAST_SGA_DLASTSGA_MASK)
/* CSR Bit Fields */
#define DMA_CSR_START_MASK                       0x1u
#define DMA_CSR_START_SHIFT                      0
#define DMA_CSR_INTMAJOR_MASK                    0x2u
#define DMA_CSR_INTMAJOR_SHIFT                   1
#define DMA_CSR_INTHALF_MASK                     0x4u
#define DMA_CSR_INTHALF_SHIFT                    2
#define DMA_CSR_DREQ_MASK                        0x8u
#define DMA_CSR_DREQ_SHIFT                       3
#define DMA_CSR_ESG_MASK                         0x10u
#define DMA_CSR_ESG_SHIFT                        4
#define DMA_CSR_MAJORELINK_MASK                  0x20u
#define DMA_CSR_MAJORELINK_SHIFT                 5
#define DMA_CSR_ACTIVE_MASK                      0x40u
#define DMA_CSR_ACTIVE_SHIFT                     6
#define DMA_CSR_DONE_MASK                        0x80u
#define DMA_CSR_DONE_SHIFT                       7
#define DMA_CSR_MAJORLINKCH_MASK                 0x1F00u
#define DMA_CSR_MAJORLINKCH_SHIFT                8
#define DMA_CSR_MAJORLINKCH(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORLINKCH_SHIFT))&DMA_CSR_MAJORLINKCH_MASK)
#define DMA_CSR_BWC_MASK                         0xC000u
#define DMA_CSR_BWC_SHIFT                        14
#define DMA_CSR_BWC(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_BWC_SHIFT))&DMA_CSR_BWC_MASK)
/* BITER_ELINKNO Bit Fields */
#define DMA_BITER_ELINKNO_BITER_MASK             0x7FFFu
#define DMA_BITER_ELINKNO_BITER_SHIFT            0
#define DMA_BITER_ELINKNO_BITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_BITER_SHIFT))&DMA_BITER_ELINKNO_BITER_MASK)
#define DMA_BITER_ELINKNO_ELINK_MASK             0x8000u
#define DMA_BITER_ELINKNO_ELINK_SHIFT            15
/* BITER_ELINKYES Bit Fields */
#define DMA_BITER_ELINKYES_BITER_LE_MASK         0x1FFu
#define DMA_BITER_ELINKYES_BITER_LE_SHIFT        0
#define DMA_BITER_ELINKYES_BITER_LE(x)           (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_BITER_LE_SHIFT))&DMA_BITER_ELINKYES_BITER_LE_MASK)
#define DMA_BITER_ELINKYES_LINKCH_MASK           0x3E00u
#define DMA_BITER_ELINKYES_LINKCH_SHIFT          9
#define DMA_BITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_LINKCH_SHIFT))&DMA_BITER_ELINKYES_LINKCH_MASK)
#define DMA_BITER_ELINKYES_ELINK_MASK            0x8000u
#define DMA_BITER_ELINKYES_ELINK_SHIFT           15

/**
 * @}
 */ /* end of group DMA_Register_Masks */


/* DMA - Peripheral instance base addresses */
/** Peripheral DMA0 base pointer */
#define DMA0_BASE_PTR                            ((DMA_MemMapPtr)0x40018000u)
/** Peripheral DMA1 base pointer */
#define DMA1_BASE_PTR                            ((DMA_MemMapPtr)0x40098000u)
/** Array initializer of DMA peripheral base pointers */
#define DMA_BASE_PTRS                            { DMA0_BASE_PTR, DMA1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- DMA - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMA_Register_Accessor_Macros DMA - Register accessor macros
 * @{
 */


/* DMA - Register instance definitions */
/* DMA0 */
#define DMA0_CR                                  DMA_CR_REG(DMA0_BASE_PTR)
#define DMA0_ES                                  DMA_ES_REG(DMA0_BASE_PTR)
#define DMA0_ERQ                                 DMA_ERQ_REG(DMA0_BASE_PTR)
#define DMA0_EEI                                 DMA_EEI_REG(DMA0_BASE_PTR)
#define DMA0_CEEI                                DMA_CEEI_REG(DMA0_BASE_PTR)
#define DMA0_SEEI                                DMA_SEEI_REG(DMA0_BASE_PTR)
#define DMA0_CERQ                                DMA_CERQ_REG(DMA0_BASE_PTR)
#define DMA0_SERQ                                DMA_SERQ_REG(DMA0_BASE_PTR)
#define DMA0_CDNE                                DMA_CDNE_REG(DMA0_BASE_PTR)
#define DMA0_SSRT                                DMA_SSRT_REG(DMA0_BASE_PTR)
#define DMA0_CERR                                DMA_CERR_REG(DMA0_BASE_PTR)
#define DMA0_CINT                                DMA_CINT_REG(DMA0_BASE_PTR)
#define DMA0_INT                                 DMA_INT_REG(DMA0_BASE_PTR)
#define DMA0_ERR                                 DMA_ERR_REG(DMA0_BASE_PTR)
#define DMA0_HRS                                 DMA_HRS_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI3                             DMA_DCHPRI3_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI2                             DMA_DCHPRI2_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI1                             DMA_DCHPRI1_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI0                             DMA_DCHPRI0_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI7                             DMA_DCHPRI7_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI6                             DMA_DCHPRI6_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI5                             DMA_DCHPRI5_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI4                             DMA_DCHPRI4_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI11                            DMA_DCHPRI11_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI10                            DMA_DCHPRI10_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI9                             DMA_DCHPRI9_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI8                             DMA_DCHPRI8_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI15                            DMA_DCHPRI15_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI14                            DMA_DCHPRI14_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI13                            DMA_DCHPRI13_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI12                            DMA_DCHPRI12_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI19                            DMA_DCHPRI19_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI18                            DMA_DCHPRI18_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI17                            DMA_DCHPRI17_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI16                            DMA_DCHPRI16_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI23                            DMA_DCHPRI23_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI22                            DMA_DCHPRI22_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI21                            DMA_DCHPRI21_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI20                            DMA_DCHPRI20_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI27                            DMA_DCHPRI27_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI26                            DMA_DCHPRI26_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI25                            DMA_DCHPRI25_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI24                            DMA_DCHPRI24_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI31                            DMA_DCHPRI31_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI30                            DMA_DCHPRI30_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI29                            DMA_DCHPRI29_REG(DMA0_BASE_PTR)
#define DMA0_DCHPRI28                            DMA_DCHPRI28_REG(DMA0_BASE_PTR)
#define DMA0_TCD0_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD0_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,0)
#define DMA0_TCD1_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD1_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,1)
#define DMA0_TCD2_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD2_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,2)
#define DMA0_TCD3_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD3_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,3)
#define DMA0_TCD4_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD4_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,4)
#define DMA0_TCD5_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD5_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,5)
#define DMA0_TCD6_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD6_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,6)
#define DMA0_TCD7_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD7_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,7)
#define DMA0_TCD8_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD8_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,8)
#define DMA0_TCD9_SADDR                          DMA_SADDR_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_SOFF                           DMA_SOFF_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_ATTR                           DMA_ATTR_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_SLAST                          DMA_SLAST_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_DADDR                          DMA_DADDR_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_DOFF                           DMA_DOFF_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_DLASTSGA                       DMA_DLAST_SGA_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_CSR                            DMA_CSR_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD9_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,9)
#define DMA0_TCD10_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD10_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,10)
#define DMA0_TCD11_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD11_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,11)
#define DMA0_TCD12_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD12_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,12)
#define DMA0_TCD13_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD13_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,13)
#define DMA0_TCD14_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD14_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,14)
#define DMA0_TCD15_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD15_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,15)
#define DMA0_TCD16_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD16_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,16)
#define DMA0_TCD17_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD17_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,17)
#define DMA0_TCD18_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD18_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,18)
#define DMA0_TCD19_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD19_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,19)
#define DMA0_TCD20_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD20_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,20)
#define DMA0_TCD21_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD21_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,21)
#define DMA0_TCD22_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD22_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,22)
#define DMA0_TCD23_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD23_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,23)
#define DMA0_TCD24_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD24_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,24)
#define DMA0_TCD25_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD25_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,25)
#define DMA0_TCD26_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD26_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,26)
#define DMA0_TCD27_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD27_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,27)
#define DMA0_TCD28_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD28_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,28)
#define DMA0_TCD29_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD29_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,29)
#define DMA0_TCD30_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD30_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,30)
#define DMA0_TCD31_SADDR                         DMA_SADDR_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_SOFF                          DMA_SOFF_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_ATTR                          DMA_ATTR_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_SLAST                         DMA_SLAST_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_DADDR                         DMA_DADDR_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_DOFF                          DMA_DOFF_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_DLASTSGA                      DMA_DLAST_SGA_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_CSR                           DMA_CSR_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,31)
#define DMA0_TCD31_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,31)
/* DMA1 */
#define DMA1_CR                                  DMA_CR_REG(DMA1_BASE_PTR)
#define DMA1_ES                                  DMA_ES_REG(DMA1_BASE_PTR)
#define DMA1_ERQ                                 DMA_ERQ_REG(DMA1_BASE_PTR)
#define DMA1_EEI                                 DMA_EEI_REG(DMA1_BASE_PTR)
#define DMA1_CEEI                                DMA_CEEI_REG(DMA1_BASE_PTR)
#define DMA1_SEEI                                DMA_SEEI_REG(DMA1_BASE_PTR)
#define DMA1_CERQ                                DMA_CERQ_REG(DMA1_BASE_PTR)
#define DMA1_SERQ                                DMA_SERQ_REG(DMA1_BASE_PTR)
#define DMA1_CDNE                                DMA_CDNE_REG(DMA1_BASE_PTR)
#define DMA1_SSRT                                DMA_SSRT_REG(DMA1_BASE_PTR)
#define DMA1_CERR                                DMA_CERR_REG(DMA1_BASE_PTR)
#define DMA1_CINT                                DMA_CINT_REG(DMA1_BASE_PTR)
#define DMA1_INT                                 DMA_INT_REG(DMA1_BASE_PTR)
#define DMA1_ERR                                 DMA_ERR_REG(DMA1_BASE_PTR)
#define DMA1_HRS                                 DMA_HRS_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI3                             DMA_DCHPRI3_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI2                             DMA_DCHPRI2_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI1                             DMA_DCHPRI1_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI0                             DMA_DCHPRI0_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI7                             DMA_DCHPRI7_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI6                             DMA_DCHPRI6_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI5                             DMA_DCHPRI5_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI4                             DMA_DCHPRI4_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI11                            DMA_DCHPRI11_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI10                            DMA_DCHPRI10_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI9                             DMA_DCHPRI9_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI8                             DMA_DCHPRI8_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI15                            DMA_DCHPRI15_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI14                            DMA_DCHPRI14_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI13                            DMA_DCHPRI13_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI12                            DMA_DCHPRI12_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI19                            DMA_DCHPRI19_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI18                            DMA_DCHPRI18_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI17                            DMA_DCHPRI17_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI16                            DMA_DCHPRI16_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI23                            DMA_DCHPRI23_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI22                            DMA_DCHPRI22_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI21                            DMA_DCHPRI21_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI20                            DMA_DCHPRI20_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI27                            DMA_DCHPRI27_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI26                            DMA_DCHPRI26_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI25                            DMA_DCHPRI25_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI24                            DMA_DCHPRI24_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI31                            DMA_DCHPRI31_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI30                            DMA_DCHPRI30_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI29                            DMA_DCHPRI29_REG(DMA1_BASE_PTR)
#define DMA1_DCHPRI28                            DMA_DCHPRI28_REG(DMA1_BASE_PTR)
#define DMA1_TCD0_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD0_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,0)
#define DMA1_TCD1_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD1_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,1)
#define DMA1_TCD2_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD2_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,2)
#define DMA1_TCD3_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD3_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,3)
#define DMA1_TCD4_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD4_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,4)
#define DMA1_TCD5_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD5_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,5)
#define DMA1_TCD6_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD6_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,6)
#define DMA1_TCD7_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD7_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,7)
#define DMA1_TCD8_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD8_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,8)
#define DMA1_TCD9_SADDR                          DMA_SADDR_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_SOFF                           DMA_SOFF_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_ATTR                           DMA_ATTR_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_NBYTES_MLNO                    DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_NBYTES_MLOFFNO                 DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_NBYTES_MLOFFYES                DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_SLAST                          DMA_SLAST_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_DADDR                          DMA_DADDR_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_DOFF                           DMA_DOFF_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_CITER_ELINKNO                  DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_CITER_ELINKYES                 DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_DLASTSGA                       DMA_DLAST_SGA_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_CSR                            DMA_CSR_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_BITER_ELINKNO                  DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD9_BITER_ELINKYES                 DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,9)
#define DMA1_TCD10_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD10_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,10)
#define DMA1_TCD11_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD11_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,11)
#define DMA1_TCD12_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD12_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,12)
#define DMA1_TCD13_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD13_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,13)
#define DMA1_TCD14_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD14_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,14)
#define DMA1_TCD15_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD15_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,15)
#define DMA1_TCD16_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD16_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,16)
#define DMA1_TCD17_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD17_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,17)
#define DMA1_TCD18_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD18_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,18)
#define DMA1_TCD19_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD19_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,19)
#define DMA1_TCD20_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD20_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,20)
#define DMA1_TCD21_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD21_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,21)
#define DMA1_TCD22_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD22_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,22)
#define DMA1_TCD23_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD23_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,23)
#define DMA1_TCD24_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD24_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,24)
#define DMA1_TCD25_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD25_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,25)
#define DMA1_TCD26_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD26_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,26)
#define DMA1_TCD27_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD27_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,27)
#define DMA1_TCD28_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD28_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,28)
#define DMA1_TCD29_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD29_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,29)
#define DMA1_TCD30_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD30_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,30)
#define DMA1_TCD31_SADDR                         DMA_SADDR_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_SOFF                          DMA_SOFF_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_ATTR                          DMA_ATTR_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_NBYTES_MLNO                   DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_NBYTES_MLOFFNO                DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_NBYTES_MLOFFYES               DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_SLAST                         DMA_SLAST_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_DADDR                         DMA_DADDR_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_DOFF                          DMA_DOFF_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_CITER_ELINKNO                 DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_CITER_ELINKYES                DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_DLASTSGA                      DMA_DLAST_SGA_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_CSR                           DMA_CSR_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_BITER_ELINKNO                 DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,31)
#define DMA1_TCD31_BITER_ELINKYES                DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,31)

/* DMA - Register array accessors */
#define DMA0_SADDR(index)                        DMA_SADDR_REG(DMA0_BASE_PTR,index)
#define DMA1_SADDR(index)                        DMA_SADDR_REG(DMA1_BASE_PTR,index)
#define DMA0_SOFF(index)                         DMA_SOFF_REG(DMA0_BASE_PTR,index)
#define DMA1_SOFF(index)                         DMA_SOFF_REG(DMA1_BASE_PTR,index)
#define DMA0_ATTR(index)                         DMA_ATTR_REG(DMA0_BASE_PTR,index)
#define DMA1_ATTR(index)                         DMA_ATTR_REG(DMA1_BASE_PTR,index)
#define DMA0_NBYTES_MLNO(index)                  DMA_NBYTES_MLNO_REG(DMA0_BASE_PTR,index)
#define DMA1_NBYTES_MLNO(index)                  DMA_NBYTES_MLNO_REG(DMA1_BASE_PTR,index)
#define DMA0_NBYTES_MLOFFNO(index)               DMA_NBYTES_MLOFFNO_REG(DMA0_BASE_PTR,index)
#define DMA1_NBYTES_MLOFFNO(index)               DMA_NBYTES_MLOFFNO_REG(DMA1_BASE_PTR,index)
#define DMA0_NBYTES_MLOFFYES(index)              DMA_NBYTES_MLOFFYES_REG(DMA0_BASE_PTR,index)
#define DMA1_NBYTES_MLOFFYES(index)              DMA_NBYTES_MLOFFYES_REG(DMA1_BASE_PTR,index)
#define DMA0_SLAST(index)                        DMA_SLAST_REG(DMA0_BASE_PTR,index)
#define DMA1_SLAST(index)                        DMA_SLAST_REG(DMA1_BASE_PTR,index)
#define DMA0_DADDR(index)                        DMA_DADDR_REG(DMA0_BASE_PTR,index)
#define DMA1_DADDR(index)                        DMA_DADDR_REG(DMA1_BASE_PTR,index)
#define DMA0_DOFF(index)                         DMA_DOFF_REG(DMA0_BASE_PTR,index)
#define DMA1_DOFF(index)                         DMA_DOFF_REG(DMA1_BASE_PTR,index)
#define DMA0_CITER_ELINKNO(index)                DMA_CITER_ELINKNO_REG(DMA0_BASE_PTR,index)
#define DMA1_CITER_ELINKNO(index)                DMA_CITER_ELINKNO_REG(DMA1_BASE_PTR,index)
#define DMA0_CITER_ELINKYES(index)               DMA_CITER_ELINKYES_REG(DMA0_BASE_PTR,index)
#define DMA1_CITER_ELINKYES(index)               DMA_CITER_ELINKYES_REG(DMA1_BASE_PTR,index)
#define DMA0_DLAST_SGA(index)                    DMA_DLAST_SGA_REG(DMA0_BASE_PTR,index)
#define DMA1_DLAST_SGA(index)                    DMA_DLAST_SGA_REG(DMA1_BASE_PTR,index)
#define DMA0_CSR(index)                          DMA_CSR_REG(DMA0_BASE_PTR,index)
#define DMA1_CSR(index)                          DMA_CSR_REG(DMA1_BASE_PTR,index)
#define DMA0_BITER_ELINKNO(index)                DMA_BITER_ELINKNO_REG(DMA0_BASE_PTR,index)
#define DMA1_BITER_ELINKNO(index)                DMA_BITER_ELINKNO_REG(DMA1_BASE_PTR,index)
#define DMA0_BITER_ELINKYES(index)               DMA_BITER_ELINKYES_REG(DMA0_BASE_PTR,index)
#define DMA1_BITER_ELINKYES(index)               DMA_BITER_ELINKYES_REG(DMA1_BASE_PTR,index)

/**
 * @}
 */ /* end of group DMA_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group DMA_Peripheral */


/* ----------------------------------------------------------------------------
   -- DMAMUX
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMAMUX_Peripheral DMAMUX
 * @{
 */

/** DMAMUX - Peripheral register structure */
typedef struct DMAMUX_MemMap {
  uint8_t CHCFG[16];                               /**< Channel Configuration register, array offset: 0x0, array step: 0x1 */
} volatile *DMAMUX_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- DMAMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMAMUX_Register_Accessor_Macros DMAMUX - Register accessor macros
 * @{
 */


/* DMAMUX - Register accessors */
#define DMAMUX_CHCFG_REG(base,index)             ((base)->CHCFG[index])

/**
 * @}
 */ /* end of group DMAMUX_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- DMAMUX Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMAMUX_Register_Masks DMAMUX Register Masks
 * @{
 */

/* CHCFG Bit Fields */
#define DMAMUX_CHCFG_SOURCE_MASK                 0x3Fu
#define DMAMUX_CHCFG_SOURCE_SHIFT                0
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK)
#define DMAMUX_CHCFG_TRIG_MASK                   0x40u
#define DMAMUX_CHCFG_TRIG_SHIFT                  6
#define DMAMUX_CHCFG_ENBL_MASK                   0x80u
#define DMAMUX_CHCFG_ENBL_SHIFT                  7

/**
 * @}
 */ /* end of group DMAMUX_Register_Masks */


/* DMAMUX - Peripheral instance base addresses */
/** Peripheral DMAMUX0 base pointer */
#define DMAMUX0_BASE_PTR                         ((DMAMUX_MemMapPtr)0x40024000u)
/** Peripheral DMAMUX1 base pointer */
#define DMAMUX1_BASE_PTR                         ((DMAMUX_MemMapPtr)0x40025000u)
/** Peripheral DMAMUX2 base pointer */
#define DMAMUX2_BASE_PTR                         ((DMAMUX_MemMapPtr)0x400A1000u)
/** Peripheral DMAMUX3 base pointer */
#define DMAMUX3_BASE_PTR                         ((DMAMUX_MemMapPtr)0x400A2000u)
/** Array initializer of DMAMUX peripheral base pointers */
#define DMAMUX_BASE_PTRS                         { DMAMUX0_BASE_PTR, DMAMUX1_BASE_PTR, DMAMUX2_BASE_PTR, DMAMUX3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- DMAMUX - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup DMAMUX_Register_Accessor_Macros DMAMUX - Register accessor macros
 * @{
 */


/* DMAMUX - Register instance definitions */
/* DMAMUX0 */
#define DMAMUX0_CHCFG0                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,0)
#define DMAMUX0_CHCFG1                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,1)
#define DMAMUX0_CHCFG2                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,2)
#define DMAMUX0_CHCFG3                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,3)
#define DMAMUX0_CHCFG4                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,4)
#define DMAMUX0_CHCFG5                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,5)
#define DMAMUX0_CHCFG6                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,6)
#define DMAMUX0_CHCFG7                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,7)
#define DMAMUX0_CHCFG8                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,8)
#define DMAMUX0_CHCFG9                           DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,9)
#define DMAMUX0_CHCFG10                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,10)
#define DMAMUX0_CHCFG11                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,11)
#define DMAMUX0_CHCFG12                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,12)
#define DMAMUX0_CHCFG13                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,13)
#define DMAMUX0_CHCFG14                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,14)
#define DMAMUX0_CHCFG15                          DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,15)
/* DMAMUX1 */
#define DMAMUX1_CHCFG0                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,0)
#define DMAMUX1_CHCFG1                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,1)
#define DMAMUX1_CHCFG2                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,2)
#define DMAMUX1_CHCFG3                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,3)
#define DMAMUX1_CHCFG4                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,4)
#define DMAMUX1_CHCFG5                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,5)
#define DMAMUX1_CHCFG6                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,6)
#define DMAMUX1_CHCFG7                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,7)
#define DMAMUX1_CHCFG8                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,8)
#define DMAMUX1_CHCFG9                           DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,9)
#define DMAMUX1_CHCFG10                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,10)
#define DMAMUX1_CHCFG11                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,11)
#define DMAMUX1_CHCFG12                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,12)
#define DMAMUX1_CHCFG13                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,13)
#define DMAMUX1_CHCFG14                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,14)
#define DMAMUX1_CHCFG15                          DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,15)
/* DMAMUX2 */
#define DMAMUX2_CHCFG0                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,0)
#define DMAMUX2_CHCFG1                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,1)
#define DMAMUX2_CHCFG2                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,2)
#define DMAMUX2_CHCFG3                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,3)
#define DMAMUX2_CHCFG4                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,4)
#define DMAMUX2_CHCFG5                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,5)
#define DMAMUX2_CHCFG6                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,6)
#define DMAMUX2_CHCFG7                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,7)
#define DMAMUX2_CHCFG8                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,8)
#define DMAMUX2_CHCFG9                           DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,9)
#define DMAMUX2_CHCFG10                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,10)
#define DMAMUX2_CHCFG11                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,11)
#define DMAMUX2_CHCFG12                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,12)
#define DMAMUX2_CHCFG13                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,13)
#define DMAMUX2_CHCFG14                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,14)
#define DMAMUX2_CHCFG15                          DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,15)
/* DMAMUX3 */
#define DMAMUX3_CHCFG0                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,0)
#define DMAMUX3_CHCFG1                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,1)
#define DMAMUX3_CHCFG2                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,2)
#define DMAMUX3_CHCFG3                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,3)
#define DMAMUX3_CHCFG4                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,4)
#define DMAMUX3_CHCFG5                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,5)
#define DMAMUX3_CHCFG6                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,6)
#define DMAMUX3_CHCFG7                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,7)
#define DMAMUX3_CHCFG8                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,8)
#define DMAMUX3_CHCFG9                           DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,9)
#define DMAMUX3_CHCFG10                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,10)
#define DMAMUX3_CHCFG11                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,11)
#define DMAMUX3_CHCFG12                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,12)
#define DMAMUX3_CHCFG13                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,13)
#define DMAMUX3_CHCFG14                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,14)
#define DMAMUX3_CHCFG15                          DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,15)

/* DMAMUX - Register array accessors */
#define DMAMUX0_CHCFG(index)                     DMAMUX_CHCFG_REG(DMAMUX0_BASE_PTR,index)
#define DMAMUX1_CHCFG(index)                     DMAMUX_CHCFG_REG(DMAMUX1_BASE_PTR,index)
#define DMAMUX2_CHCFG(index)                     DMAMUX_CHCFG_REG(DMAMUX2_BASE_PTR,index)
#define DMAMUX3_CHCFG(index)                     DMAMUX_CHCFG_REG(DMAMUX3_BASE_PTR,index)

/**
 * @}
 */ /* end of group DMAMUX_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group DMAMUX_Peripheral */


/* ----------------------------------------------------------------------------
   -- ENET
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ENET_Peripheral ENET
 * @{
 */

/** ENET - Peripheral register structure */
typedef struct ENET_MemMap {
  uint8_t RESERVED_0[4];
  uint32_t EIR;                                    /**< Interrupt Event Register, offset: 0x4 */
  uint32_t EIMR;                                   /**< Interrupt Mask Register, offset: 0x8 */
  uint8_t RESERVED_1[4];
  uint32_t RDAR;                                   /**< Receive Descriptor Active Register, offset: 0x10 */
  uint32_t TDAR;                                   /**< Transmit Descriptor Active Register, offset: 0x14 */
  uint8_t RESERVED_2[12];
  uint32_t ECR;                                    /**< Ethernet Control Register, offset: 0x24 */
  uint8_t RESERVED_3[24];
  uint32_t MMFR;                                   /**< MII Management Frame Register, offset: 0x40 */
  uint32_t MSCR;                                   /**< MII Speed Control Register, offset: 0x44 */
  uint8_t RESERVED_4[28];
  uint32_t MIBC;                                   /**< MIB Control Register, offset: 0x64 */
  uint8_t RESERVED_5[28];
  uint32_t RCR;                                    /**< Receive Control Register, offset: 0x84 */
  uint8_t RESERVED_6[60];
  uint32_t TCR;                                    /**< Transmit Control Register, offset: 0xC4 */
  uint8_t RESERVED_7[28];
  uint32_t PALR;                                   /**< Physical Address Lower Register, offset: 0xE4 */
  uint32_t PAUR;                                   /**< Physical Address Upper Register, offset: 0xE8 */
  uint32_t OPD;                                    /**< Opcode/Pause Duration Register, offset: 0xEC */
  uint8_t RESERVED_8[40];
  uint32_t IAUR;                                   /**< Descriptor Individual Upper Address Register, offset: 0x118 */
  uint32_t IALR;                                   /**< Descriptor Individual Lower Address Register, offset: 0x11C */
  uint32_t GAUR;                                   /**< Descriptor Group Upper Address Register, offset: 0x120 */
  uint32_t GALR;                                   /**< Descriptor Group Lower Address Register, offset: 0x124 */
  uint8_t RESERVED_9[28];
  uint32_t TFWR;                                   /**< Transmit FIFO Watermark Register, offset: 0x144 */
  uint8_t RESERVED_10[56];
  uint32_t RDSR;                                   /**< Receive Descriptor Ring Start Register, offset: 0x180 */
  uint32_t TDSR;                                   /**< Transmit Buffer Descriptor Ring Start Register, offset: 0x184 */
  uint32_t MRBR;                                   /**< Maximum Receive Buffer Size Register, offset: 0x188 */
  uint8_t RESERVED_11[4];
  uint32_t RSFL;                                   /**< Receive FIFO Section Full Threshold, offset: 0x190 */
  uint32_t RSEM;                                   /**< Receive FIFO Section Empty Threshold, offset: 0x194 */
  uint32_t RAEM;                                   /**< Receive FIFO Almost Empty Threshold, offset: 0x198 */
  uint32_t RAFL;                                   /**< Receive FIFO Almost Full Threshold, offset: 0x19C */
  uint32_t TSEM;                                   /**< Transmit FIFO Section Empty Threshold, offset: 0x1A0 */
  uint32_t TAEM;                                   /**< Transmit FIFO Almost Empty Threshold, offset: 0x1A4 */
  uint32_t TAFL;                                   /**< Transmit FIFO Almost Full Threshold, offset: 0x1A8 */
  uint32_t TIPG;                                   /**< Transmit Inter-Packet Gap, offset: 0x1AC */
  uint32_t FTRL;                                   /**< Frame Truncation Length, offset: 0x1B0 */
  uint8_t RESERVED_12[12];
  uint32_t TACC;                                   /**< Transmit Accelerator Function Configuration, offset: 0x1C0 */
  uint32_t RACC;                                   /**< Receive Accelerator Function Configuration, offset: 0x1C4 */
  uint8_t RESERVED_13[56];
  uint32_t RMON_T_DROP;                            /**< Count of frames not counted correctly (RMON_T_DROP). NOTE: Counter not implemented (read 0 always) as not applicable., offset: 0x200 */
  uint32_t RMON_T_PACKETS;                         /**< RMON Tx packet count (RMON_T_PACKETS), offset: 0x204 */
  uint32_t RMON_T_BC_PKT;                          /**< RMON Tx Broadcast Packets (RMON_T_BC_PKT), offset: 0x208 */
  uint32_t RMON_T_MC_PKT;                          /**< RMON Tx Multicast Packets (RMON_T_MC_PKT), offset: 0x20C */
  uint32_t RMON_T_CRC_ALIGN;                       /**< RMON Tx Packets w CRC/Align error (RMON_T_CRC_ALIGN), offset: 0x210 */
  uint32_t RMON_T_UNDERSIZE;                       /**< RMON Tx Packets < 64 bytes, good CRC (RMON_T_UNDERSIZE), offset: 0x214 */
  uint32_t RMON_T_OVERSIZE;                        /**< RMON Tx Packets > MAX_FL bytes, good CRC (RMON_T_OVERSIZE), offset: 0x218 */
  uint32_t RMON_T_FRAG;                            /**< RMON Tx Packets < 64 bytes, bad CRC (RMON_T_FRAG), offset: 0x21C */
  uint32_t RMON_T_JAB;                             /**< RMON Tx Packets > MAX_FL bytes, bad CRC (RMON_T_JAB), offset: 0x220 */
  uint32_t RMON_T_COL;                             /**< RMON Tx collision count (RMON_T_COL), offset: 0x224 */
  uint32_t RMON_T_P64;                             /**< RMON Tx 64 byte packets (RMON_T_P64), offset: 0x228 */
  uint32_t RMON_T_P65TO127;                        /**< RMON Tx 65 to 127 byte packets (RMON_T_P65TO127), offset: 0x22C */
  uint32_t RMON_T_P128TO255;                       /**< RMON Tx 128 to 255 byte packets (RMON_T_P128TO255), offset: 0x230 */
  uint32_t RMON_T_P256TO511;                       /**< RMON Tx 256 to 511 byte packets (RMON_T_P256TO511), offset: 0x234 */
  uint32_t RMON_T_P512TO1023;                      /**< RMON Tx 512 to 1023 byte packets (RMON_T_P512TO1023), offset: 0x238 */
  uint32_t RMON_T_P1024TO2047;                     /**< RMON Tx 1024 to 2047 byte packets (RMON_T_P1024TO2047), offset: 0x23C */
  uint32_t RMON_T_P_GTE2048;                       /**< RMON Tx packets w > 2048 bytes (RMON_T_P_GTE2048), offset: 0x240 */
  uint32_t RMON_T_OCTETS;                          /**< RMON Tx Octets (RMON_T_OCTETS), offset: 0x244 */
  uint32_t IEEE_T_DROP;                            /**< Count of frames not counted correctly (IEEE_T_DROP). NOTE: Counter not implemented (read 0 always) as not applicable., offset: 0x248 */
  uint32_t IEEE_T_FRAME_OK;                        /**< Frames Transmitted OK (IEEE_T_FRAME_OK), offset: 0x24C */
  uint32_t IEEE_T_1COL;                            /**< Frames Transmitted with Single Collision (IEEE_T_1COL), offset: 0x250 */
  uint32_t IEEE_T_MCOL;                            /**< Frames Transmitted with Multiple Collisions (IEEE_T_MCOL), offset: 0x254 */
  uint32_t IEEE_T_DEF;                             /**< Frames Transmitted after Deferral Delay (IEEE_T_DEF), offset: 0x258 */
  uint32_t IEEE_T_LCOL;                            /**< Frames Transmitted with Late Collision (IEEE_T_LCOL), offset: 0x25C */
  uint32_t IEEE_T_EXCOL;                           /**< Frames Transmitted with Excessive Collisions (IEEE_T_EXCOL), offset: 0x260 */
  uint32_t IEEE_T_MACERR;                          /**< Frames Transmitted with Tx FIFO Underrun (IEEE_T_MACERR), offset: 0x264 */
  uint32_t IEEE_T_CSERR;                           /**< Frames Transmitted with Carrier Sense Error (IEEE_T_CSERR), offset: 0x268 */
  uint32_t IEEE_T_SQE;                             /**< Frames Transmitted with SQE Error (IEEE_T_SQE). NOTE: Counter not implemented (read 0 always) as no SQE information is available., offset: 0x26C */
  uint32_t IEEE_T_FDXFC;                           /**< Flow Control Pause frames transmitted (IEEE_T_FDXFC), offset: 0x270 */
  uint32_t IEEE_T_OCTETS_OK;                       /**< Octet count for Frames Transmitted w/o Error (IEEE_T_OCTETS_OK). NOTE: Counts total octets (includes header and FCS fields)., offset: 0x274 */
  uint8_t RESERVED_14[12];
  uint32_t RMON_R_PACKETS;                         /**< RMON Rx packet count (RMON_R_PACKETS), offset: 0x284 */
  uint32_t RMON_R_BC_PKT;                          /**< RMON Rx Broadcast Packets (RMON_R_BC_PKT), offset: 0x288 */
  uint32_t RMON_R_MC_PKT;                          /**< RMON Rx Multicast Packets (RMON_R_MC_PKT), offset: 0x28C */
  uint32_t RMON_R_CRC_ALIGN;                       /**< RMON Rx Packets w CRC/Align error (RMON_R_CRC_ALIGN), offset: 0x290 */
  uint32_t RMON_R_UNDERSIZE;                       /**< RMON Rx Packets < 64 bytes, good CRC (RMON_R_UNDERSIZE), offset: 0x294 */
  uint32_t RMON_R_OVERSIZE;                        /**< RMON Rx Packets > MAX_FL bytes, good CRC (RMON_R_OVERSIZE), offset: 0x298 */
  uint32_t RMON_R_FRAG;                            /**< RMON Rx Packets < 64 bytes, bad CRC (RMON_R_FRAG), offset: 0x29C */
  uint32_t RMON_R_JAB;                             /**< RMON Rx Packets > MAX_FL bytes, bad CRC (RMON_R_JAB), offset: 0x2A0 */
  uint32_t RMON_R_RESVD_0;                         /**< Reserved (RMON_R_RESVD_0), offset: 0x2A4 */
  uint32_t RMON_R_P64;                             /**< RMON Rx 64 byte packets (RMON_R_P64), offset: 0x2A8 */
  uint32_t RMON_R_P65TO127;                        /**< RMON Rx 65 to 127 byte packets (RMON_R_P65TO127), offset: 0x2AC */
  uint32_t RMON_R_P128TO255;                       /**< RMON Rx 128 to 255 byte packets (RMON_R_P128TO255), offset: 0x2B0 */
  uint32_t RMON_R_P256TO511;                       /**< RMON Rx 256 to 511 byte packets (RMON_R_P256TO511), offset: 0x2B4 */
  uint32_t RMON_R_P512TO1023;                      /**< RMON Rx 512 to 1023 byte packets (RMON_R_P512TO1023), offset: 0x2B8 */
  uint32_t RMON_R_P1024TO2047;                     /**< RMON Rx 1024 to 2047 byte packets (RMON_R_P1024TO2047), offset: 0x2BC */
  uint32_t RMON_R_P_GTE2048;                       /**< RMON Rx packets w > 2048 bytes (RMON_R_P_GTE2048), offset: 0x2C0 */
  uint32_t RMON_R_OCTETS;                          /**< RMON Rx Octets (RMON_R_OCTETS), offset: 0x2C4 */
  uint32_t RMON_R_DROP;                            /**< Count of frames not counted correctly (IEEE_R_DROP). NOTE: Counter increments if a frame with valid/missing SFD character is detected and has been dropped. None of the other counters increments if this counter increments., offset: 0x2C8 */
  uint32_t RMON_R_FRAME_OK;                        /**< Frames Received OK (IEEE_R_FRAME_OK), offset: 0x2CC */
  uint32_t IEEE_R_CRC;                             /**< Frames Received with CRC Error (IEEE_R_CRC), offset: 0x2D0 */
  uint32_t IEEE_R_ALIGN;                           /**< Frames Received with Alignment Error (IEEE_R_ALIGN), offset: 0x2D4 */
  uint32_t IEEE_R_MACERR;                          /**< Receive Fifo Overflow count (IEEE_R_MACERR), offset: 0x2D8 */
  uint32_t IEEE_R_FDXFC;                           /**< Flow Control Pause frames received (IEEE_R_FDXFC), offset: 0x2DC */
  uint32_t IEEE_R_OCTETS_OK;                       /**< Octet count for Frames Rcvd w/o Error (IEEE_R_OCTETS_OK). Counts total octets (includes header and FCS fields)., offset: 0x2E0 */
  uint8_t RESERVED_15[284];
  uint32_t ATCR;                                   /**< Timer Control Register, offset: 0x400 */
  uint32_t ATVR;                                   /**< Timer Value Register, offset: 0x404 */
  uint32_t ATOFF;                                  /**< Timer Offset Register, offset: 0x408 */
  uint32_t ATPER;                                  /**< Timer Period Register, offset: 0x40C */
  uint32_t ATCOR;                                  /**< Timer Correction Register, offset: 0x410 */
  uint32_t ATINC;                                  /**< Time-Stamping Clock Period Register, offset: 0x414 */
  uint32_t ATSTMP;                                 /**< Timestamp of Last Transmitted Frame, offset: 0x418 */
  uint8_t RESERVED_16[488];
  uint32_t TGSR;                                   /**< Timer Global Status Register, offset: 0x604 */
  struct {                                         /* offset: 0x608, array step: 0x8 */
    uint32_t TCSR;                                   /**< Timer Control Status Register, array offset: 0x608, array step: 0x8 */
    uint32_t TCCR;                                   /**< Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 */
  } CHANNEL[4];
} volatile *ENET_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ENET - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ENET_Register_Accessor_Macros ENET - Register accessor macros
 * @{
 */


/* ENET - Register accessors */
#define ENET_EIR_REG(base)                       ((base)->EIR)
#define ENET_EIMR_REG(base)                      ((base)->EIMR)
#define ENET_RDAR_REG(base)                      ((base)->RDAR)
#define ENET_TDAR_REG(base)                      ((base)->TDAR)
#define ENET_ECR_REG(base)                       ((base)->ECR)
#define ENET_MMFR_REG(base)                      ((base)->MMFR)
#define ENET_MSCR_REG(base)                      ((base)->MSCR)
#define ENET_MIBC_REG(base)                      ((base)->MIBC)
#define ENET_RCR_REG(base)                       ((base)->RCR)
#define ENET_TCR_REG(base)                       ((base)->TCR)
#define ENET_PALR_REG(base)                      ((base)->PALR)
#define ENET_PAUR_REG(base)                      ((base)->PAUR)
#define ENET_OPD_REG(base)                       ((base)->OPD)
#define ENET_IAUR_REG(base)                      ((base)->IAUR)
#define ENET_IALR_REG(base)                      ((base)->IALR)
#define ENET_GAUR_REG(base)                      ((base)->GAUR)
#define ENET_GALR_REG(base)                      ((base)->GALR)
#define ENET_TFWR_REG(base)                      ((base)->TFWR)
#define ENET_RDSR_REG(base)                      ((base)->RDSR)
#define ENET_TDSR_REG(base)                      ((base)->TDSR)
#define ENET_MRBR_REG(base)                      ((base)->MRBR)
#define ENET_RSFL_REG(base)                      ((base)->RSFL)
#define ENET_RSEM_REG(base)                      ((base)->RSEM)
#define ENET_RAEM_REG(base)                      ((base)->RAEM)
#define ENET_RAFL_REG(base)                      ((base)->RAFL)
#define ENET_TSEM_REG(base)                      ((base)->TSEM)
#define ENET_TAEM_REG(base)                      ((base)->TAEM)
#define ENET_TAFL_REG(base)                      ((base)->TAFL)
#define ENET_TIPG_REG(base)                      ((base)->TIPG)
#define ENET_FTRL_REG(base)                      ((base)->FTRL)
#define ENET_TACC_REG(base)                      ((base)->TACC)
#define ENET_RACC_REG(base)                      ((base)->RACC)
#define ENET_RMON_T_DROP_REG(base)               ((base)->RMON_T_DROP)
#define ENET_RMON_T_PACKETS_REG(base)            ((base)->RMON_T_PACKETS)
#define ENET_RMON_T_BC_PKT_REG(base)             ((base)->RMON_T_BC_PKT)
#define ENET_RMON_T_MC_PKT_REG(base)             ((base)->RMON_T_MC_PKT)
#define ENET_RMON_T_CRC_ALIGN_REG(base)          ((base)->RMON_T_CRC_ALIGN)
#define ENET_RMON_T_UNDERSIZE_REG(base)          ((base)->RMON_T_UNDERSIZE)
#define ENET_RMON_T_OVERSIZE_REG(base)           ((base)->RMON_T_OVERSIZE)
#define ENET_RMON_T_FRAG_REG(base)               ((base)->RMON_T_FRAG)
#define ENET_RMON_T_JAB_REG(base)                ((base)->RMON_T_JAB)
#define ENET_RMON_T_COL_REG(base)                ((base)->RMON_T_COL)
#define ENET_RMON_T_P64_REG(base)                ((base)->RMON_T_P64)
#define ENET_RMON_T_P65TO127_REG(base)           ((base)->RMON_T_P65TO127)
#define ENET_RMON_T_P128TO255_REG(base)          ((base)->RMON_T_P128TO255)
#define ENET_RMON_T_P256TO511_REG(base)          ((base)->RMON_T_P256TO511)
#define ENET_RMON_T_P512TO1023_REG(base)         ((base)->RMON_T_P512TO1023)
#define ENET_RMON_T_P1024TO2047_REG(base)        ((base)->RMON_T_P1024TO2047)
#define ENET_RMON_T_P_GTE2048_REG(base)          ((base)->RMON_T_P_GTE2048)
#define ENET_RMON_T_OCTETS_REG(base)             ((base)->RMON_T_OCTETS)
#define ENET_IEEE_T_DROP_REG(base)               ((base)->IEEE_T_DROP)
#define ENET_IEEE_T_FRAME_OK_REG(base)           ((base)->IEEE_T_FRAME_OK)
#define ENET_IEEE_T_1COL_REG(base)               ((base)->IEEE_T_1COL)
#define ENET_IEEE_T_MCOL_REG(base)               ((base)->IEEE_T_MCOL)
#define ENET_IEEE_T_DEF_REG(base)                ((base)->IEEE_T_DEF)
#define ENET_IEEE_T_LCOL_REG(base)               ((base)->IEEE_T_LCOL)
#define ENET_IEEE_T_EXCOL_REG(base)              ((base)->IEEE_T_EXCOL)
#define ENET_IEEE_T_MACERR_REG(base)             ((base)->IEEE_T_MACERR)
#define ENET_IEEE_T_CSERR_REG(base)              ((base)->IEEE_T_CSERR)
#define ENET_IEEE_T_SQE_REG(base)                ((base)->IEEE_T_SQE)
#define ENET_IEEE_T_FDXFC_REG(base)              ((base)->IEEE_T_FDXFC)
#define ENET_IEEE_T_OCTETS_OK_REG(base)          ((base)->IEEE_T_OCTETS_OK)
#define ENET_RMON_R_PACKETS_REG(base)            ((base)->RMON_R_PACKETS)
#define ENET_RMON_R_BC_PKT_REG(base)             ((base)->RMON_R_BC_PKT)
#define ENET_RMON_R_MC_PKT_REG(base)             ((base)->RMON_R_MC_PKT)
#define ENET_RMON_R_CRC_ALIGN_REG(base)          ((base)->RMON_R_CRC_ALIGN)
#define ENET_RMON_R_UNDERSIZE_REG(base)          ((base)->RMON_R_UNDERSIZE)
#define ENET_RMON_R_OVERSIZE_REG(base)           ((base)->RMON_R_OVERSIZE)
#define ENET_RMON_R_FRAG_REG(base)               ((base)->RMON_R_FRAG)
#define ENET_RMON_R_JAB_REG(base)                ((base)->RMON_R_JAB)
#define ENET_RMON_R_RESVD_0_REG(base)            ((base)->RMON_R_RESVD_0)
#define ENET_RMON_R_P64_REG(base)                ((base)->RMON_R_P64)
#define ENET_RMON_R_P65TO127_REG(base)           ((base)->RMON_R_P65TO127)
#define ENET_RMON_R_P128TO255_REG(base)          ((base)->RMON_R_P128TO255)
#define ENET_RMON_R_P256TO511_REG(base)          ((base)->RMON_R_P256TO511)
#define ENET_RMON_R_P512TO1023_REG(base)         ((base)->RMON_R_P512TO1023)
#define ENET_RMON_R_P1024TO2047_REG(base)        ((base)->RMON_R_P1024TO2047)
#define ENET_RMON_R_P_GTE2048_REG(base)          ((base)->RMON_R_P_GTE2048)
#define ENET_RMON_R_OCTETS_REG(base)             ((base)->RMON_R_OCTETS)
#define ENET_RMON_R_DROP_REG(base)               ((base)->RMON_R_DROP)
#define ENET_RMON_R_FRAME_OK_REG(base)           ((base)->RMON_R_FRAME_OK)
#define ENET_IEEE_R_CRC_REG(base)                ((base)->IEEE_R_CRC)
#define ENET_IEEE_R_ALIGN_REG(base)              ((base)->IEEE_R_ALIGN)
#define ENET_IEEE_R_MACERR_REG(base)             ((base)->IEEE_R_MACERR)
#define ENET_IEEE_R_FDXFC_REG(base)              ((base)->IEEE_R_FDXFC)
#define ENET_IEEE_R_OCTETS_OK_REG(base)          ((base)->IEEE_R_OCTETS_OK)
#define ENET_ATCR_REG(base)                      ((base)->ATCR)
#define ENET_ATVR_REG(base)                      ((base)->ATVR)
#define ENET_ATOFF_REG(base)                     ((base)->ATOFF)
#define ENET_ATPER_REG(base)                     ((base)->ATPER)
#define ENET_ATCOR_REG(base)                     ((base)->ATCOR)
#define ENET_ATINC_REG(base)                     ((base)->ATINC)
#define ENET_ATSTMP_REG(base)                    ((base)->ATSTMP)
#define ENET_TGSR_REG(base)                      ((base)->TGSR)
#define ENET_TCSR_REG(base,index)                ((base)->CHANNEL[index].TCSR)
#define ENET_TCCR_REG(base,index)                ((base)->CHANNEL[index].TCCR)

/**
 * @}
 */ /* end of group ENET_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ENET Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ENET_Register_Masks ENET Register Masks
 * @{
 */

/* EIR Bit Fields */
#define ENET_EIR_TS_TIMER_MASK                   0x8000u
#define ENET_EIR_TS_TIMER_SHIFT                  15
#define ENET_EIR_TS_AVAIL_MASK                   0x10000u
#define ENET_EIR_TS_AVAIL_SHIFT                  16
#define ENET_EIR_WAKEUP_MASK                     0x20000u
#define ENET_EIR_WAKEUP_SHIFT                    17
#define ENET_EIR_PLR_MASK                        0x40000u
#define ENET_EIR_PLR_SHIFT                       18
#define ENET_EIR_UN_MASK                         0x80000u
#define ENET_EIR_UN_SHIFT                        19
#define ENET_EIR_RL_MASK                         0x100000u
#define ENET_EIR_RL_SHIFT                        20
#define ENET_EIR_LC_MASK                         0x200000u
#define ENET_EIR_LC_SHIFT                        21
#define ENET_EIR_EBERR_MASK                      0x400000u
#define ENET_EIR_EBERR_SHIFT                     22
#define ENET_EIR_MII_MASK                        0x800000u
#define ENET_EIR_MII_SHIFT                       23
#define ENET_EIR_RXB_MASK                        0x1000000u
#define ENET_EIR_RXB_SHIFT                       24
#define ENET_EIR_RXF_MASK                        0x2000000u
#define ENET_EIR_RXF_SHIFT                       25
#define ENET_EIR_TXB_MASK                        0x4000000u
#define ENET_EIR_TXB_SHIFT                       26
#define ENET_EIR_TXF_MASK                        0x8000000u
#define ENET_EIR_TXF_SHIFT                       27
#define ENET_EIR_GRA_MASK                        0x10000000u
#define ENET_EIR_GRA_SHIFT                       28
#define ENET_EIR_BABT_MASK                       0x20000000u
#define ENET_EIR_BABT_SHIFT                      29
#define ENET_EIR_BABR_MASK                       0x40000000u
#define ENET_EIR_BABR_SHIFT                      30
/* EIMR Bit Fields */
#define ENET_EIMR_TS_TIMER_MASK                  0x8000u
#define ENET_EIMR_TS_TIMER_SHIFT                 15
#define ENET_EIMR_TS_AVAIL_MASK                  0x10000u
#define ENET_EIMR_TS_AVAIL_SHIFT                 16
#define ENET_EIMR_WAKEUP_MASK                    0x20000u
#define ENET_EIMR_WAKEUP_SHIFT                   17
#define ENET_EIMR_PLR_MASK                       0x40000u
#define ENET_EIMR_PLR_SHIFT                      18
#define ENET_EIMR_UN_MASK                        0x80000u
#define ENET_EIMR_UN_SHIFT                       19
#define ENET_EIMR_RL_MASK                        0x100000u
#define ENET_EIMR_RL_SHIFT                       20
#define ENET_EIMR_LC_MASK                        0x200000u
#define ENET_EIMR_LC_SHIFT                       21
#define ENET_EIMR_EBERR_MASK                     0x400000u
#define ENET_EIMR_EBERR_SHIFT                    22
#define ENET_EIMR_MII_MASK                       0x800000u
#define ENET_EIMR_MII_SHIFT                      23
#define ENET_EIMR_RXB_MASK                       0x1000000u
#define ENET_EIMR_RXB_SHIFT                      24
#define ENET_EIMR_RXF_MASK                       0x2000000u
#define ENET_EIMR_RXF_SHIFT                      25
#define ENET_EIMR_TXB_MASK                       0x4000000u
#define ENET_EIMR_TXB_SHIFT                      26
#define ENET_EIMR_TXF_MASK                       0x8000000u
#define ENET_EIMR_TXF_SHIFT                      27
#define ENET_EIMR_GRA_MASK                       0x10000000u
#define ENET_EIMR_GRA_SHIFT                      28
#define ENET_EIMR_BABT_MASK                      0x20000000u
#define ENET_EIMR_BABT_SHIFT                     29
#define ENET_EIMR_BABR_MASK                      0x40000000u
#define ENET_EIMR_BABR_SHIFT                     30
/* RDAR Bit Fields */
#define ENET_RDAR_RDAR_MASK                      0x1000000u
#define ENET_RDAR_RDAR_SHIFT                     24
/* TDAR Bit Fields */
#define ENET_TDAR_TDAR_MASK                      0x1000000u
#define ENET_TDAR_TDAR_SHIFT                     24
/* ECR Bit Fields */
#define ENET_ECR_RESET_MASK                      0x1u
#define ENET_ECR_RESET_SHIFT                     0
#define ENET_ECR_ETHEREN_MASK                    0x2u
#define ENET_ECR_ETHEREN_SHIFT                   1
#define ENET_ECR_MAGICEN_MASK                    0x4u
#define ENET_ECR_MAGICEN_SHIFT                   2
#define ENET_ECR_SLEEP_MASK                      0x8u
#define ENET_ECR_SLEEP_SHIFT                     3
#define ENET_ECR_EN1588_MASK                     0x10u
#define ENET_ECR_EN1588_SHIFT                    4
#define ENET_ECR_DBGEN_MASK                      0x40u
#define ENET_ECR_DBGEN_SHIFT                     6
#define ENET_ECR_STOPEN_MASK                     0x80u
#define ENET_ECR_STOPEN_SHIFT                    7
#define ENET_ECR_DBSWP_MASK                      0x100u
#define ENET_ECR_DBSWP_SHIFT                     8
/* MMFR Bit Fields */
#define ENET_MMFR_DATA_MASK                      0xFFFFu
#define ENET_MMFR_DATA_SHIFT                     0
#define ENET_MMFR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_DATA_SHIFT))&ENET_MMFR_DATA_MASK)
#define ENET_MMFR_TA_MASK                        0x30000u
#define ENET_MMFR_TA_SHIFT                       16
#define ENET_MMFR_TA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_TA_SHIFT))&ENET_MMFR_TA_MASK)
#define ENET_MMFR_RA_MASK                        0x7C0000u
#define ENET_MMFR_RA_SHIFT                       18
#define ENET_MMFR_RA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_RA_SHIFT))&ENET_MMFR_RA_MASK)
#define ENET_MMFR_PA_MASK                        0xF800000u
#define ENET_MMFR_PA_SHIFT                       23
#define ENET_MMFR_PA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_PA_SHIFT))&ENET_MMFR_PA_MASK)
#define ENET_MMFR_OP_MASK                        0x30000000u
#define ENET_MMFR_OP_SHIFT                       28
#define ENET_MMFR_OP(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_OP_SHIFT))&ENET_MMFR_OP_MASK)
#define ENET_MMFR_ST_MASK                        0xC0000000u
#define ENET_MMFR_ST_SHIFT                       30
#define ENET_MMFR_ST(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_ST_SHIFT))&ENET_MMFR_ST_MASK)
/* MSCR Bit Fields */
#define ENET_MSCR_MII_SPEED_MASK                 0x7Eu
#define ENET_MSCR_MII_SPEED_SHIFT                1
#define ENET_MSCR_MII_SPEED(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_MII_SPEED_SHIFT))&ENET_MSCR_MII_SPEED_MASK)
#define ENET_MSCR_DIS_PRE_MASK                   0x80u
#define ENET_MSCR_DIS_PRE_SHIFT                  7
#define ENET_MSCR_HOLDTIME_MASK                  0x700u
#define ENET_MSCR_HOLDTIME_SHIFT                 8
#define ENET_MSCR_HOLDTIME(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_HOLDTIME_SHIFT))&ENET_MSCR_HOLDTIME_MASK)
/* MIBC Bit Fields */
#define ENET_MIBC_MIB_CLEAR_MASK                 0x20000000u
#define ENET_MIBC_MIB_CLEAR_SHIFT                29
#define ENET_MIBC_MIB_IDLE_MASK                  0x40000000u
#define ENET_MIBC_MIB_IDLE_SHIFT                 30
#define ENET_MIBC_MIB_DIS_MASK                   0x80000000u
#define ENET_MIBC_MIB_DIS_SHIFT                  31
/* RCR Bit Fields */
#define ENET_RCR_LOOP_MASK                       0x1u
#define ENET_RCR_LOOP_SHIFT                      0
#define ENET_RCR_DRT_MASK                        0x2u
#define ENET_RCR_DRT_SHIFT                       1
#define ENET_RCR_MII_MODE_MASK                   0x4u
#define ENET_RCR_MII_MODE_SHIFT                  2
#define ENET_RCR_PROM_MASK                       0x8u
#define ENET_RCR_PROM_SHIFT                      3
#define ENET_RCR_BC_REJ_MASK                     0x10u
#define ENET_RCR_BC_REJ_SHIFT                    4
#define ENET_RCR_FCE_MASK                        0x20u
#define ENET_RCR_FCE_SHIFT                       5
#define ENET_RCR_RMII_MODE_MASK                  0x100u
#define ENET_RCR_RMII_MODE_SHIFT                 8
#define ENET_RCR_RMII_10T_MASK                   0x200u
#define ENET_RCR_RMII_10T_SHIFT                  9
#define ENET_RCR_PADEN_MASK                      0x1000u
#define ENET_RCR_PADEN_SHIFT                     12
#define ENET_RCR_PAUFWD_MASK                     0x2000u
#define ENET_RCR_PAUFWD_SHIFT                    13
#define ENET_RCR_CRCFWD_MASK                     0x4000u
#define ENET_RCR_CRCFWD_SHIFT                    14
#define ENET_RCR_CFEN_MASK                       0x8000u
#define ENET_RCR_CFEN_SHIFT                      15
#define ENET_RCR_MAX_FL_MASK                     0x3FFF0000u
#define ENET_RCR_MAX_FL_SHIFT                    16
#define ENET_RCR_MAX_FL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MAX_FL_SHIFT))&ENET_RCR_MAX_FL_MASK)
#define ENET_RCR_NLC_MASK                        0x40000000u
#define ENET_RCR_NLC_SHIFT                       30
#define ENET_RCR_GRS_MASK                        0x80000000u
#define ENET_RCR_GRS_SHIFT                       31
/* TCR Bit Fields */
#define ENET_TCR_GTS_MASK                        0x1u
#define ENET_TCR_GTS_SHIFT                       0
#define ENET_TCR_FDEN_MASK                       0x4u
#define ENET_TCR_FDEN_SHIFT                      2
#define ENET_TCR_TFC_PAUSE_MASK                  0x8u
#define ENET_TCR_TFC_PAUSE_SHIFT                 3
#define ENET_TCR_RFC_PAUSE_MASK                  0x10u
#define ENET_TCR_RFC_PAUSE_SHIFT                 4
#define ENET_TCR_ADDSEL_MASK                     0xE0u
#define ENET_TCR_ADDSEL_SHIFT                    5
#define ENET_TCR_ADDSEL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDSEL_SHIFT))&ENET_TCR_ADDSEL_MASK)
#define ENET_TCR_ADDINS_MASK                     0x100u
#define ENET_TCR_ADDINS_SHIFT                    8
#define ENET_TCR_CRCFWD_MASK                     0x200u
#define ENET_TCR_CRCFWD_SHIFT                    9
/* PALR Bit Fields */
#define ENET_PALR_PADDR1_MASK                    0xFFFFFFFFu
#define ENET_PALR_PADDR1_SHIFT                   0
#define ENET_PALR_PADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PALR_PADDR1_SHIFT))&ENET_PALR_PADDR1_MASK)
/* PAUR Bit Fields */
#define ENET_PAUR_TYPE_MASK                      0xFFFFu
#define ENET_PAUR_TYPE_SHIFT                     0
#define ENET_PAUR_TYPE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_TYPE_SHIFT))&ENET_PAUR_TYPE_MASK)
#define ENET_PAUR_PADDR2_MASK                    0xFFFF0000u
#define ENET_PAUR_PADDR2_SHIFT                   16
#define ENET_PAUR_PADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_PADDR2_SHIFT))&ENET_PAUR_PADDR2_MASK)
/* OPD Bit Fields */
#define ENET_OPD_PAUSE_DUR_MASK                  0xFFFFu
#define ENET_OPD_PAUSE_DUR_SHIFT                 0
#define ENET_OPD_PAUSE_DUR(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_OPD_PAUSE_DUR_SHIFT))&ENET_OPD_PAUSE_DUR_MASK)
#define ENET_OPD_OPCODE_MASK                     0xFFFF0000u
#define ENET_OPD_OPCODE_SHIFT                    16
#define ENET_OPD_OPCODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_OPD_OPCODE_SHIFT))&ENET_OPD_OPCODE_MASK)
/* IAUR Bit Fields */
#define ENET_IAUR_IADDR1_MASK                    0xFFFFFFFFu
#define ENET_IAUR_IADDR1_SHIFT                   0
#define ENET_IAUR_IADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IAUR_IADDR1_SHIFT))&ENET_IAUR_IADDR1_MASK)
/* IALR Bit Fields */
#define ENET_IALR_IADDR2_MASK                    0xFFFFFFFFu
#define ENET_IALR_IADDR2_SHIFT                   0
#define ENET_IALR_IADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IALR_IADDR2_SHIFT))&ENET_IALR_IADDR2_MASK)
/* GAUR Bit Fields */
#define ENET_GAUR_GADDR1_MASK                    0xFFFFFFFFu
#define ENET_GAUR_GADDR1_SHIFT                   0
#define ENET_GAUR_GADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GAUR_GADDR1_SHIFT))&ENET_GAUR_GADDR1_MASK)
/* GALR Bit Fields */
#define ENET_GALR_GADDR2_MASK                    0xFFFFFFFFu
#define ENET_GALR_GADDR2_SHIFT                   0
#define ENET_GALR_GADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GALR_GADDR2_SHIFT))&ENET_GALR_GADDR2_MASK)
/* TFWR Bit Fields */
#define ENET_TFWR_TFWR_MASK                      0x3Fu
#define ENET_TFWR_TFWR_SHIFT                     0
#define ENET_TFWR_TFWR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_TFWR_SHIFT))&ENET_TFWR_TFWR_MASK)
#define ENET_TFWR_STRFWD_MASK                    0x100u
#define ENET_TFWR_STRFWD_SHIFT                   8
/* RDSR Bit Fields */
#define ENET_RDSR_R_DES_START_MASK               0xFFFFFFF8u
#define ENET_RDSR_R_DES_START_SHIFT              3
#define ENET_RDSR_R_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RDSR_R_DES_START_SHIFT))&ENET_RDSR_R_DES_START_MASK)
/* TDSR Bit Fields */
#define ENET_TDSR_X_DES_START_MASK               0xFFFFFFF8u
#define ENET_TDSR_X_DES_START_SHIFT              3
#define ENET_TDSR_X_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_TDSR_X_DES_START_SHIFT))&ENET_TDSR_X_DES_START_MASK)
/* MRBR Bit Fields */
#define ENET_MRBR_R_BUF_SIZE_MASK                0x3FF0u
#define ENET_MRBR_R_BUF_SIZE_SHIFT               4
#define ENET_MRBR_R_BUF_SIZE(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MRBR_R_BUF_SIZE_SHIFT))&ENET_MRBR_R_BUF_SIZE_MASK)
/* RSFL Bit Fields */
#define ENET_RSFL_RX_SECTION_FULL_MASK           0xFFu
#define ENET_RSFL_RX_SECTION_FULL_SHIFT          0
#define ENET_RSFL_RX_SECTION_FULL(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RSFL_RX_SECTION_FULL_SHIFT))&ENET_RSFL_RX_SECTION_FULL_MASK)
/* RSEM Bit Fields */
#define ENET_RSEM_RX_SECTION_EMPTY_MASK          0xFFu
#define ENET_RSEM_RX_SECTION_EMPTY_SHIFT         0
#define ENET_RSEM_RX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_RX_SECTION_EMPTY_SHIFT))&ENET_RSEM_RX_SECTION_EMPTY_MASK)
/* RAEM Bit Fields */
#define ENET_RAEM_RX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_RAEM_RX_ALMOST_EMPTY_SHIFT          0
#define ENET_RAEM_RX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RAEM_RX_ALMOST_EMPTY_SHIFT))&ENET_RAEM_RX_ALMOST_EMPTY_MASK)
/* RAFL Bit Fields */
#define ENET_RAFL_RX_ALMOST_FULL_MASK            0xFFu
#define ENET_RAFL_RX_ALMOST_FULL_SHIFT           0
#define ENET_RAFL_RX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RAFL_RX_ALMOST_FULL_SHIFT))&ENET_RAFL_RX_ALMOST_FULL_MASK)
/* TSEM Bit Fields */
#define ENET_TSEM_TX_SECTION_EMPTY_MASK          0xFFu
#define ENET_TSEM_TX_SECTION_EMPTY_SHIFT         0
#define ENET_TSEM_TX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_TSEM_TX_SECTION_EMPTY_SHIFT))&ENET_TSEM_TX_SECTION_EMPTY_MASK)
/* TAEM Bit Fields */
#define ENET_TAEM_TX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_TAEM_TX_ALMOST_EMPTY_SHIFT          0
#define ENET_TAEM_TX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_TAEM_TX_ALMOST_EMPTY_SHIFT))&ENET_TAEM_TX_ALMOST_EMPTY_MASK)
/* TAFL Bit Fields */
#define ENET_TAFL_TX_ALMOST_FULL_MASK            0xFFu
#define ENET_TAFL_TX_ALMOST_FULL_SHIFT           0
#define ENET_TAFL_TX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_TAFL_TX_ALMOST_FULL_SHIFT))&ENET_TAFL_TX_ALMOST_FULL_MASK)
/* TIPG Bit Fields */
#define ENET_TIPG_IPG_MASK                       0x1Fu
#define ENET_TIPG_IPG_SHIFT                      0
#define ENET_TIPG_IPG(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TIPG_IPG_SHIFT))&ENET_TIPG_IPG_MASK)
/* FTRL Bit Fields */
#define ENET_FTRL_TRUNC_FL_MASK                  0x3FFFu
#define ENET_FTRL_TRUNC_FL_SHIFT                 0
#define ENET_FTRL_TRUNC_FL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_FTRL_TRUNC_FL_SHIFT))&ENET_FTRL_TRUNC_FL_MASK)
/* TACC Bit Fields */
#define ENET_TACC_SHIFT16_MASK                   0x1u
#define ENET_TACC_SHIFT16_SHIFT                  0
#define ENET_TACC_IPCHK_MASK                     0x8u
#define ENET_TACC_IPCHK_SHIFT                    3
#define ENET_TACC_PROCHK_MASK                    0x10u
#define ENET_TACC_PROCHK_SHIFT                   4
/* RACC Bit Fields */
#define ENET_RACC_PADREM_MASK                    0x1u
#define ENET_RACC_PADREM_SHIFT                   0
#define ENET_RACC_IPDIS_MASK                     0x2u
#define ENET_RACC_IPDIS_SHIFT                    1
#define ENET_RACC_PRODIS_MASK                    0x4u
#define ENET_RACC_PRODIS_SHIFT                   2
#define ENET_RACC_LINEDIS_MASK                   0x40u
#define ENET_RACC_LINEDIS_SHIFT                  6
#define ENET_RACC_SHIFT16_MASK                   0x80u
#define ENET_RACC_SHIFT16_SHIFT                  7
/* ATCR Bit Fields */
#define ENET_ATCR_EN_MASK                        0x1u
#define ENET_ATCR_EN_SHIFT                       0
#define ENET_ATCR_OFFEN_MASK                     0x4u
#define ENET_ATCR_OFFEN_SHIFT                    2
#define ENET_ATCR_OFFRST_MASK                    0x8u
#define ENET_ATCR_OFFRST_SHIFT                   3
#define ENET_ATCR_PEREN_MASK                     0x10u
#define ENET_ATCR_PEREN_SHIFT                    4
#define ENET_ATCR_PINPER_MASK                    0x80u
#define ENET_ATCR_PINPER_SHIFT                   7
#define ENET_ATCR_RESTART_MASK                   0x200u
#define ENET_ATCR_RESTART_SHIFT                  9
#define ENET_ATCR_CAPTURE_MASK                   0x800u
#define ENET_ATCR_CAPTURE_SHIFT                  11
#define ENET_ATCR_SLAVE_MASK                     0x2000u
#define ENET_ATCR_SLAVE_SHIFT                    13
/* ATVR Bit Fields */
#define ENET_ATVR_ATIME_MASK                     0xFFFFFFFFu
#define ENET_ATVR_ATIME_SHIFT                    0
#define ENET_ATVR_ATIME(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATVR_ATIME_SHIFT))&ENET_ATVR_ATIME_MASK)
/* ATOFF Bit Fields */
#define ENET_ATOFF_OFFSET_MASK                   0xFFFFFFFFu
#define ENET_ATOFF_OFFSET_SHIFT                  0
#define ENET_ATOFF_OFFSET(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATOFF_OFFSET_SHIFT))&ENET_ATOFF_OFFSET_MASK)
/* ATPER Bit Fields */
#define ENET_ATPER_PERIOD_MASK                   0xFFFFFFFFu
#define ENET_ATPER_PERIOD_SHIFT                  0
#define ENET_ATPER_PERIOD(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATPER_PERIOD_SHIFT))&ENET_ATPER_PERIOD_MASK)
/* ATCOR Bit Fields */
#define ENET_ATCOR_COR_MASK                      0x7FFFFFFFu
#define ENET_ATCOR_COR_SHIFT                     0
#define ENET_ATCOR_COR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATCOR_COR_SHIFT))&ENET_ATCOR_COR_MASK)
/* ATINC Bit Fields */
#define ENET_ATINC_INC_MASK                      0x7Fu
#define ENET_ATINC_INC_SHIFT                     0
#define ENET_ATINC_INC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_SHIFT))&ENET_ATINC_INC_MASK)
#define ENET_ATINC_INC_CORR_MASK                 0x7F00u
#define ENET_ATINC_INC_CORR_SHIFT                8
#define ENET_ATINC_INC_CORR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_CORR_SHIFT))&ENET_ATINC_INC_CORR_MASK)
/* ATSTMP Bit Fields */
#define ENET_ATSTMP_TIMESTAMP_MASK               0xFFFFFFFFu
#define ENET_ATSTMP_TIMESTAMP_SHIFT              0
#define ENET_ATSTMP_TIMESTAMP(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_ATSTMP_TIMESTAMP_SHIFT))&ENET_ATSTMP_TIMESTAMP_MASK)
/* TGSR Bit Fields */
#define ENET_TGSR_TF0_MASK                       0x1u
#define ENET_TGSR_TF0_SHIFT                      0
#define ENET_TGSR_TF1_MASK                       0x2u
#define ENET_TGSR_TF1_SHIFT                      1
#define ENET_TGSR_TF2_MASK                       0x4u
#define ENET_TGSR_TF2_SHIFT                      2
#define ENET_TGSR_TF3_MASK                       0x8u
#define ENET_TGSR_TF3_SHIFT                      3
/* TCSR Bit Fields */
#define ENET_TCSR_TDRE_MASK                      0x1u
#define ENET_TCSR_TDRE_SHIFT                     0
#define ENET_TCSR_TMODE_MASK                     0x3Cu
#define ENET_TCSR_TMODE_SHIFT                    2
#define ENET_TCSR_TMODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TMODE_SHIFT))&ENET_TCSR_TMODE_MASK)
#define ENET_TCSR_TIE_MASK                       0x40u
#define ENET_TCSR_TIE_SHIFT                      6
#define ENET_TCSR_TF_MASK                        0x80u
#define ENET_TCSR_TF_SHIFT                       7
/* TCCR Bit Fields */
#define ENET_TCCR_TCC_MASK                       0xFFFFFFFFu
#define ENET_TCCR_TCC_SHIFT                      0
#define ENET_TCCR_TCC(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCCR_TCC_SHIFT))&ENET_TCCR_TCC_MASK)

/**
 * @}
 */ /* end of group ENET_Register_Masks */


/* ENET - Peripheral instance base addresses */
/** Peripheral ENET0 base pointer */
#define ENET0_BASE_PTR                           ((ENET_MemMapPtr)0x400D0000u)
/** Peripheral ENET1 base pointer */
#define ENET1_BASE_PTR                           ((ENET_MemMapPtr)0x400D1000u)
/** Array initializer of ENET peripheral base pointers */
#define ENET_BASE_PTRS                           { ENET0_BASE_PTR, ENET1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- ENET - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ENET_Register_Accessor_Macros ENET - Register accessor macros
 * @{
 */


/* ENET - Register instance definitions */
/* ENET0 */
#define ENET0_EIR                                ENET_EIR_REG(ENET0_BASE_PTR)
#define ENET0_EIMR                               ENET_EIMR_REG(ENET0_BASE_PTR)
#define ENET0_RDAR                               ENET_RDAR_REG(ENET0_BASE_PTR)
#define ENET0_TDAR                               ENET_TDAR_REG(ENET0_BASE_PTR)
#define ENET0_ECR                                ENET_ECR_REG(ENET0_BASE_PTR)
#define ENET0_MMFR                               ENET_MMFR_REG(ENET0_BASE_PTR)
#define ENET0_MSCR                               ENET_MSCR_REG(ENET0_BASE_PTR)
#define ENET0_MIBC                               ENET_MIBC_REG(ENET0_BASE_PTR)
#define ENET0_RCR                                ENET_RCR_REG(ENET0_BASE_PTR)
#define ENET0_TCR                                ENET_TCR_REG(ENET0_BASE_PTR)
#define ENET0_PALR                               ENET_PALR_REG(ENET0_BASE_PTR)
#define ENET0_PAUR                               ENET_PAUR_REG(ENET0_BASE_PTR)
#define ENET0_OPD                                ENET_OPD_REG(ENET0_BASE_PTR)
#define ENET0_IAUR                               ENET_IAUR_REG(ENET0_BASE_PTR)
#define ENET0_IALR                               ENET_IALR_REG(ENET0_BASE_PTR)
#define ENET0_GAUR                               ENET_GAUR_REG(ENET0_BASE_PTR)
#define ENET0_GALR                               ENET_GALR_REG(ENET0_BASE_PTR)
#define ENET0_TFWR                               ENET_TFWR_REG(ENET0_BASE_PTR)
#define ENET0_RDSR                               ENET_RDSR_REG(ENET0_BASE_PTR)
#define ENET0_TDSR                               ENET_TDSR_REG(ENET0_BASE_PTR)
#define ENET0_MRBR                               ENET_MRBR_REG(ENET0_BASE_PTR)
#define ENET0_RSFL                               ENET_RSFL_REG(ENET0_BASE_PTR)
#define ENET0_RSEM                               ENET_RSEM_REG(ENET0_BASE_PTR)
#define ENET0_RAEM                               ENET_RAEM_REG(ENET0_BASE_PTR)
#define ENET0_RAFL                               ENET_RAFL_REG(ENET0_BASE_PTR)
#define ENET0_TSEM                               ENET_TSEM_REG(ENET0_BASE_PTR)
#define ENET0_TAEM                               ENET_TAEM_REG(ENET0_BASE_PTR)
#define ENET0_TAFL                               ENET_TAFL_REG(ENET0_BASE_PTR)
#define ENET0_TIPG                               ENET_TIPG_REG(ENET0_BASE_PTR)
#define ENET0_FTRL                               ENET_FTRL_REG(ENET0_BASE_PTR)
#define ENET0_TACC                               ENET_TACC_REG(ENET0_BASE_PTR)
#define ENET0_RACC                               ENET_RACC_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_DROP                        ENET_RMON_T_DROP_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_PACKETS                     ENET_RMON_T_PACKETS_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_BC_PKT                      ENET_RMON_T_BC_PKT_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_MC_PKT                      ENET_RMON_T_MC_PKT_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_CRC_ALIGN                   ENET_RMON_T_CRC_ALIGN_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_UNDERSIZE                   ENET_RMON_T_UNDERSIZE_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_OVERSIZE                    ENET_RMON_T_OVERSIZE_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_FRAG                        ENET_RMON_T_FRAG_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_JAB                         ENET_RMON_T_JAB_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_COL                         ENET_RMON_T_COL_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P64                         ENET_RMON_T_P64_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P65TO127                    ENET_RMON_T_P65TO127_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P128TO255                   ENET_RMON_T_P128TO255_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P256TO511                   ENET_RMON_T_P256TO511_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P512TO1023                  ENET_RMON_T_P512TO1023_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P1024TO2047                 ENET_RMON_T_P1024TO2047_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_P_GTE2048                   ENET_RMON_T_P_GTE2048_REG(ENET0_BASE_PTR)
#define ENET0_RMON_T_OCTETS                      ENET_RMON_T_OCTETS_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_DROP                        ENET_IEEE_T_DROP_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_FRAME_OK                    ENET_IEEE_T_FRAME_OK_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_1COL                        ENET_IEEE_T_1COL_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_MCOL                        ENET_IEEE_T_MCOL_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_DEF                         ENET_IEEE_T_DEF_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_LCOL                        ENET_IEEE_T_LCOL_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_EXCOL                       ENET_IEEE_T_EXCOL_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_MACERR                      ENET_IEEE_T_MACERR_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_CSERR                       ENET_IEEE_T_CSERR_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_SQE                         ENET_IEEE_T_SQE_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_FDXFC                       ENET_IEEE_T_FDXFC_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_T_OCTETS_OK                   ENET_IEEE_T_OCTETS_OK_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_PACKETS                     ENET_RMON_R_PACKETS_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_BC_PKT                      ENET_RMON_R_BC_PKT_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_MC_PKT                      ENET_RMON_R_MC_PKT_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_CRC_ALIGN                   ENET_RMON_R_CRC_ALIGN_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_UNDERSIZE                   ENET_RMON_R_UNDERSIZE_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_OVERSIZE                    ENET_RMON_R_OVERSIZE_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_FRAG                        ENET_RMON_R_FRAG_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_JAB                         ENET_RMON_R_JAB_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_RESVD_0                     ENET_RMON_R_RESVD_0_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P64                         ENET_RMON_R_P64_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P65TO127                    ENET_RMON_R_P65TO127_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P128TO255                   ENET_RMON_R_P128TO255_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P256TO511                   ENET_RMON_R_P256TO511_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P512TO1023                  ENET_RMON_R_P512TO1023_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P1024TO2047                 ENET_RMON_R_P1024TO2047_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_P_GTE2048                   ENET_RMON_R_P_GTE2048_REG(ENET0_BASE_PTR)
#define ENET0_RMON_R_OCTETS                      ENET_RMON_R_OCTETS_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_DROP                        ENET_RMON_R_DROP_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_FRAME_OK                    ENET_RMON_R_FRAME_OK_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_CRC                         ENET_IEEE_R_CRC_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_ALIGN                       ENET_IEEE_R_ALIGN_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_MACERR                      ENET_IEEE_R_MACERR_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_FDXFC                       ENET_IEEE_R_FDXFC_REG(ENET0_BASE_PTR)
#define ENET0_IEEE_R_OCTETS_OK                   ENET_IEEE_R_OCTETS_OK_REG(ENET0_BASE_PTR)
#define ENET0_ATCR                               ENET_ATCR_REG(ENET0_BASE_PTR)
#define ENET0_ATVR                               ENET_ATVR_REG(ENET0_BASE_PTR)
#define ENET0_ATOFF                              ENET_ATOFF_REG(ENET0_BASE_PTR)
#define ENET0_ATPER                              ENET_ATPER_REG(ENET0_BASE_PTR)
#define ENET0_ATCOR                              ENET_ATCOR_REG(ENET0_BASE_PTR)
#define ENET0_ATINC                              ENET_ATINC_REG(ENET0_BASE_PTR)
#define ENET0_ATSTMP                             ENET_ATSTMP_REG(ENET0_BASE_PTR)
#define ENET0_TGSR                               ENET_TGSR_REG(ENET0_BASE_PTR)
#define ENET0_TCSR0                              ENET_TCSR_REG(ENET0_BASE_PTR,0)
#define ENET0_TCCR0                              ENET_TCCR_REG(ENET0_BASE_PTR,0)
#define ENET0_TCSR1                              ENET_TCSR_REG(ENET0_BASE_PTR,1)
#define ENET0_TCCR1                              ENET_TCCR_REG(ENET0_BASE_PTR,1)
#define ENET0_TCSR2                              ENET_TCSR_REG(ENET0_BASE_PTR,2)
#define ENET0_TCCR2                              ENET_TCCR_REG(ENET0_BASE_PTR,2)
#define ENET0_TCSR3                              ENET_TCSR_REG(ENET0_BASE_PTR,3)
#define ENET0_TCCR3                              ENET_TCCR_REG(ENET0_BASE_PTR,3)
/* ENET1 */
#define ENET1_EIR                                ENET_EIR_REG(ENET1_BASE_PTR)
#define ENET1_EIMR                               ENET_EIMR_REG(ENET1_BASE_PTR)
#define ENET1_RDAR                               ENET_RDAR_REG(ENET1_BASE_PTR)
#define ENET1_TDAR                               ENET_TDAR_REG(ENET1_BASE_PTR)
#define ENET1_ECR                                ENET_ECR_REG(ENET1_BASE_PTR)
#define ENET1_MMFR                               ENET_MMFR_REG(ENET1_BASE_PTR)
#define ENET1_MSCR                               ENET_MSCR_REG(ENET1_BASE_PTR)
#define ENET1_MIBC                               ENET_MIBC_REG(ENET1_BASE_PTR)
#define ENET1_RCR                                ENET_RCR_REG(ENET1_BASE_PTR)
#define ENET1_TCR                                ENET_TCR_REG(ENET1_BASE_PTR)
#define ENET1_PALR                               ENET_PALR_REG(ENET1_BASE_PTR)
#define ENET1_PAUR                               ENET_PAUR_REG(ENET1_BASE_PTR)
#define ENET1_OPD                                ENET_OPD_REG(ENET1_BASE_PTR)
#define ENET1_IAUR                               ENET_IAUR_REG(ENET1_BASE_PTR)
#define ENET1_IALR                               ENET_IALR_REG(ENET1_BASE_PTR)
#define ENET1_GAUR                               ENET_GAUR_REG(ENET1_BASE_PTR)
#define ENET1_GALR                               ENET_GALR_REG(ENET1_BASE_PTR)
#define ENET1_TFWR                               ENET_TFWR_REG(ENET1_BASE_PTR)
#define ENET1_RDSR                               ENET_RDSR_REG(ENET1_BASE_PTR)
#define ENET1_TDSR                               ENET_TDSR_REG(ENET1_BASE_PTR)
#define ENET1_MRBR                               ENET_MRBR_REG(ENET1_BASE_PTR)
#define ENET1_RSFL                               ENET_RSFL_REG(ENET1_BASE_PTR)
#define ENET1_RSEM                               ENET_RSEM_REG(ENET1_BASE_PTR)
#define ENET1_RAEM                               ENET_RAEM_REG(ENET1_BASE_PTR)
#define ENET1_RAFL                               ENET_RAFL_REG(ENET1_BASE_PTR)
#define ENET1_TSEM                               ENET_TSEM_REG(ENET1_BASE_PTR)
#define ENET1_TAEM                               ENET_TAEM_REG(ENET1_BASE_PTR)
#define ENET1_TAFL                               ENET_TAFL_REG(ENET1_BASE_PTR)
#define ENET1_TIPG                               ENET_TIPG_REG(ENET1_BASE_PTR)
#define ENET1_FTRL                               ENET_FTRL_REG(ENET1_BASE_PTR)
#define ENET1_TACC                               ENET_TACC_REG(ENET1_BASE_PTR)
#define ENET1_RACC                               ENET_RACC_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_DROP                        ENET_RMON_T_DROP_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_PACKETS                     ENET_RMON_T_PACKETS_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_BC_PKT                      ENET_RMON_T_BC_PKT_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_MC_PKT                      ENET_RMON_T_MC_PKT_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_CRC_ALIGN                   ENET_RMON_T_CRC_ALIGN_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_UNDERSIZE                   ENET_RMON_T_UNDERSIZE_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_OVERSIZE                    ENET_RMON_T_OVERSIZE_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_FRAG                        ENET_RMON_T_FRAG_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_JAB                         ENET_RMON_T_JAB_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_COL                         ENET_RMON_T_COL_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P64                         ENET_RMON_T_P64_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P65TO127                    ENET_RMON_T_P65TO127_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P128TO255                   ENET_RMON_T_P128TO255_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P256TO511                   ENET_RMON_T_P256TO511_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P512TO1023                  ENET_RMON_T_P512TO1023_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P1024TO2047                 ENET_RMON_T_P1024TO2047_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_P_GTE2048                   ENET_RMON_T_P_GTE2048_REG(ENET1_BASE_PTR)
#define ENET1_RMON_T_OCTETS                      ENET_RMON_T_OCTETS_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_DROP                        ENET_IEEE_T_DROP_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_FRAME_OK                    ENET_IEEE_T_FRAME_OK_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_1COL                        ENET_IEEE_T_1COL_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_MCOL                        ENET_IEEE_T_MCOL_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_DEF                         ENET_IEEE_T_DEF_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_LCOL                        ENET_IEEE_T_LCOL_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_EXCOL                       ENET_IEEE_T_EXCOL_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_MACERR                      ENET_IEEE_T_MACERR_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_CSERR                       ENET_IEEE_T_CSERR_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_SQE                         ENET_IEEE_T_SQE_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_FDXFC                       ENET_IEEE_T_FDXFC_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_T_OCTETS_OK                   ENET_IEEE_T_OCTETS_OK_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_PACKETS                     ENET_RMON_R_PACKETS_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_BC_PKT                      ENET_RMON_R_BC_PKT_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_MC_PKT                      ENET_RMON_R_MC_PKT_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_CRC_ALIGN                   ENET_RMON_R_CRC_ALIGN_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_UNDERSIZE                   ENET_RMON_R_UNDERSIZE_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_OVERSIZE                    ENET_RMON_R_OVERSIZE_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_FRAG                        ENET_RMON_R_FRAG_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_JAB                         ENET_RMON_R_JAB_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_RESVD_0                     ENET_RMON_R_RESVD_0_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P64                         ENET_RMON_R_P64_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P65TO127                    ENET_RMON_R_P65TO127_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P128TO255                   ENET_RMON_R_P128TO255_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P256TO511                   ENET_RMON_R_P256TO511_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P512TO1023                  ENET_RMON_R_P512TO1023_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P1024TO2047                 ENET_RMON_R_P1024TO2047_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_P_GTE2048                   ENET_RMON_R_P_GTE2048_REG(ENET1_BASE_PTR)
#define ENET1_RMON_R_OCTETS                      ENET_RMON_R_OCTETS_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_DROP                        ENET_RMON_R_DROP_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_FRAME_OK                    ENET_RMON_R_FRAME_OK_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_CRC                         ENET_IEEE_R_CRC_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_ALIGN                       ENET_IEEE_R_ALIGN_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_MACERR                      ENET_IEEE_R_MACERR_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_FDXFC                       ENET_IEEE_R_FDXFC_REG(ENET1_BASE_PTR)
#define ENET1_IEEE_R_OCTETS_OK                   ENET_IEEE_R_OCTETS_OK_REG(ENET1_BASE_PTR)
#define ENET1_ATCR                               ENET_ATCR_REG(ENET1_BASE_PTR)
#define ENET1_ATVR                               ENET_ATVR_REG(ENET1_BASE_PTR)
#define ENET1_ATOFF                              ENET_ATOFF_REG(ENET1_BASE_PTR)
#define ENET1_ATPER                              ENET_ATPER_REG(ENET1_BASE_PTR)
#define ENET1_ATCOR                              ENET_ATCOR_REG(ENET1_BASE_PTR)
#define ENET1_ATINC                              ENET_ATINC_REG(ENET1_BASE_PTR)
#define ENET1_ATSTMP                             ENET_ATSTMP_REG(ENET1_BASE_PTR)
#define ENET1_TGSR                               ENET_TGSR_REG(ENET1_BASE_PTR)
#define ENET1_TCSR0                              ENET_TCSR_REG(ENET1_BASE_PTR,0)
#define ENET1_TCCR0                              ENET_TCCR_REG(ENET1_BASE_PTR,0)
#define ENET1_TCSR1                              ENET_TCSR_REG(ENET1_BASE_PTR,1)
#define ENET1_TCCR1                              ENET_TCCR_REG(ENET1_BASE_PTR,1)
#define ENET1_TCSR2                              ENET_TCSR_REG(ENET1_BASE_PTR,2)
#define ENET1_TCCR2                              ENET_TCCR_REG(ENET1_BASE_PTR,2)
#define ENET1_TCSR3                              ENET_TCSR_REG(ENET1_BASE_PTR,3)
#define ENET1_TCCR3                              ENET_TCCR_REG(ENET1_BASE_PTR,3)

/* ENET - Register array accessors */
#define ENET0_TCSR(index)                        ENET_TCSR_REG(ENET0_BASE_PTR,index)
#define ENET1_TCSR(index)                        ENET_TCSR_REG(ENET1_BASE_PTR,index)
#define ENET0_TCCR(index)                        ENET_TCCR_REG(ENET0_BASE_PTR,index)
#define ENET1_TCCR(index)                        ENET_TCCR_REG(ENET1_BASE_PTR,index)

/**
 * @}
 */ /* end of group ENET_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group ENET_Peripheral */


/* ----------------------------------------------------------------------------
   -- ESAI
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESAI_Peripheral ESAI
 * @{
 */

/** ESAI - Peripheral register structure */
typedef struct ESAI_MemMap {
  uint32_t ETDR;                                   /**< ESAI Transmit Data Register, offset: 0x0 */
  uint32_t ERDR;                                   /**< ESAI Receive Data Register, offset: 0x4 */
  uint32_t ECR;                                    /**< ESAI Control Register, offset: 0x8 */
  uint32_t ESR;                                    /**< ESAI Status Register, offset: 0xC */
  uint32_t TFCR;                                   /**< Transmit FIFO Configuration Register, offset: 0x10 */
  uint32_t TFSR;                                   /**< Transmit FIFO Status Register, offset: 0x14 */
  uint32_t RFCR;                                   /**< Receive FIFO Configuration Register, offset: 0x18 */
  uint32_t RFSR;                                   /**< Receive FIFO Status Register, offset: 0x1C */
  uint8_t RESERVED_0[96];
  uint32_t TX[6];                                  /**< Transmit Data Register n, array offset: 0x80, array step: 0x4 */
  uint32_t TSR;                                    /**< ESAI Transmit Slot Register, offset: 0x98 */
  uint8_t RESERVED_1[4];
  uint32_t RX[4];                                  /**< Receive Data Register n, array offset: 0xA0, array step: 0x4 */
  uint8_t RESERVED_2[28];
  uint32_t SAISR;                                  /**< Serial Audio Interface Status Register, offset: 0xCC */
  uint32_t SAICR;                                  /**< Serial Audio Interface Control Register, offset: 0xD0 */
  uint32_t TCR;                                    /**< Transmit Control Register, offset: 0xD4 */
  uint32_t TCCR;                                   /**< Transmit Clock Control Register, offset: 0xD8 */
  uint32_t RCR;                                    /**< Receive Control Register, offset: 0xDC */
  uint32_t RCCR;                                   /**< Receive Clock Control Register, offset: 0xE0 */
  uint32_t TSMA;                                   /**< Transmit Slot Mask Register A, offset: 0xE4 */
  uint32_t TSMB;                                   /**< Transmit Slot Mask Register B, offset: 0xE8 */
  uint32_t RSMA;                                   /**< Receive Slot Mask Register A, offset: 0xEC */
  uint32_t RSMB;                                   /**< Receive Slot Mask Register B, offset: 0xF0 */
  uint8_t RESERVED_3[4];
  uint32_t PRRC;                                   /**< Port C Direction Register, offset: 0xF8 */
  uint32_t PCRC;                                   /**< Port C Control Register, offset: 0xFC */
} volatile *ESAI_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ESAI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESAI_Register_Accessor_Macros ESAI - Register accessor macros
 * @{
 */


/* ESAI - Register accessors */
#define ESAI_ETDR_REG(base)                      ((base)->ETDR)
#define ESAI_ERDR_REG(base)                      ((base)->ERDR)
#define ESAI_ECR_REG(base)                       ((base)->ECR)
#define ESAI_ESR_REG(base)                       ((base)->ESR)
#define ESAI_TFCR_REG(base)                      ((base)->TFCR)
#define ESAI_TFSR_REG(base)                      ((base)->TFSR)
#define ESAI_RFCR_REG(base)                      ((base)->RFCR)
#define ESAI_RFSR_REG(base)                      ((base)->RFSR)
#define ESAI_TX_REG(base,index)                  ((base)->TX[index])
#define ESAI_TSR_REG(base)                       ((base)->TSR)
#define ESAI_RX_REG(base,index)                  ((base)->RX[index])
#define ESAI_SAISR_REG(base)                     ((base)->SAISR)
#define ESAI_SAICR_REG(base)                     ((base)->SAICR)
#define ESAI_TCR_REG(base)                       ((base)->TCR)
#define ESAI_TCCR_REG(base)                      ((base)->TCCR)
#define ESAI_RCR_REG(base)                       ((base)->RCR)
#define ESAI_RCCR_REG(base)                      ((base)->RCCR)
#define ESAI_TSMA_REG(base)                      ((base)->TSMA)
#define ESAI_TSMB_REG(base)                      ((base)->TSMB)
#define ESAI_RSMA_REG(base)                      ((base)->RSMA)
#define ESAI_RSMB_REG(base)                      ((base)->RSMB)
#define ESAI_PRRC_REG(base)                      ((base)->PRRC)
#define ESAI_PCRC_REG(base)                      ((base)->PCRC)

/**
 * @}
 */ /* end of group ESAI_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ESAI Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESAI_Register_Masks ESAI Register Masks
 * @{
 */

/* ETDR Bit Fields */
#define ESAI_ETDR_ETDR_MASK                      0xFFFFFFFFu
#define ESAI_ETDR_ETDR_SHIFT                     0
#define ESAI_ETDR_ETDR(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_ETDR_ETDR_SHIFT))&ESAI_ETDR_ETDR_MASK)
/* ERDR Bit Fields */
#define ESAI_ERDR_ERDR_MASK                      0xFFFFFFFFu
#define ESAI_ERDR_ERDR_SHIFT                     0
#define ESAI_ERDR_ERDR(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_ERDR_ERDR_SHIFT))&ESAI_ERDR_ERDR_MASK)
/* ECR Bit Fields */
#define ESAI_ECR_ESAIEN_MASK                     0x1u
#define ESAI_ECR_ESAIEN_SHIFT                    0
#define ESAI_ECR_ERST_MASK                       0x2u
#define ESAI_ECR_ERST_SHIFT                      1
#define ESAI_ECR_ERO_MASK                        0x10000u
#define ESAI_ECR_ERO_SHIFT                       16
#define ESAI_ECR_ERI_MASK                        0x20000u
#define ESAI_ECR_ERI_SHIFT                       17
#define ESAI_ECR_ETO_MASK                        0x40000u
#define ESAI_ECR_ETO_SHIFT                       18
#define ESAI_ECR_ETI_MASK                        0x80000u
#define ESAI_ECR_ETI_SHIFT                       19
/* ESR Bit Fields */
#define ESAI_ESR_RD_MASK                         0x1u
#define ESAI_ESR_RD_SHIFT                        0
#define ESAI_ESR_RED_MASK                        0x2u
#define ESAI_ESR_RED_SHIFT                       1
#define ESAI_ESR_RDE_MASK                        0x4u
#define ESAI_ESR_RDE_SHIFT                       2
#define ESAI_ESR_RLS_MASK                        0x8u
#define ESAI_ESR_RLS_SHIFT                       3
#define ESAI_ESR_TD_MASK                         0x10u
#define ESAI_ESR_TD_SHIFT                        4
#define ESAI_ESR_TED_MASK                        0x20u
#define ESAI_ESR_TED_SHIFT                       5
#define ESAI_ESR_TDE_MASK                        0x40u
#define ESAI_ESR_TDE_SHIFT                       6
#define ESAI_ESR_TLS_MASK                        0x80u
#define ESAI_ESR_TLS_SHIFT                       7
#define ESAI_ESR_TFE_MASK                        0x100u
#define ESAI_ESR_TFE_SHIFT                       8
#define ESAI_ESR_RFF_MASK                        0x200u
#define ESAI_ESR_RFF_SHIFT                       9
#define ESAI_ESR_TINIT_MASK                      0x400u
#define ESAI_ESR_TINIT_SHIFT                     10
/* TFCR Bit Fields */
#define ESAI_TFCR_TFE_MASK                       0x1u
#define ESAI_TFCR_TFE_SHIFT                      0
#define ESAI_TFCR_TFR_MASK                       0x2u
#define ESAI_TFCR_TFR_SHIFT                      1
#define ESAI_TFCR_TE0_MASK                       0x4u
#define ESAI_TFCR_TE0_SHIFT                      2
#define ESAI_TFCR_TE1_MASK                       0x8u
#define ESAI_TFCR_TE1_SHIFT                      3
#define ESAI_TFCR_TE2_MASK                       0x10u
#define ESAI_TFCR_TE2_SHIFT                      4
#define ESAI_TFCR_TE3_MASK                       0x20u
#define ESAI_TFCR_TE3_SHIFT                      5
#define ESAI_TFCR_TE4_MASK                       0x40u
#define ESAI_TFCR_TE4_SHIFT                      6
#define ESAI_TFCR_TE5_MASK                       0x80u
#define ESAI_TFCR_TE5_SHIFT                      7
#define ESAI_TFCR_TFWM_MASK                      0xFF00u
#define ESAI_TFCR_TFWM_SHIFT                     8
#define ESAI_TFCR_TFWM(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_TFCR_TFWM_SHIFT))&ESAI_TFCR_TFWM_MASK)
#define ESAI_TFCR_TWA_MASK                       0x70000u
#define ESAI_TFCR_TWA_SHIFT                      16
#define ESAI_TFCR_TWA(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TFCR_TWA_SHIFT))&ESAI_TFCR_TWA_MASK)
#define ESAI_TFCR_TIEN_MASK                      0x80000u
#define ESAI_TFCR_TIEN_SHIFT                     19
/* TFSR Bit Fields */
#define ESAI_TFSR_TFCNT_MASK                     0xFFu
#define ESAI_TFSR_TFCNT_SHIFT                    0
#define ESAI_TFSR_TFCNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESAI_TFSR_TFCNT_SHIFT))&ESAI_TFSR_TFCNT_MASK)
#define ESAI_TFSR_NTFI_MASK                      0x700u
#define ESAI_TFSR_NTFI_SHIFT                     8
#define ESAI_TFSR_NTFI(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_TFSR_NTFI_SHIFT))&ESAI_TFSR_NTFI_MASK)
#define ESAI_TFSR_NTFO_MASK                      0x7000u
#define ESAI_TFSR_NTFO_SHIFT                     12
#define ESAI_TFSR_NTFO(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_TFSR_NTFO_SHIFT))&ESAI_TFSR_NTFO_MASK)
/* RFCR Bit Fields */
#define ESAI_RFCR_RFE_MASK                       0x1u
#define ESAI_RFCR_RFE_SHIFT                      0
#define ESAI_RFCR_RFR_MASK                       0x2u
#define ESAI_RFCR_RFR_SHIFT                      1
#define ESAI_RFCR_RE0_MASK                       0x4u
#define ESAI_RFCR_RE0_SHIFT                      2
#define ESAI_RFCR_RE1_MASK                       0x8u
#define ESAI_RFCR_RE1_SHIFT                      3
#define ESAI_RFCR_RE2_MASK                       0x10u
#define ESAI_RFCR_RE2_SHIFT                      4
#define ESAI_RFCR_RE3_MASK                       0x20u
#define ESAI_RFCR_RE3_SHIFT                      5
#define ESAI_RFCR_RFWM_MASK                      0xFF00u
#define ESAI_RFCR_RFWM_SHIFT                     8
#define ESAI_RFCR_RFWM(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_RFCR_RFWM_SHIFT))&ESAI_RFCR_RFWM_MASK)
#define ESAI_RFCR_RWA_MASK                       0x70000u
#define ESAI_RFCR_RWA_SHIFT                      16
#define ESAI_RFCR_RWA(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RFCR_RWA_SHIFT))&ESAI_RFCR_RWA_MASK)
#define ESAI_RFCR_REXT_MASK                      0x80000u
#define ESAI_RFCR_REXT_SHIFT                     19
/* RFSR Bit Fields */
#define ESAI_RFSR_RFCNT_MASK                     0xFFu
#define ESAI_RFSR_RFCNT_SHIFT                    0
#define ESAI_RFSR_RFCNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESAI_RFSR_RFCNT_SHIFT))&ESAI_RFSR_RFCNT_MASK)
#define ESAI_RFSR_NRFO_MASK                      0x300u
#define ESAI_RFSR_NRFO_SHIFT                     8
#define ESAI_RFSR_NRFO(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_RFSR_NRFO_SHIFT))&ESAI_RFSR_NRFO_MASK)
#define ESAI_RFSR_NRFI_MASK                      0x3000u
#define ESAI_RFSR_NRFI_SHIFT                     12
#define ESAI_RFSR_NRFI(x)                        (((uint32_t)(((uint32_t)(x))<<ESAI_RFSR_NRFI_SHIFT))&ESAI_RFSR_NRFI_MASK)
/* TX Bit Fields */
#define ESAI_TX_TXn_MASK                         0xFFFFFFu
#define ESAI_TX_TXn_SHIFT                        0
#define ESAI_TX_TXn(x)                           (((uint32_t)(((uint32_t)(x))<<ESAI_TX_TXn_SHIFT))&ESAI_TX_TXn_MASK)
/* TSR Bit Fields */
#define ESAI_TSR_TSR_MASK                        0xFFFFFFu
#define ESAI_TSR_TSR_SHIFT                       0
#define ESAI_TSR_TSR(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_TSR_TSR_SHIFT))&ESAI_TSR_TSR_MASK)
/* RX Bit Fields */
#define ESAI_RX_RXn_MASK                         0xFFFFFFu
#define ESAI_RX_RXn_SHIFT                        0
#define ESAI_RX_RXn(x)                           (((uint32_t)(((uint32_t)(x))<<ESAI_RX_RXn_SHIFT))&ESAI_RX_RXn_MASK)
/* SAISR Bit Fields */
#define ESAI_SAISR_IF0_MASK                      0x1u
#define ESAI_SAISR_IF0_SHIFT                     0
#define ESAI_SAISR_IF1_MASK                      0x2u
#define ESAI_SAISR_IF1_SHIFT                     1
#define ESAI_SAISR_IF2_MASK                      0x4u
#define ESAI_SAISR_IF2_SHIFT                     2
#define ESAI_SAISR_RFS_MASK                      0x40u
#define ESAI_SAISR_RFS_SHIFT                     6
#define ESAI_SAISR_ROE_MASK                      0x80u
#define ESAI_SAISR_ROE_SHIFT                     7
#define ESAI_SAISR_RDF_MASK                      0x100u
#define ESAI_SAISR_RDF_SHIFT                     8
#define ESAI_SAISR_REDF_MASK                     0x200u
#define ESAI_SAISR_REDF_SHIFT                    9
#define ESAI_SAISR_RODF_MASK                     0x400u
#define ESAI_SAISR_RODF_SHIFT                    10
#define ESAI_SAISR_TFS_MASK                      0x2000u
#define ESAI_SAISR_TFS_SHIFT                     13
#define ESAI_SAISR_TUE_MASK                      0x4000u
#define ESAI_SAISR_TUE_SHIFT                     14
#define ESAI_SAISR_TDE_MASK                      0x8000u
#define ESAI_SAISR_TDE_SHIFT                     15
#define ESAI_SAISR_TEDE_MASK                     0x10000u
#define ESAI_SAISR_TEDE_SHIFT                    16
#define ESAI_SAISR_TODFE_MASK                    0x20000u
#define ESAI_SAISR_TODFE_SHIFT                   17
/* SAICR Bit Fields */
#define ESAI_SAICR_OF0_MASK                      0x1u
#define ESAI_SAICR_OF0_SHIFT                     0
#define ESAI_SAICR_OF1_MASK                      0x2u
#define ESAI_SAICR_OF1_SHIFT                     1
#define ESAI_SAICR_OF2_MASK                      0x4u
#define ESAI_SAICR_OF2_SHIFT                     2
#define ESAI_SAICR_SYN_MASK                      0x40u
#define ESAI_SAICR_SYN_SHIFT                     6
#define ESAI_SAICR_TEBE_MASK                     0x80u
#define ESAI_SAICR_TEBE_SHIFT                    7
#define ESAI_SAICR_ALC_MASK                      0x100u
#define ESAI_SAICR_ALC_SHIFT                     8
/* TCR Bit Fields */
#define ESAI_TCR_TE0_MASK                        0x1u
#define ESAI_TCR_TE0_SHIFT                       0
#define ESAI_TCR_TE1_MASK                        0x2u
#define ESAI_TCR_TE1_SHIFT                       1
#define ESAI_TCR_TE2_MASK                        0x4u
#define ESAI_TCR_TE2_SHIFT                       2
#define ESAI_TCR_TE3_MASK                        0x8u
#define ESAI_TCR_TE3_SHIFT                       3
#define ESAI_TCR_TE4_MASK                        0x10u
#define ESAI_TCR_TE4_SHIFT                       4
#define ESAI_TCR_TE5_MASK                        0x20u
#define ESAI_TCR_TE5_SHIFT                       5
#define ESAI_TCR_TSHFD_MASK                      0x40u
#define ESAI_TCR_TSHFD_SHIFT                     6
#define ESAI_TCR_TWA_MASK                        0x80u
#define ESAI_TCR_TWA_SHIFT                       7
#define ESAI_TCR_TMOD_MASK                       0x300u
#define ESAI_TCR_TMOD_SHIFT                      8
#define ESAI_TCR_TMOD(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TCR_TMOD_SHIFT))&ESAI_TCR_TMOD_MASK)
#define ESAI_TCR_TSWS_MASK                       0x7C00u
#define ESAI_TCR_TSWS_SHIFT                      10
#define ESAI_TCR_TSWS(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TCR_TSWS_SHIFT))&ESAI_TCR_TSWS_MASK)
#define ESAI_TCR_TFSL_MASK                       0x8000u
#define ESAI_TCR_TFSL_SHIFT                      15
#define ESAI_TCR_TFSR_MASK                       0x10000u
#define ESAI_TCR_TFSR_SHIFT                      16
#define ESAI_TCR_PADC_MASK                       0x20000u
#define ESAI_TCR_PADC_SHIFT                      17
#define ESAI_TCR_TPR_MASK                        0x80000u
#define ESAI_TCR_TPR_SHIFT                       19
#define ESAI_TCR_TEIE_MASK                       0x100000u
#define ESAI_TCR_TEIE_SHIFT                      20
#define ESAI_TCR_TEDIE_MASK                      0x200000u
#define ESAI_TCR_TEDIE_SHIFT                     21
#define ESAI_TCR_TIE_MASK                        0x400000u
#define ESAI_TCR_TIE_SHIFT                       22
#define ESAI_TCR_TLIE_MASK                       0x800000u
#define ESAI_TCR_TLIE_SHIFT                      23
/* TCCR Bit Fields */
#define ESAI_TCCR_TPM_MASK                       0xFFu
#define ESAI_TCCR_TPM_SHIFT                      0
#define ESAI_TCCR_TPM(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TCCR_TPM_SHIFT))&ESAI_TCCR_TPM_MASK)
#define ESAI_TCCR_TPSR_MASK                      0x100u
#define ESAI_TCCR_TPSR_SHIFT                     8
#define ESAI_TCCR_TDC_MASK                       0x3E00u
#define ESAI_TCCR_TDC_SHIFT                      9
#define ESAI_TCCR_TDC(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TCCR_TDC_SHIFT))&ESAI_TCCR_TDC_MASK)
#define ESAI_TCCR_TFP_MASK                       0x3C000u
#define ESAI_TCCR_TFP_SHIFT                      14
#define ESAI_TCCR_TFP(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_TCCR_TFP_SHIFT))&ESAI_TCCR_TFP_MASK)
#define ESAI_TCCR_TCKP_MASK                      0x40000u
#define ESAI_TCCR_TCKP_SHIFT                     18
#define ESAI_TCCR_TFSP_MASK                      0x80000u
#define ESAI_TCCR_TFSP_SHIFT                     19
#define ESAI_TCCR_THCKP_MASK                     0x100000u
#define ESAI_TCCR_THCKP_SHIFT                    20
#define ESAI_TCCR_TCKD_MASK                      0x200000u
#define ESAI_TCCR_TCKD_SHIFT                     21
#define ESAI_TCCR_TFSD_MASK                      0x400000u
#define ESAI_TCCR_TFSD_SHIFT                     22
#define ESAI_TCCR_THCKD_MASK                     0x800000u
#define ESAI_TCCR_THCKD_SHIFT                    23
/* RCR Bit Fields */
#define ESAI_RCR_RE0_MASK                        0x1u
#define ESAI_RCR_RE0_SHIFT                       0
#define ESAI_RCR_RE1_MASK                        0x2u
#define ESAI_RCR_RE1_SHIFT                       1
#define ESAI_RCR_RE2_MASK                        0x4u
#define ESAI_RCR_RE2_SHIFT                       2
#define ESAI_RCR_RE3_MASK                        0x8u
#define ESAI_RCR_RE3_SHIFT                       3
#define ESAI_RCR_RSHFD_MASK                      0x40u
#define ESAI_RCR_RSHFD_SHIFT                     6
#define ESAI_RCR_RWA_MASK                        0x80u
#define ESAI_RCR_RWA_SHIFT                       7
#define ESAI_RCR_RMOD_MASK                       0x300u
#define ESAI_RCR_RMOD_SHIFT                      8
#define ESAI_RCR_RMOD(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RCR_RMOD_SHIFT))&ESAI_RCR_RMOD_MASK)
#define ESAI_RCR_RSWS_MASK                       0x7C00u
#define ESAI_RCR_RSWS_SHIFT                      10
#define ESAI_RCR_RSWS(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RCR_RSWS_SHIFT))&ESAI_RCR_RSWS_MASK)
#define ESAI_RCR_RFSL_MASK                       0x8000u
#define ESAI_RCR_RFSL_SHIFT                      15
#define ESAI_RCR_RFSR_MASK                       0x10000u
#define ESAI_RCR_RFSR_SHIFT                      16
#define ESAI_RCR_RPR_MASK                        0x80000u
#define ESAI_RCR_RPR_SHIFT                       19
#define ESAI_RCR_REIE_MASK                       0x100000u
#define ESAI_RCR_REIE_SHIFT                      20
#define ESAI_RCR_REDIE_MASK                      0x200000u
#define ESAI_RCR_REDIE_SHIFT                     21
#define ESAI_RCR_RIE_MASK                        0x400000u
#define ESAI_RCR_RIE_SHIFT                       22
#define ESAI_RCR_RLIE_MASK                       0x800000u
#define ESAI_RCR_RLIE_SHIFT                      23
/* RCCR Bit Fields */
#define ESAI_RCCR_RPM_MASK                       0xFFu
#define ESAI_RCCR_RPM_SHIFT                      0
#define ESAI_RCCR_RPM(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RCCR_RPM_SHIFT))&ESAI_RCCR_RPM_MASK)
#define ESAI_RCCR_RPSP_MASK                      0x100u
#define ESAI_RCCR_RPSP_SHIFT                     8
#define ESAI_RCCR_RDC_MASK                       0x3E00u
#define ESAI_RCCR_RDC_SHIFT                      9
#define ESAI_RCCR_RDC(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RCCR_RDC_SHIFT))&ESAI_RCCR_RDC_MASK)
#define ESAI_RCCR_RFP_MASK                       0x3C000u
#define ESAI_RCCR_RFP_SHIFT                      14
#define ESAI_RCCR_RFP(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_RCCR_RFP_SHIFT))&ESAI_RCCR_RFP_MASK)
#define ESAI_RCCR_RCKP_MASK                      0x40000u
#define ESAI_RCCR_RCKP_SHIFT                     18
#define ESAI_RCCR_RFSP_MASK                      0x80000u
#define ESAI_RCCR_RFSP_SHIFT                     19
#define ESAI_RCCR_RHCKP_MASK                     0x100000u
#define ESAI_RCCR_RHCKP_SHIFT                    20
#define ESAI_RCCR_RCKD_MASK                      0x200000u
#define ESAI_RCCR_RCKD_SHIFT                     21
#define ESAI_RCCR_RFSD_MASK                      0x400000u
#define ESAI_RCCR_RFSD_SHIFT                     22
#define ESAI_RCCR_RHCKD_MASK                     0x800000u
#define ESAI_RCCR_RHCKD_SHIFT                    23
/* TSMA Bit Fields */
#define ESAI_TSMA_TS_MASK                        0xFFFFu
#define ESAI_TSMA_TS_SHIFT                       0
#define ESAI_TSMA_TS(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_TSMA_TS_SHIFT))&ESAI_TSMA_TS_MASK)
/* TSMB Bit Fields */
#define ESAI_TSMB_TS_MASK                        0xFFFFu
#define ESAI_TSMB_TS_SHIFT                       0
#define ESAI_TSMB_TS(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_TSMB_TS_SHIFT))&ESAI_TSMB_TS_MASK)
/* RSMA Bit Fields */
#define ESAI_RSMA_RS_MASK                        0xFFFFu
#define ESAI_RSMA_RS_SHIFT                       0
#define ESAI_RSMA_RS(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_RSMA_RS_SHIFT))&ESAI_RSMA_RS_MASK)
/* RSMB Bit Fields */
#define ESAI_RSMB_RS_MASK                        0xFFFFu
#define ESAI_RSMB_RS_SHIFT                       0
#define ESAI_RSMB_RS(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_RSMB_RS_SHIFT))&ESAI_RSMB_RS_MASK)
/* PRRC Bit Fields */
#define ESAI_PRRC_PDC_MASK                       0xFFFu
#define ESAI_PRRC_PDC_SHIFT                      0
#define ESAI_PRRC_PDC(x)                         (((uint32_t)(((uint32_t)(x))<<ESAI_PRRC_PDC_SHIFT))&ESAI_PRRC_PDC_MASK)
/* PCRC Bit Fields */
#define ESAI_PCRC_PC_MASK                        0xFFFu
#define ESAI_PCRC_PC_SHIFT                       0
#define ESAI_PCRC_PC(x)                          (((uint32_t)(((uint32_t)(x))<<ESAI_PCRC_PC_SHIFT))&ESAI_PCRC_PC_MASK)

/**
 * @}
 */ /* end of group ESAI_Register_Masks */


/* ESAI - Peripheral instance base addresses */
/** Peripheral ESAI base pointer */
#define ESAI_BASE_PTR                            ((ESAI_MemMapPtr)0x40062000u)
/** Array initializer of ESAI peripheral base pointers */
#define ESAI_BASE_PTRS                           { ESAI_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- ESAI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESAI_Register_Accessor_Macros ESAI - Register accessor macros
 * @{
 */


/* ESAI - Register instance definitions */
/* ESAI */
#define ESAI_ETDR                                ESAI_ETDR_REG(ESAI_BASE_PTR)
#define ESAI_ERDR                                ESAI_ERDR_REG(ESAI_BASE_PTR)
#define ESAI_ECR                                 ESAI_ECR_REG(ESAI_BASE_PTR)
#define ESAI_ESR                                 ESAI_ESR_REG(ESAI_BASE_PTR)
#define ESAI_TFCR                                ESAI_TFCR_REG(ESAI_BASE_PTR)
#define ESAI_TFSR                                ESAI_TFSR_REG(ESAI_BASE_PTR)
#define ESAI_RFCR                                ESAI_RFCR_REG(ESAI_BASE_PTR)
#define ESAI_RFSR                                ESAI_RFSR_REG(ESAI_BASE_PTR)
#define ESAI_TX0                                 ESAI_TX_REG(ESAI_BASE_PTR,0)
#define ESAI_TX1                                 ESAI_TX_REG(ESAI_BASE_PTR,1)
#define ESAI_TX2                                 ESAI_TX_REG(ESAI_BASE_PTR,2)
#define ESAI_TX3                                 ESAI_TX_REG(ESAI_BASE_PTR,3)
#define ESAI_TX4                                 ESAI_TX_REG(ESAI_BASE_PTR,4)
#define ESAI_TX5                                 ESAI_TX_REG(ESAI_BASE_PTR,5)
#define ESAI_TSR                                 ESAI_TSR_REG(ESAI_BASE_PTR)
#define ESAI_RX0                                 ESAI_RX_REG(ESAI_BASE_PTR,0)
#define ESAI_RX1                                 ESAI_RX_REG(ESAI_BASE_PTR,1)
#define ESAI_RX2                                 ESAI_RX_REG(ESAI_BASE_PTR,2)
#define ESAI_RX3                                 ESAI_RX_REG(ESAI_BASE_PTR,3)
#define ESAI_SAISR                               ESAI_SAISR_REG(ESAI_BASE_PTR)
#define ESAI_SAICR                               ESAI_SAICR_REG(ESAI_BASE_PTR)
#define ESAI_TCR                                 ESAI_TCR_REG(ESAI_BASE_PTR)
#define ESAI_TCCR                                ESAI_TCCR_REG(ESAI_BASE_PTR)
#define ESAI_RCR                                 ESAI_RCR_REG(ESAI_BASE_PTR)
#define ESAI_RCCR                                ESAI_RCCR_REG(ESAI_BASE_PTR)
#define ESAI_TSMA                                ESAI_TSMA_REG(ESAI_BASE_PTR)
#define ESAI_TSMB                                ESAI_TSMB_REG(ESAI_BASE_PTR)
#define ESAI_RSMA                                ESAI_RSMA_REG(ESAI_BASE_PTR)
#define ESAI_RSMB                                ESAI_RSMB_REG(ESAI_BASE_PTR)
#define ESAI_PRRC                                ESAI_PRRC_REG(ESAI_BASE_PTR)
#define ESAI_PCRC                                ESAI_PCRC_REG(ESAI_BASE_PTR)

/* ESAI - Register array accessors */
#define ESAI_TX(index)                           ESAI_TX_REG(ESAI_BASE_PTR,index)
#define ESAI_RX(index)                           ESAI_RX_REG(ESAI_BASE_PTR,index)

/**
 * @}
 */ /* end of group ESAI_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group ESAI_Peripheral */


/* ----------------------------------------------------------------------------
   -- ESW
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESW_Peripheral ESW
 * @{
 */

/** ESW - Peripheral register structure */
typedef struct ESW_MemMap {
  uint32_t REV;                                    /**< Revision, offset: 0x0 */
  uint32_t SCR;                                    /**< Scratch register, offset: 0x4 */
  uint32_t PER;                                    /**< Port enable register, offset: 0x8 */
  uint8_t RESERVED_0[4];
  uint32_t VLANV;                                  /**< VLAN verify, offset: 0x10 */
  uint32_t DBCR;                                   /**< Default broadcast resolution, offset: 0x14 */
  uint32_t DMCR;                                   /**< Default multicast resolution, offset: 0x18 */
  uint32_t BKLR;                                   /**< Blocking and learning enable, offset: 0x1C */
  uint32_t BMPC;                                   /**< Bridge management port configuration, offset: 0x20 */
  uint32_t MODE;                                   /**< Mode configuration, offset: 0x24 */
  uint32_t VIMSEL;                                 /**< VLAN input manipulation select, offset: 0x28 */
  uint32_t VOMSEL;                                 /**< VLAN output manipulation select, offset: 0x2C */
  uint32_t VIMEN;                                  /**< VLAN input manipulation enable, offset: 0x30 */
  uint32_t VID;                                    /**< VLAN tag ID, offset: 0x34 */
  uint8_t RESERVED_1[8];
  uint32_t MCR;                                    /**< Mirror control register, offset: 0x40 */
  uint32_t EGMAP;                                  /**< Egress port definitions, offset: 0x44 */
  uint32_t INGMAP;                                 /**< Ingress port definitions, offset: 0x48 */
  uint32_t INGSAL;                                 /**< Ingress source MAC address low, offset: 0x4C */
  uint32_t INGSAH;                                 /**< Ingress source MAC address high, offset: 0x50 */
  uint32_t INGDAL;                                 /**< Ingress destination MAC address low, offset: 0x54 */
  uint32_t INGDAH;                                 /**< Ingress destination MAC address high, offset: 0x58 */
  uint32_t EGSAL;                                  /**< Egress source MAC address low, offset: 0x5C */
  uint32_t EGSAH;                                  /**< Egress source MAC address high, offset: 0x60 */
  uint32_t EGDAL;                                  /**< Egress destination MAC address low, offset: 0x64 */
  uint32_t EGDAH;                                  /**< Egress destination MAC address high, offset: 0x68 */
  uint32_t MCVAL;                                  /**< Mirror count value, offset: 0x6C */
  uint8_t RESERVED_2[16];
  uint32_t MMSR;                                   /**< Memory manager status, offset: 0x80 */
  uint32_t LMT;                                    /**< Low memory threshold, offset: 0x84 */
  uint32_t LFC;                                    /**< Lowest number of free cells, offset: 0x88 */
  uint32_t PCSR;                                   /**< Port congestion status, offset: 0x8C */
  uint32_t IOSR;                                   /**< Switch input and output interface status, offset: 0x90 */
  uint32_t QWT;                                    /**< Queue weights, offset: 0x94 */
  uint8_t RESERVED_3[4];
  uint32_t P0BCT;                                  /**< Port 0 Backpressure Congestion Threshold, offset: 0x9C */
  uint8_t RESERVED_4[28];
  uint32_t FFEN;                                   /**< Port 0 forced forwarding enable, offset: 0xBC */
  uint32_t PSNP1;                                  /**< Port snooping registers, offset: 0xC0 */
  uint32_t PSNP2;                                  /**< Port snooping registers, offset: 0xC4 */
  uint32_t PSNP3;                                  /**< Port snooping registers, offset: 0xC8 */
  uint32_t PSNP4;                                  /**< Port snooping registers, offset: 0xCC */
  uint32_t PSNP5;                                  /**< Port snooping registers, offset: 0xD0 */
  uint32_t PSNP6;                                  /**< Port snooping registers, offset: 0xD4 */
  uint32_t PSNP7;                                  /**< Port snooping registers, offset: 0xD8 */
  uint32_t PSNP8;                                  /**< Port snooping registers, offset: 0xDC */
  uint32_t IPSNP1;                                 /**< IP snooping registers, offset: 0xE0 */
  uint32_t IPSNP2;                                 /**< IP snooping registers, offset: 0xE4 */
  uint32_t IPSNP3;                                 /**< IP snooping registers, offset: 0xE8 */
  uint32_t IPSNP4;                                 /**< IP snooping registers, offset: 0xEC */
  uint32_t IPSNP5;                                 /**< IP snooping registers, offset: 0xF0 */
  uint32_t IPSNP6;                                 /**< IP snooping registers, offset: 0xF4 */
  uint32_t IPSNP7;                                 /**< IP snooping registers, offset: 0xF8 */
  uint32_t IPSNP8;                                 /**< IP snooping registers, offset: 0xFC */
  uint32_t P0VRES;                                 /**< Port 0 VLAN priority resolution map, offset: 0x100 */
  uint32_t P1VRES;                                 /**< Port 1 VLAN priority resolution map, offset: 0x104 */
  uint32_t P2VRES;                                 /**< Port 2 VLAN priority resolution map, offset: 0x108 */
  uint8_t RESERVED_5[52];
  uint32_t IPRES;                                  /**< IPv4/v6 priority resolution table, offset: 0x140 */
  uint8_t RESERVED_6[60];
  uint32_t P0RES;                                  /**< Port 0 priority resolution configuration, offset: 0x180 */
  uint32_t P1RES;                                  /**< Port 1 priority resolution configuration, offset: 0x184 */
  uint32_t P2RES;                                  /**< Port 2 priority resolution configuration, offset: 0x188 */
  uint8_t RESERVED_7[116];
  uint32_t P0ID;                                   /**< Port 0 VLAN ID, offset: 0x200 */
  uint32_t P1ID;                                   /**< Port 1 VLAN ID, offset: 0x204 */
  uint32_t P2ID;                                   /**< Port 2 VLAN ID, offset: 0x208 */
  uint8_t RESERVED_8[116];
  uint32_t VRES0;                                  /**< VLAN domain resolution entry 0, offset: 0x280 */
  uint32_t VRES1;                                  /**< VLAN domain resolution entry 1, offset: 0x284 */
  uint32_t VRES2;                                  /**< VLAN domain resolution entry 2, offset: 0x288 */
  uint32_t VRES3;                                  /**< VLAN domain resolution entry 4, offset: 0x28C */
  uint32_t VRES4;                                  /**< VLAN domain resolution entry 4, offset: 0x290 */
  uint32_t VRES5;                                  /**< VLAN domain resolution entry 5, offset: 0x294 */
  uint32_t VRES6;                                  /**< VLAN domain resolution entry 6, offset: 0x298 */
  uint32_t VRES7;                                  /**< VLAN domain resolution entry 7, offset: 0x29C */
  uint32_t VRES8;                                  /**< VLAN domain resolution entry 8, offset: 0x2A0 */
  uint32_t VRES9;                                  /**< VLAN domain resolution entry 9, offset: 0x2A4 */
  uint32_t VRES10;                                 /**< VLAN domain resolution entry 10, offset: 0x2A8 */
  uint32_t VRES11;                                 /**< VLAN domain resolution entry 11, offset: 0x2AC */
  uint32_t VRES12;                                 /**< VLAN domain resolution entry 12, offset: 0x2B0 */
  uint32_t VRES13;                                 /**< VLAN domain resolution entry 13, offset: 0x2B4 */
  uint32_t VRES14;                                 /**< VLAN domain resolution entry 14, offset: 0x2B8 */
  uint32_t VRES15;                                 /**< VLAN domain resolution entry 15, offset: 0x2BC */
  uint32_t VRES16;                                 /**< VLAN domain resolution entry 16, offset: 0x2C0 */
  uint32_t VRES17;                                 /**< VLAN domain resolution entry 17, offset: 0x2C4 */
  uint32_t VRES18;                                 /**< VLAN domain resolution entry 18, offset: 0x2C8 */
  uint32_t VRES19;                                 /**< VLAN domain resolution entry 19, offset: 0x2CC */
  uint32_t VRES20;                                 /**< VLAN domain resolution entry 20, offset: 0x2D0 */
  uint32_t VRES21;                                 /**< VLAN domain resolution entry 21, offset: 0x2D4 */
  uint32_t VRES22;                                 /**< VLAN domain resolution entry 22, offset: 0x2D8 */
  uint32_t VRES23;                                 /**< VLAN domain resolution entry 23, offset: 0x2DC */
  uint32_t VRES24;                                 /**< VLAN domain resolution entry 24, offset: 0x2E0 */
  uint32_t VRES25;                                 /**< VLAN domain resolution entry 25, offset: 0x2E4 */
  uint32_t VRES26;                                 /**< VLAN domain resolution entry 26, offset: 0x2E8 */
  uint32_t VRES27;                                 /**< VLAN domain resolution entry 27, offset: 0x2EC */
  uint32_t VRES28;                                 /**< VLAN domain resolution entry 28, offset: 0x2F0 */
  uint32_t VRES29;                                 /**< VLAN domain resolution entry 29, offset: 0x2F4 */
  uint32_t VRES30;                                 /**< VLAN domain resolution entry 30, offset: 0x2F8 */
  uint32_t VRES31;                                 /**< VLAN domain resolution entry 31, offset: 0x2FC */
  uint32_t DISCN;                                  /**< Number of discarded frames, offset: 0x300 */
  uint32_t DISCB;                                  /**< Bytes of discarded frames, offset: 0x304 */
  uint32_t NDISCN;                                 /**< Number of non-discarded frames, offset: 0x308 */
  uint32_t NDISCB;                                 /**< Bytes of non-discarded frames, offset: 0x30C */
  uint32_t P0OQC;                                  /**< Port 0 output queue congestion, offset: 0x310 */
  uint32_t P0MVID;                                 /**< Port 0 mismatching VLAN ID, offset: 0x314 */
  uint32_t P0MVTAG;                                /**< Port 0 missing VLAN tag, offset: 0x318 */
  uint32_t P0BL;                                   /**< Port 0 blocked, offset: 0x31C */
  uint32_t P1OQC;                                  /**< Port 1 output queue congestion, offset: 0x320 */
  uint32_t P1MVID;                                 /**< Port 1 mismatching VLAN ID, offset: 0x324 */
  uint32_t P1MVTAG;                                /**< Port 1 missing VLAN tag, offset: 0x328 */
  uint32_t P1BL;                                   /**< Port 1 blocked, offset: 0x32C */
  uint32_t P2OQC;                                  /**< Port 2 output queue congestion, offset: 0x330 */
  uint32_t P2MVID;                                 /**< Port 2 mismatching VLAN ID, offset: 0x334 */
  uint32_t P2MVTAG;                                /**< Port 2 missing VLAN tag, offset: 0x338 */
  uint32_t P2BL;                                   /**< Port 2 blocked, offset: 0x33C */
  uint8_t RESERVED_9[192];
  uint32_t ISR;                                    /**< Interrupt status register, offset: 0x400 */
  uint32_t IMR;                                    /**< Interrupt mask register, offset: 0x404 */
  uint32_t RDSR;                                   /**< Receive descriptor ring pointer, offset: 0x408 */
  uint32_t TDSR;                                   /**< Transmit descriptor ring pointer, offset: 0x40C */
  uint32_t MRBR;                                   /**< Maximum receive buffer size, offset: 0x410 */
  uint32_t RDAR;                                   /**< Receive descriptor active, offset: 0x414 */
  uint32_t TDAR;                                   /**< Transmit descriptor active, offset: 0x418 */
  uint8_t RESERVED_10[228];
  uint32_t LREC0;                                  /**< Learning records A0 & B1, offset: 0x500 */
  uint32_t LREC1;                                  /**< Learning record B1, offset: 0x504 */
  uint32_t LSR;                                    /**< Learning data available status, offset: 0x508 */
} volatile *ESW_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- ESW - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESW_Register_Accessor_Macros ESW - Register accessor macros
 * @{
 */


/* ESW - Register accessors */
#define ESW_REV_REG(base)                        ((base)->REV)
#define ESW_SCR_REG(base)                        ((base)->SCR)
#define ESW_PER_REG(base)                        ((base)->PER)
#define ESW_VLANV_REG(base)                      ((base)->VLANV)
#define ESW_DBCR_REG(base)                       ((base)->DBCR)
#define ESW_DMCR_REG(base)                       ((base)->DMCR)
#define ESW_BKLR_REG(base)                       ((base)->BKLR)
#define ESW_BMPC_REG(base)                       ((base)->BMPC)
#define ESW_MODE_REG(base)                       ((base)->MODE)
#define ESW_VIMSEL_REG(base)                     ((base)->VIMSEL)
#define ESW_VOMSEL_REG(base)                     ((base)->VOMSEL)
#define ESW_VIMEN_REG(base)                      ((base)->VIMEN)
#define ESW_VID_REG(base)                        ((base)->VID)
#define ESW_MCR_REG(base)                        ((base)->MCR)
#define ESW_EGMAP_REG(base)                      ((base)->EGMAP)
#define ESW_INGMAP_REG(base)                     ((base)->INGMAP)
#define ESW_INGSAL_REG(base)                     ((base)->INGSAL)
#define ESW_INGSAH_REG(base)                     ((base)->INGSAH)
#define ESW_INGDAL_REG(base)                     ((base)->INGDAL)
#define ESW_INGDAH_REG(base)                     ((base)->INGDAH)
#define ESW_EGSAL_REG(base)                      ((base)->EGSAL)
#define ESW_EGSAH_REG(base)                      ((base)->EGSAH)
#define ESW_EGDAL_REG(base)                      ((base)->EGDAL)
#define ESW_EGDAH_REG(base)                      ((base)->EGDAH)
#define ESW_MCVAL_REG(base)                      ((base)->MCVAL)
#define ESW_MMSR_REG(base)                       ((base)->MMSR)
#define ESW_LMT_REG(base)                        ((base)->LMT)
#define ESW_LFC_REG(base)                        ((base)->LFC)
#define ESW_PCSR_REG(base)                       ((base)->PCSR)
#define ESW_IOSR_REG(base)                       ((base)->IOSR)
#define ESW_QWT_REG(base)                        ((base)->QWT)
#define ESW_P0BCT_REG(base)                      ((base)->P0BCT)
#define ESW_FFEN_REG(base)                       ((base)->FFEN)
#define ESW_PSNP1_REG(base)                      ((base)->PSNP1)
#define ESW_PSNP2_REG(base)                      ((base)->PSNP2)
#define ESW_PSNP3_REG(base)                      ((base)->PSNP3)
#define ESW_PSNP4_REG(base)                      ((base)->PSNP4)
#define ESW_PSNP5_REG(base)                      ((base)->PSNP5)
#define ESW_PSNP6_REG(base)                      ((base)->PSNP6)
#define ESW_PSNP7_REG(base)                      ((base)->PSNP7)
#define ESW_PSNP8_REG(base)                      ((base)->PSNP8)
#define ESW_IPSNP1_REG(base)                     ((base)->IPSNP1)
#define ESW_IPSNP2_REG(base)                     ((base)->IPSNP2)
#define ESW_IPSNP3_REG(base)                     ((base)->IPSNP3)
#define ESW_IPSNP4_REG(base)                     ((base)->IPSNP4)
#define ESW_IPSNP5_REG(base)                     ((base)->IPSNP5)
#define ESW_IPSNP6_REG(base)                     ((base)->IPSNP6)
#define ESW_IPSNP7_REG(base)                     ((base)->IPSNP7)
#define ESW_IPSNP8_REG(base)                     ((base)->IPSNP8)
#define ESW_P0VRES_REG(base)                     ((base)->P0VRES)
#define ESW_P1VRES_REG(base)                     ((base)->P1VRES)
#define ESW_P2VRES_REG(base)                     ((base)->P2VRES)
#define ESW_IPRES_REG(base)                      ((base)->IPRES)
#define ESW_P0RES_REG(base)                      ((base)->P0RES)
#define ESW_P1RES_REG(base)                      ((base)->P1RES)
#define ESW_P2RES_REG(base)                      ((base)->P2RES)
#define ESW_P0ID_REG(base)                       ((base)->P0ID)
#define ESW_P1ID_REG(base)                       ((base)->P1ID)
#define ESW_P2ID_REG(base)                       ((base)->P2ID)
#define ESW_VRES0_REG(base)                      ((base)->VRES0)
#define ESW_VRES1_REG(base)                      ((base)->VRES1)
#define ESW_VRES2_REG(base)                      ((base)->VRES2)
#define ESW_VRES3_REG(base)                      ((base)->VRES3)
#define ESW_VRES4_REG(base)                      ((base)->VRES4)
#define ESW_VRES5_REG(base)                      ((base)->VRES5)
#define ESW_VRES6_REG(base)                      ((base)->VRES6)
#define ESW_VRES7_REG(base)                      ((base)->VRES7)
#define ESW_VRES8_REG(base)                      ((base)->VRES8)
#define ESW_VRES9_REG(base)                      ((base)->VRES9)
#define ESW_VRES10_REG(base)                     ((base)->VRES10)
#define ESW_VRES11_REG(base)                     ((base)->VRES11)
#define ESW_VRES12_REG(base)                     ((base)->VRES12)
#define ESW_VRES13_REG(base)                     ((base)->VRES13)
#define ESW_VRES14_REG(base)                     ((base)->VRES14)
#define ESW_VRES15_REG(base)                     ((base)->VRES15)
#define ESW_VRES16_REG(base)                     ((base)->VRES16)
#define ESW_VRES17_REG(base)                     ((base)->VRES17)
#define ESW_VRES18_REG(base)                     ((base)->VRES18)
#define ESW_VRES19_REG(base)                     ((base)->VRES19)
#define ESW_VRES20_REG(base)                     ((base)->VRES20)
#define ESW_VRES21_REG(base)                     ((base)->VRES21)
#define ESW_VRES22_REG(base)                     ((base)->VRES22)
#define ESW_VRES23_REG(base)                     ((base)->VRES23)
#define ESW_VRES24_REG(base)                     ((base)->VRES24)
#define ESW_VRES25_REG(base)                     ((base)->VRES25)
#define ESW_VRES26_REG(base)                     ((base)->VRES26)
#define ESW_VRES27_REG(base)                     ((base)->VRES27)
#define ESW_VRES28_REG(base)                     ((base)->VRES28)
#define ESW_VRES29_REG(base)                     ((base)->VRES29)
#define ESW_VRES30_REG(base)                     ((base)->VRES30)
#define ESW_VRES31_REG(base)                     ((base)->VRES31)
#define ESW_DISCN_REG(base)                      ((base)->DISCN)
#define ESW_DISCB_REG(base)                      ((base)->DISCB)
#define ESW_NDISCN_REG(base)                     ((base)->NDISCN)
#define ESW_NDISCB_REG(base)                     ((base)->NDISCB)
#define ESW_P0OQC_REG(base)                      ((base)->P0OQC)
#define ESW_P0MVID_REG(base)                     ((base)->P0MVID)
#define ESW_P0MVTAG_REG(base)                    ((base)->P0MVTAG)
#define ESW_P0BL_REG(base)                       ((base)->P0BL)
#define ESW_P1OQC_REG(base)                      ((base)->P1OQC)
#define ESW_P1MVID_REG(base)                     ((base)->P1MVID)
#define ESW_P1MVTAG_REG(base)                    ((base)->P1MVTAG)
#define ESW_P1BL_REG(base)                       ((base)->P1BL)
#define ESW_P2OQC_REG(base)                      ((base)->P2OQC)
#define ESW_P2MVID_REG(base)                     ((base)->P2MVID)
#define ESW_P2MVTAG_REG(base)                    ((base)->P2MVTAG)
#define ESW_P2BL_REG(base)                       ((base)->P2BL)
#define ESW_ISR_REG(base)                        ((base)->ISR)
#define ESW_IMR_REG(base)                        ((base)->IMR)
#define ESW_RDSR_REG(base)                       ((base)->RDSR)
#define ESW_TDSR_REG(base)                       ((base)->TDSR)
#define ESW_MRBR_REG(base)                       ((base)->MRBR)
#define ESW_RDAR_REG(base)                       ((base)->RDAR)
#define ESW_TDAR_REG(base)                       ((base)->TDAR)
#define ESW_LREC0_REG(base)                      ((base)->LREC0)
#define ESW_LREC1_REG(base)                      ((base)->LREC1)
#define ESW_LSR_REG(base)                        ((base)->LSR)

/**
 * @}
 */ /* end of group ESW_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- ESW Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESW_Register_Masks ESW Register Masks
 * @{
 */

/* REV Bit Fields */
#define ESW_REV_CORREV_MASK                      0xFFFFu
#define ESW_REV_CORREV_SHIFT                     0
#define ESW_REV_CORREV(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_REV_CORREV_SHIFT))&ESW_REV_CORREV_MASK)
#define ESW_REV_CSTREV_MASK                      0xFFFF0000u
#define ESW_REV_CSTREV_SHIFT                     16
#define ESW_REV_CSTREV(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_REV_CSTREV_SHIFT))&ESW_REV_CSTREV_MASK)
/* SCR Bit Fields */
#define ESW_SCR_SCRATCH_MASK                     0xFFFFFFFFu
#define ESW_SCR_SCRATCH_SHIFT                    0
#define ESW_SCR_SCRATCH(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_SCR_SCRATCH_SHIFT))&ESW_SCR_SCRATCH_MASK)
/* PER Bit Fields */
#define ESW_PER_TE0_MASK                         0x1u
#define ESW_PER_TE0_SHIFT                        0
#define ESW_PER_TE1_MASK                         0x2u
#define ESW_PER_TE1_SHIFT                        1
#define ESW_PER_TE2_MASK                         0x4u
#define ESW_PER_TE2_SHIFT                        2
#define ESW_PER_RE0_MASK                         0x10000u
#define ESW_PER_RE0_SHIFT                        16
#define ESW_PER_RE1_MASK                         0x20000u
#define ESW_PER_RE1_SHIFT                        17
#define ESW_PER_RE2_MASK                         0x40000u
#define ESW_PER_RE2_SHIFT                        18
/* VLANV Bit Fields */
#define ESW_VLANV_VV0_MASK                       0x1u
#define ESW_VLANV_VV0_SHIFT                      0
#define ESW_VLANV_VV1_MASK                       0x2u
#define ESW_VLANV_VV1_SHIFT                      1
#define ESW_VLANV_VV2_MASK                       0x4u
#define ESW_VLANV_VV2_SHIFT                      2
#define ESW_VLANV_DU0_MASK                       0x10000u
#define ESW_VLANV_DU0_SHIFT                      16
#define ESW_VLANV_DU1_MASK                       0x20000u
#define ESW_VLANV_DU1_SHIFT                      17
#define ESW_VLANV_DU2_MASK                       0x40000u
#define ESW_VLANV_DU2_SHIFT                      18
/* DBCR Bit Fields */
#define ESW_DBCR_P0_MASK                         0x1u
#define ESW_DBCR_P0_SHIFT                        0
#define ESW_DBCR_P1_MASK                         0x2u
#define ESW_DBCR_P1_SHIFT                        1
#define ESW_DBCR_P2_MASK                         0x4u
#define ESW_DBCR_P2_SHIFT                        2
/* DMCR Bit Fields */
#define ESW_DMCR_P0_MASK                         0x1u
#define ESW_DMCR_P0_SHIFT                        0
#define ESW_DMCR_P1_MASK                         0x2u
#define ESW_DMCR_P1_SHIFT                        1
#define ESW_DMCR_P2_MASK                         0x4u
#define ESW_DMCR_P2_SHIFT                        2
/* BKLR Bit Fields */
#define ESW_BKLR_BE0_MASK                        0x1u
#define ESW_BKLR_BE0_SHIFT                       0
#define ESW_BKLR_BE1_MASK                        0x2u
#define ESW_BKLR_BE1_SHIFT                       1
#define ESW_BKLR_BE2_MASK                        0x4u
#define ESW_BKLR_BE2_SHIFT                       2
#define ESW_BKLR_LD0_MASK                        0x10000u
#define ESW_BKLR_LD0_SHIFT                       16
#define ESW_BKLR_LD1_MASK                        0x20000u
#define ESW_BKLR_LD1_SHIFT                       17
#define ESW_BKLR_LD2_MASK                        0x40000u
#define ESW_BKLR_LD2_SHIFT                       18
/* BMPC Bit Fields */
#define ESW_BMPC_PORT_MASK                       0xFu
#define ESW_BMPC_PORT_SHIFT                      0
#define ESW_BMPC_PORT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PORT_SHIFT))&ESW_BMPC_PORT_MASK)
#define ESW_BMPC_MSGTX_MASK                      0x20u
#define ESW_BMPC_MSGTX_SHIFT                     5
#define ESW_BMPC_EN_MASK                         0x40u
#define ESW_BMPC_EN_SHIFT                        6
#define ESW_BMPC_DIS_MASK                        0x80u
#define ESW_BMPC_DIS_SHIFT                       7
#define ESW_BMPC_PRIORITY_MASK                   0xE000u
#define ESW_BMPC_PRIORITY_SHIFT                  13
#define ESW_BMPC_PRIORITY(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PRIORITY_SHIFT))&ESW_BMPC_PRIORITY_MASK)
#define ESW_BMPC_PORTMASK_MASK                   0x70000u
#define ESW_BMPC_PORTMASK_SHIFT                  16
#define ESW_BMPC_PORTMASK(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PORTMASK_SHIFT))&ESW_BMPC_PORTMASK_MASK)
/* MODE Bit Fields */
#define ESW_MODE_SWRST_MASK                      0x1u
#define ESW_MODE_SWRST_SHIFT                     0
#define ESW_MODE_SWEN_MASK                       0x2u
#define ESW_MODE_SWEN_SHIFT                      1
#define ESW_MODE_STOP_MASK                       0x80u
#define ESW_MODE_STOP_SHIFT                      7
#define ESW_MODE_CRCTRAN_MASK                    0x100u
#define ESW_MODE_CRCTRAN_SHIFT                   8
#define ESW_MODE_P0CT_MASK                       0x200u
#define ESW_MODE_P0CT_SHIFT                      9
#define ESW_MODE_STATRST_MASK                    0x80000000u
#define ESW_MODE_STATRST_SHIFT                   31
/* VIMSEL Bit Fields */
#define ESW_VIMSEL_IM0_MASK                      0x3u
#define ESW_VIMSEL_IM0_SHIFT                     0
#define ESW_VIMSEL_IM0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM0_SHIFT))&ESW_VIMSEL_IM0_MASK)
#define ESW_VIMSEL_IM1_MASK                      0xCu
#define ESW_VIMSEL_IM1_SHIFT                     2
#define ESW_VIMSEL_IM1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM1_SHIFT))&ESW_VIMSEL_IM1_MASK)
#define ESW_VIMSEL_IM2_MASK                      0x30u
#define ESW_VIMSEL_IM2_SHIFT                     4
#define ESW_VIMSEL_IM2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM2_SHIFT))&ESW_VIMSEL_IM2_MASK)
/* VOMSEL Bit Fields */
#define ESW_VOMSEL_OM0_MASK                      0x3u
#define ESW_VOMSEL_OM0_SHIFT                     0
#define ESW_VOMSEL_OM0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM0_SHIFT))&ESW_VOMSEL_OM0_MASK)
#define ESW_VOMSEL_OM1_MASK                      0xCu
#define ESW_VOMSEL_OM1_SHIFT                     2
#define ESW_VOMSEL_OM1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM1_SHIFT))&ESW_VOMSEL_OM1_MASK)
#define ESW_VOMSEL_OM2_MASK                      0x30u
#define ESW_VOMSEL_OM2_SHIFT                     4
#define ESW_VOMSEL_OM2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM2_SHIFT))&ESW_VOMSEL_OM2_MASK)
/* VIMEN Bit Fields */
#define ESW_VIMEN_EN0_MASK                       0x1u
#define ESW_VIMEN_EN0_SHIFT                      0
#define ESW_VIMEN_EN1_MASK                       0x2u
#define ESW_VIMEN_EN1_SHIFT                      1
#define ESW_VIMEN_EN2_MASK                       0x4u
#define ESW_VIMEN_EN2_SHIFT                      2
/* VID Bit Fields */
#define ESW_VID_TAG_MASK                         0xFFFFFFFFu
#define ESW_VID_TAG_SHIFT                        0
#define ESW_VID_TAG(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_VID_TAG_SHIFT))&ESW_VID_TAG_MASK)
/* MCR Bit Fields */
#define ESW_MCR_PORT_MASK                        0xFu
#define ESW_MCR_PORT_SHIFT                       0
#define ESW_MCR_PORT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_MCR_PORT_SHIFT))&ESW_MCR_PORT_MASK)
#define ESW_MCR_MEN_MASK                         0x10u
#define ESW_MCR_MEN_SHIFT                        4
#define ESW_MCR_INGMAP_MASK                      0x20u
#define ESW_MCR_INGMAP_SHIFT                     5
#define ESW_MCR_EGMAP_MASK                       0x40u
#define ESW_MCR_EGMAP_SHIFT                      6
#define ESW_MCR_INGSA_MASK                       0x80u
#define ESW_MCR_INGSA_SHIFT                      7
#define ESW_MCR_INGDA_MASK                       0x100u
#define ESW_MCR_INGDA_SHIFT                      8
#define ESW_MCR_EGSA_MASK                        0x200u
#define ESW_MCR_EGSA_SHIFT                       9
#define ESW_MCR_EGDA_MASK                        0x400u
#define ESW_MCR_EGDA_SHIFT                       10
/* EGMAP Bit Fields */
#define ESW_EGMAP_EG0_MASK                       0x1u
#define ESW_EGMAP_EG0_SHIFT                      0
#define ESW_EGMAP_EG1_MASK                       0x2u
#define ESW_EGMAP_EG1_SHIFT                      1
#define ESW_EGMAP_EG2_MASK                       0x4u
#define ESW_EGMAP_EG2_SHIFT                      2
/* INGMAP Bit Fields */
#define ESW_INGMAP_ING0_MASK                     0x1u
#define ESW_INGMAP_ING0_SHIFT                    0
#define ESW_INGMAP_ING1_MASK                     0x2u
#define ESW_INGMAP_ING1_SHIFT                    1
#define ESW_INGMAP_ING2_MASK                     0x4u
#define ESW_INGMAP_ING2_SHIFT                    2
/* INGSAL Bit Fields */
#define ESW_INGSAL_ADDLOW_MASK                   0xFFFFFFFFu
#define ESW_INGSAL_ADDLOW_SHIFT                  0
#define ESW_INGSAL_ADDLOW(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_INGSAL_ADDLOW_SHIFT))&ESW_INGSAL_ADDLOW_MASK)
/* INGSAH Bit Fields */
#define ESW_INGSAH_ADDHIGH_MASK                  0xFFFFu
#define ESW_INGSAH_ADDHIGH_SHIFT                 0
#define ESW_INGSAH_ADDHIGH(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_INGSAH_ADDHIGH_SHIFT))&ESW_INGSAH_ADDHIGH_MASK)
/* INGDAL Bit Fields */
#define ESW_INGDAL_ADDLOW_MASK                   0xFFFFFFFFu
#define ESW_INGDAL_ADDLOW_SHIFT                  0
#define ESW_INGDAL_ADDLOW(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_INGDAL_ADDLOW_SHIFT))&ESW_INGDAL_ADDLOW_MASK)
/* INGDAH Bit Fields */
#define ESW_INGDAH_ADDHIGH_MASK                  0xFFFFu
#define ESW_INGDAH_ADDHIGH_SHIFT                 0
#define ESW_INGDAH_ADDHIGH(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_INGDAH_ADDHIGH_SHIFT))&ESW_INGDAH_ADDHIGH_MASK)
/* EGSAL Bit Fields */
#define ESW_EGSAL_ADDLOW_MASK                    0xFFFFFFFFu
#define ESW_EGSAL_ADDLOW_SHIFT                   0
#define ESW_EGSAL_ADDLOW(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_EGSAL_ADDLOW_SHIFT))&ESW_EGSAL_ADDLOW_MASK)
/* EGSAH Bit Fields */
#define ESW_EGSAH_ADDHIGH_MASK                   0xFFFFu
#define ESW_EGSAH_ADDHIGH_SHIFT                  0
#define ESW_EGSAH_ADDHIGH(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_EGSAH_ADDHIGH_SHIFT))&ESW_EGSAH_ADDHIGH_MASK)
/* EGDAL Bit Fields */
#define ESW_EGDAL_ADDLOW_MASK                    0xFFFFFFFFu
#define ESW_EGDAL_ADDLOW_SHIFT                   0
#define ESW_EGDAL_ADDLOW(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_EGDAL_ADDLOW_SHIFT))&ESW_EGDAL_ADDLOW_MASK)
/* EGDAH Bit Fields */
#define ESW_EGDAH_ADDHIGH_MASK                   0xFFFFu
#define ESW_EGDAH_ADDHIGH_SHIFT                  0
#define ESW_EGDAH_ADDHIGH(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_EGDAH_ADDHIGH_SHIFT))&ESW_EGDAH_ADDHIGH_MASK)
/* MCVAL Bit Fields */
#define ESW_MCVAL_COUNT_MASK                     0xFFu
#define ESW_MCVAL_COUNT_SHIFT                    0
#define ESW_MCVAL_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MCVAL_COUNT_SHIFT))&ESW_MCVAL_COUNT_MASK)
/* MMSR Bit Fields */
#define ESW_MMSR_BUSY_MASK                       0x1u
#define ESW_MMSR_BUSY_SHIFT                      0
#define ESW_MMSR_NOCELL_MASK                     0x2u
#define ESW_MMSR_NOCELL_SHIFT                    1
#define ESW_MMSR_MEMFULL_MASK                    0x4u
#define ESW_MMSR_MEMFULL_SHIFT                   2
#define ESW_MMSR_MFLATCH_MASK                    0x8u
#define ESW_MMSR_MFLATCH_SHIFT                   3
#define ESW_MMSR_DQGRNT_MASK                     0x40u
#define ESW_MMSR_DQGRNT_SHIFT                    6
#define ESW_MMSR_CELLS_AVAIL_MASK                0xFF0000u
#define ESW_MMSR_CELLS_AVAIL_SHIFT               16
#define ESW_MMSR_CELLS_AVAIL(x)                  (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_CELLS_AVAIL_SHIFT))&ESW_MMSR_CELLS_AVAIL_MASK)
/* LMT Bit Fields */
#define ESW_LMT_THRESH_MASK                      0xFFu
#define ESW_LMT_THRESH_SHIFT                     0
#define ESW_LMT_THRESH(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_LMT_THRESH_SHIFT))&ESW_LMT_THRESH_MASK)
/* LFC Bit Fields */
#define ESW_LFC_COUNT_MASK                       0xFFFFFFFFu
#define ESW_LFC_COUNT_SHIFT                      0
#define ESW_LFC_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_LFC_COUNT_SHIFT))&ESW_LFC_COUNT_MASK)
/* PCSR Bit Fields */
#define ESW_PCSR_PC0_MASK                        0x1u
#define ESW_PCSR_PC0_SHIFT                       0
#define ESW_PCSR_PC1_MASK                        0x2u
#define ESW_PCSR_PC1_SHIFT                       1
#define ESW_PCSR_PC2_MASK                        0x4u
#define ESW_PCSR_PC2_SHIFT                       2
/* IOSR Bit Fields */
#define ESW_IOSR_OR0_MASK                        0x1u
#define ESW_IOSR_OR0_SHIFT                       0
#define ESW_IOSR_OR1_MASK                        0x2u
#define ESW_IOSR_OR1_SHIFT                       1
#define ESW_IOSR_OR2_MASK                        0x4u
#define ESW_IOSR_OR2_SHIFT                       2
#define ESW_IOSR_IR0_MASK                        0x10000u
#define ESW_IOSR_IR0_SHIFT                       16
#define ESW_IOSR_IR1_MASK                        0x20000u
#define ESW_IOSR_IR1_SHIFT                       17
#define ESW_IOSR_IR2_MASK                        0x40000u
#define ESW_IOSR_IR2_SHIFT                       18
/* QWT Bit Fields */
#define ESW_QWT_Q0WT_MASK                        0x1Fu
#define ESW_QWT_Q0WT_SHIFT                       0
#define ESW_QWT_Q0WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q0WT_SHIFT))&ESW_QWT_Q0WT_MASK)
#define ESW_QWT_Q1WT_MASK                        0x1F00u
#define ESW_QWT_Q1WT_SHIFT                       8
#define ESW_QWT_Q1WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q1WT_SHIFT))&ESW_QWT_Q1WT_MASK)
#define ESW_QWT_Q2WT_MASK                        0x1F0000u
#define ESW_QWT_Q2WT_SHIFT                       16
#define ESW_QWT_Q2WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q2WT_SHIFT))&ESW_QWT_Q2WT_MASK)
#define ESW_QWT_Q3WT_MASK                        0x1F000000u
#define ESW_QWT_Q3WT_SHIFT                       24
#define ESW_QWT_Q3WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q3WT_SHIFT))&ESW_QWT_Q3WT_MASK)
/* P0BCT Bit Fields */
#define ESW_P0BCT_THRESH_MASK                    0xFFu
#define ESW_P0BCT_THRESH_SHIFT                   0
#define ESW_P0BCT_THRESH(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P0BCT_THRESH_SHIFT))&ESW_P0BCT_THRESH_MASK)
/* FFEN Bit Fields */
#define ESW_FFEN_FEN_MASK                        0x1u
#define ESW_FFEN_FEN_SHIFT                       0
#define ESW_FFEN_FD_MASK                         0xCu
#define ESW_FFEN_FD_SHIFT                        2
#define ESW_FFEN_FD(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_FFEN_FD_SHIFT))&ESW_FFEN_FD_MASK)
/* PSNP1 Bit Fields */
#define ESW_PSNP1_EN_MASK                        0x1u
#define ESW_PSNP1_EN_SHIFT                       0
#define ESW_PSNP1_MODE_MASK                      0x6u
#define ESW_PSNP1_MODE_SHIFT                     1
#define ESW_PSNP1_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_MODE_SHIFT))&ESW_PSNP1_MODE_MASK)
#define ESW_PSNP1_CD_MASK                        0x8u
#define ESW_PSNP1_CD_SHIFT                       3
#define ESW_PSNP1_CS_MASK                        0x10u
#define ESW_PSNP1_CS_SHIFT                       4
#define ESW_PSNP1_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP1_PORT_COMPARE_SHIFT             16
#define ESW_PSNP1_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_PORT_COMPARE_SHIFT))&ESW_PSNP1_PORT_COMPARE_MASK)
/* PSNP2 Bit Fields */
#define ESW_PSNP2_EN_MASK                        0x1u
#define ESW_PSNP2_EN_SHIFT                       0
#define ESW_PSNP2_MODE_MASK                      0x6u
#define ESW_PSNP2_MODE_SHIFT                     1
#define ESW_PSNP2_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_MODE_SHIFT))&ESW_PSNP2_MODE_MASK)
#define ESW_PSNP2_CD_MASK                        0x8u
#define ESW_PSNP2_CD_SHIFT                       3
#define ESW_PSNP2_CS_MASK                        0x10u
#define ESW_PSNP2_CS_SHIFT                       4
#define ESW_PSNP2_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP2_PORT_COMPARE_SHIFT             16
#define ESW_PSNP2_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_PORT_COMPARE_SHIFT))&ESW_PSNP2_PORT_COMPARE_MASK)
/* PSNP3 Bit Fields */
#define ESW_PSNP3_EN_MASK                        0x1u
#define ESW_PSNP3_EN_SHIFT                       0
#define ESW_PSNP3_MODE_MASK                      0x6u
#define ESW_PSNP3_MODE_SHIFT                     1
#define ESW_PSNP3_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_MODE_SHIFT))&ESW_PSNP3_MODE_MASK)
#define ESW_PSNP3_CD_MASK                        0x8u
#define ESW_PSNP3_CD_SHIFT                       3
#define ESW_PSNP3_CS_MASK                        0x10u
#define ESW_PSNP3_CS_SHIFT                       4
#define ESW_PSNP3_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP3_PORT_COMPARE_SHIFT             16
#define ESW_PSNP3_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_PORT_COMPARE_SHIFT))&ESW_PSNP3_PORT_COMPARE_MASK)
/* PSNP4 Bit Fields */
#define ESW_PSNP4_EN_MASK                        0x1u
#define ESW_PSNP4_EN_SHIFT                       0
#define ESW_PSNP4_MODE_MASK                      0x6u
#define ESW_PSNP4_MODE_SHIFT                     1
#define ESW_PSNP4_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_MODE_SHIFT))&ESW_PSNP4_MODE_MASK)
#define ESW_PSNP4_CD_MASK                        0x8u
#define ESW_PSNP4_CD_SHIFT                       3
#define ESW_PSNP4_CS_MASK                        0x10u
#define ESW_PSNP4_CS_SHIFT                       4
#define ESW_PSNP4_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP4_PORT_COMPARE_SHIFT             16
#define ESW_PSNP4_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_PORT_COMPARE_SHIFT))&ESW_PSNP4_PORT_COMPARE_MASK)
/* PSNP5 Bit Fields */
#define ESW_PSNP5_EN_MASK                        0x1u
#define ESW_PSNP5_EN_SHIFT                       0
#define ESW_PSNP5_MODE_MASK                      0x6u
#define ESW_PSNP5_MODE_SHIFT                     1
#define ESW_PSNP5_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_MODE_SHIFT))&ESW_PSNP5_MODE_MASK)
#define ESW_PSNP5_CD_MASK                        0x8u
#define ESW_PSNP5_CD_SHIFT                       3
#define ESW_PSNP5_CS_MASK                        0x10u
#define ESW_PSNP5_CS_SHIFT                       4
#define ESW_PSNP5_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP5_PORT_COMPARE_SHIFT             16
#define ESW_PSNP5_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_PORT_COMPARE_SHIFT))&ESW_PSNP5_PORT_COMPARE_MASK)
/* PSNP6 Bit Fields */
#define ESW_PSNP6_EN_MASK                        0x1u
#define ESW_PSNP6_EN_SHIFT                       0
#define ESW_PSNP6_MODE_MASK                      0x6u
#define ESW_PSNP6_MODE_SHIFT                     1
#define ESW_PSNP6_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_MODE_SHIFT))&ESW_PSNP6_MODE_MASK)
#define ESW_PSNP6_CD_MASK                        0x8u
#define ESW_PSNP6_CD_SHIFT                       3
#define ESW_PSNP6_CS_MASK                        0x10u
#define ESW_PSNP6_CS_SHIFT                       4
#define ESW_PSNP6_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP6_PORT_COMPARE_SHIFT             16
#define ESW_PSNP6_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_PORT_COMPARE_SHIFT))&ESW_PSNP6_PORT_COMPARE_MASK)
/* PSNP7 Bit Fields */
#define ESW_PSNP7_EN_MASK                        0x1u
#define ESW_PSNP7_EN_SHIFT                       0
#define ESW_PSNP7_MODE_MASK                      0x6u
#define ESW_PSNP7_MODE_SHIFT                     1
#define ESW_PSNP7_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_MODE_SHIFT))&ESW_PSNP7_MODE_MASK)
#define ESW_PSNP7_CD_MASK                        0x8u
#define ESW_PSNP7_CD_SHIFT                       3
#define ESW_PSNP7_CS_MASK                        0x10u
#define ESW_PSNP7_CS_SHIFT                       4
#define ESW_PSNP7_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP7_PORT_COMPARE_SHIFT             16
#define ESW_PSNP7_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_PORT_COMPARE_SHIFT))&ESW_PSNP7_PORT_COMPARE_MASK)
/* PSNP8 Bit Fields */
#define ESW_PSNP8_EN_MASK                        0x1u
#define ESW_PSNP8_EN_SHIFT                       0
#define ESW_PSNP8_MODE_MASK                      0x6u
#define ESW_PSNP8_MODE_SHIFT                     1
#define ESW_PSNP8_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_MODE_SHIFT))&ESW_PSNP8_MODE_MASK)
#define ESW_PSNP8_CD_MASK                        0x8u
#define ESW_PSNP8_CD_SHIFT                       3
#define ESW_PSNP8_CS_MASK                        0x10u
#define ESW_PSNP8_CS_SHIFT                       4
#define ESW_PSNP8_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP8_PORT_COMPARE_SHIFT             16
#define ESW_PSNP8_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_PORT_COMPARE_SHIFT))&ESW_PSNP8_PORT_COMPARE_MASK)
/* IPSNP1 Bit Fields */
#define ESW_IPSNP1_EN_MASK                       0x1u
#define ESW_IPSNP1_EN_SHIFT                      0
#define ESW_IPSNP1_MODE_MASK                     0x6u
#define ESW_IPSNP1_MODE_SHIFT                    1
#define ESW_IPSNP1_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP1_MODE_SHIFT))&ESW_IPSNP1_MODE_MASK)
#define ESW_IPSNP1_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP1_PROTOCOL_SHIFT                8
#define ESW_IPSNP1_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP1_PROTOCOL_SHIFT))&ESW_IPSNP1_PROTOCOL_MASK)
/* IPSNP2 Bit Fields */
#define ESW_IPSNP2_EN_MASK                       0x1u
#define ESW_IPSNP2_EN_SHIFT                      0
#define ESW_IPSNP2_MODE_MASK                     0x6u
#define ESW_IPSNP2_MODE_SHIFT                    1
#define ESW_IPSNP2_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP2_MODE_SHIFT))&ESW_IPSNP2_MODE_MASK)
#define ESW_IPSNP2_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP2_PROTOCOL_SHIFT                8
#define ESW_IPSNP2_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP2_PROTOCOL_SHIFT))&ESW_IPSNP2_PROTOCOL_MASK)
/* IPSNP3 Bit Fields */
#define ESW_IPSNP3_EN_MASK                       0x1u
#define ESW_IPSNP3_EN_SHIFT                      0
#define ESW_IPSNP3_MODE_MASK                     0x6u
#define ESW_IPSNP3_MODE_SHIFT                    1
#define ESW_IPSNP3_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP3_MODE_SHIFT))&ESW_IPSNP3_MODE_MASK)
#define ESW_IPSNP3_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP3_PROTOCOL_SHIFT                8
#define ESW_IPSNP3_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP3_PROTOCOL_SHIFT))&ESW_IPSNP3_PROTOCOL_MASK)
/* IPSNP4 Bit Fields */
#define ESW_IPSNP4_EN_MASK                       0x1u
#define ESW_IPSNP4_EN_SHIFT                      0
#define ESW_IPSNP4_MODE_MASK                     0x6u
#define ESW_IPSNP4_MODE_SHIFT                    1
#define ESW_IPSNP4_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP4_MODE_SHIFT))&ESW_IPSNP4_MODE_MASK)
#define ESW_IPSNP4_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP4_PROTOCOL_SHIFT                8
#define ESW_IPSNP4_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP4_PROTOCOL_SHIFT))&ESW_IPSNP4_PROTOCOL_MASK)
/* IPSNP5 Bit Fields */
#define ESW_IPSNP5_EN_MASK                       0x1u
#define ESW_IPSNP5_EN_SHIFT                      0
#define ESW_IPSNP5_MODE_MASK                     0x6u
#define ESW_IPSNP5_MODE_SHIFT                    1
#define ESW_IPSNP5_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP5_MODE_SHIFT))&ESW_IPSNP5_MODE_MASK)
#define ESW_IPSNP5_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP5_PROTOCOL_SHIFT                8
#define ESW_IPSNP5_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP5_PROTOCOL_SHIFT))&ESW_IPSNP5_PROTOCOL_MASK)
/* IPSNP6 Bit Fields */
#define ESW_IPSNP6_EN_MASK                       0x1u
#define ESW_IPSNP6_EN_SHIFT                      0
#define ESW_IPSNP6_MODE_MASK                     0x6u
#define ESW_IPSNP6_MODE_SHIFT                    1
#define ESW_IPSNP6_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP6_MODE_SHIFT))&ESW_IPSNP6_MODE_MASK)
#define ESW_IPSNP6_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP6_PROTOCOL_SHIFT                8
#define ESW_IPSNP6_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP6_PROTOCOL_SHIFT))&ESW_IPSNP6_PROTOCOL_MASK)
/* IPSNP7 Bit Fields */
#define ESW_IPSNP7_EN_MASK                       0x1u
#define ESW_IPSNP7_EN_SHIFT                      0
#define ESW_IPSNP7_MODE_MASK                     0x6u
#define ESW_IPSNP7_MODE_SHIFT                    1
#define ESW_IPSNP7_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP7_MODE_SHIFT))&ESW_IPSNP7_MODE_MASK)
#define ESW_IPSNP7_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP7_PROTOCOL_SHIFT                8
#define ESW_IPSNP7_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP7_PROTOCOL_SHIFT))&ESW_IPSNP7_PROTOCOL_MASK)
/* IPSNP8 Bit Fields */
#define ESW_IPSNP8_EN_MASK                       0x1u
#define ESW_IPSNP8_EN_SHIFT                      0
#define ESW_IPSNP8_MODE_MASK                     0x6u
#define ESW_IPSNP8_MODE_SHIFT                    1
#define ESW_IPSNP8_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP8_MODE_SHIFT))&ESW_IPSNP8_MODE_MASK)
#define ESW_IPSNP8_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP8_PROTOCOL_SHIFT                8
#define ESW_IPSNP8_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP8_PROTOCOL_SHIFT))&ESW_IPSNP8_PROTOCOL_MASK)
/* P0VRES Bit Fields */
#define ESW_P0VRES_PRI0_MASK                     0x7u
#define ESW_P0VRES_PRI0_SHIFT                    0
#define ESW_P0VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI0_SHIFT))&ESW_P0VRES_PRI0_MASK)
#define ESW_P0VRES_PRI1_MASK                     0x38u
#define ESW_P0VRES_PRI1_SHIFT                    3
#define ESW_P0VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI1_SHIFT))&ESW_P0VRES_PRI1_MASK)
#define ESW_P0VRES_PRI2_MASK                     0x1C0u
#define ESW_P0VRES_PRI2_SHIFT                    6
#define ESW_P0VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI2_SHIFT))&ESW_P0VRES_PRI2_MASK)
#define ESW_P0VRES_PRI3_MASK                     0xE00u
#define ESW_P0VRES_PRI3_SHIFT                    9
#define ESW_P0VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI3_SHIFT))&ESW_P0VRES_PRI3_MASK)
#define ESW_P0VRES_PRI4_MASK                     0x7000u
#define ESW_P0VRES_PRI4_SHIFT                    12
#define ESW_P0VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI4_SHIFT))&ESW_P0VRES_PRI4_MASK)
#define ESW_P0VRES_PRI5_MASK                     0x38000u
#define ESW_P0VRES_PRI5_SHIFT                    15
#define ESW_P0VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI5_SHIFT))&ESW_P0VRES_PRI5_MASK)
#define ESW_P0VRES_PRI6_MASK                     0x1C0000u
#define ESW_P0VRES_PRI6_SHIFT                    18
#define ESW_P0VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI6_SHIFT))&ESW_P0VRES_PRI6_MASK)
#define ESW_P0VRES_PRI7_MASK                     0xE00000u
#define ESW_P0VRES_PRI7_SHIFT                    21
#define ESW_P0VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI7_SHIFT))&ESW_P0VRES_PRI7_MASK)
/* P1VRES Bit Fields */
#define ESW_P1VRES_PRI0_MASK                     0x7u
#define ESW_P1VRES_PRI0_SHIFT                    0
#define ESW_P1VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI0_SHIFT))&ESW_P1VRES_PRI0_MASK)
#define ESW_P1VRES_PRI1_MASK                     0x38u
#define ESW_P1VRES_PRI1_SHIFT                    3
#define ESW_P1VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI1_SHIFT))&ESW_P1VRES_PRI1_MASK)
#define ESW_P1VRES_PRI2_MASK                     0x1C0u
#define ESW_P1VRES_PRI2_SHIFT                    6
#define ESW_P1VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI2_SHIFT))&ESW_P1VRES_PRI2_MASK)
#define ESW_P1VRES_PRI3_MASK                     0xE00u
#define ESW_P1VRES_PRI3_SHIFT                    9
#define ESW_P1VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI3_SHIFT))&ESW_P1VRES_PRI3_MASK)
#define ESW_P1VRES_PRI4_MASK                     0x7000u
#define ESW_P1VRES_PRI4_SHIFT                    12
#define ESW_P1VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI4_SHIFT))&ESW_P1VRES_PRI4_MASK)
#define ESW_P1VRES_PRI5_MASK                     0x38000u
#define ESW_P1VRES_PRI5_SHIFT                    15
#define ESW_P1VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI5_SHIFT))&ESW_P1VRES_PRI5_MASK)
#define ESW_P1VRES_PRI6_MASK                     0x1C0000u
#define ESW_P1VRES_PRI6_SHIFT                    18
#define ESW_P1VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI6_SHIFT))&ESW_P1VRES_PRI6_MASK)
#define ESW_P1VRES_PRI7_MASK                     0xE00000u
#define ESW_P1VRES_PRI7_SHIFT                    21
#define ESW_P1VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI7_SHIFT))&ESW_P1VRES_PRI7_MASK)
/* P2VRES Bit Fields */
#define ESW_P2VRES_PRI0_MASK                     0x7u
#define ESW_P2VRES_PRI0_SHIFT                    0
#define ESW_P2VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI0_SHIFT))&ESW_P2VRES_PRI0_MASK)
#define ESW_P2VRES_PRI1_MASK                     0x38u
#define ESW_P2VRES_PRI1_SHIFT                    3
#define ESW_P2VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI1_SHIFT))&ESW_P2VRES_PRI1_MASK)
#define ESW_P2VRES_PRI2_MASK                     0x1C0u
#define ESW_P2VRES_PRI2_SHIFT                    6
#define ESW_P2VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI2_SHIFT))&ESW_P2VRES_PRI2_MASK)
#define ESW_P2VRES_PRI3_MASK                     0xE00u
#define ESW_P2VRES_PRI3_SHIFT                    9
#define ESW_P2VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI3_SHIFT))&ESW_P2VRES_PRI3_MASK)
#define ESW_P2VRES_PRI4_MASK                     0x7000u
#define ESW_P2VRES_PRI4_SHIFT                    12
#define ESW_P2VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI4_SHIFT))&ESW_P2VRES_PRI4_MASK)
#define ESW_P2VRES_PRI5_MASK                     0x38000u
#define ESW_P2VRES_PRI5_SHIFT                    15
#define ESW_P2VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI5_SHIFT))&ESW_P2VRES_PRI5_MASK)
#define ESW_P2VRES_PRI6_MASK                     0x1C0000u
#define ESW_P2VRES_PRI6_SHIFT                    18
#define ESW_P2VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI6_SHIFT))&ESW_P2VRES_PRI6_MASK)
#define ESW_P2VRES_PRI7_MASK                     0xE00000u
#define ESW_P2VRES_PRI7_SHIFT                    21
#define ESW_P2VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI7_SHIFT))&ESW_P2VRES_PRI7_MASK)
/* IPRES Bit Fields */
#define ESW_IPRES_ADDRESS_MASK                   0xFFu
#define ESW_IPRES_ADDRESS_SHIFT                  0
#define ESW_IPRES_ADDRESS(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_ADDRESS_SHIFT))&ESW_IPRES_ADDRESS_MASK)
#define ESW_IPRES_IPV4SEL_MASK                   0x100u
#define ESW_IPRES_IPV4SEL_SHIFT                  8
#define ESW_IPRES_PRI0_MASK                      0x600u
#define ESW_IPRES_PRI0_SHIFT                     9
#define ESW_IPRES_PRI0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI0_SHIFT))&ESW_IPRES_PRI0_MASK)
#define ESW_IPRES_PRI1_MASK                      0x1800u
#define ESW_IPRES_PRI1_SHIFT                     11
#define ESW_IPRES_PRI1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI1_SHIFT))&ESW_IPRES_PRI1_MASK)
#define ESW_IPRES_PRI2_MASK                      0x6000u
#define ESW_IPRES_PRI2_SHIFT                     13
#define ESW_IPRES_PRI2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI2_SHIFT))&ESW_IPRES_PRI2_MASK)
#define ESW_IPRES_READ_MASK                      0x80000000u
#define ESW_IPRES_READ_SHIFT                     31
/* P0RES Bit Fields */
#define ESW_P0RES_VLAN_MASK                      0x1u
#define ESW_P0RES_VLAN_SHIFT                     0
#define ESW_P0RES_IP_MASK                        0x2u
#define ESW_P0RES_IP_SHIFT                       1
#define ESW_P0RES_MAC_MASK                       0x4u
#define ESW_P0RES_MAC_SHIFT                      2
#define ESW_P0RES_DFLT_PRI_MASK                  0x70u
#define ESW_P0RES_DFLT_PRI_SHIFT                 4
#define ESW_P0RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P0RES_DFLT_PRI_SHIFT))&ESW_P0RES_DFLT_PRI_MASK)
/* P1RES Bit Fields */
#define ESW_P1RES_VLAN_MASK                      0x1u
#define ESW_P1RES_VLAN_SHIFT                     0
#define ESW_P1RES_IP_MASK                        0x2u
#define ESW_P1RES_IP_SHIFT                       1
#define ESW_P1RES_MAC_MASK                       0x4u
#define ESW_P1RES_MAC_SHIFT                      2
#define ESW_P1RES_DFLT_PRI_MASK                  0x70u
#define ESW_P1RES_DFLT_PRI_SHIFT                 4
#define ESW_P1RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P1RES_DFLT_PRI_SHIFT))&ESW_P1RES_DFLT_PRI_MASK)
/* P2RES Bit Fields */
#define ESW_P2RES_VLAN_MASK                      0x1u
#define ESW_P2RES_VLAN_SHIFT                     0
#define ESW_P2RES_IP_MASK                        0x2u
#define ESW_P2RES_IP_SHIFT                       1
#define ESW_P2RES_MAC_MASK                       0x4u
#define ESW_P2RES_MAC_SHIFT                      2
#define ESW_P2RES_DFLT_PRI_MASK                  0x70u
#define ESW_P2RES_DFLT_PRI_SHIFT                 4
#define ESW_P2RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P2RES_DFLT_PRI_SHIFT))&ESW_P2RES_DFLT_PRI_MASK)
/* P0ID Bit Fields */
#define ESW_P0ID_VLANID_MASK                     0xFFFFu
#define ESW_P0ID_VLANID_SHIFT                    0
#define ESW_P0ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0ID_VLANID_SHIFT))&ESW_P0ID_VLANID_MASK)
/* P1ID Bit Fields */
#define ESW_P1ID_VLANID_MASK                     0xFFFFu
#define ESW_P1ID_VLANID_SHIFT                    0
#define ESW_P1ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1ID_VLANID_SHIFT))&ESW_P1ID_VLANID_MASK)
/* P2ID Bit Fields */
#define ESW_P2ID_VLANID_MASK                     0xFFFFu
#define ESW_P2ID_VLANID_SHIFT                    0
#define ESW_P2ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2ID_VLANID_SHIFT))&ESW_P2ID_VLANID_MASK)
/* VRES0 Bit Fields */
#define ESW_VRES0_P0_MASK                        0x1u
#define ESW_VRES0_P0_SHIFT                       0
#define ESW_VRES0_P1_MASK                        0x2u
#define ESW_VRES0_P1_SHIFT                       1
#define ESW_VRES0_P2_MASK                        0x4u
#define ESW_VRES0_P2_SHIFT                       2
#define ESW_VRES0_VLANID_MASK                    0x7FF8u
#define ESW_VRES0_VLANID_SHIFT                   3
#define ESW_VRES0_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES0_VLANID_SHIFT))&ESW_VRES0_VLANID_MASK)
/* VRES1 Bit Fields */
#define ESW_VRES1_P0_MASK                        0x1u
#define ESW_VRES1_P0_SHIFT                       0
#define ESW_VRES1_P1_MASK                        0x2u
#define ESW_VRES1_P1_SHIFT                       1
#define ESW_VRES1_P2_MASK                        0x4u
#define ESW_VRES1_P2_SHIFT                       2
#define ESW_VRES1_VLANID_MASK                    0x7FF8u
#define ESW_VRES1_VLANID_SHIFT                   3
#define ESW_VRES1_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES1_VLANID_SHIFT))&ESW_VRES1_VLANID_MASK)
/* VRES2 Bit Fields */
#define ESW_VRES2_P0_MASK                        0x1u
#define ESW_VRES2_P0_SHIFT                       0
#define ESW_VRES2_P1_MASK                        0x2u
#define ESW_VRES2_P1_SHIFT                       1
#define ESW_VRES2_P2_MASK                        0x4u
#define ESW_VRES2_P2_SHIFT                       2
#define ESW_VRES2_VLANID_MASK                    0x7FF8u
#define ESW_VRES2_VLANID_SHIFT                   3
#define ESW_VRES2_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES2_VLANID_SHIFT))&ESW_VRES2_VLANID_MASK)
/* VRES3 Bit Fields */
#define ESW_VRES3_P0_MASK                        0x1u
#define ESW_VRES3_P0_SHIFT                       0
#define ESW_VRES3_P1_MASK                        0x2u
#define ESW_VRES3_P1_SHIFT                       1
#define ESW_VRES3_P2_MASK                        0x4u
#define ESW_VRES3_P2_SHIFT                       2
#define ESW_VRES3_VLANID_MASK                    0x7FF8u
#define ESW_VRES3_VLANID_SHIFT                   3
#define ESW_VRES3_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES3_VLANID_SHIFT))&ESW_VRES3_VLANID_MASK)
/* VRES4 Bit Fields */
#define ESW_VRES4_P0_MASK                        0x1u
#define ESW_VRES4_P0_SHIFT                       0
#define ESW_VRES4_P1_MASK                        0x2u
#define ESW_VRES4_P1_SHIFT                       1
#define ESW_VRES4_P2_MASK                        0x4u
#define ESW_VRES4_P2_SHIFT                       2
#define ESW_VRES4_VLANID_MASK                    0x7FF8u
#define ESW_VRES4_VLANID_SHIFT                   3
#define ESW_VRES4_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES4_VLANID_SHIFT))&ESW_VRES4_VLANID_MASK)
/* VRES5 Bit Fields */
#define ESW_VRES5_P0_MASK                        0x1u
#define ESW_VRES5_P0_SHIFT                       0
#define ESW_VRES5_P1_MASK                        0x2u
#define ESW_VRES5_P1_SHIFT                       1
#define ESW_VRES5_P2_MASK                        0x4u
#define ESW_VRES5_P2_SHIFT                       2
#define ESW_VRES5_VLANID_MASK                    0x7FF8u
#define ESW_VRES5_VLANID_SHIFT                   3
#define ESW_VRES5_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES5_VLANID_SHIFT))&ESW_VRES5_VLANID_MASK)
/* VRES6 Bit Fields */
#define ESW_VRES6_P0_MASK                        0x1u
#define ESW_VRES6_P0_SHIFT                       0
#define ESW_VRES6_P1_MASK                        0x2u
#define ESW_VRES6_P1_SHIFT                       1
#define ESW_VRES6_P2_MASK                        0x4u
#define ESW_VRES6_P2_SHIFT                       2
#define ESW_VRES6_VLANID_MASK                    0x7FF8u
#define ESW_VRES6_VLANID_SHIFT                   3
#define ESW_VRES6_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES6_VLANID_SHIFT))&ESW_VRES6_VLANID_MASK)
/* VRES7 Bit Fields */
#define ESW_VRES7_P0_MASK                        0x1u
#define ESW_VRES7_P0_SHIFT                       0
#define ESW_VRES7_P1_MASK                        0x2u
#define ESW_VRES7_P1_SHIFT                       1
#define ESW_VRES7_P2_MASK                        0x4u
#define ESW_VRES7_P2_SHIFT                       2
#define ESW_VRES7_VLANID_MASK                    0x7FF8u
#define ESW_VRES7_VLANID_SHIFT                   3
#define ESW_VRES7_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES7_VLANID_SHIFT))&ESW_VRES7_VLANID_MASK)
/* VRES8 Bit Fields */
#define ESW_VRES8_P0_MASK                        0x1u
#define ESW_VRES8_P0_SHIFT                       0
#define ESW_VRES8_P1_MASK                        0x2u
#define ESW_VRES8_P1_SHIFT                       1
#define ESW_VRES8_P2_MASK                        0x4u
#define ESW_VRES8_P2_SHIFT                       2
#define ESW_VRES8_VLANID_MASK                    0x7FF8u
#define ESW_VRES8_VLANID_SHIFT                   3
#define ESW_VRES8_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES8_VLANID_SHIFT))&ESW_VRES8_VLANID_MASK)
/* VRES9 Bit Fields */
#define ESW_VRES9_P0_MASK                        0x1u
#define ESW_VRES9_P0_SHIFT                       0
#define ESW_VRES9_P1_MASK                        0x2u
#define ESW_VRES9_P1_SHIFT                       1
#define ESW_VRES9_P2_MASK                        0x4u
#define ESW_VRES9_P2_SHIFT                       2
#define ESW_VRES9_VLANID_MASK                    0x7FF8u
#define ESW_VRES9_VLANID_SHIFT                   3
#define ESW_VRES9_VLANID(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_VRES9_VLANID_SHIFT))&ESW_VRES9_VLANID_MASK)
/* VRES10 Bit Fields */
#define ESW_VRES10_P0_MASK                       0x1u
#define ESW_VRES10_P0_SHIFT                      0
#define ESW_VRES10_P1_MASK                       0x2u
#define ESW_VRES10_P1_SHIFT                      1
#define ESW_VRES10_P2_MASK                       0x4u
#define ESW_VRES10_P2_SHIFT                      2
#define ESW_VRES10_VLANID_MASK                   0x7FF8u
#define ESW_VRES10_VLANID_SHIFT                  3
#define ESW_VRES10_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES10_VLANID_SHIFT))&ESW_VRES10_VLANID_MASK)
/* VRES11 Bit Fields */
#define ESW_VRES11_P0_MASK                       0x1u
#define ESW_VRES11_P0_SHIFT                      0
#define ESW_VRES11_P1_MASK                       0x2u
#define ESW_VRES11_P1_SHIFT                      1
#define ESW_VRES11_P2_MASK                       0x4u
#define ESW_VRES11_P2_SHIFT                      2
#define ESW_VRES11_VLANID_MASK                   0x7FF8u
#define ESW_VRES11_VLANID_SHIFT                  3
#define ESW_VRES11_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES11_VLANID_SHIFT))&ESW_VRES11_VLANID_MASK)
/* VRES12 Bit Fields */
#define ESW_VRES12_P0_MASK                       0x1u
#define ESW_VRES12_P0_SHIFT                      0
#define ESW_VRES12_P1_MASK                       0x2u
#define ESW_VRES12_P1_SHIFT                      1
#define ESW_VRES12_P2_MASK                       0x4u
#define ESW_VRES12_P2_SHIFT                      2
#define ESW_VRES12_VLANID_MASK                   0x7FF8u
#define ESW_VRES12_VLANID_SHIFT                  3
#define ESW_VRES12_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES12_VLANID_SHIFT))&ESW_VRES12_VLANID_MASK)
/* VRES13 Bit Fields */
#define ESW_VRES13_P0_MASK                       0x1u
#define ESW_VRES13_P0_SHIFT                      0
#define ESW_VRES13_P1_MASK                       0x2u
#define ESW_VRES13_P1_SHIFT                      1
#define ESW_VRES13_P2_MASK                       0x4u
#define ESW_VRES13_P2_SHIFT                      2
#define ESW_VRES13_VLANID_MASK                   0x7FF8u
#define ESW_VRES13_VLANID_SHIFT                  3
#define ESW_VRES13_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES13_VLANID_SHIFT))&ESW_VRES13_VLANID_MASK)
/* VRES14 Bit Fields */
#define ESW_VRES14_P0_MASK                       0x1u
#define ESW_VRES14_P0_SHIFT                      0
#define ESW_VRES14_P1_MASK                       0x2u
#define ESW_VRES14_P1_SHIFT                      1
#define ESW_VRES14_P2_MASK                       0x4u
#define ESW_VRES14_P2_SHIFT                      2
#define ESW_VRES14_VLANID_MASK                   0x7FF8u
#define ESW_VRES14_VLANID_SHIFT                  3
#define ESW_VRES14_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES14_VLANID_SHIFT))&ESW_VRES14_VLANID_MASK)
/* VRES15 Bit Fields */
#define ESW_VRES15_P0_MASK                       0x1u
#define ESW_VRES15_P0_SHIFT                      0
#define ESW_VRES15_P1_MASK                       0x2u
#define ESW_VRES15_P1_SHIFT                      1
#define ESW_VRES15_P2_MASK                       0x4u
#define ESW_VRES15_P2_SHIFT                      2
#define ESW_VRES15_VLANID_MASK                   0x7FF8u
#define ESW_VRES15_VLANID_SHIFT                  3
#define ESW_VRES15_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES15_VLANID_SHIFT))&ESW_VRES15_VLANID_MASK)
/* VRES16 Bit Fields */
#define ESW_VRES16_P0_MASK                       0x1u
#define ESW_VRES16_P0_SHIFT                      0
#define ESW_VRES16_P1_MASK                       0x2u
#define ESW_VRES16_P1_SHIFT                      1
#define ESW_VRES16_P2_MASK                       0x4u
#define ESW_VRES16_P2_SHIFT                      2
#define ESW_VRES16_VLANID_MASK                   0x7FF8u
#define ESW_VRES16_VLANID_SHIFT                  3
#define ESW_VRES16_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES16_VLANID_SHIFT))&ESW_VRES16_VLANID_MASK)
/* VRES17 Bit Fields */
#define ESW_VRES17_P0_MASK                       0x1u
#define ESW_VRES17_P0_SHIFT                      0
#define ESW_VRES17_P1_MASK                       0x2u
#define ESW_VRES17_P1_SHIFT                      1
#define ESW_VRES17_P2_MASK                       0x4u
#define ESW_VRES17_P2_SHIFT                      2
#define ESW_VRES17_VLANID_MASK                   0x7FF8u
#define ESW_VRES17_VLANID_SHIFT                  3
#define ESW_VRES17_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES17_VLANID_SHIFT))&ESW_VRES17_VLANID_MASK)
/* VRES18 Bit Fields */
#define ESW_VRES18_P0_MASK                       0x1u
#define ESW_VRES18_P0_SHIFT                      0
#define ESW_VRES18_P1_MASK                       0x2u
#define ESW_VRES18_P1_SHIFT                      1
#define ESW_VRES18_P2_MASK                       0x4u
#define ESW_VRES18_P2_SHIFT                      2
#define ESW_VRES18_VLANID_MASK                   0x7FF8u
#define ESW_VRES18_VLANID_SHIFT                  3
#define ESW_VRES18_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES18_VLANID_SHIFT))&ESW_VRES18_VLANID_MASK)
/* VRES19 Bit Fields */
#define ESW_VRES19_P0_MASK                       0x1u
#define ESW_VRES19_P0_SHIFT                      0
#define ESW_VRES19_P1_MASK                       0x2u
#define ESW_VRES19_P1_SHIFT                      1
#define ESW_VRES19_P2_MASK                       0x4u
#define ESW_VRES19_P2_SHIFT                      2
#define ESW_VRES19_VLANID_MASK                   0x7FF8u
#define ESW_VRES19_VLANID_SHIFT                  3
#define ESW_VRES19_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES19_VLANID_SHIFT))&ESW_VRES19_VLANID_MASK)
/* VRES20 Bit Fields */
#define ESW_VRES20_P0_MASK                       0x1u
#define ESW_VRES20_P0_SHIFT                      0
#define ESW_VRES20_P1_MASK                       0x2u
#define ESW_VRES20_P1_SHIFT                      1
#define ESW_VRES20_P2_MASK                       0x4u
#define ESW_VRES20_P2_SHIFT                      2
#define ESW_VRES20_VLANID_MASK                   0x7FF8u
#define ESW_VRES20_VLANID_SHIFT                  3
#define ESW_VRES20_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES20_VLANID_SHIFT))&ESW_VRES20_VLANID_MASK)
/* VRES21 Bit Fields */
#define ESW_VRES21_P0_MASK                       0x1u
#define ESW_VRES21_P0_SHIFT                      0
#define ESW_VRES21_P1_MASK                       0x2u
#define ESW_VRES21_P1_SHIFT                      1
#define ESW_VRES21_P2_MASK                       0x4u
#define ESW_VRES21_P2_SHIFT                      2
#define ESW_VRES21_VLANID_MASK                   0x7FF8u
#define ESW_VRES21_VLANID_SHIFT                  3
#define ESW_VRES21_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES21_VLANID_SHIFT))&ESW_VRES21_VLANID_MASK)
/* VRES22 Bit Fields */
#define ESW_VRES22_P0_MASK                       0x1u
#define ESW_VRES22_P0_SHIFT                      0
#define ESW_VRES22_P1_MASK                       0x2u
#define ESW_VRES22_P1_SHIFT                      1
#define ESW_VRES22_P2_MASK                       0x4u
#define ESW_VRES22_P2_SHIFT                      2
#define ESW_VRES22_VLANID_MASK                   0x7FF8u
#define ESW_VRES22_VLANID_SHIFT                  3
#define ESW_VRES22_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES22_VLANID_SHIFT))&ESW_VRES22_VLANID_MASK)
/* VRES23 Bit Fields */
#define ESW_VRES23_P0_MASK                       0x1u
#define ESW_VRES23_P0_SHIFT                      0
#define ESW_VRES23_P1_MASK                       0x2u
#define ESW_VRES23_P1_SHIFT                      1
#define ESW_VRES23_P2_MASK                       0x4u
#define ESW_VRES23_P2_SHIFT                      2
#define ESW_VRES23_VLANID_MASK                   0x7FF8u
#define ESW_VRES23_VLANID_SHIFT                  3
#define ESW_VRES23_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES23_VLANID_SHIFT))&ESW_VRES23_VLANID_MASK)
/* VRES24 Bit Fields */
#define ESW_VRES24_P0_MASK                       0x1u
#define ESW_VRES24_P0_SHIFT                      0
#define ESW_VRES24_P1_MASK                       0x2u
#define ESW_VRES24_P1_SHIFT                      1
#define ESW_VRES24_P2_MASK                       0x4u
#define ESW_VRES24_P2_SHIFT                      2
#define ESW_VRES24_VLANID_MASK                   0x7FF8u
#define ESW_VRES24_VLANID_SHIFT                  3
#define ESW_VRES24_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES24_VLANID_SHIFT))&ESW_VRES24_VLANID_MASK)
/* VRES25 Bit Fields */
#define ESW_VRES25_P0_MASK                       0x1u
#define ESW_VRES25_P0_SHIFT                      0
#define ESW_VRES25_P1_MASK                       0x2u
#define ESW_VRES25_P1_SHIFT                      1
#define ESW_VRES25_P2_MASK                       0x4u
#define ESW_VRES25_P2_SHIFT                      2
#define ESW_VRES25_VLANID_MASK                   0x7FF8u
#define ESW_VRES25_VLANID_SHIFT                  3
#define ESW_VRES25_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES25_VLANID_SHIFT))&ESW_VRES25_VLANID_MASK)
/* VRES26 Bit Fields */
#define ESW_VRES26_P0_MASK                       0x1u
#define ESW_VRES26_P0_SHIFT                      0
#define ESW_VRES26_P1_MASK                       0x2u
#define ESW_VRES26_P1_SHIFT                      1
#define ESW_VRES26_P2_MASK                       0x4u
#define ESW_VRES26_P2_SHIFT                      2
#define ESW_VRES26_VLANID_MASK                   0x7FF8u
#define ESW_VRES26_VLANID_SHIFT                  3
#define ESW_VRES26_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES26_VLANID_SHIFT))&ESW_VRES26_VLANID_MASK)
/* VRES27 Bit Fields */
#define ESW_VRES27_P0_MASK                       0x1u
#define ESW_VRES27_P0_SHIFT                      0
#define ESW_VRES27_P1_MASK                       0x2u
#define ESW_VRES27_P1_SHIFT                      1
#define ESW_VRES27_P2_MASK                       0x4u
#define ESW_VRES27_P2_SHIFT                      2
#define ESW_VRES27_VLANID_MASK                   0x7FF8u
#define ESW_VRES27_VLANID_SHIFT                  3
#define ESW_VRES27_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES27_VLANID_SHIFT))&ESW_VRES27_VLANID_MASK)
/* VRES28 Bit Fields */
#define ESW_VRES28_P0_MASK                       0x1u
#define ESW_VRES28_P0_SHIFT                      0
#define ESW_VRES28_P1_MASK                       0x2u
#define ESW_VRES28_P1_SHIFT                      1
#define ESW_VRES28_P2_MASK                       0x4u
#define ESW_VRES28_P2_SHIFT                      2
#define ESW_VRES28_VLANID_MASK                   0x7FF8u
#define ESW_VRES28_VLANID_SHIFT                  3
#define ESW_VRES28_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES28_VLANID_SHIFT))&ESW_VRES28_VLANID_MASK)
/* VRES29 Bit Fields */
#define ESW_VRES29_P0_MASK                       0x1u
#define ESW_VRES29_P0_SHIFT                      0
#define ESW_VRES29_P1_MASK                       0x2u
#define ESW_VRES29_P1_SHIFT                      1
#define ESW_VRES29_P2_MASK                       0x4u
#define ESW_VRES29_P2_SHIFT                      2
#define ESW_VRES29_VLANID_MASK                   0x7FF8u
#define ESW_VRES29_VLANID_SHIFT                  3
#define ESW_VRES29_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES29_VLANID_SHIFT))&ESW_VRES29_VLANID_MASK)
/* VRES30 Bit Fields */
#define ESW_VRES30_P0_MASK                       0x1u
#define ESW_VRES30_P0_SHIFT                      0
#define ESW_VRES30_P1_MASK                       0x2u
#define ESW_VRES30_P1_SHIFT                      1
#define ESW_VRES30_P2_MASK                       0x4u
#define ESW_VRES30_P2_SHIFT                      2
#define ESW_VRES30_VLANID_MASK                   0x7FF8u
#define ESW_VRES30_VLANID_SHIFT                  3
#define ESW_VRES30_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES30_VLANID_SHIFT))&ESW_VRES30_VLANID_MASK)
/* VRES31 Bit Fields */
#define ESW_VRES31_P0_MASK                       0x1u
#define ESW_VRES31_P0_SHIFT                      0
#define ESW_VRES31_P1_MASK                       0x2u
#define ESW_VRES31_P1_SHIFT                      1
#define ESW_VRES31_P2_MASK                       0x4u
#define ESW_VRES31_P2_SHIFT                      2
#define ESW_VRES31_VLANID_MASK                   0x7FF8u
#define ESW_VRES31_VLANID_SHIFT                  3
#define ESW_VRES31_VLANID(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_VRES31_VLANID_SHIFT))&ESW_VRES31_VLANID_MASK)
/* DISCN Bit Fields */
#define ESW_DISCN_COUNT_MASK                     0xFFFFFFFFu
#define ESW_DISCN_COUNT_SHIFT                    0
#define ESW_DISCN_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_DISCN_COUNT_SHIFT))&ESW_DISCN_COUNT_MASK)
/* DISCB Bit Fields */
#define ESW_DISCB_COUNT_MASK                     0xFFFFFFFFu
#define ESW_DISCB_COUNT_SHIFT                    0
#define ESW_DISCB_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_DISCB_COUNT_SHIFT))&ESW_DISCB_COUNT_MASK)
/* NDISCN Bit Fields */
#define ESW_NDISCN_COUNT_MASK                    0xFFFFFFFFu
#define ESW_NDISCN_COUNT_SHIFT                   0
#define ESW_NDISCN_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_NDISCN_COUNT_SHIFT))&ESW_NDISCN_COUNT_MASK)
/* NDISCB Bit Fields */
#define ESW_NDISCB_COUNT_MASK                    0xFFFFFFFFu
#define ESW_NDISCB_COUNT_SHIFT                   0
#define ESW_NDISCB_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_NDISCB_COUNT_SHIFT))&ESW_NDISCB_COUNT_MASK)
/* P0OQC Bit Fields */
#define ESW_P0OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P0OQC_COUNT_SHIFT                    0
#define ESW_P0OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0OQC_COUNT_SHIFT))&ESW_P0OQC_COUNT_MASK)
/* P0MVID Bit Fields */
#define ESW_P0MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P0MVID_COUNT_SHIFT                   0
#define ESW_P0MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P0MVID_COUNT_SHIFT))&ESW_P0MVID_COUNT_MASK)
/* P0MVTAG Bit Fields */
#define ESW_P0MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P0MVTAG_COUNT_SHIFT                  0
#define ESW_P0MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P0MVTAG_COUNT_SHIFT))&ESW_P0MVTAG_COUNT_MASK)
/* P0BL Bit Fields */
#define ESW_P0BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P0BL_COUNT_SHIFT                     0
#define ESW_P0BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P0BL_COUNT_SHIFT))&ESW_P0BL_COUNT_MASK)
/* P1OQC Bit Fields */
#define ESW_P1OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P1OQC_COUNT_SHIFT                    0
#define ESW_P1OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1OQC_COUNT_SHIFT))&ESW_P1OQC_COUNT_MASK)
/* P1MVID Bit Fields */
#define ESW_P1MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P1MVID_COUNT_SHIFT                   0
#define ESW_P1MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P1MVID_COUNT_SHIFT))&ESW_P1MVID_COUNT_MASK)
/* P1MVTAG Bit Fields */
#define ESW_P1MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P1MVTAG_COUNT_SHIFT                  0
#define ESW_P1MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P1MVTAG_COUNT_SHIFT))&ESW_P1MVTAG_COUNT_MASK)
/* P1BL Bit Fields */
#define ESW_P1BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P1BL_COUNT_SHIFT                     0
#define ESW_P1BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P1BL_COUNT_SHIFT))&ESW_P1BL_COUNT_MASK)
/* P2OQC Bit Fields */
#define ESW_P2OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P2OQC_COUNT_SHIFT                    0
#define ESW_P2OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2OQC_COUNT_SHIFT))&ESW_P2OQC_COUNT_MASK)
/* P2MVID Bit Fields */
#define ESW_P2MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P2MVID_COUNT_SHIFT                   0
#define ESW_P2MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P2MVID_COUNT_SHIFT))&ESW_P2MVID_COUNT_MASK)
/* P2MVTAG Bit Fields */
#define ESW_P2MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P2MVTAG_COUNT_SHIFT                  0
#define ESW_P2MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P2MVTAG_COUNT_SHIFT))&ESW_P2MVTAG_COUNT_MASK)
/* P2BL Bit Fields */
#define ESW_P2BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P2BL_COUNT_SHIFT                     0
#define ESW_P2BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P2BL_COUNT_SHIFT))&ESW_P2BL_COUNT_MASK)
/* ISR Bit Fields */
#define ESW_ISR_EBERR_MASK                       0x1u
#define ESW_ISR_EBERR_SHIFT                      0
#define ESW_ISR_RXB_MASK                         0x2u
#define ESW_ISR_RXB_SHIFT                        1
#define ESW_ISR_RXF_MASK                         0x4u
#define ESW_ISR_RXF_SHIFT                        2
#define ESW_ISR_TXB_MASK                         0x8u
#define ESW_ISR_TXB_SHIFT                        3
#define ESW_ISR_TXF_MASK                         0x10u
#define ESW_ISR_TXF_SHIFT                        4
#define ESW_ISR_QM_MASK                          0x20u
#define ESW_ISR_QM_SHIFT                         5
#define ESW_ISR_OD0_MASK                         0x40u
#define ESW_ISR_OD0_SHIFT                        6
#define ESW_ISR_OD1_MASK                         0x80u
#define ESW_ISR_OD1_SHIFT                        7
#define ESW_ISR_OD2_MASK                         0x100u
#define ESW_ISR_OD2_SHIFT                        8
#define ESW_ISR_LRN_MASK                         0x200u
#define ESW_ISR_LRN_SHIFT                        9
/* IMR Bit Fields */
#define ESW_IMR_EBERR_MASK                       0x1u
#define ESW_IMR_EBERR_SHIFT                      0
#define ESW_IMR_RXB_MASK                         0x2u
#define ESW_IMR_RXB_SHIFT                        1
#define ESW_IMR_RXF_MASK                         0x4u
#define ESW_IMR_RXF_SHIFT                        2
#define ESW_IMR_TXB_MASK                         0x8u
#define ESW_IMR_TXB_SHIFT                        3
#define ESW_IMR_TXF_MASK                         0x10u
#define ESW_IMR_TXF_SHIFT                        4
#define ESW_IMR_QM_MASK                          0x20u
#define ESW_IMR_QM_SHIFT                         5
#define ESW_IMR_OD0_MASK                         0x40u
#define ESW_IMR_OD0_SHIFT                        6
#define ESW_IMR_OD1_MASK                         0x80u
#define ESW_IMR_OD1_SHIFT                        7
#define ESW_IMR_OD2_MASK                         0x100u
#define ESW_IMR_OD2_SHIFT                        8
#define ESW_IMR_LRN_MASK                         0x200u
#define ESW_IMR_LRN_SHIFT                        9
/* RDSR Bit Fields */
#define ESW_RDSR_ADDRESS_MASK                    0xFFFFFFFCu
#define ESW_RDSR_ADDRESS_SHIFT                   2
#define ESW_RDSR_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_RDSR_ADDRESS_SHIFT))&ESW_RDSR_ADDRESS_MASK)
/* TDSR Bit Fields */
#define ESW_TDSR_ADDRESS_MASK                    0xFFFFFFFCu
#define ESW_TDSR_ADDRESS_SHIFT                   2
#define ESW_TDSR_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_TDSR_ADDRESS_SHIFT))&ESW_TDSR_ADDRESS_MASK)
/* MRBR Bit Fields */
#define ESW_MRBR_SIZE_MASK                       0x3FF0u
#define ESW_MRBR_SIZE_SHIFT                      4
#define ESW_MRBR_SIZE(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MRBR_SIZE_SHIFT))&ESW_MRBR_SIZE_MASK)
/* RDAR Bit Fields */
#define ESW_RDAR_RDAR_MASK                       0x1000000u
#define ESW_RDAR_RDAR_SHIFT                      24
/* TDAR Bit Fields */
#define ESW_TDAR_TDAR_MASK                       0x1000000u
#define ESW_TDAR_TDAR_SHIFT                      24
/* LREC0 Bit Fields */
#define ESW_LREC0_MAC_ADDR0_MASK                 0xFFFFFFFFu
#define ESW_LREC0_MAC_ADDR0_SHIFT                0
#define ESW_LREC0_MAC_ADDR0(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_LREC0_MAC_ADDR0_SHIFT))&ESW_LREC0_MAC_ADDR0_MASK)
/* LREC1 Bit Fields */
#define ESW_LREC1_MAC_ADDR1_MASK                 0xFFFFu
#define ESW_LREC1_MAC_ADDR1_SHIFT                0
#define ESW_LREC1_MAC_ADDR1(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_MAC_ADDR1_SHIFT))&ESW_LREC1_MAC_ADDR1_MASK)
#define ESW_LREC1_HASH_MASK                      0xFF0000u
#define ESW_LREC1_HASH_SHIFT                     16
#define ESW_LREC1_HASH(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_HASH_SHIFT))&ESW_LREC1_HASH_MASK)
#define ESW_LREC1_SWPORT_MASK                    0x3000000u
#define ESW_LREC1_SWPORT_SHIFT                   24
#define ESW_LREC1_SWPORT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_SWPORT_SHIFT))&ESW_LREC1_SWPORT_MASK)
/* LSR Bit Fields */
#define ESW_LSR_DA_MASK                          0x1u
#define ESW_LSR_DA_SHIFT                         0

/**
 * @}
 */ /* end of group ESW_Register_Masks */


/* ESW - Peripheral instance base addresses */
/** Peripheral ESW base pointer */
#define ESW_BASE_PTR                             ((ESW_MemMapPtr)0x400E8000u)
/** Array initializer of ESW peripheral base pointers */
#define ESW_BASE_PTRS                            { ESW_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- ESW - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup ESW_Register_Accessor_Macros ESW - Register accessor macros
 * @{
 */


/* ESW - Register instance definitions */
/* ESW */
#define ESW_REV                                  ESW_REV_REG(ESW_BASE_PTR)
#define ESW_SCR                                  ESW_SCR_REG(ESW_BASE_PTR)
#define ESW_PER                                  ESW_PER_REG(ESW_BASE_PTR)
#define ESW_VLANV                                ESW_VLANV_REG(ESW_BASE_PTR)
#define ESW_DBCR                                 ESW_DBCR_REG(ESW_BASE_PTR)
#define ESW_DMCR                                 ESW_DMCR_REG(ESW_BASE_PTR)
#define ESW_BKLR                                 ESW_BKLR_REG(ESW_BASE_PTR)
#define ESW_BMPC                                 ESW_BMPC_REG(ESW_BASE_PTR)
#define ESW_MODE                                 ESW_MODE_REG(ESW_BASE_PTR)
#define ESW_VIMSEL                               ESW_VIMSEL_REG(ESW_BASE_PTR)
#define ESW_VOMSEL                               ESW_VOMSEL_REG(ESW_BASE_PTR)
#define ESW_VIMEN                                ESW_VIMEN_REG(ESW_BASE_PTR)
#define ESW_VID                                  ESW_VID_REG(ESW_BASE_PTR)
#define ESW_MCR                                  ESW_MCR_REG(ESW_BASE_PTR)
#define ESW_EGMAP                                ESW_EGMAP_REG(ESW_BASE_PTR)
#define ESW_INGMAP                               ESW_INGMAP_REG(ESW_BASE_PTR)
#define ESW_INGSAL                               ESW_INGSAL_REG(ESW_BASE_PTR)
#define ESW_INGSAH                               ESW_INGSAH_REG(ESW_BASE_PTR)
#define ESW_INGDAL                               ESW_INGDAL_REG(ESW_BASE_PTR)
#define ESW_INGDAH                               ESW_INGDAH_REG(ESW_BASE_PTR)
#define ESW_EGSAL                                ESW_EGSAL_REG(ESW_BASE_PTR)
#define ESW_EGSAH                                ESW_EGSAH_REG(ESW_BASE_PTR)
#define ESW_EGDAL                                ESW_EGDAL_REG(ESW_BASE_PTR)
#define ESW_EGDAH                                ESW_EGDAH_REG(ESW_BASE_PTR)
#define ESW_MCVAL                                ESW_MCVAL_REG(ESW_BASE_PTR)
#define ESW_MMSR                                 ESW_MMSR_REG(ESW_BASE_PTR)
#define ESW_LMT                                  ESW_LMT_REG(ESW_BASE_PTR)
#define ESW_LFC                                  ESW_LFC_REG(ESW_BASE_PTR)
#define ESW_PCSR                                 ESW_PCSR_REG(ESW_BASE_PTR)
#define ESW_IOSR                                 ESW_IOSR_REG(ESW_BASE_PTR)
#define ESW_QWT                                  ESW_QWT_REG(ESW_BASE_PTR)
#define ESW_P0BCT                                ESW_P0BCT_REG(ESW_BASE_PTR)
#define ESW_FFEN                                 ESW_FFEN_REG(ESW_BASE_PTR)
#define ESW_PSNP1                                ESW_PSNP1_REG(ESW_BASE_PTR)
#define ESW_PSNP2                                ESW_PSNP2_REG(ESW_BASE_PTR)
#define ESW_PSNP3                                ESW_PSNP3_REG(ESW_BASE_PTR)
#define ESW_PSNP4                                ESW_PSNP4_REG(ESW_BASE_PTR)
#define ESW_PSNP5                                ESW_PSNP5_REG(ESW_BASE_PTR)
#define ESW_PSNP6                                ESW_PSNP6_REG(ESW_BASE_PTR)
#define ESW_PSNP7                                ESW_PSNP7_REG(ESW_BASE_PTR)
#define ESW_PSNP8                                ESW_PSNP8_REG(ESW_BASE_PTR)
#define ESW_IPSNP1                               ESW_IPSNP1_REG(ESW_BASE_PTR)
#define ESW_IPSNP2                               ESW_IPSNP2_REG(ESW_BASE_PTR)
#define ESW_IPSNP3                               ESW_IPSNP3_REG(ESW_BASE_PTR)
#define ESW_IPSNP4                               ESW_IPSNP4_REG(ESW_BASE_PTR)
#define ESW_IPSNP5                               ESW_IPSNP5_REG(ESW_BASE_PTR)
#define ESW_IPSNP6                               ESW_IPSNP6_REG(ESW_BASE_PTR)
#define ESW_IPSNP7                               ESW_IPSNP7_REG(ESW_BASE_PTR)
#define ESW_IPSNP8                               ESW_IPSNP8_REG(ESW_BASE_PTR)
#define ESW_P0VRES                               ESW_P0VRES_REG(ESW_BASE_PTR)
#define ESW_P1VRES                               ESW_P1VRES_REG(ESW_BASE_PTR)
#define ESW_P2VRES                               ESW_P2VRES_REG(ESW_BASE_PTR)
#define ESW_IPRES                                ESW_IPRES_REG(ESW_BASE_PTR)
#define ESW_P0RES                                ESW_P0RES_REG(ESW_BASE_PTR)
#define ESW_P1RES                                ESW_P1RES_REG(ESW_BASE_PTR)
#define ESW_P2RES                                ESW_P2RES_REG(ESW_BASE_PTR)
#define ESW_P0ID                                 ESW_P0ID_REG(ESW_BASE_PTR)
#define ESW_P1ID                                 ESW_P1ID_REG(ESW_BASE_PTR)
#define ESW_P2ID                                 ESW_P2ID_REG(ESW_BASE_PTR)
#define ESW_VRES0                                ESW_VRES0_REG(ESW_BASE_PTR)
#define ESW_VRES1                                ESW_VRES1_REG(ESW_BASE_PTR)
#define ESW_VRES2                                ESW_VRES2_REG(ESW_BASE_PTR)
#define ESW_VRES3                                ESW_VRES3_REG(ESW_BASE_PTR)
#define ESW_VRES4                                ESW_VRES4_REG(ESW_BASE_PTR)
#define ESW_VRES5                                ESW_VRES5_REG(ESW_BASE_PTR)
#define ESW_VRES6                                ESW_VRES6_REG(ESW_BASE_PTR)
#define ESW_VRES7                                ESW_VRES7_REG(ESW_BASE_PTR)
#define ESW_VRES8                                ESW_VRES8_REG(ESW_BASE_PTR)
#define ESW_VRES9                                ESW_VRES9_REG(ESW_BASE_PTR)
#define ESW_VRES10                               ESW_VRES10_REG(ESW_BASE_PTR)
#define ESW_VRES11                               ESW_VRES11_REG(ESW_BASE_PTR)
#define ESW_VRES12                               ESW_VRES12_REG(ESW_BASE_PTR)
#define ESW_VRES13                               ESW_VRES13_REG(ESW_BASE_PTR)
#define ESW_VRES14                               ESW_VRES14_REG(ESW_BASE_PTR)
#define ESW_VRES15                               ESW_VRES15_REG(ESW_BASE_PTR)
#define ESW_VRES16                               ESW_VRES16_REG(ESW_BASE_PTR)
#define ESW_VRES17                               ESW_VRES17_REG(ESW_BASE_PTR)
#define ESW_VRES18                               ESW_VRES18_REG(ESW_BASE_PTR)
#define ESW_VRES19                               ESW_VRES19_REG(ESW_BASE_PTR)
#define ESW_VRES20                               ESW_VRES20_REG(ESW_BASE_PTR)
#define ESW_VRES21                               ESW_VRES21_REG(ESW_BASE_PTR)
#define ESW_VRES22                               ESW_VRES22_REG(ESW_BASE_PTR)
#define ESW_VRES23                               ESW_VRES23_REG(ESW_BASE_PTR)
#define ESW_VRES24                               ESW_VRES24_REG(ESW_BASE_PTR)
#define ESW_VRES25                               ESW_VRES25_REG(ESW_BASE_PTR)
#define ESW_VRES26                               ESW_VRES26_REG(ESW_BASE_PTR)
#define ESW_VRES27                               ESW_VRES27_REG(ESW_BASE_PTR)
#define ESW_VRES28                               ESW_VRES28_REG(ESW_BASE_PTR)
#define ESW_VRES29                               ESW_VRES29_REG(ESW_BASE_PTR)
#define ESW_VRES30                               ESW_VRES30_REG(ESW_BASE_PTR)
#define ESW_VRES31                               ESW_VRES31_REG(ESW_BASE_PTR)
#define ESW_DISCN                                ESW_DISCN_REG(ESW_BASE_PTR)
#define ESW_DISCB                                ESW_DISCB_REG(ESW_BASE_PTR)
#define ESW_NDISCN                               ESW_NDISCN_REG(ESW_BASE_PTR)
#define ESW_NDISCB                               ESW_NDISCB_REG(ESW_BASE_PTR)
#define ESW_P0OQC                                ESW_P0OQC_REG(ESW_BASE_PTR)
#define ESW_P0MVID                               ESW_P0MVID_REG(ESW_BASE_PTR)
#define ESW_P0MVTAG                              ESW_P0MVTAG_REG(ESW_BASE_PTR)
#define ESW_P0BL                                 ESW_P0BL_REG(ESW_BASE_PTR)
#define ESW_P1OQC                                ESW_P1OQC_REG(ESW_BASE_PTR)
#define ESW_P1MVID                               ESW_P1MVID_REG(ESW_BASE_PTR)
#define ESW_P1MVTAG                              ESW_P1MVTAG_REG(ESW_BASE_PTR)
#define ESW_P1BL                                 ESW_P1BL_REG(ESW_BASE_PTR)
#define ESW_P2OQC                                ESW_P2OQC_REG(ESW_BASE_PTR)
#define ESW_P2MVID                               ESW_P2MVID_REG(ESW_BASE_PTR)
#define ESW_P2MVTAG                              ESW_P2MVTAG_REG(ESW_BASE_PTR)
#define ESW_P2BL                                 ESW_P2BL_REG(ESW_BASE_PTR)
#define ESW_ISR                                  ESW_ISR_REG(ESW_BASE_PTR)
#define ESW_IMR                                  ESW_IMR_REG(ESW_BASE_PTR)
#define ESW_RDSR                                 ESW_RDSR_REG(ESW_BASE_PTR)
#define ESW_TDSR                                 ESW_TDSR_REG(ESW_BASE_PTR)
#define ESW_MRBR                                 ESW_MRBR_REG(ESW_BASE_PTR)
#define ESW_RDAR                                 ESW_RDAR_REG(ESW_BASE_PTR)
#define ESW_TDAR                                 ESW_TDAR_REG(ESW_BASE_PTR)
#define ESW_LREC0                                ESW_LREC0_REG(ESW_BASE_PTR)
#define ESW_LREC1                                ESW_LREC1_REG(ESW_BASE_PTR)
#define ESW_LSR                                  ESW_LSR_REG(ESW_BASE_PTR)

/**
 * @}
 */ /* end of group ESW_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group ESW_Peripheral */


/* ----------------------------------------------------------------------------
   -- EWM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup EWM_Peripheral EWM
 * @{
 */

/** EWM - Peripheral register structure */
typedef struct EWM_MemMap {
  uint8_t CTRL;                                    /**< Control Register, offset: 0x0 */
  uint8_t SERV;                                    /**< Service Register, offset: 0x1 */
  uint8_t CMPL;                                    /**< Compare Low Register, offset: 0x2 */
  uint8_t CMPH;                                    /**< Compare High Register, offset: 0x3 */
  uint8_t CLKCTRL;                                 /**< Clock Control Register, offset: 0x4 */
  uint8_t CLKPRESCALER;                            /**< Clock Prescaler Register, offset: 0x5 */
} volatile *EWM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- EWM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup EWM_Register_Accessor_Macros EWM - Register accessor macros
 * @{
 */


/* EWM - Register accessors */
#define EWM_CTRL_REG(base)                       ((base)->CTRL)
#define EWM_SERV_REG(base)                       ((base)->SERV)
#define EWM_CMPL_REG(base)                       ((base)->CMPL)
#define EWM_CMPH_REG(base)                       ((base)->CMPH)
#define EWM_CLKCTRL_REG(base)                    ((base)->CLKCTRL)
#define EWM_CLKPRESCALER_REG(base)               ((base)->CLKPRESCALER)

/**
 * @}
 */ /* end of group EWM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- EWM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup EWM_Register_Masks EWM Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define EWM_CTRL_EWMEN_MASK                      0x1u
#define EWM_CTRL_EWMEN_SHIFT                     0
#define EWM_CTRL_ASSIN_MASK                      0x2u
#define EWM_CTRL_ASSIN_SHIFT                     1
#define EWM_CTRL_INEN_MASK                       0x4u
#define EWM_CTRL_INEN_SHIFT                      2
#define EWM_CTRL_INTEN_MASK                      0x8u
#define EWM_CTRL_INTEN_SHIFT                     3
/* SERV Bit Fields */
#define EWM_SERV_SERVICE_MASK                    0xFFu
#define EWM_SERV_SERVICE_SHIFT                   0
#define EWM_SERV_SERVICE(x)                      (((uint8_t)(((uint8_t)(x))<<EWM_SERV_SERVICE_SHIFT))&EWM_SERV_SERVICE_MASK)
/* CMPL Bit Fields */
#define EWM_CMPL_COMPAREL_MASK                   0xFFu
#define EWM_CMPL_COMPAREL_SHIFT                  0
#define EWM_CMPL_COMPAREL(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPL_COMPAREL_SHIFT))&EWM_CMPL_COMPAREL_MASK)
/* CMPH Bit Fields */
#define EWM_CMPH_COMPAREH_MASK                   0xFFu
#define EWM_CMPH_COMPAREH_SHIFT                  0
#define EWM_CMPH_COMPAREH(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPH_COMPAREH_SHIFT))&EWM_CMPH_COMPAREH_MASK)
/* CLKCTRL Bit Fields */
#define EWM_CLKCTRL_CLKSEL_MASK                  0x3u
#define EWM_CLKCTRL_CLKSEL_SHIFT                 0
#define EWM_CLKCTRL_CLKSEL(x)                    (((uint8_t)(((uint8_t)(x))<<EWM_CLKCTRL_CLKSEL_SHIFT))&EWM_CLKCTRL_CLKSEL_MASK)
/* CLKPRESCALER Bit Fields */
#define EWM_CLKPRESCALER_CLK_DIV_MASK            0xFFu
#define EWM_CLKPRESCALER_CLK_DIV_SHIFT           0
#define EWM_CLKPRESCALER_CLK_DIV(x)              (((uint8_t)(((uint8_t)(x))<<EWM_CLKPRESCALER_CLK_DIV_SHIFT))&EWM_CLKPRESCALER_CLK_DIV_MASK)

/**
 * @}
 */ /* end of group EWM_Register_Masks */


/* EWM - Peripheral instance base addresses */
/** Peripheral EWM base pointer */
#define EWM_BASE_PTR                             ((EWM_MemMapPtr)0x40065000u)
/** Array initializer of EWM peripheral base pointers */
#define EWM_BASE_PTRS                            { EWM_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- EWM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup EWM_Register_Accessor_Macros EWM - Register accessor macros
 * @{
 */


/* EWM - Register instance definitions */
/* EWM */
#define EWM_CTRL                                 EWM_CTRL_REG(EWM_BASE_PTR)
#define EWM_SERV                                 EWM_SERV_REG(EWM_BASE_PTR)
#define EWM_CMPL                                 EWM_CMPL_REG(EWM_BASE_PTR)
#define EWM_CMPH                                 EWM_CMPH_REG(EWM_BASE_PTR)
#define EWM_CLKCTRL                              EWM_CLKCTRL_REG(EWM_BASE_PTR)
#define EWM_CLKPRESCALER                         EWM_CLKPRESCALER_REG(EWM_BASE_PTR)

/**
 * @}
 */ /* end of group EWM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group EWM_Peripheral */


/* ----------------------------------------------------------------------------
   -- FB
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FB_Peripheral FB
 * @{
 */

/** FB - Peripheral register structure */
typedef struct FB_MemMap {
  struct {                                         /* offset: 0x0, array step: 0xC */
    uint32_t CSAR;                                   /**< Chip Select Address Register, array offset: 0x0, array step: 0xC */
    uint32_t CSMR;                                   /**< Chip Select Mask Register, array offset: 0x4, array step: 0xC */
    uint32_t CSCR;                                   /**< Chip Select Control Register, array offset: 0x8, array step: 0xC */
  } CS[4];
  uint8_t RESERVED_0[48];
  uint32_t CSPMCR;                                 /**< Chip Select port Multiplexing Control Register, offset: 0x60 */
} volatile *FB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- FB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FB_Register_Accessor_Macros FB - Register accessor macros
 * @{
 */


/* FB - Register accessors */
#define FB_CSAR_REG(base,index)                  ((base)->CS[index].CSAR)
#define FB_CSMR_REG(base,index)                  ((base)->CS[index].CSMR)
#define FB_CSCR_REG(base,index)                  ((base)->CS[index].CSCR)
#define FB_CSPMCR_REG(base)                      ((base)->CSPMCR)

/**
 * @}
 */ /* end of group FB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- FB Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FB_Register_Masks FB Register Masks
 * @{
 */

/* CSAR Bit Fields */
#define FB_CSAR_BA_MASK                          0xFFFF0000u
#define FB_CSAR_BA_SHIFT                         16
#define FB_CSAR_BA(x)                            (((uint32_t)(((uint32_t)(x))<<FB_CSAR_BA_SHIFT))&FB_CSAR_BA_MASK)
/* CSMR Bit Fields */
#define FB_CSMR_V_MASK                           0x1u
#define FB_CSMR_V_SHIFT                          0
#define FB_CSMR_WP_MASK                          0x100u
#define FB_CSMR_WP_SHIFT                         8
#define FB_CSMR_BAM_MASK                         0xFFFF0000u
#define FB_CSMR_BAM_SHIFT                        16
#define FB_CSMR_BAM(x)                           (((uint32_t)(((uint32_t)(x))<<FB_CSMR_BAM_SHIFT))&FB_CSMR_BAM_MASK)
/* CSCR Bit Fields */
#define FB_CSCR_BSTW_MASK                        0x8u
#define FB_CSCR_BSTW_SHIFT                       3
#define FB_CSCR_BSTR_MASK                        0x10u
#define FB_CSCR_BSTR_SHIFT                       4
#define FB_CSCR_BEM_MASK                         0x20u
#define FB_CSCR_BEM_SHIFT                        5
#define FB_CSCR_PS_MASK                          0xC0u
#define FB_CSCR_PS_SHIFT                         6
#define FB_CSCR_PS(x)                            (((uint32_t)(((uint32_t)(x))<<FB_CSCR_PS_SHIFT))&FB_CSCR_PS_MASK)
#define FB_CSCR_AA_MASK                          0x100u
#define FB_CSCR_AA_SHIFT                         8
#define FB_CSCR_BLS_MASK                         0x200u
#define FB_CSCR_BLS_SHIFT                        9
#define FB_CSCR_WS_MASK                          0xFC00u
#define FB_CSCR_WS_SHIFT                         10
#define FB_CSCR_WS(x)                            (((uint32_t)(((uint32_t)(x))<<FB_CSCR_WS_SHIFT))&FB_CSCR_WS_MASK)
#define FB_CSCR_WRAH_MASK                        0x30000u
#define FB_CSCR_WRAH_SHIFT                       16
#define FB_CSCR_WRAH(x)                          (((uint32_t)(((uint32_t)(x))<<FB_CSCR_WRAH_SHIFT))&FB_CSCR_WRAH_MASK)
#define FB_CSCR_RDAH_MASK                        0xC0000u
#define FB_CSCR_RDAH_SHIFT                       18
#define FB_CSCR_RDAH(x)                          (((uint32_t)(((uint32_t)(x))<<FB_CSCR_RDAH_SHIFT))&FB_CSCR_RDAH_MASK)
#define FB_CSCR_ASET_MASK                        0x300000u
#define FB_CSCR_ASET_SHIFT                       20
#define FB_CSCR_ASET(x)                          (((uint32_t)(((uint32_t)(x))<<FB_CSCR_ASET_SHIFT))&FB_CSCR_ASET_MASK)
#define FB_CSCR_EXTS_MASK                        0x400000u
#define FB_CSCR_EXTS_SHIFT                       22
#define FB_CSCR_SWSEN_MASK                       0x800000u
#define FB_CSCR_SWSEN_SHIFT                      23
#define FB_CSCR_SWS_MASK                         0xFC000000u
#define FB_CSCR_SWS_SHIFT                        26
#define FB_CSCR_SWS(x)                           (((uint32_t)(((uint32_t)(x))<<FB_CSCR_SWS_SHIFT))&FB_CSCR_SWS_MASK)
/* CSPMCR Bit Fields */
#define FB_CSPMCR_GROUP5_MASK                    0xF000u
#define FB_CSPMCR_GROUP5_SHIFT                   12
#define FB_CSPMCR_GROUP5(x)                      (((uint32_t)(((uint32_t)(x))<<FB_CSPMCR_GROUP5_SHIFT))&FB_CSPMCR_GROUP5_MASK)
#define FB_CSPMCR_GROUP4_MASK                    0xF0000u
#define FB_CSPMCR_GROUP4_SHIFT                   16
#define FB_CSPMCR_GROUP4(x)                      (((uint32_t)(((uint32_t)(x))<<FB_CSPMCR_GROUP4_SHIFT))&FB_CSPMCR_GROUP4_MASK)
#define FB_CSPMCR_GROUP3_MASK                    0xF00000u
#define FB_CSPMCR_GROUP3_SHIFT                   20
#define FB_CSPMCR_GROUP3(x)                      (((uint32_t)(((uint32_t)(x))<<FB_CSPMCR_GROUP3_SHIFT))&FB_CSPMCR_GROUP3_MASK)
#define FB_CSPMCR_GROUP2_MASK                    0xF000000u
#define FB_CSPMCR_GROUP2_SHIFT                   24
#define FB_CSPMCR_GROUP2(x)                      (((uint32_t)(((uint32_t)(x))<<FB_CSPMCR_GROUP2_SHIFT))&FB_CSPMCR_GROUP2_MASK)
#define FB_CSPMCR_GROUP1_MASK                    0xF0000000u
#define FB_CSPMCR_GROUP1_SHIFT                   28
#define FB_CSPMCR_GROUP1(x)                      (((uint32_t)(((uint32_t)(x))<<FB_CSPMCR_GROUP1_SHIFT))&FB_CSPMCR_GROUP1_MASK)

/**
 * @}
 */ /* end of group FB_Register_Masks */


/* FB - Peripheral instance base addresses */
/** Peripheral FB base pointer */
#define FB_BASE_PTR                              ((FB_MemMapPtr)0x4001E000u)
/** Array initializer of FB peripheral base pointers */
#define FB_BASE_PTRS                             { FB_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- FB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FB_Register_Accessor_Macros FB - Register accessor macros
 * @{
 */


/* FB - Register instance definitions */
/* FB */
#define FB_CSAR0                                 FB_CSAR_REG(FB_BASE_PTR,0)
#define FB_CSMR0                                 FB_CSMR_REG(FB_BASE_PTR,0)
#define FB_CSCR0                                 FB_CSCR_REG(FB_BASE_PTR,0)
#define FB_CSAR1                                 FB_CSAR_REG(FB_BASE_PTR,1)
#define FB_CSMR1                                 FB_CSMR_REG(FB_BASE_PTR,1)
#define FB_CSCR1                                 FB_CSCR_REG(FB_BASE_PTR,1)
#define FB_CSAR2                                 FB_CSAR_REG(FB_BASE_PTR,2)
#define FB_CSMR2                                 FB_CSMR_REG(FB_BASE_PTR,2)
#define FB_CSCR2                                 FB_CSCR_REG(FB_BASE_PTR,2)
#define FB_CSAR3                                 FB_CSAR_REG(FB_BASE_PTR,3)
#define FB_CSMR3                                 FB_CSMR_REG(FB_BASE_PTR,3)
#define FB_CSCR3                                 FB_CSCR_REG(FB_BASE_PTR,3)
#define FB_CSPMCR                                FB_CSPMCR_REG(FB_BASE_PTR)

/* FB - Register array accessors */
#define FB_CSAR(index)                           FB_CSAR_REG(FB_BASE_PTR,index)
#define FB_CSMR(index)                           FB_CSMR_REG(FB_BASE_PTR,index)
#define FB_CSCR(index)                           FB_CSCR_REG(FB_BASE_PTR,index)

/**
 * @}
 */ /* end of group FB_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group FB_Peripheral */


/* ----------------------------------------------------------------------------
   -- FTM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FTM_Peripheral FTM
 * @{
 */

/** FTM - Peripheral register structure */
typedef struct FTM_MemMap {
  uint32_t SC;                                     /**< Status And Control, offset: 0x0 */
  uint32_t CNT;                                    /**< Counter, offset: 0x4 */
  uint32_t MOD;                                    /**< Modulo, offset: 0x8 */
  struct {                                         /* offset: 0xC, array step: 0x8 */
    uint32_t CnSC;                                   /**< Channel (n) Status And Control, array offset: 0xC, array step: 0x8 */
    uint32_t CnV;                                    /**< Channel (n) Value, array offset: 0x10, array step: 0x8 */
  } CONTROLS[8];
  uint32_t CNTIN;                                  /**< Counter Initial Value, offset: 0x4C */
  uint32_t STATUS;                                 /**< Capture And Compare Status, offset: 0x50 */
  uint32_t MODE;                                   /**< Features Mode Selection, offset: 0x54 */
  uint32_t SYNC;                                   /**< Synchronization, offset: 0x58 */
  uint32_t OUTINIT;                                /**< Initial State For Channels Output, offset: 0x5C */
  uint32_t OUTMASK;                                /**< Output Mask, offset: 0x60 */
  uint32_t COMBINE;                                /**< Function For Linked Channels, offset: 0x64 */
  uint32_t DEADTIME;                               /**< Deadtime Insertion Control, offset: 0x68 */
  uint32_t EXTTRIG;                                /**< FTM External Trigger, offset: 0x6C */
  uint32_t POL;                                    /**< Channels Polarity, offset: 0x70 */
  uint32_t FMS;                                    /**< Fault Mode Status, offset: 0x74 */
  uint32_t FILTER;                                 /**< Input Capture Filter Control, offset: 0x78 */
  uint32_t FLTCTRL;                                /**< Fault Control, offset: 0x7C */
  uint32_t QDCTRL;                                 /**< Quadrature Decoder Control And Status, offset: 0x80 */
  uint32_t CONF;                                   /**< Configuration, offset: 0x84 */
  uint32_t FLTPOL;                                 /**< FTM Fault Input Polarity, offset: 0x88 */
  uint32_t SYNCONF;                                /**< Synchronization Configuration, offset: 0x8C */
  uint32_t INVCTRL;                                /**< FTM Inverting Control, offset: 0x90 */
  uint32_t SWOCTRL;                                /**< FTM Software Output Control, offset: 0x94 */
  uint32_t PWMLOAD;                                /**< FTM PWM Load, offset: 0x98 */
} volatile *FTM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- FTM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FTM_Register_Accessor_Macros FTM - Register accessor macros
 * @{
 */


/* FTM - Register accessors */
#define FTM_SC_REG(base)                         ((base)->SC)
#define FTM_CNT_REG(base)                        ((base)->CNT)
#define FTM_MOD_REG(base)                        ((base)->MOD)
#define FTM_CnSC_REG(base,index)                 ((base)->CONTROLS[index].CnSC)
#define FTM_CnV_REG(base,index)                  ((base)->CONTROLS[index].CnV)
#define FTM_CNTIN_REG(base)                      ((base)->CNTIN)
#define FTM_STATUS_REG(base)                     ((base)->STATUS)
#define FTM_MODE_REG(base)                       ((base)->MODE)
#define FTM_SYNC_REG(base)                       ((base)->SYNC)
#define FTM_OUTINIT_REG(base)                    ((base)->OUTINIT)
#define FTM_OUTMASK_REG(base)                    ((base)->OUTMASK)
#define FTM_COMBINE_REG(base)                    ((base)->COMBINE)
#define FTM_DEADTIME_REG(base)                   ((base)->DEADTIME)
#define FTM_EXTTRIG_REG(base)                    ((base)->EXTTRIG)
#define FTM_POL_REG(base)                        ((base)->POL)
#define FTM_FMS_REG(base)                        ((base)->FMS)
#define FTM_FILTER_REG(base)                     ((base)->FILTER)
#define FTM_FLTCTRL_REG(base)                    ((base)->FLTCTRL)
#define FTM_QDCTRL_REG(base)                     ((base)->QDCTRL)
#define FTM_CONF_REG(base)                       ((base)->CONF)
#define FTM_FLTPOL_REG(base)                     ((base)->FLTPOL)
#define FTM_SYNCONF_REG(base)                    ((base)->SYNCONF)
#define FTM_INVCTRL_REG(base)                    ((base)->INVCTRL)
#define FTM_SWOCTRL_REG(base)                    ((base)->SWOCTRL)
#define FTM_PWMLOAD_REG(base)                    ((base)->PWMLOAD)

/**
 * @}
 */ /* end of group FTM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- FTM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FTM_Register_Masks FTM Register Masks
 * @{
 */

/* SC Bit Fields */
#define FTM_SC_PS_MASK                           0x7u
#define FTM_SC_PS_SHIFT                          0
#define FTM_SC_PS(x)                             (((uint32_t)(((uint32_t)(x))<<FTM_SC_PS_SHIFT))&FTM_SC_PS_MASK)
#define FTM_SC_CLKS_MASK                         0x18u
#define FTM_SC_CLKS_SHIFT                        3
#define FTM_SC_CLKS(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_SC_CLKS_SHIFT))&FTM_SC_CLKS_MASK)
#define FTM_SC_CPWMS_MASK                        0x20u
#define FTM_SC_CPWMS_SHIFT                       5
#define FTM_SC_TOIE_MASK                         0x40u
#define FTM_SC_TOIE_SHIFT                        6
#define FTM_SC_TOF_MASK                          0x80u
#define FTM_SC_TOF_SHIFT                         7
/* CNT Bit Fields */
#define FTM_CNT_COUNT_MASK                       0xFFFFu
#define FTM_CNT_COUNT_SHIFT                      0
#define FTM_CNT_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CNT_COUNT_SHIFT))&FTM_CNT_COUNT_MASK)
/* MOD Bit Fields */
#define FTM_MOD_MOD_MASK                         0xFFFFu
#define FTM_MOD_MOD_SHIFT                        0
#define FTM_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_MOD_MOD_SHIFT))&FTM_MOD_MOD_MASK)
/* CnSC Bit Fields */
#define FTM_CnSC_DMA_MASK                        0x1u
#define FTM_CnSC_DMA_SHIFT                       0
#define FTM_CnSC_ELSA_MASK                       0x4u
#define FTM_CnSC_ELSA_SHIFT                      2
#define FTM_CnSC_ELSB_MASK                       0x8u
#define FTM_CnSC_ELSB_SHIFT                      3
#define FTM_CnSC_MSA_MASK                        0x10u
#define FTM_CnSC_MSA_SHIFT                       4
#define FTM_CnSC_MSB_MASK                        0x20u
#define FTM_CnSC_MSB_SHIFT                       5
#define FTM_CnSC_CHIE_MASK                       0x40u
#define FTM_CnSC_CHIE_SHIFT                      6
#define FTM_CnSC_CHF_MASK                        0x80u
#define FTM_CnSC_CHF_SHIFT                       7
/* CnV Bit Fields */
#define FTM_CnV_VAL_MASK                         0xFFFFu
#define FTM_CnV_VAL_SHIFT                        0
#define FTM_CnV_VAL(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_CnV_VAL_SHIFT))&FTM_CnV_VAL_MASK)
/* CNTIN Bit Fields */
#define FTM_CNTIN_INIT_MASK                      0xFFFFu
#define FTM_CNTIN_INIT_SHIFT                     0
#define FTM_CNTIN_INIT(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_CNTIN_INIT_SHIFT))&FTM_CNTIN_INIT_MASK)
/* STATUS Bit Fields */
#define FTM_STATUS_CH0F_MASK                     0x1u
#define FTM_STATUS_CH0F_SHIFT                    0
#define FTM_STATUS_CH1F_MASK                     0x2u
#define FTM_STATUS_CH1F_SHIFT                    1
#define FTM_STATUS_CH2F_MASK                     0x4u
#define FTM_STATUS_CH2F_SHIFT                    2
#define FTM_STATUS_CH3F_MASK                     0x8u
#define FTM_STATUS_CH3F_SHIFT                    3
#define FTM_STATUS_CH4F_MASK                     0x10u
#define FTM_STATUS_CH4F_SHIFT                    4
#define FTM_STATUS_CH5F_MASK                     0x20u
#define FTM_STATUS_CH5F_SHIFT                    5
#define FTM_STATUS_CH6F_MASK                     0x40u
#define FTM_STATUS_CH6F_SHIFT                    6
#define FTM_STATUS_CH7F_MASK                     0x80u
#define FTM_STATUS_CH7F_SHIFT                    7
/* MODE Bit Fields */
#define FTM_MODE_FTMEN_MASK                      0x1u
#define FTM_MODE_FTMEN_SHIFT                     0
#define FTM_MODE_INIT_MASK                       0x2u
#define FTM_MODE_INIT_SHIFT                      1
#define FTM_MODE_WPDIS_MASK                      0x4u
#define FTM_MODE_WPDIS_SHIFT                     2
#define FTM_MODE_PWMSYNC_MASK                    0x8u
#define FTM_MODE_PWMSYNC_SHIFT                   3
#define FTM_MODE_CAPTEST_MASK                    0x10u
#define FTM_MODE_CAPTEST_SHIFT                   4
#define FTM_MODE_FAULTM_MASK                     0x60u
#define FTM_MODE_FAULTM_SHIFT                    5
#define FTM_MODE_FAULTM(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FAULTM_SHIFT))&FTM_MODE_FAULTM_MASK)
#define FTM_MODE_FAULTIE_MASK                    0x80u
#define FTM_MODE_FAULTIE_SHIFT                   7
/* SYNC Bit Fields */
#define FTM_SYNC_CNTMIN_MASK                     0x1u
#define FTM_SYNC_CNTMIN_SHIFT                    0
#define FTM_SYNC_CNTMAX_MASK                     0x2u
#define FTM_SYNC_CNTMAX_SHIFT                    1
#define FTM_SYNC_REINIT_MASK                     0x4u
#define FTM_SYNC_REINIT_SHIFT                    2
#define FTM_SYNC_SYNCHOM_MASK                    0x8u
#define FTM_SYNC_SYNCHOM_SHIFT                   3
#define FTM_SYNC_TRIG0_MASK                      0x10u
#define FTM_SYNC_TRIG0_SHIFT                     4
#define FTM_SYNC_TRIG1_MASK                      0x20u
#define FTM_SYNC_TRIG1_SHIFT                     5
#define FTM_SYNC_TRIG2_MASK                      0x40u
#define FTM_SYNC_TRIG2_SHIFT                     6
#define FTM_SYNC_SWSYNC_MASK                     0x80u
#define FTM_SYNC_SWSYNC_SHIFT                    7
/* OUTINIT Bit Fields */
#define FTM_OUTINIT_CH0OI_MASK                   0x1u
#define FTM_OUTINIT_CH0OI_SHIFT                  0
#define FTM_OUTINIT_CH1OI_MASK                   0x2u
#define FTM_OUTINIT_CH1OI_SHIFT                  1
#define FTM_OUTINIT_CH2OI_MASK                   0x4u
#define FTM_OUTINIT_CH2OI_SHIFT                  2
#define FTM_OUTINIT_CH3OI_MASK                   0x8u
#define FTM_OUTINIT_CH3OI_SHIFT                  3
#define FTM_OUTINIT_CH4OI_MASK                   0x10u
#define FTM_OUTINIT_CH4OI_SHIFT                  4
#define FTM_OUTINIT_CH5OI_MASK                   0x20u
#define FTM_OUTINIT_CH5OI_SHIFT                  5
#define FTM_OUTINIT_CH6OI_MASK                   0x40u
#define FTM_OUTINIT_CH6OI_SHIFT                  6
#define FTM_OUTINIT_CH7OI_MASK                   0x80u
#define FTM_OUTINIT_CH7OI_SHIFT                  7
/* OUTMASK Bit Fields */
#define FTM_OUTMASK_CH0OM_MASK                   0x1u
#define FTM_OUTMASK_CH0OM_SHIFT                  0
#define FTM_OUTMASK_CH1OM_MASK                   0x2u
#define FTM_OUTMASK_CH1OM_SHIFT                  1
#define FTM_OUTMASK_CH2OM_MASK                   0x4u
#define FTM_OUTMASK_CH2OM_SHIFT                  2
#define FTM_OUTMASK_CH3OM_MASK                   0x8u
#define FTM_OUTMASK_CH3OM_SHIFT                  3
#define FTM_OUTMASK_CH4OM_MASK                   0x10u
#define FTM_OUTMASK_CH4OM_SHIFT                  4
#define FTM_OUTMASK_CH5OM_MASK                   0x20u
#define FTM_OUTMASK_CH5OM_SHIFT                  5
#define FTM_OUTMASK_CH6OM_MASK                   0x40u
#define FTM_OUTMASK_CH6OM_SHIFT                  6
#define FTM_OUTMASK_CH7OM_MASK                   0x80u
#define FTM_OUTMASK_CH7OM_SHIFT                  7
/* COMBINE Bit Fields */
#define FTM_COMBINE_COMBINE0_MASK                0x1u
#define FTM_COMBINE_COMBINE0_SHIFT               0
#define FTM_COMBINE_COMP0_MASK                   0x2u
#define FTM_COMBINE_COMP0_SHIFT                  1
#define FTM_COMBINE_DECAPEN0_MASK                0x4u
#define FTM_COMBINE_DECAPEN0_SHIFT               2
#define FTM_COMBINE_DECAP0_MASK                  0x8u
#define FTM_COMBINE_DECAP0_SHIFT                 3
#define FTM_COMBINE_DTEN0_MASK                   0x10u
#define FTM_COMBINE_DTEN0_SHIFT                  4
#define FTM_COMBINE_SYNCEN0_MASK                 0x20u
#define FTM_COMBINE_SYNCEN0_SHIFT                5
#define FTM_COMBINE_FAULTEN0_MASK                0x40u
#define FTM_COMBINE_FAULTEN0_SHIFT               6
#define FTM_COMBINE_COMBINE1_MASK                0x100u
#define FTM_COMBINE_COMBINE1_SHIFT               8
#define FTM_COMBINE_COMP1_MASK                   0x200u
#define FTM_COMBINE_COMP1_SHIFT                  9
#define FTM_COMBINE_DECAPEN1_MASK                0x400u
#define FTM_COMBINE_DECAPEN1_SHIFT               10
#define FTM_COMBINE_DECAP1_MASK                  0x800u
#define FTM_COMBINE_DECAP1_SHIFT                 11
#define FTM_COMBINE_DTEN1_MASK                   0x1000u
#define FTM_COMBINE_DTEN1_SHIFT                  12
#define FTM_COMBINE_SYNCEN1_MASK                 0x2000u
#define FTM_COMBINE_SYNCEN1_SHIFT                13
#define FTM_COMBINE_FAULTEN1_MASK                0x4000u
#define FTM_COMBINE_FAULTEN1_SHIFT               14
#define FTM_COMBINE_COMBINE2_MASK                0x10000u
#define FTM_COMBINE_COMBINE2_SHIFT               16
#define FTM_COMBINE_COMP2_MASK                   0x20000u
#define FTM_COMBINE_COMP2_SHIFT                  17
#define FTM_COMBINE_DECAPEN2_MASK                0x40000u
#define FTM_COMBINE_DECAPEN2_SHIFT               18
#define FTM_COMBINE_DECAP2_MASK                  0x80000u
#define FTM_COMBINE_DECAP2_SHIFT                 19
#define FTM_COMBINE_DTEN2_MASK                   0x100000u
#define FTM_COMBINE_DTEN2_SHIFT                  20
#define FTM_COMBINE_SYNCEN2_MASK                 0x200000u
#define FTM_COMBINE_SYNCEN2_SHIFT                21
#define FTM_COMBINE_FAULTEN2_MASK                0x400000u
#define FTM_COMBINE_FAULTEN2_SHIFT               22
#define FTM_COMBINE_COMBINE3_MASK                0x1000000u
#define FTM_COMBINE_COMBINE3_SHIFT               24
#define FTM_COMBINE_COMP3_MASK                   0x2000000u
#define FTM_COMBINE_COMP3_SHIFT                  25
#define FTM_COMBINE_DECAPEN3_MASK                0x4000000u
#define FTM_COMBINE_DECAPEN3_SHIFT               26
#define FTM_COMBINE_DECAP3_MASK                  0x8000000u
#define FTM_COMBINE_DECAP3_SHIFT                 27
#define FTM_COMBINE_DTEN3_MASK                   0x10000000u
#define FTM_COMBINE_DTEN3_SHIFT                  28
#define FTM_COMBINE_SYNCEN3_MASK                 0x20000000u
#define FTM_COMBINE_SYNCEN3_SHIFT                29
#define FTM_COMBINE_FAULTEN3_MASK                0x40000000u
#define FTM_COMBINE_FAULTEN3_SHIFT               30
/* DEADTIME Bit Fields */
#define FTM_DEADTIME_DTVAL_MASK                  0x3Fu
#define FTM_DEADTIME_DTVAL_SHIFT                 0
#define FTM_DEADTIME_DTVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTVAL_SHIFT))&FTM_DEADTIME_DTVAL_MASK)
#define FTM_DEADTIME_DTPS_MASK                   0xC0u
#define FTM_DEADTIME_DTPS_SHIFT                  6
#define FTM_DEADTIME_DTPS(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTPS_SHIFT))&FTM_DEADTIME_DTPS_MASK)
/* EXTTRIG Bit Fields */
#define FTM_EXTTRIG_CH2TRIG_MASK                 0x1u
#define FTM_EXTTRIG_CH2TRIG_SHIFT                0
#define FTM_EXTTRIG_CH3TRIG_MASK                 0x2u
#define FTM_EXTTRIG_CH3TRIG_SHIFT                1
#define FTM_EXTTRIG_CH4TRIG_MASK                 0x4u
#define FTM_EXTTRIG_CH4TRIG_SHIFT                2
#define FTM_EXTTRIG_CH5TRIG_MASK                 0x8u
#define FTM_EXTTRIG_CH5TRIG_SHIFT                3
#define FTM_EXTTRIG_CH0TRIG_MASK                 0x10u
#define FTM_EXTTRIG_CH0TRIG_SHIFT                4
#define FTM_EXTTRIG_CH1TRIG_MASK                 0x20u
#define FTM_EXTTRIG_CH1TRIG_SHIFT                5
#define FTM_EXTTRIG_INITTRIGEN_MASK              0x40u
#define FTM_EXTTRIG_INITTRIGEN_SHIFT             6
#define FTM_EXTTRIG_TRIGF_MASK                   0x80u
#define FTM_EXTTRIG_TRIGF_SHIFT                  7
/* POL Bit Fields */
#define FTM_POL_POL0_MASK                        0x1u
#define FTM_POL_POL0_SHIFT                       0
#define FTM_POL_POL1_MASK                        0x2u
#define FTM_POL_POL1_SHIFT                       1
#define FTM_POL_POL2_MASK                        0x4u
#define FTM_POL_POL2_SHIFT                       2
#define FTM_POL_POL3_MASK                        0x8u
#define FTM_POL_POL3_SHIFT                       3
#define FTM_POL_POL4_MASK                        0x10u
#define FTM_POL_POL4_SHIFT                       4
#define FTM_POL_POL5_MASK                        0x20u
#define FTM_POL_POL5_SHIFT                       5
#define FTM_POL_POL6_MASK                        0x40u
#define FTM_POL_POL6_SHIFT                       6
#define FTM_POL_POL7_MASK                        0x80u
#define FTM_POL_POL7_SHIFT                       7
/* FMS Bit Fields */
#define FTM_FMS_FAULTF0_MASK                     0x1u
#define FTM_FMS_FAULTF0_SHIFT                    0
#define FTM_FMS_FAULTF1_MASK                     0x2u
#define FTM_FMS_FAULTF1_SHIFT                    1
#define FTM_FMS_FAULTF2_MASK                     0x4u
#define FTM_FMS_FAULTF2_SHIFT                    2
#define FTM_FMS_FAULTF3_MASK                     0x8u
#define FTM_FMS_FAULTF3_SHIFT                    3
#define FTM_FMS_FAULTIN_MASK                     0x20u
#define FTM_FMS_FAULTIN_SHIFT                    5
#define FTM_FMS_WPEN_MASK                        0x40u
#define FTM_FMS_WPEN_SHIFT                       6
#define FTM_FMS_FAULTF_MASK                      0x80u
#define FTM_FMS_FAULTF_SHIFT                     7
/* FILTER Bit Fields */
#define FTM_FILTER_CH0FVAL_MASK                  0xFu
#define FTM_FILTER_CH0FVAL_SHIFT                 0
#define FTM_FILTER_CH0FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH0FVAL_SHIFT))&FTM_FILTER_CH0FVAL_MASK)
#define FTM_FILTER_CH1FVAL_MASK                  0xF0u
#define FTM_FILTER_CH1FVAL_SHIFT                 4
#define FTM_FILTER_CH1FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH1FVAL_SHIFT))&FTM_FILTER_CH1FVAL_MASK)
#define FTM_FILTER_CH2FVAL_MASK                  0xF00u
#define FTM_FILTER_CH2FVAL_SHIFT                 8
#define FTM_FILTER_CH2FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH2FVAL_SHIFT))&FTM_FILTER_CH2FVAL_MASK)
#define FTM_FILTER_CH3FVAL_MASK                  0xF000u
#define FTM_FILTER_CH3FVAL_SHIFT                 12
#define FTM_FILTER_CH3FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH3FVAL_SHIFT))&FTM_FILTER_CH3FVAL_MASK)
/* FLTCTRL Bit Fields */
#define FTM_FLTCTRL_FAULT0EN_MASK                0x1u
#define FTM_FLTCTRL_FAULT0EN_SHIFT               0
#define FTM_FLTCTRL_FAULT1EN_MASK                0x2u
#define FTM_FLTCTRL_FAULT1EN_SHIFT               1
#define FTM_FLTCTRL_FAULT2EN_MASK                0x4u
#define FTM_FLTCTRL_FAULT2EN_SHIFT               2
#define FTM_FLTCTRL_FAULT3EN_MASK                0x8u
#define FTM_FLTCTRL_FAULT3EN_SHIFT               3
#define FTM_FLTCTRL_FFLTR0EN_MASK                0x10u
#define FTM_FLTCTRL_FFLTR0EN_SHIFT               4
#define FTM_FLTCTRL_FFLTR1EN_MASK                0x20u
#define FTM_FLTCTRL_FFLTR1EN_SHIFT               5
#define FTM_FLTCTRL_FFLTR2EN_MASK                0x40u
#define FTM_FLTCTRL_FFLTR2EN_SHIFT               6
#define FTM_FLTCTRL_FFLTR3EN_MASK                0x80u
#define FTM_FLTCTRL_FFLTR3EN_SHIFT               7
#define FTM_FLTCTRL_FFVAL_MASK                   0xF00u
#define FTM_FLTCTRL_FFVAL_SHIFT                  8
#define FTM_FLTCTRL_FFVAL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFVAL_SHIFT))&FTM_FLTCTRL_FFVAL_MASK)
/* QDCTRL Bit Fields */
#define FTM_QDCTRL_QUADEN_MASK                   0x1u
#define FTM_QDCTRL_QUADEN_SHIFT                  0
#define FTM_QDCTRL_TOFDIR_MASK                   0x2u
#define FTM_QDCTRL_TOFDIR_SHIFT                  1
#define FTM_QDCTRL_QUADIR_MASK                   0x4u
#define FTM_QDCTRL_QUADIR_SHIFT                  2
#define FTM_QDCTRL_QUADMODE_MASK                 0x8u
#define FTM_QDCTRL_QUADMODE_SHIFT                3
#define FTM_QDCTRL_PHBPOL_MASK                   0x10u
#define FTM_QDCTRL_PHBPOL_SHIFT                  4
#define FTM_QDCTRL_PHAPOL_MASK                   0x20u
#define FTM_QDCTRL_PHAPOL_SHIFT                  5
#define FTM_QDCTRL_PHBFLTREN_MASK                0x40u
#define FTM_QDCTRL_PHBFLTREN_SHIFT               6
#define FTM_QDCTRL_PHAFLTREN_MASK                0x80u
#define FTM_QDCTRL_PHAFLTREN_SHIFT               7
/* CONF Bit Fields */
#define FTM_CONF_NUMTOF_MASK                     0x1Fu
#define FTM_CONF_NUMTOF_SHIFT                    0
#define FTM_CONF_NUMTOF(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_CONF_NUMTOF_SHIFT))&FTM_CONF_NUMTOF_MASK)
#define FTM_CONF_BDMMODE_MASK                    0xC0u
#define FTM_CONF_BDMMODE_SHIFT                   6
#define FTM_CONF_BDMMODE(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_CONF_BDMMODE_SHIFT))&FTM_CONF_BDMMODE_MASK)
#define FTM_CONF_GTBEEN_MASK                     0x200u
#define FTM_CONF_GTBEEN_SHIFT                    9
#define FTM_CONF_GTBEOUT_MASK                    0x400u
#define FTM_CONF_GTBEOUT_SHIFT                   10
/* FLTPOL Bit Fields */
#define FTM_FLTPOL_FLT0POL_MASK                  0x1u
#define FTM_FLTPOL_FLT0POL_SHIFT                 0
#define FTM_FLTPOL_FLT1POL_MASK                  0x2u
#define FTM_FLTPOL_FLT1POL_SHIFT                 1
#define FTM_FLTPOL_FLT2POL_MASK                  0x4u
#define FTM_FLTPOL_FLT2POL_SHIFT                 2
#define FTM_FLTPOL_FLT3POL_MASK                  0x8u
#define FTM_FLTPOL_FLT3POL_SHIFT                 3
/* SYNCONF Bit Fields */
#define FTM_SYNCONF_HWTRIGMODE_MASK              0x1u
#define FTM_SYNCONF_HWTRIGMODE_SHIFT             0
#define FTM_SYNCONF_CNTINC_MASK                  0x4u
#define FTM_SYNCONF_CNTINC_SHIFT                 2
#define FTM_SYNCONF_INVC_MASK                    0x10u
#define FTM_SYNCONF_INVC_SHIFT                   4
#define FTM_SYNCONF_SWOC_MASK                    0x20u
#define FTM_SYNCONF_SWOC_SHIFT                   5
#define FTM_SYNCONF_SYNCMODE_MASK                0x80u
#define FTM_SYNCONF_SYNCMODE_SHIFT               7
#define FTM_SYNCONF_SWRSTCNT_MASK                0x100u
#define FTM_SYNCONF_SWRSTCNT_SHIFT               8
#define FTM_SYNCONF_SWWRBUF_MASK                 0x200u
#define FTM_SYNCONF_SWWRBUF_SHIFT                9
#define FTM_SYNCONF_SWOM_MASK                    0x400u
#define FTM_SYNCONF_SWOM_SHIFT                   10
#define FTM_SYNCONF_SWINVC_MASK                  0x800u
#define FTM_SYNCONF_SWINVC_SHIFT                 11
#define FTM_SYNCONF_SWSOC_MASK                   0x1000u
#define FTM_SYNCONF_SWSOC_SHIFT                  12
#define FTM_SYNCONF_HWRSTCNT_MASK                0x10000u
#define FTM_SYNCONF_HWRSTCNT_SHIFT               16
#define FTM_SYNCONF_HWWRBUF_MASK                 0x20000u
#define FTM_SYNCONF_HWWRBUF_SHIFT                17
#define FTM_SYNCONF_HWOM_MASK                    0x40000u
#define FTM_SYNCONF_HWOM_SHIFT                   18
#define FTM_SYNCONF_HWINVC_MASK                  0x80000u
#define FTM_SYNCONF_HWINVC_SHIFT                 19
#define FTM_SYNCONF_HWSOC_MASK                   0x100000u
#define FTM_SYNCONF_HWSOC_SHIFT                  20
/* INVCTRL Bit Fields */
#define FTM_INVCTRL_INV0EN_MASK                  0x1u
#define FTM_INVCTRL_INV0EN_SHIFT                 0
#define FTM_INVCTRL_INV1EN_MASK                  0x2u
#define FTM_INVCTRL_INV1EN_SHIFT                 1
#define FTM_INVCTRL_INV2EN_MASK                  0x4u
#define FTM_INVCTRL_INV2EN_SHIFT                 2
#define FTM_INVCTRL_INV3EN_MASK                  0x8u
#define FTM_INVCTRL_INV3EN_SHIFT                 3
/* SWOCTRL Bit Fields */
#define FTM_SWOCTRL_CH0OC_MASK                   0x1u
#define FTM_SWOCTRL_CH0OC_SHIFT                  0
#define FTM_SWOCTRL_CH1OC_MASK                   0x2u
#define FTM_SWOCTRL_CH1OC_SHIFT                  1
#define FTM_SWOCTRL_CH2OC_MASK                   0x4u
#define FTM_SWOCTRL_CH2OC_SHIFT                  2
#define FTM_SWOCTRL_CH3OC_MASK                   0x8u
#define FTM_SWOCTRL_CH3OC_SHIFT                  3
#define FTM_SWOCTRL_CH4OC_MASK                   0x10u
#define FTM_SWOCTRL_CH4OC_SHIFT                  4
#define FTM_SWOCTRL_CH5OC_MASK                   0x20u
#define FTM_SWOCTRL_CH5OC_SHIFT                  5
#define FTM_SWOCTRL_CH6OC_MASK                   0x40u
#define FTM_SWOCTRL_CH6OC_SHIFT                  6
#define FTM_SWOCTRL_CH7OC_MASK                   0x80u
#define FTM_SWOCTRL_CH7OC_SHIFT                  7
#define FTM_SWOCTRL_CH0OCV_MASK                  0x100u
#define FTM_SWOCTRL_CH0OCV_SHIFT                 8
#define FTM_SWOCTRL_CH1OCV_MASK                  0x200u
#define FTM_SWOCTRL_CH1OCV_SHIFT                 9
#define FTM_SWOCTRL_CH2OCV_MASK                  0x400u
#define FTM_SWOCTRL_CH2OCV_SHIFT                 10
#define FTM_SWOCTRL_CH3OCV_MASK                  0x800u
#define FTM_SWOCTRL_CH3OCV_SHIFT                 11
#define FTM_SWOCTRL_CH4OCV_MASK                  0x1000u
#define FTM_SWOCTRL_CH4OCV_SHIFT                 12
#define FTM_SWOCTRL_CH5OCV_MASK                  0x2000u
#define FTM_SWOCTRL_CH5OCV_SHIFT                 13
#define FTM_SWOCTRL_CH6OCV_MASK                  0x4000u
#define FTM_SWOCTRL_CH6OCV_SHIFT                 14
#define FTM_SWOCTRL_CH7OCV_MASK                  0x8000u
#define FTM_SWOCTRL_CH7OCV_SHIFT                 15
/* PWMLOAD Bit Fields */
#define FTM_PWMLOAD_CH0SEL_MASK                  0x1u
#define FTM_PWMLOAD_CH0SEL_SHIFT                 0
#define FTM_PWMLOAD_CH1SEL_MASK                  0x2u
#define FTM_PWMLOAD_CH1SEL_SHIFT                 1
#define FTM_PWMLOAD_CH2SEL_MASK                  0x4u
#define FTM_PWMLOAD_CH2SEL_SHIFT                 2
#define FTM_PWMLOAD_CH3SEL_MASK                  0x8u
#define FTM_PWMLOAD_CH3SEL_SHIFT                 3
#define FTM_PWMLOAD_CH4SEL_MASK                  0x10u
#define FTM_PWMLOAD_CH4SEL_SHIFT                 4
#define FTM_PWMLOAD_CH5SEL_MASK                  0x20u
#define FTM_PWMLOAD_CH5SEL_SHIFT                 5
#define FTM_PWMLOAD_CH6SEL_MASK                  0x40u
#define FTM_PWMLOAD_CH6SEL_SHIFT                 6
#define FTM_PWMLOAD_CH7SEL_MASK                  0x80u
#define FTM_PWMLOAD_CH7SEL_SHIFT                 7
#define FTM_PWMLOAD_LDOK_MASK                    0x200u
#define FTM_PWMLOAD_LDOK_SHIFT                   9

/**
 * @}
 */ /* end of group FTM_Register_Masks */


/* FTM - Peripheral instance base addresses */
/** Peripheral FTM0 base pointer */
#define FTM0_BASE_PTR                            ((FTM_MemMapPtr)0x40038000u)
/** Peripheral FTM1 base pointer */
#define FTM1_BASE_PTR                            ((FTM_MemMapPtr)0x40039000u)
/** Peripheral FTM2 base pointer */
#define FTM2_BASE_PTR                            ((FTM_MemMapPtr)0x400B8000u)
/** Peripheral FTM3 base pointer */
#define FTM3_BASE_PTR                            ((FTM_MemMapPtr)0x400B9000u)
/** Array initializer of FTM peripheral base pointers */
#define FTM_BASE_PTRS                            { FTM0_BASE_PTR, FTM1_BASE_PTR, FTM2_BASE_PTR, FTM3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- FTM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup FTM_Register_Accessor_Macros FTM - Register accessor macros
 * @{
 */


/* FTM - Register instance definitions */
/* FTM0 */
#define FTM0_SC                                  FTM_SC_REG(FTM0_BASE_PTR)
#define FTM0_CNT                                 FTM_CNT_REG(FTM0_BASE_PTR)
#define FTM0_MOD                                 FTM_MOD_REG(FTM0_BASE_PTR)
#define FTM0_C0SC                                FTM_CnSC_REG(FTM0_BASE_PTR,0)
#define FTM0_C0V                                 FTM_CnV_REG(FTM0_BASE_PTR,0)
#define FTM0_C1SC                                FTM_CnSC_REG(FTM0_BASE_PTR,1)
#define FTM0_C1V                                 FTM_CnV_REG(FTM0_BASE_PTR,1)
#define FTM0_C2SC                                FTM_CnSC_REG(FTM0_BASE_PTR,2)
#define FTM0_C2V                                 FTM_CnV_REG(FTM0_BASE_PTR,2)
#define FTM0_C3SC                                FTM_CnSC_REG(FTM0_BASE_PTR,3)
#define FTM0_C3V                                 FTM_CnV_REG(FTM0_BASE_PTR,3)
#define FTM0_C4SC                                FTM_CnSC_REG(FTM0_BASE_PTR,4)
#define FTM0_C4V                                 FTM_CnV_REG(FTM0_BASE_PTR,4)
#define FTM0_C5SC                                FTM_CnSC_REG(FTM0_BASE_PTR,5)
#define FTM0_C5V                                 FTM_CnV_REG(FTM0_BASE_PTR,5)
#define FTM0_C6SC                                FTM_CnSC_REG(FTM0_BASE_PTR,6)
#define FTM0_C6V                                 FTM_CnV_REG(FTM0_BASE_PTR,6)
#define FTM0_C7SC                                FTM_CnSC_REG(FTM0_BASE_PTR,7)
#define FTM0_C7V                                 FTM_CnV_REG(FTM0_BASE_PTR,7)
#define FTM0_CNTIN                               FTM_CNTIN_REG(FTM0_BASE_PTR)
#define FTM0_STATUS                              FTM_STATUS_REG(FTM0_BASE_PTR)
#define FTM0_MODE                                FTM_MODE_REG(FTM0_BASE_PTR)
#define FTM0_SYNC                                FTM_SYNC_REG(FTM0_BASE_PTR)
#define FTM0_OUTINIT                             FTM_OUTINIT_REG(FTM0_BASE_PTR)
#define FTM0_OUTMASK                             FTM_OUTMASK_REG(FTM0_BASE_PTR)
#define FTM0_COMBINE                             FTM_COMBINE_REG(FTM0_BASE_PTR)
#define FTM0_DEADTIME                            FTM_DEADTIME_REG(FTM0_BASE_PTR)
#define FTM0_EXTTRIG                             FTM_EXTTRIG_REG(FTM0_BASE_PTR)
#define FTM0_POL                                 FTM_POL_REG(FTM0_BASE_PTR)
#define FTM0_FMS                                 FTM_FMS_REG(FTM0_BASE_PTR)
#define FTM0_FILTER                              FTM_FILTER_REG(FTM0_BASE_PTR)
#define FTM0_FLTCTRL                             FTM_FLTCTRL_REG(FTM0_BASE_PTR)
#define FTM0_QDCTRL                              FTM_QDCTRL_REG(FTM0_BASE_PTR)
#define FTM0_CONF                                FTM_CONF_REG(FTM0_BASE_PTR)
#define FTM0_FLTPOL                              FTM_FLTPOL_REG(FTM0_BASE_PTR)
#define FTM0_SYNCONF                             FTM_SYNCONF_REG(FTM0_BASE_PTR)
#define FTM0_INVCTRL                             FTM_INVCTRL_REG(FTM0_BASE_PTR)
#define FTM0_SWOCTRL                             FTM_SWOCTRL_REG(FTM0_BASE_PTR)
#define FTM0_PWMLOAD                             FTM_PWMLOAD_REG(FTM0_BASE_PTR)
/* FTM1 */
#define FTM1_SC                                  FTM_SC_REG(FTM1_BASE_PTR)
#define FTM1_CNT                                 FTM_CNT_REG(FTM1_BASE_PTR)
#define FTM1_MOD                                 FTM_MOD_REG(FTM1_BASE_PTR)
#define FTM1_C0SC                                FTM_CnSC_REG(FTM1_BASE_PTR,0)
#define FTM1_C0V                                 FTM_CnV_REG(FTM1_BASE_PTR,0)
#define FTM1_C1SC                                FTM_CnSC_REG(FTM1_BASE_PTR,1)
#define FTM1_C1V                                 FTM_CnV_REG(FTM1_BASE_PTR,1)
#define FTM1_C2SC                                FTM_CnSC_REG(FTM1_BASE_PTR,2)
#define FTM1_C2V                                 FTM_CnV_REG(FTM1_BASE_PTR,2)
#define FTM1_C3SC                                FTM_CnSC_REG(FTM1_BASE_PTR,3)
#define FTM1_C3V                                 FTM_CnV_REG(FTM1_BASE_PTR,3)
#define FTM1_C4SC                                FTM_CnSC_REG(FTM1_BASE_PTR,4)
#define FTM1_C4V                                 FTM_CnV_REG(FTM1_BASE_PTR,4)
#define FTM1_C5SC                                FTM_CnSC_REG(FTM1_BASE_PTR,5)
#define FTM1_C5V                                 FTM_CnV_REG(FTM1_BASE_PTR,5)
#define FTM1_C6SC                                FTM_CnSC_REG(FTM1_BASE_PTR,6)
#define FTM1_C6V                                 FTM_CnV_REG(FTM1_BASE_PTR,6)
#define FTM1_C7SC                                FTM_CnSC_REG(FTM1_BASE_PTR,7)
#define FTM1_C7V                                 FTM_CnV_REG(FTM1_BASE_PTR,7)
#define FTM1_CNTIN                               FTM_CNTIN_REG(FTM1_BASE_PTR)
#define FTM1_STATUS                              FTM_STATUS_REG(FTM1_BASE_PTR)
#define FTM1_MODE                                FTM_MODE_REG(FTM1_BASE_PTR)
#define FTM1_SYNC                                FTM_SYNC_REG(FTM1_BASE_PTR)
#define FTM1_OUTINIT                             FTM_OUTINIT_REG(FTM1_BASE_PTR)
#define FTM1_OUTMASK                             FTM_OUTMASK_REG(FTM1_BASE_PTR)
#define FTM1_COMBINE                             FTM_COMBINE_REG(FTM1_BASE_PTR)
#define FTM1_DEADTIME                            FTM_DEADTIME_REG(FTM1_BASE_PTR)
#define FTM1_EXTTRIG                             FTM_EXTTRIG_REG(FTM1_BASE_PTR)
#define FTM1_POL                                 FTM_POL_REG(FTM1_BASE_PTR)
#define FTM1_FMS                                 FTM_FMS_REG(FTM1_BASE_PTR)
#define FTM1_FILTER                              FTM_FILTER_REG(FTM1_BASE_PTR)
#define FTM1_FLTCTRL                             FTM_FLTCTRL_REG(FTM1_BASE_PTR)
#define FTM1_QDCTRL                              FTM_QDCTRL_REG(FTM1_BASE_PTR)
#define FTM1_CONF                                FTM_CONF_REG(FTM1_BASE_PTR)
#define FTM1_FLTPOL                              FTM_FLTPOL_REG(FTM1_BASE_PTR)
#define FTM1_SYNCONF                             FTM_SYNCONF_REG(FTM1_BASE_PTR)
#define FTM1_INVCTRL                             FTM_INVCTRL_REG(FTM1_BASE_PTR)
#define FTM1_SWOCTRL                             FTM_SWOCTRL_REG(FTM1_BASE_PTR)
#define FTM1_PWMLOAD                             FTM_PWMLOAD_REG(FTM1_BASE_PTR)
/* FTM2 */
#define FTM2_SC                                  FTM_SC_REG(FTM2_BASE_PTR)
#define FTM2_CNT                                 FTM_CNT_REG(FTM2_BASE_PTR)
#define FTM2_MOD                                 FTM_MOD_REG(FTM2_BASE_PTR)
#define FTM2_C0SC                                FTM_CnSC_REG(FTM2_BASE_PTR,0)
#define FTM2_C0V                                 FTM_CnV_REG(FTM2_BASE_PTR,0)
#define FTM2_C1SC                                FTM_CnSC_REG(FTM2_BASE_PTR,1)
#define FTM2_C1V                                 FTM_CnV_REG(FTM2_BASE_PTR,1)
#define FTM2_C2SC                                FTM_CnSC_REG(FTM2_BASE_PTR,2)
#define FTM2_C2V                                 FTM_CnV_REG(FTM2_BASE_PTR,2)
#define FTM2_C3SC                                FTM_CnSC_REG(FTM2_BASE_PTR,3)
#define FTM2_C3V                                 FTM_CnV_REG(FTM2_BASE_PTR,3)
#define FTM2_C4SC                                FTM_CnSC_REG(FTM2_BASE_PTR,4)
#define FTM2_C4V                                 FTM_CnV_REG(FTM2_BASE_PTR,4)
#define FTM2_C5SC                                FTM_CnSC_REG(FTM2_BASE_PTR,5)
#define FTM2_C5V                                 FTM_CnV_REG(FTM2_BASE_PTR,5)
#define FTM2_C6SC                                FTM_CnSC_REG(FTM2_BASE_PTR,6)
#define FTM2_C6V                                 FTM_CnV_REG(FTM2_BASE_PTR,6)
#define FTM2_C7SC                                FTM_CnSC_REG(FTM2_BASE_PTR,7)
#define FTM2_C7V                                 FTM_CnV_REG(FTM2_BASE_PTR,7)
#define FTM2_CNTIN                               FTM_CNTIN_REG(FTM2_BASE_PTR)
#define FTM2_STATUS                              FTM_STATUS_REG(FTM2_BASE_PTR)
#define FTM2_MODE                                FTM_MODE_REG(FTM2_BASE_PTR)
#define FTM2_SYNC                                FTM_SYNC_REG(FTM2_BASE_PTR)
#define FTM2_OUTINIT                             FTM_OUTINIT_REG(FTM2_BASE_PTR)
#define FTM2_OUTMASK                             FTM_OUTMASK_REG(FTM2_BASE_PTR)
#define FTM2_COMBINE                             FTM_COMBINE_REG(FTM2_BASE_PTR)
#define FTM2_DEADTIME                            FTM_DEADTIME_REG(FTM2_BASE_PTR)
#define FTM2_EXTTRIG                             FTM_EXTTRIG_REG(FTM2_BASE_PTR)
#define FTM2_POL                                 FTM_POL_REG(FTM2_BASE_PTR)
#define FTM2_FMS                                 FTM_FMS_REG(FTM2_BASE_PTR)
#define FTM2_FILTER                              FTM_FILTER_REG(FTM2_BASE_PTR)
#define FTM2_FLTCTRL                             FTM_FLTCTRL_REG(FTM2_BASE_PTR)
#define FTM2_QDCTRL                              FTM_QDCTRL_REG(FTM2_BASE_PTR)
#define FTM2_CONF                                FTM_CONF_REG(FTM2_BASE_PTR)
#define FTM2_FLTPOL                              FTM_FLTPOL_REG(FTM2_BASE_PTR)
#define FTM2_SYNCONF                             FTM_SYNCONF_REG(FTM2_BASE_PTR)
#define FTM2_INVCTRL                             FTM_INVCTRL_REG(FTM2_BASE_PTR)
#define FTM2_SWOCTRL                             FTM_SWOCTRL_REG(FTM2_BASE_PTR)
#define FTM2_PWMLOAD                             FTM_PWMLOAD_REG(FTM2_BASE_PTR)
/* FTM3 */
#define FTM3_SC                                  FTM_SC_REG(FTM3_BASE_PTR)
#define FTM3_CNT                                 FTM_CNT_REG(FTM3_BASE_PTR)
#define FTM3_MOD                                 FTM_MOD_REG(FTM3_BASE_PTR)
#define FTM3_C0SC                                FTM_CnSC_REG(FTM3_BASE_PTR,0)
#define FTM3_C0V                                 FTM_CnV_REG(FTM3_BASE_PTR,0)
#define FTM3_C1SC                                FTM_CnSC_REG(FTM3_BASE_PTR,1)
#define FTM3_C1V                                 FTM_CnV_REG(FTM3_BASE_PTR,1)
#define FTM3_C2SC                                FTM_CnSC_REG(FTM3_BASE_PTR,2)
#define FTM3_C2V                                 FTM_CnV_REG(FTM3_BASE_PTR,2)
#define FTM3_C3SC                                FTM_CnSC_REG(FTM3_BASE_PTR,3)
#define FTM3_C3V                                 FTM_CnV_REG(FTM3_BASE_PTR,3)
#define FTM3_C4SC                                FTM_CnSC_REG(FTM3_BASE_PTR,4)
#define FTM3_C4V                                 FTM_CnV_REG(FTM3_BASE_PTR,4)
#define FTM3_C5SC                                FTM_CnSC_REG(FTM3_BASE_PTR,5)
#define FTM3_C5V                                 FTM_CnV_REG(FTM3_BASE_PTR,5)
#define FTM3_C6SC                                FTM_CnSC_REG(FTM3_BASE_PTR,6)
#define FTM3_C6V                                 FTM_CnV_REG(FTM3_BASE_PTR,6)
#define FTM3_C7SC                                FTM_CnSC_REG(FTM3_BASE_PTR,7)
#define FTM3_C7V                                 FTM_CnV_REG(FTM3_BASE_PTR,7)
#define FTM3_CNTIN                               FTM_CNTIN_REG(FTM3_BASE_PTR)
#define FTM3_STATUS                              FTM_STATUS_REG(FTM3_BASE_PTR)
#define FTM3_MODE                                FTM_MODE_REG(FTM3_BASE_PTR)
#define FTM3_SYNC                                FTM_SYNC_REG(FTM3_BASE_PTR)
#define FTM3_OUTINIT                             FTM_OUTINIT_REG(FTM3_BASE_PTR)
#define FTM3_OUTMASK                             FTM_OUTMASK_REG(FTM3_BASE_PTR)
#define FTM3_COMBINE                             FTM_COMBINE_REG(FTM3_BASE_PTR)
#define FTM3_DEADTIME                            FTM_DEADTIME_REG(FTM3_BASE_PTR)
#define FTM3_EXTTRIG                             FTM_EXTTRIG_REG(FTM3_BASE_PTR)
#define FTM3_POL                                 FTM_POL_REG(FTM3_BASE_PTR)
#define FTM3_FMS                                 FTM_FMS_REG(FTM3_BASE_PTR)
#define FTM3_FILTER                              FTM_FILTER_REG(FTM3_BASE_PTR)
#define FTM3_FLTCTRL                             FTM_FLTCTRL_REG(FTM3_BASE_PTR)
#define FTM3_QDCTRL                              FTM_QDCTRL_REG(FTM3_BASE_PTR)
#define FTM3_CONF                                FTM_CONF_REG(FTM3_BASE_PTR)
#define FTM3_FLTPOL                              FTM_FLTPOL_REG(FTM3_BASE_PTR)
#define FTM3_SYNCONF                             FTM_SYNCONF_REG(FTM3_BASE_PTR)
#define FTM3_INVCTRL                             FTM_INVCTRL_REG(FTM3_BASE_PTR)
#define FTM3_SWOCTRL                             FTM_SWOCTRL_REG(FTM3_BASE_PTR)
#define FTM3_PWMLOAD                             FTM_PWMLOAD_REG(FTM3_BASE_PTR)

/* FTM - Register array accessors */
#define FTM0_CnSC(index)                         FTM_CnSC_REG(FTM0_BASE_PTR,index)
#define FTM1_CnSC(index)                         FTM_CnSC_REG(FTM1_BASE_PTR,index)
#define FTM2_CnSC(index)                         FTM_CnSC_REG(FTM2_BASE_PTR,index)
#define FTM3_CnSC(index)                         FTM_CnSC_REG(FTM3_BASE_PTR,index)
#define FTM0_CnV(index)                          FTM_CnV_REG(FTM0_BASE_PTR,index)
#define FTM1_CnV(index)                          FTM_CnV_REG(FTM1_BASE_PTR,index)
#define FTM2_CnV(index)                          FTM_CnV_REG(FTM2_BASE_PTR,index)
#define FTM3_CnV(index)                          FTM_CnV_REG(FTM3_BASE_PTR,index)

/**
 * @}
 */ /* end of group FTM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group FTM_Peripheral */


/* ----------------------------------------------------------------------------
   -- GIC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GIC_Peripheral GIC
 * @{
 */

/** GIC - Peripheral register structure */
typedef struct GIC_MemMap {
  uint8_t RESERVED_0[256];
  uint32_t ICR[1];                                 /**< CPU Interface Control Register, array offset: 0x100, array step: 0x4 */
  uint32_t PMR[1];                                 /**< Interrupt Priority Mask Register, array offset: 0x104, array step: 0x4 */
  uint32_t BPR[1];                                 /**< Binary Point Register, array offset: 0x108, array step: 0x4 */
  uint32_t IAR[1];                                 /**< Interrupt Acknowledge Register, array offset: 0x10C, array step: 0x4 */
  uint32_t EOIR[1];                                /**< End of Interrupt Register, array offset: 0x110, array step: 0x4 */
  uint32_t RPR[1];                                 /**< Running Priority Register, array offset: 0x114, array step: 0x4 */
  uint32_t HPIR[1];                                /**< Highest Pending Interrupt Register, array offset: 0x118, array step: 0x4 */
  uint32_t ABPR[1];                                /**< Aliased Binary Point Register, array offset: 0x11C, array step: 0x4 */
  uint8_t RESERVED_1[3808];
  uint32_t DCR[1];                                 /**< Distributor Control Register, array offset: 0x1000, array step: 0x4 */
  uint8_t RESERVED_2[124];
  uint32_t ICDISR[5];                              /**< Interrupt Security Register 0..Interrupt Security Register 4, array offset: 0x1080, array step: 0x4 */
  uint8_t RESERVED_3[108];
  uint32_t ICDISER[5];                             /**< Interrupt Set-Enable Register 0..Interrupt Set-Enable Register 4, array offset: 0x1100, array step: 0x4 */
  uint8_t RESERVED_4[108];
  uint32_t ICDICER[5];                             /**< Interrupt Clear-Enable Registe 0..Interrupt Clear-Enable Registe 4, array offset: 0x1180, array step: 0x4 */
  uint8_t RESERVED_5[108];
  uint32_t ICDISPR[5];                             /**< Interrupt Set-Pending Register 0..Interrupt Set-Pending Register 4, array offset: 0x1200, array step: 0x4 */
  uint8_t RESERVED_6[108];
  uint32_t ICDICPR[5];                             /**< Interrupt Security Register 0..Interrupt Security Register 4, array offset: 0x1280, array step: 0x4 */
  uint8_t RESERVED_7[108];
  uint32_t ICDABR[5];                              /**< Active Bit Register 0..Active Bit Register 4, array offset: 0x1300, array step: 0x4 */
  uint8_t RESERVED_8[236];
  uint32_t ICDIPR[36];                             /**< Interrupt Priority Register 0..Interrupt Priority Register 35, array offset: 0x1400, array step: 0x4 */
  uint8_t RESERVED_9[880];
  uint32_t ICDIPTR[36];                            /**< Interrupt Processor Targets Register 0..Interrupt Processor Targets Register 35, array offset: 0x1800, array step: 0x4 */
  uint8_t RESERVED_10[880];
  uint32_t ICDICFR[9];                             /**< Interrupt Configuration Register 0..Interrupt Configuration Register 8, array offset: 0x1C00, array step: 0x4 */
  uint8_t RESERVED_11[220];
  uint32_t PPIS[1];                                /**< Private Peripheral Interrupt Status Register, array offset: 0x1D00, array step: 0x4 */
  uint32_t ICDSPIS[5];                             /**< Shared Peripheral Interrupt Status Register 0..Shared Peripheral Interrupt Status Register 4, array offset: 0x1D04, array step: 0x4 */
  uint8_t RESERVED_12[488];
  uint32_t SGIR[1];                                /**< Software Generated Interrupt Register, array offset: 0x1F00, array step: 0x4 */
} volatile *GIC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GIC_Register_Accessor_Macros GIC - Register accessor macros
 * @{
 */


/* GIC - Register accessors */
#define GIC_ICR_REG(base,index)                  ((base)->ICR[index])
#define GIC_PMR_REG(base,index)                  ((base)->PMR[index])
#define GIC_BPR_REG(base,index)                  ((base)->BPR[index])
#define GIC_IAR_REG(base,index)                  ((base)->IAR[index])
#define GIC_EOIR_REG(base,index)                 ((base)->EOIR[index])
#define GIC_RPR_REG(base,index)                  ((base)->RPR[index])
#define GIC_HPIR_REG(base,index)                 ((base)->HPIR[index])
#define GIC_ABPR_REG(base,index)                 ((base)->ABPR[index])
#define GIC_DCR_REG(base,index)                  ((base)->DCR[index])
#define GIC_ICDISR_REG(base,index)               ((base)->ICDISR[index])
#define GIC_ICDISER_REG(base,index)              ((base)->ICDISER[index])
#define GIC_ICDICER_REG(base,index)              ((base)->ICDICER[index])
#define GIC_ICDISPR_REG(base,index)              ((base)->ICDISPR[index])
#define GIC_ICDICPR_REG(base,index)              ((base)->ICDICPR[index])
#define GIC_ICDABR_REG(base,index)               ((base)->ICDABR[index])
#define GIC_ICDIPR_REG(base,index)               ((base)->ICDIPR[index])
#define GIC_ICDIPTR_REG(base,index)              ((base)->ICDIPTR[index])
#define GIC_ICDICFR_REG(base,index)              ((base)->ICDICFR[index])
#define GIC_PPIS_REG(base,index)                 ((base)->PPIS[index])
#define GIC_ICDSPIS_REG(base,index)              ((base)->ICDSPIS[index])
#define GIC_SGIR_REG(base,index)                 ((base)->SGIR[index])

/**
 * @}
 */ /* end of group GIC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GIC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GIC_Register_Masks GIC Register Masks
 * @{
 */

/* ICR Bit Fields */
#define GIC_ICR_ENABLES_MASK                     0x1u
#define GIC_ICR_ENABLES_SHIFT                    0
#define GIC_ICR_ENABLENS_MASK                    0x2u
#define GIC_ICR_ENABLENS_SHIFT                   1
#define GIC_ICR_ACKCTL_MASK                      0x4u
#define GIC_ICR_ACKCTL_SHIFT                     2
#define GIC_ICR_FIQEN_MASK                       0x8u
#define GIC_ICR_FIQEN_SHIFT                      3
#define GIC_ICR_SBPR_MASK                        0x10u
#define GIC_ICR_SBPR_SHIFT                       4
/* PMR Bit Fields */
#define GIC_PMR_PRIORITY_MASK                    0xFFu
#define GIC_PMR_PRIORITY_SHIFT                   0
#define GIC_PMR_PRIORITY(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_PMR_PRIORITY_SHIFT))&GIC_PMR_PRIORITY_MASK)
/* BPR Bit Fields */
#define GIC_BPR_BINPOINT_MASK                    0x7u
#define GIC_BPR_BINPOINT_SHIFT                   0
#define GIC_BPR_BINPOINT(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_BPR_BINPOINT_SHIFT))&GIC_BPR_BINPOINT_MASK)
/* IAR Bit Fields */
#define GIC_IAR_ACKINTID_MASK                    0x3FFu
#define GIC_IAR_ACKINTID_SHIFT                   0
#define GIC_IAR_ACKINTID(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_IAR_ACKINTID_SHIFT))&GIC_IAR_ACKINTID_MASK)
#define GIC_IAR_CPUID_MASK                       0x1C00u
#define GIC_IAR_CPUID_SHIFT                      10
#define GIC_IAR_CPUID(x)                         (((uint32_t)(((uint32_t)(x))<<GIC_IAR_CPUID_SHIFT))&GIC_IAR_CPUID_MASK)
/* EOIR Bit Fields */
#define GIC_EOIR_EOIINTID_MASK                   0x3FFu
#define GIC_EOIR_EOIINTID_SHIFT                  0
#define GIC_EOIR_EOIINTID(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_EOIR_EOIINTID_SHIFT))&GIC_EOIR_EOIINTID_MASK)
#define GIC_EOIR_CPUID_MASK                      0x1C00u
#define GIC_EOIR_CPUID_SHIFT                     10
#define GIC_EOIR_CPUID(x)                        (((uint32_t)(((uint32_t)(x))<<GIC_EOIR_CPUID_SHIFT))&GIC_EOIR_CPUID_MASK)
/* RPR Bit Fields */
#define GIC_RPR_PRIORITY_MASK                    0xFFu
#define GIC_RPR_PRIORITY_SHIFT                   0
#define GIC_RPR_PRIORITY(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_RPR_PRIORITY_SHIFT))&GIC_RPR_PRIORITY_MASK)
/* HPIR Bit Fields */
#define GIC_HPIR_PENDINTID_MASK                  0x3FFu
#define GIC_HPIR_PENDINTID_SHIFT                 0
#define GIC_HPIR_PENDINTID(x)                    (((uint32_t)(((uint32_t)(x))<<GIC_HPIR_PENDINTID_SHIFT))&GIC_HPIR_PENDINTID_MASK)
#define GIC_HPIR_CPUID_MASK                      0x1C00u
#define GIC_HPIR_CPUID_SHIFT                     10
#define GIC_HPIR_CPUID(x)                        (((uint32_t)(((uint32_t)(x))<<GIC_HPIR_CPUID_SHIFT))&GIC_HPIR_CPUID_MASK)
/* ABPR Bit Fields */
#define GIC_ABPR_BINPOINT_MASK                   0x3u
#define GIC_ABPR_BINPOINT_SHIFT                  0
#define GIC_ABPR_BINPOINT(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ABPR_BINPOINT_SHIFT))&GIC_ABPR_BINPOINT_MASK)
/* DCR Bit Fields */
#define GIC_DCR_ENABLE_MASK                      0x1u
#define GIC_DCR_ENABLE_SHIFT                     0
/* ICDISR Bit Fields */
#define GIC_ICDISR_SETSTA_MASK                   0xFFFFFFFFu
#define GIC_ICDISR_SETSTA_SHIFT                  0
#define GIC_ICDISR_SETSTA(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDISR_SETSTA_SHIFT))&GIC_ICDISR_SETSTA_MASK)
/* ICDISER Bit Fields */
#define GIC_ICDISER_SETENA_MASK                  0xFFFFFFFFu
#define GIC_ICDISER_SETENA_SHIFT                 0
#define GIC_ICDISER_SETENA(x)                    (((uint32_t)(((uint32_t)(x))<<GIC_ICDISER_SETENA_SHIFT))&GIC_ICDISER_SETENA_MASK)
/* ICDICER Bit Fields */
#define GIC_ICDICER_CLRENA_MASK                  0xFFFFFFFFu
#define GIC_ICDICER_CLRENA_SHIFT                 0
#define GIC_ICDICER_CLRENA(x)                    (((uint32_t)(((uint32_t)(x))<<GIC_ICDICER_CLRENA_SHIFT))&GIC_ICDICER_CLRENA_MASK)
/* ICDISPR Bit Fields */
#define GIC_ICDISPR_SETPEND_MASK                 0xFFFFFFFFu
#define GIC_ICDISPR_SETPEND_SHIFT                0
#define GIC_ICDISPR_SETPEND(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDISPR_SETPEND_SHIFT))&GIC_ICDISPR_SETPEND_MASK)
/* ICDICPR Bit Fields */
#define GIC_ICDICPR_CLRPEND_MASK                 0xFFFFFFFFu
#define GIC_ICDICPR_CLRPEND_SHIFT                0
#define GIC_ICDICPR_CLRPEND(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICPR_CLRPEND_SHIFT))&GIC_ICDICPR_CLRPEND_MASK)
/* ICDABR Bit Fields */
#define GIC_ICDABR_ACTIVE_MASK                   0xFFFFFFFFu
#define GIC_ICDABR_ACTIVE_SHIFT                  0
#define GIC_ICDABR_ACTIVE(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDABR_ACTIVE_SHIFT))&GIC_ICDABR_ACTIVE_MASK)
/* ICDIPR Bit Fields */
#define GIC_ICDIPR_PRI0_MASK                     0xFFu
#define GIC_ICDIPR_PRI0_SHIFT                    0
#define GIC_ICDIPR_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI0_SHIFT))&GIC_ICDIPR_PRI0_MASK)
#define GIC_ICDIPR_PRI140_MASK                   0xFFu
#define GIC_ICDIPR_PRI140_SHIFT                  0
#define GIC_ICDIPR_PRI140(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI140_SHIFT))&GIC_ICDIPR_PRI140_MASK)
#define GIC_ICDIPR_PRI136_MASK                   0xFFu
#define GIC_ICDIPR_PRI136_SHIFT                  0
#define GIC_ICDIPR_PRI136(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI136_SHIFT))&GIC_ICDIPR_PRI136_MASK)
#define GIC_ICDIPR_PRI132_MASK                   0xFFu
#define GIC_ICDIPR_PRI132_SHIFT                  0
#define GIC_ICDIPR_PRI132(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI132_SHIFT))&GIC_ICDIPR_PRI132_MASK)
#define GIC_ICDIPR_PRI4_MASK                     0xFFu
#define GIC_ICDIPR_PRI4_SHIFT                    0
#define GIC_ICDIPR_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI4_SHIFT))&GIC_ICDIPR_PRI4_MASK)
#define GIC_ICDIPR_PRI128_MASK                   0xFFu
#define GIC_ICDIPR_PRI128_SHIFT                  0
#define GIC_ICDIPR_PRI128(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI128_SHIFT))&GIC_ICDIPR_PRI128_MASK)
#define GIC_ICDIPR_PRI124_MASK                   0xFFu
#define GIC_ICDIPR_PRI124_SHIFT                  0
#define GIC_ICDIPR_PRI124(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI124_SHIFT))&GIC_ICDIPR_PRI124_MASK)
#define GIC_ICDIPR_PRI120_MASK                   0xFFu
#define GIC_ICDIPR_PRI120_SHIFT                  0
#define GIC_ICDIPR_PRI120(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI120_SHIFT))&GIC_ICDIPR_PRI120_MASK)
#define GIC_ICDIPR_PRI8_MASK                     0xFFu
#define GIC_ICDIPR_PRI8_SHIFT                    0
#define GIC_ICDIPR_PRI8(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI8_SHIFT))&GIC_ICDIPR_PRI8_MASK)
#define GIC_ICDIPR_PRI116_MASK                   0xFFu
#define GIC_ICDIPR_PRI116_SHIFT                  0
#define GIC_ICDIPR_PRI116(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI116_SHIFT))&GIC_ICDIPR_PRI116_MASK)
#define GIC_ICDIPR_PRI112_MASK                   0xFFu
#define GIC_ICDIPR_PRI112_SHIFT                  0
#define GIC_ICDIPR_PRI112(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI112_SHIFT))&GIC_ICDIPR_PRI112_MASK)
#define GIC_ICDIPR_PRI108_MASK                   0xFFu
#define GIC_ICDIPR_PRI108_SHIFT                  0
#define GIC_ICDIPR_PRI108(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI108_SHIFT))&GIC_ICDIPR_PRI108_MASK)
#define GIC_ICDIPR_PRI12_MASK                    0xFFu
#define GIC_ICDIPR_PRI12_SHIFT                   0
#define GIC_ICDIPR_PRI12(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI12_SHIFT))&GIC_ICDIPR_PRI12_MASK)
#define GIC_ICDIPR_PRI104_MASK                   0xFFu
#define GIC_ICDIPR_PRI104_SHIFT                  0
#define GIC_ICDIPR_PRI104(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI104_SHIFT))&GIC_ICDIPR_PRI104_MASK)
#define GIC_ICDIPR_PRI100_MASK                   0xFFu
#define GIC_ICDIPR_PRI100_SHIFT                  0
#define GIC_ICDIPR_PRI100(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI100_SHIFT))&GIC_ICDIPR_PRI100_MASK)
#define GIC_ICDIPR_PRI96_MASK                    0xFFu
#define GIC_ICDIPR_PRI96_SHIFT                   0
#define GIC_ICDIPR_PRI96(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI96_SHIFT))&GIC_ICDIPR_PRI96_MASK)
#define GIC_ICDIPR_PRI16_MASK                    0xFFu
#define GIC_ICDIPR_PRI16_SHIFT                   0
#define GIC_ICDIPR_PRI16(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI16_SHIFT))&GIC_ICDIPR_PRI16_MASK)
#define GIC_ICDIPR_PRI92_MASK                    0xFFu
#define GIC_ICDIPR_PRI92_SHIFT                   0
#define GIC_ICDIPR_PRI92(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI92_SHIFT))&GIC_ICDIPR_PRI92_MASK)
#define GIC_ICDIPR_PRI88_MASK                    0xFFu
#define GIC_ICDIPR_PRI88_SHIFT                   0
#define GIC_ICDIPR_PRI88(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI88_SHIFT))&GIC_ICDIPR_PRI88_MASK)
#define GIC_ICDIPR_PRI84_MASK                    0xFFu
#define GIC_ICDIPR_PRI84_SHIFT                   0
#define GIC_ICDIPR_PRI84(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI84_SHIFT))&GIC_ICDIPR_PRI84_MASK)
#define GIC_ICDIPR_PRI20_MASK                    0xFFu
#define GIC_ICDIPR_PRI20_SHIFT                   0
#define GIC_ICDIPR_PRI20(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI20_SHIFT))&GIC_ICDIPR_PRI20_MASK)
#define GIC_ICDIPR_PRI80_MASK                    0xFFu
#define GIC_ICDIPR_PRI80_SHIFT                   0
#define GIC_ICDIPR_PRI80(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI80_SHIFT))&GIC_ICDIPR_PRI80_MASK)
#define GIC_ICDIPR_PRI76_MASK                    0xFFu
#define GIC_ICDIPR_PRI76_SHIFT                   0
#define GIC_ICDIPR_PRI76(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI76_SHIFT))&GIC_ICDIPR_PRI76_MASK)
#define GIC_ICDIPR_PRI72_MASK                    0xFFu
#define GIC_ICDIPR_PRI72_SHIFT                   0
#define GIC_ICDIPR_PRI72(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI72_SHIFT))&GIC_ICDIPR_PRI72_MASK)
#define GIC_ICDIPR_PRI24_MASK                    0xFFu
#define GIC_ICDIPR_PRI24_SHIFT                   0
#define GIC_ICDIPR_PRI24(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI24_SHIFT))&GIC_ICDIPR_PRI24_MASK)
#define GIC_ICDIPR_PRI68_MASK                    0xFFu
#define GIC_ICDIPR_PRI68_SHIFT                   0
#define GIC_ICDIPR_PRI68(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI68_SHIFT))&GIC_ICDIPR_PRI68_MASK)
#define GIC_ICDIPR_PRI64_MASK                    0xFFu
#define GIC_ICDIPR_PRI64_SHIFT                   0
#define GIC_ICDIPR_PRI64(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI64_SHIFT))&GIC_ICDIPR_PRI64_MASK)
#define GIC_ICDIPR_PRI60_MASK                    0xFFu
#define GIC_ICDIPR_PRI60_SHIFT                   0
#define GIC_ICDIPR_PRI60(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI60_SHIFT))&GIC_ICDIPR_PRI60_MASK)
#define GIC_ICDIPR_PRI28_MASK                    0xFFu
#define GIC_ICDIPR_PRI28_SHIFT                   0
#define GIC_ICDIPR_PRI28(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI28_SHIFT))&GIC_ICDIPR_PRI28_MASK)
#define GIC_ICDIPR_PRI56_MASK                    0xFFu
#define GIC_ICDIPR_PRI56_SHIFT                   0
#define GIC_ICDIPR_PRI56(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI56_SHIFT))&GIC_ICDIPR_PRI56_MASK)
#define GIC_ICDIPR_PRI52_MASK                    0xFFu
#define GIC_ICDIPR_PRI52_SHIFT                   0
#define GIC_ICDIPR_PRI52(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI52_SHIFT))&GIC_ICDIPR_PRI52_MASK)
#define GIC_ICDIPR_PRI48_MASK                    0xFFu
#define GIC_ICDIPR_PRI48_SHIFT                   0
#define GIC_ICDIPR_PRI48(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI48_SHIFT))&GIC_ICDIPR_PRI48_MASK)
#define GIC_ICDIPR_PRI32_MASK                    0xFFu
#define GIC_ICDIPR_PRI32_SHIFT                   0
#define GIC_ICDIPR_PRI32(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI32_SHIFT))&GIC_ICDIPR_PRI32_MASK)
#define GIC_ICDIPR_PRI44_MASK                    0xFFu
#define GIC_ICDIPR_PRI44_SHIFT                   0
#define GIC_ICDIPR_PRI44(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI44_SHIFT))&GIC_ICDIPR_PRI44_MASK)
#define GIC_ICDIPR_PRI40_MASK                    0xFFu
#define GIC_ICDIPR_PRI40_SHIFT                   0
#define GIC_ICDIPR_PRI40(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI40_SHIFT))&GIC_ICDIPR_PRI40_MASK)
#define GIC_ICDIPR_PRI36_MASK                    0xFFu
#define GIC_ICDIPR_PRI36_SHIFT                   0
#define GIC_ICDIPR_PRI36(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI36_SHIFT))&GIC_ICDIPR_PRI36_MASK)
#define GIC_ICDIPR_PRI33_MASK                    0xFF00u
#define GIC_ICDIPR_PRI33_SHIFT                   8
#define GIC_ICDIPR_PRI33(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI33_SHIFT))&GIC_ICDIPR_PRI33_MASK)
#define GIC_ICDIPR_PRI109_MASK                   0xFF00u
#define GIC_ICDIPR_PRI109_SHIFT                  8
#define GIC_ICDIPR_PRI109(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI109_SHIFT))&GIC_ICDIPR_PRI109_MASK)
#define GIC_ICDIPR_PRI105_MASK                   0xFF00u
#define GIC_ICDIPR_PRI105_SHIFT                  8
#define GIC_ICDIPR_PRI105(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI105_SHIFT))&GIC_ICDIPR_PRI105_MASK)
#define GIC_ICDIPR_PRI13_MASK                    0xFF00u
#define GIC_ICDIPR_PRI13_SHIFT                   8
#define GIC_ICDIPR_PRI13(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI13_SHIFT))&GIC_ICDIPR_PRI13_MASK)
#define GIC_ICDIPR_PRI1_MASK                     0xFF00u
#define GIC_ICDIPR_PRI1_SHIFT                    8
#define GIC_ICDIPR_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI1_SHIFT))&GIC_ICDIPR_PRI1_MASK)
#define GIC_ICDIPR_PRI61_MASK                    0xFF00u
#define GIC_ICDIPR_PRI61_SHIFT                   8
#define GIC_ICDIPR_PRI61(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI61_SHIFT))&GIC_ICDIPR_PRI61_MASK)
#define GIC_ICDIPR_PRI101_MASK                   0xFF00u
#define GIC_ICDIPR_PRI101_SHIFT                  8
#define GIC_ICDIPR_PRI101(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI101_SHIFT))&GIC_ICDIPR_PRI101_MASK)
#define GIC_ICDIPR_PRI69_MASK                    0xFF00u
#define GIC_ICDIPR_PRI69_SHIFT                   8
#define GIC_ICDIPR_PRI69(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI69_SHIFT))&GIC_ICDIPR_PRI69_MASK)
#define GIC_ICDIPR_PRI57_MASK                    0xFF00u
#define GIC_ICDIPR_PRI57_SHIFT                   8
#define GIC_ICDIPR_PRI57(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI57_SHIFT))&GIC_ICDIPR_PRI57_MASK)
#define GIC_ICDIPR_PRI113_MASK                   0xFF00u
#define GIC_ICDIPR_PRI113_SHIFT                  8
#define GIC_ICDIPR_PRI113(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI113_SHIFT))&GIC_ICDIPR_PRI113_MASK)
#define GIC_ICDIPR_PRI97_MASK                    0xFF00u
#define GIC_ICDIPR_PRI97_SHIFT                   8
#define GIC_ICDIPR_PRI97(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI97_SHIFT))&GIC_ICDIPR_PRI97_MASK)
#define GIC_ICDIPR_PRI29_MASK                    0xFF00u
#define GIC_ICDIPR_PRI29_SHIFT                   8
#define GIC_ICDIPR_PRI29(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI29_SHIFT))&GIC_ICDIPR_PRI29_MASK)
#define GIC_ICDIPR_PRI5_MASK                     0xFF00u
#define GIC_ICDIPR_PRI5_SHIFT                    8
#define GIC_ICDIPR_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI5_SHIFT))&GIC_ICDIPR_PRI5_MASK)
#define GIC_ICDIPR_PRI129_MASK                   0xFF00u
#define GIC_ICDIPR_PRI129_SHIFT                  8
#define GIC_ICDIPR_PRI129(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI129_SHIFT))&GIC_ICDIPR_PRI129_MASK)
#define GIC_ICDIPR_PRI93_MASK                    0xFF00u
#define GIC_ICDIPR_PRI93_SHIFT                   8
#define GIC_ICDIPR_PRI93(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI93_SHIFT))&GIC_ICDIPR_PRI93_MASK)
#define GIC_ICDIPR_PRI17_MASK                    0xFF00u
#define GIC_ICDIPR_PRI17_SHIFT                   8
#define GIC_ICDIPR_PRI17(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI17_SHIFT))&GIC_ICDIPR_PRI17_MASK)
#define GIC_ICDIPR_PRI9_MASK                     0xFF00u
#define GIC_ICDIPR_PRI9_SHIFT                    8
#define GIC_ICDIPR_PRI9(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI9_SHIFT))&GIC_ICDIPR_PRI9_MASK)
#define GIC_ICDIPR_PRI117_MASK                   0xFF00u
#define GIC_ICDIPR_PRI117_SHIFT                  8
#define GIC_ICDIPR_PRI117(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI117_SHIFT))&GIC_ICDIPR_PRI117_MASK)
#define GIC_ICDIPR_PRI89_MASK                    0xFF00u
#define GIC_ICDIPR_PRI89_SHIFT                   8
#define GIC_ICDIPR_PRI89(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI89_SHIFT))&GIC_ICDIPR_PRI89_MASK)
#define GIC_ICDIPR_PRI141_MASK                   0xFF00u
#define GIC_ICDIPR_PRI141_SHIFT                  8
#define GIC_ICDIPR_PRI141(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI141_SHIFT))&GIC_ICDIPR_PRI141_MASK)
#define GIC_ICDIPR_PRI53_MASK                    0xFF00u
#define GIC_ICDIPR_PRI53_SHIFT                   8
#define GIC_ICDIPR_PRI53(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI53_SHIFT))&GIC_ICDIPR_PRI53_MASK)
#define GIC_ICDIPR_PRI45_MASK                    0xFF00u
#define GIC_ICDIPR_PRI45_SHIFT                   8
#define GIC_ICDIPR_PRI45(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI45_SHIFT))&GIC_ICDIPR_PRI45_MASK)
#define GIC_ICDIPR_PRI85_MASK                    0xFF00u
#define GIC_ICDIPR_PRI85_SHIFT                   8
#define GIC_ICDIPR_PRI85(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI85_SHIFT))&GIC_ICDIPR_PRI85_MASK)
#define GIC_ICDIPR_PRI137_MASK                   0xFF00u
#define GIC_ICDIPR_PRI137_SHIFT                  8
#define GIC_ICDIPR_PRI137(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI137_SHIFT))&GIC_ICDIPR_PRI137_MASK)
#define GIC_ICDIPR_PRI41_MASK                    0xFF00u
#define GIC_ICDIPR_PRI41_SHIFT                   8
#define GIC_ICDIPR_PRI41(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI41_SHIFT))&GIC_ICDIPR_PRI41_MASK)
#define GIC_ICDIPR_PRI121_MASK                   0xFF00u
#define GIC_ICDIPR_PRI121_SHIFT                  8
#define GIC_ICDIPR_PRI121(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI121_SHIFT))&GIC_ICDIPR_PRI121_MASK)
#define GIC_ICDIPR_PRI81_MASK                    0xFF00u
#define GIC_ICDIPR_PRI81_SHIFT                   8
#define GIC_ICDIPR_PRI81(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI81_SHIFT))&GIC_ICDIPR_PRI81_MASK)
#define GIC_ICDIPR_PRI21_MASK                    0xFF00u
#define GIC_ICDIPR_PRI21_SHIFT                   8
#define GIC_ICDIPR_PRI21(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI21_SHIFT))&GIC_ICDIPR_PRI21_MASK)
#define GIC_ICDIPR_PRI25_MASK                    0xFF00u
#define GIC_ICDIPR_PRI25_SHIFT                   8
#define GIC_ICDIPR_PRI25(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI25_SHIFT))&GIC_ICDIPR_PRI25_MASK)
#define GIC_ICDIPR_PRI65_MASK                    0xFF00u
#define GIC_ICDIPR_PRI65_SHIFT                   8
#define GIC_ICDIPR_PRI65(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI65_SHIFT))&GIC_ICDIPR_PRI65_MASK)
#define GIC_ICDIPR_PRI77_MASK                    0xFF00u
#define GIC_ICDIPR_PRI77_SHIFT                   8
#define GIC_ICDIPR_PRI77(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI77_SHIFT))&GIC_ICDIPR_PRI77_MASK)
#define GIC_ICDIPR_PRI133_MASK                   0xFF00u
#define GIC_ICDIPR_PRI133_SHIFT                  8
#define GIC_ICDIPR_PRI133(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI133_SHIFT))&GIC_ICDIPR_PRI133_MASK)
#define GIC_ICDIPR_PRI49_MASK                    0xFF00u
#define GIC_ICDIPR_PRI49_SHIFT                   8
#define GIC_ICDIPR_PRI49(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI49_SHIFT))&GIC_ICDIPR_PRI49_MASK)
#define GIC_ICDIPR_PRI125_MASK                   0xFF00u
#define GIC_ICDIPR_PRI125_SHIFT                  8
#define GIC_ICDIPR_PRI125(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI125_SHIFT))&GIC_ICDIPR_PRI125_MASK)
#define GIC_ICDIPR_PRI73_MASK                    0xFF00u
#define GIC_ICDIPR_PRI73_SHIFT                   8
#define GIC_ICDIPR_PRI73(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI73_SHIFT))&GIC_ICDIPR_PRI73_MASK)
#define GIC_ICDIPR_PRI37_MASK                    0xFF00u
#define GIC_ICDIPR_PRI37_SHIFT                   8
#define GIC_ICDIPR_PRI37(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI37_SHIFT))&GIC_ICDIPR_PRI37_MASK)
#define GIC_ICDIPR_PRI38_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI38_SHIFT                   16
#define GIC_ICDIPR_PRI38(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI38_SHIFT))&GIC_ICDIPR_PRI38_MASK)
#define GIC_ICDIPR_PRI106_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI106_SHIFT                  16
#define GIC_ICDIPR_PRI106(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI106_SHIFT))&GIC_ICDIPR_PRI106_MASK)
#define GIC_ICDIPR_PRI58_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI58_SHIFT                   16
#define GIC_ICDIPR_PRI58(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI58_SHIFT))&GIC_ICDIPR_PRI58_MASK)
#define GIC_ICDIPR_PRI102_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI102_SHIFT                  16
#define GIC_ICDIPR_PRI102(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI102_SHIFT))&GIC_ICDIPR_PRI102_MASK)
#define GIC_ICDIPR_PRI14_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI14_SHIFT                   16
#define GIC_ICDIPR_PRI14(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI14_SHIFT))&GIC_ICDIPR_PRI14_MASK)
#define GIC_ICDIPR_PRI98_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI98_SHIFT                   16
#define GIC_ICDIPR_PRI98(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI98_SHIFT))&GIC_ICDIPR_PRI98_MASK)
#define GIC_ICDIPR_PRI42_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI42_SHIFT                   16
#define GIC_ICDIPR_PRI42(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI42_SHIFT))&GIC_ICDIPR_PRI42_MASK)
#define GIC_ICDIPR_PRI94_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI94_SHIFT                   16
#define GIC_ICDIPR_PRI94(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI94_SHIFT))&GIC_ICDIPR_PRI94_MASK)
#define GIC_ICDIPR_PRI54_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI54_SHIFT                   16
#define GIC_ICDIPR_PRI54(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI54_SHIFT))&GIC_ICDIPR_PRI54_MASK)
#define GIC_ICDIPR_PRI90_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI90_SHIFT                   16
#define GIC_ICDIPR_PRI90(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI90_SHIFT))&GIC_ICDIPR_PRI90_MASK)
#define GIC_ICDIPR_PRI18_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI18_SHIFT                   16
#define GIC_ICDIPR_PRI18(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI18_SHIFT))&GIC_ICDIPR_PRI18_MASK)
#define GIC_ICDIPR_PRI86_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI86_SHIFT                   16
#define GIC_ICDIPR_PRI86(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI86_SHIFT))&GIC_ICDIPR_PRI86_MASK)
#define GIC_ICDIPR_PRI30_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI30_SHIFT                   16
#define GIC_ICDIPR_PRI30(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI30_SHIFT))&GIC_ICDIPR_PRI30_MASK)
#define GIC_ICDIPR_PRI82_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI82_SHIFT                   16
#define GIC_ICDIPR_PRI82(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI82_SHIFT))&GIC_ICDIPR_PRI82_MASK)
#define GIC_ICDIPR_PRI50_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI50_SHIFT                   16
#define GIC_ICDIPR_PRI50(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI50_SHIFT))&GIC_ICDIPR_PRI50_MASK)
#define GIC_ICDIPR_PRI78_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI78_SHIFT                   16
#define GIC_ICDIPR_PRI78(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI78_SHIFT))&GIC_ICDIPR_PRI78_MASK)
#define GIC_ICDIPR_PRI22_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI22_SHIFT                   16
#define GIC_ICDIPR_PRI22(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI22_SHIFT))&GIC_ICDIPR_PRI22_MASK)
#define GIC_ICDIPR_PRI74_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI74_SHIFT                   16
#define GIC_ICDIPR_PRI74(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI74_SHIFT))&GIC_ICDIPR_PRI74_MASK)
#define GIC_ICDIPR_PRI110_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI110_SHIFT                  16
#define GIC_ICDIPR_PRI110(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI110_SHIFT))&GIC_ICDIPR_PRI110_MASK)
#define GIC_ICDIPR_PRI10_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI10_SHIFT                   16
#define GIC_ICDIPR_PRI10(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI10_SHIFT))&GIC_ICDIPR_PRI10_MASK)
#define GIC_ICDIPR_PRI114_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI114_SHIFT                  16
#define GIC_ICDIPR_PRI114(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI114_SHIFT))&GIC_ICDIPR_PRI114_MASK)
#define GIC_ICDIPR_PRI62_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI62_SHIFT                   16
#define GIC_ICDIPR_PRI62(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI62_SHIFT))&GIC_ICDIPR_PRI62_MASK)
#define GIC_ICDIPR_PRI118_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI118_SHIFT                  16
#define GIC_ICDIPR_PRI118(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI118_SHIFT))&GIC_ICDIPR_PRI118_MASK)
#define GIC_ICDIPR_PRI26_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI26_SHIFT                   16
#define GIC_ICDIPR_PRI26(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI26_SHIFT))&GIC_ICDIPR_PRI26_MASK)
#define GIC_ICDIPR_PRI122_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI122_SHIFT                  16
#define GIC_ICDIPR_PRI122(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI122_SHIFT))&GIC_ICDIPR_PRI122_MASK)
#define GIC_ICDIPR_PRI6_MASK                     0xFF0000u
#define GIC_ICDIPR_PRI6_SHIFT                    16
#define GIC_ICDIPR_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI6_SHIFT))&GIC_ICDIPR_PRI6_MASK)
#define GIC_ICDIPR_PRI126_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI126_SHIFT                  16
#define GIC_ICDIPR_PRI126(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI126_SHIFT))&GIC_ICDIPR_PRI126_MASK)
#define GIC_ICDIPR_PRI66_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI66_SHIFT                   16
#define GIC_ICDIPR_PRI66(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI66_SHIFT))&GIC_ICDIPR_PRI66_MASK)
#define GIC_ICDIPR_PRI130_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI130_SHIFT                  16
#define GIC_ICDIPR_PRI130(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI130_SHIFT))&GIC_ICDIPR_PRI130_MASK)
#define GIC_ICDIPR_PRI46_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI46_SHIFT                   16
#define GIC_ICDIPR_PRI46(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI46_SHIFT))&GIC_ICDIPR_PRI46_MASK)
#define GIC_ICDIPR_PRI134_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI134_SHIFT                  16
#define GIC_ICDIPR_PRI134(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI134_SHIFT))&GIC_ICDIPR_PRI134_MASK)
#define GIC_ICDIPR_PRI2_MASK                     0xFF0000u
#define GIC_ICDIPR_PRI2_SHIFT                    16
#define GIC_ICDIPR_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI2_SHIFT))&GIC_ICDIPR_PRI2_MASK)
#define GIC_ICDIPR_PRI138_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI138_SHIFT                  16
#define GIC_ICDIPR_PRI138(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI138_SHIFT))&GIC_ICDIPR_PRI138_MASK)
#define GIC_ICDIPR_PRI70_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI70_SHIFT                   16
#define GIC_ICDIPR_PRI70(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI70_SHIFT))&GIC_ICDIPR_PRI70_MASK)
#define GIC_ICDIPR_PRI142_MASK                   0xFF0000u
#define GIC_ICDIPR_PRI142_SHIFT                  16
#define GIC_ICDIPR_PRI142(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI142_SHIFT))&GIC_ICDIPR_PRI142_MASK)
#define GIC_ICDIPR_PRI34_MASK                    0xFF0000u
#define GIC_ICDIPR_PRI34_SHIFT                   16
#define GIC_ICDIPR_PRI34(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI34_SHIFT))&GIC_ICDIPR_PRI34_MASK)
#define GIC_ICDIPR_PRI143_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI143_SHIFT                  24
#define GIC_ICDIPR_PRI143(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI143_SHIFT))&GIC_ICDIPR_PRI143_MASK)
#define GIC_ICDIPR_PRI139_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI139_SHIFT                  24
#define GIC_ICDIPR_PRI139(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI139_SHIFT))&GIC_ICDIPR_PRI139_MASK)
#define GIC_ICDIPR_PRI135_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI135_SHIFT                  24
#define GIC_ICDIPR_PRI135(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI135_SHIFT))&GIC_ICDIPR_PRI135_MASK)
#define GIC_ICDIPR_PRI3_MASK                     0xFF000000u
#define GIC_ICDIPR_PRI3_SHIFT                    24
#define GIC_ICDIPR_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI3_SHIFT))&GIC_ICDIPR_PRI3_MASK)
#define GIC_ICDIPR_PRI131_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI131_SHIFT                  24
#define GIC_ICDIPR_PRI131(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI131_SHIFT))&GIC_ICDIPR_PRI131_MASK)
#define GIC_ICDIPR_PRI127_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI127_SHIFT                  24
#define GIC_ICDIPR_PRI127(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI127_SHIFT))&GIC_ICDIPR_PRI127_MASK)
#define GIC_ICDIPR_PRI123_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI123_SHIFT                  24
#define GIC_ICDIPR_PRI123(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI123_SHIFT))&GIC_ICDIPR_PRI123_MASK)
#define GIC_ICDIPR_PRI7_MASK                     0xFF000000u
#define GIC_ICDIPR_PRI7_SHIFT                    24
#define GIC_ICDIPR_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI7_SHIFT))&GIC_ICDIPR_PRI7_MASK)
#define GIC_ICDIPR_PRI119_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI119_SHIFT                  24
#define GIC_ICDIPR_PRI119(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI119_SHIFT))&GIC_ICDIPR_PRI119_MASK)
#define GIC_ICDIPR_PRI115_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI115_SHIFT                  24
#define GIC_ICDIPR_PRI115(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI115_SHIFT))&GIC_ICDIPR_PRI115_MASK)
#define GIC_ICDIPR_PRI111_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI111_SHIFT                  24
#define GIC_ICDIPR_PRI111(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI111_SHIFT))&GIC_ICDIPR_PRI111_MASK)
#define GIC_ICDIPR_PRI11_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI11_SHIFT                   24
#define GIC_ICDIPR_PRI11(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI11_SHIFT))&GIC_ICDIPR_PRI11_MASK)
#define GIC_ICDIPR_PRI107_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI107_SHIFT                  24
#define GIC_ICDIPR_PRI107(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI107_SHIFT))&GIC_ICDIPR_PRI107_MASK)
#define GIC_ICDIPR_PRI103_MASK                   0xFF000000u
#define GIC_ICDIPR_PRI103_SHIFT                  24
#define GIC_ICDIPR_PRI103(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI103_SHIFT))&GIC_ICDIPR_PRI103_MASK)
#define GIC_ICDIPR_PRI99_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI99_SHIFT                   24
#define GIC_ICDIPR_PRI99(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI99_SHIFT))&GIC_ICDIPR_PRI99_MASK)
#define GIC_ICDIPR_PRI15_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI15_SHIFT                   24
#define GIC_ICDIPR_PRI15(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI15_SHIFT))&GIC_ICDIPR_PRI15_MASK)
#define GIC_ICDIPR_PRI95_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI95_SHIFT                   24
#define GIC_ICDIPR_PRI95(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI95_SHIFT))&GIC_ICDIPR_PRI95_MASK)
#define GIC_ICDIPR_PRI91_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI91_SHIFT                   24
#define GIC_ICDIPR_PRI91(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI91_SHIFT))&GIC_ICDIPR_PRI91_MASK)
#define GIC_ICDIPR_PRI87_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI87_SHIFT                   24
#define GIC_ICDIPR_PRI87(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI87_SHIFT))&GIC_ICDIPR_PRI87_MASK)
#define GIC_ICDIPR_PRI19_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI19_SHIFT                   24
#define GIC_ICDIPR_PRI19(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI19_SHIFT))&GIC_ICDIPR_PRI19_MASK)
#define GIC_ICDIPR_PRI83_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI83_SHIFT                   24
#define GIC_ICDIPR_PRI83(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI83_SHIFT))&GIC_ICDIPR_PRI83_MASK)
#define GIC_ICDIPR_PRI79_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI79_SHIFT                   24
#define GIC_ICDIPR_PRI79(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI79_SHIFT))&GIC_ICDIPR_PRI79_MASK)
#define GIC_ICDIPR_PRI75_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI75_SHIFT                   24
#define GIC_ICDIPR_PRI75(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI75_SHIFT))&GIC_ICDIPR_PRI75_MASK)
#define GIC_ICDIPR_PRI23_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI23_SHIFT                   24
#define GIC_ICDIPR_PRI23(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI23_SHIFT))&GIC_ICDIPR_PRI23_MASK)
#define GIC_ICDIPR_PRI71_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI71_SHIFT                   24
#define GIC_ICDIPR_PRI71(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI71_SHIFT))&GIC_ICDIPR_PRI71_MASK)
#define GIC_ICDIPR_PRI67_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI67_SHIFT                   24
#define GIC_ICDIPR_PRI67(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI67_SHIFT))&GIC_ICDIPR_PRI67_MASK)
#define GIC_ICDIPR_PRI63_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI63_SHIFT                   24
#define GIC_ICDIPR_PRI63(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI63_SHIFT))&GIC_ICDIPR_PRI63_MASK)
#define GIC_ICDIPR_PRI27_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI27_SHIFT                   24
#define GIC_ICDIPR_PRI27(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI27_SHIFT))&GIC_ICDIPR_PRI27_MASK)
#define GIC_ICDIPR_PRI59_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI59_SHIFT                   24
#define GIC_ICDIPR_PRI59(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI59_SHIFT))&GIC_ICDIPR_PRI59_MASK)
#define GIC_ICDIPR_PRI55_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI55_SHIFT                   24
#define GIC_ICDIPR_PRI55(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI55_SHIFT))&GIC_ICDIPR_PRI55_MASK)
#define GIC_ICDIPR_PRI51_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI51_SHIFT                   24
#define GIC_ICDIPR_PRI51(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI51_SHIFT))&GIC_ICDIPR_PRI51_MASK)
#define GIC_ICDIPR_PRI31_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI31_SHIFT                   24
#define GIC_ICDIPR_PRI31(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI31_SHIFT))&GIC_ICDIPR_PRI31_MASK)
#define GIC_ICDIPR_PRI47_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI47_SHIFT                   24
#define GIC_ICDIPR_PRI47(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI47_SHIFT))&GIC_ICDIPR_PRI47_MASK)
#define GIC_ICDIPR_PRI43_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI43_SHIFT                   24
#define GIC_ICDIPR_PRI43(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI43_SHIFT))&GIC_ICDIPR_PRI43_MASK)
#define GIC_ICDIPR_PRI39_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI39_SHIFT                   24
#define GIC_ICDIPR_PRI39(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI39_SHIFT))&GIC_ICDIPR_PRI39_MASK)
#define GIC_ICDIPR_PRI35_MASK                    0xFF000000u
#define GIC_ICDIPR_PRI35_SHIFT                   24
#define GIC_ICDIPR_PRI35(x)                      (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPR_PRI35_SHIFT))&GIC_ICDIPR_PRI35_MASK)
/* ICDIPTR Bit Fields */
#define GIC_ICDIPTR_CPUTRGTLST0_MASK             0xFFu
#define GIC_ICDIPTR_CPUTRGTLST0_SHIFT            0
#define GIC_ICDIPTR_CPUTRGTLST0(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST0_SHIFT))&GIC_ICDIPTR_CPUTRGTLST0_MASK)
#define GIC_ICDIPTR_CPUTRGTLST140_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST140_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST140(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST140_SHIFT))&GIC_ICDIPTR_CPUTRGTLST140_MASK)
#define GIC_ICDIPTR_CPUTRGTLST136_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST136_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST136(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST136_SHIFT))&GIC_ICDIPTR_CPUTRGTLST136_MASK)
#define GIC_ICDIPTR_CPUTRGTLST132_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST132_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST132(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST132_SHIFT))&GIC_ICDIPTR_CPUTRGTLST132_MASK)
#define GIC_ICDIPTR_CPUTRGTLST4_MASK             0xFFu
#define GIC_ICDIPTR_CPUTRGTLST4_SHIFT            0
#define GIC_ICDIPTR_CPUTRGTLST4(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST4_SHIFT))&GIC_ICDIPTR_CPUTRGTLST4_MASK)
#define GIC_ICDIPTR_CPUTRGTLST128_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST128_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST128(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST128_SHIFT))&GIC_ICDIPTR_CPUTRGTLST128_MASK)
#define GIC_ICDIPTR_CPUTRGTLST124_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST124_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST124(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST124_SHIFT))&GIC_ICDIPTR_CPUTRGTLST124_MASK)
#define GIC_ICDIPTR_CPUTRGTLST120_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST120_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST120(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST120_SHIFT))&GIC_ICDIPTR_CPUTRGTLST120_MASK)
#define GIC_ICDIPTR_CPUTRGTLST8_MASK             0xFFu
#define GIC_ICDIPTR_CPUTRGTLST8_SHIFT            0
#define GIC_ICDIPTR_CPUTRGTLST8(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST8_SHIFT))&GIC_ICDIPTR_CPUTRGTLST8_MASK)
#define GIC_ICDIPTR_CPUTRGTLST116_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST116_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST116(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST116_SHIFT))&GIC_ICDIPTR_CPUTRGTLST116_MASK)
#define GIC_ICDIPTR_CPUTRGTLST112_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST112_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST112(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST112_SHIFT))&GIC_ICDIPTR_CPUTRGTLST112_MASK)
#define GIC_ICDIPTR_CPUTRGTLST108_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST108_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST108(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST108_SHIFT))&GIC_ICDIPTR_CPUTRGTLST108_MASK)
#define GIC_ICDIPTR_CPUTRGTLST12_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST12_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST12(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST12_SHIFT))&GIC_ICDIPTR_CPUTRGTLST12_MASK)
#define GIC_ICDIPTR_CPUTRGTLST104_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST104_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST104(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST104_SHIFT))&GIC_ICDIPTR_CPUTRGTLST104_MASK)
#define GIC_ICDIPTR_CPUTRGTLST100_MASK           0xFFu
#define GIC_ICDIPTR_CPUTRGTLST100_SHIFT          0
#define GIC_ICDIPTR_CPUTRGTLST100(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST100_SHIFT))&GIC_ICDIPTR_CPUTRGTLST100_MASK)
#define GIC_ICDIPTR_CPUTRGTLST96_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST96_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST96(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST96_SHIFT))&GIC_ICDIPTR_CPUTRGTLST96_MASK)
#define GIC_ICDIPTR_CPUTRGTLST16_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST16_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST16(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST16_SHIFT))&GIC_ICDIPTR_CPUTRGTLST16_MASK)
#define GIC_ICDIPTR_CPUTRGTLST92_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST92_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST92(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST92_SHIFT))&GIC_ICDIPTR_CPUTRGTLST92_MASK)
#define GIC_ICDIPTR_CPUTRGTLST88_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST88_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST88(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST88_SHIFT))&GIC_ICDIPTR_CPUTRGTLST88_MASK)
#define GIC_ICDIPTR_CPUTRGTLST84_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST84_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST84(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST84_SHIFT))&GIC_ICDIPTR_CPUTRGTLST84_MASK)
#define GIC_ICDIPTR_CPUTRGTLST20_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST20_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST20(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST20_SHIFT))&GIC_ICDIPTR_CPUTRGTLST20_MASK)
#define GIC_ICDIPTR_CPUTRGTLST80_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST80_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST80(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST80_SHIFT))&GIC_ICDIPTR_CPUTRGTLST80_MASK)
#define GIC_ICDIPTR_CPUTRGTLST76_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST76_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST76(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST76_SHIFT))&GIC_ICDIPTR_CPUTRGTLST76_MASK)
#define GIC_ICDIPTR_CPUTRGTLST72_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST72_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST72(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST72_SHIFT))&GIC_ICDIPTR_CPUTRGTLST72_MASK)
#define GIC_ICDIPTR_CPUTRGTLST24_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST24_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST24(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST24_SHIFT))&GIC_ICDIPTR_CPUTRGTLST24_MASK)
#define GIC_ICDIPTR_CPUTRGTLST68_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST68_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST68(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST68_SHIFT))&GIC_ICDIPTR_CPUTRGTLST68_MASK)
#define GIC_ICDIPTR_CPUTRGTLST64_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST64_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST64(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST64_SHIFT))&GIC_ICDIPTR_CPUTRGTLST64_MASK)
#define GIC_ICDIPTR_CPUTRGTLST60_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST60_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST60(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST60_SHIFT))&GIC_ICDIPTR_CPUTRGTLST60_MASK)
#define GIC_ICDIPTR_CPUTRGTLST28_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST28_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST28(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST28_SHIFT))&GIC_ICDIPTR_CPUTRGTLST28_MASK)
#define GIC_ICDIPTR_CPUTRGTLST56_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST56_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST56(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST56_SHIFT))&GIC_ICDIPTR_CPUTRGTLST56_MASK)
#define GIC_ICDIPTR_CPUTRGTLST52_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST52_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST52(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST52_SHIFT))&GIC_ICDIPTR_CPUTRGTLST52_MASK)
#define GIC_ICDIPTR_CPUTRGTLST48_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST48_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST48(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST48_SHIFT))&GIC_ICDIPTR_CPUTRGTLST48_MASK)
#define GIC_ICDIPTR_CPUTRGTLST32_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST32_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST32(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST32_SHIFT))&GIC_ICDIPTR_CPUTRGTLST32_MASK)
#define GIC_ICDIPTR_CPUTRGTLST44_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST44_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST44(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST44_SHIFT))&GIC_ICDIPTR_CPUTRGTLST44_MASK)
#define GIC_ICDIPTR_CPUTRGTLST40_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST40_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST40(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST40_SHIFT))&GIC_ICDIPTR_CPUTRGTLST40_MASK)
#define GIC_ICDIPTR_CPUTRGTLST36_MASK            0xFFu
#define GIC_ICDIPTR_CPUTRGTLST36_SHIFT           0
#define GIC_ICDIPTR_CPUTRGTLST36(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST36_SHIFT))&GIC_ICDIPTR_CPUTRGTLST36_MASK)
#define GIC_ICDIPTR_CPUTRGTLST33_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST33_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST33(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST33_SHIFT))&GIC_ICDIPTR_CPUTRGTLST33_MASK)
#define GIC_ICDIPTR_CPUTRGTLST109_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST109_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST109(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST109_SHIFT))&GIC_ICDIPTR_CPUTRGTLST109_MASK)
#define GIC_ICDIPTR_CPUTRGTLST105_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST105_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST105(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST105_SHIFT))&GIC_ICDIPTR_CPUTRGTLST105_MASK)
#define GIC_ICDIPTR_CPUTRGTLST13_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST13_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST13(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST13_SHIFT))&GIC_ICDIPTR_CPUTRGTLST13_MASK)
#define GIC_ICDIPTR_CPUTRGTLST1_MASK             0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST1_SHIFT            8
#define GIC_ICDIPTR_CPUTRGTLST1(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST1_SHIFT))&GIC_ICDIPTR_CPUTRGTLST1_MASK)
#define GIC_ICDIPTR_CPUTRGTLST61_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST61_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST61(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST61_SHIFT))&GIC_ICDIPTR_CPUTRGTLST61_MASK)
#define GIC_ICDIPTR_CPUTRGTLST101_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST101_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST101(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST101_SHIFT))&GIC_ICDIPTR_CPUTRGTLST101_MASK)
#define GIC_ICDIPTR_CPUTRGTLST69_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST69_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST69(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST69_SHIFT))&GIC_ICDIPTR_CPUTRGTLST69_MASK)
#define GIC_ICDIPTR_CPUTRGTLST57_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST57_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST57(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST57_SHIFT))&GIC_ICDIPTR_CPUTRGTLST57_MASK)
#define GIC_ICDIPTR_CPUTRGTLST113_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST113_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST113(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST113_SHIFT))&GIC_ICDIPTR_CPUTRGTLST113_MASK)
#define GIC_ICDIPTR_CPUTRGTLST97_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST97_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST97(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST97_SHIFT))&GIC_ICDIPTR_CPUTRGTLST97_MASK)
#define GIC_ICDIPTR_CPUTRGTLST29_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST29_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST29(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST29_SHIFT))&GIC_ICDIPTR_CPUTRGTLST29_MASK)
#define GIC_ICDIPTR_CPUTRGTLST5_MASK             0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST5_SHIFT            8
#define GIC_ICDIPTR_CPUTRGTLST5(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST5_SHIFT))&GIC_ICDIPTR_CPUTRGTLST5_MASK)
#define GIC_ICDIPTR_CPUTRGTLST129_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST129_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST129(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST129_SHIFT))&GIC_ICDIPTR_CPUTRGTLST129_MASK)
#define GIC_ICDIPTR_CPUTRGTLST93_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST93_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST93(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST93_SHIFT))&GIC_ICDIPTR_CPUTRGTLST93_MASK)
#define GIC_ICDIPTR_CPUTRGTLST17_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST17_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST17(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST17_SHIFT))&GIC_ICDIPTR_CPUTRGTLST17_MASK)
#define GIC_ICDIPTR_CPUTRGTLST9_MASK             0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST9_SHIFT            8
#define GIC_ICDIPTR_CPUTRGTLST9(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST9_SHIFT))&GIC_ICDIPTR_CPUTRGTLST9_MASK)
#define GIC_ICDIPTR_CPUTRGTLST117_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST117_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST117(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST117_SHIFT))&GIC_ICDIPTR_CPUTRGTLST117_MASK)
#define GIC_ICDIPTR_CPUTRGTLST89_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST89_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST89(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST89_SHIFT))&GIC_ICDIPTR_CPUTRGTLST89_MASK)
#define GIC_ICDIPTR_CPUTRGTLST141_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST141_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST141(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST141_SHIFT))&GIC_ICDIPTR_CPUTRGTLST141_MASK)
#define GIC_ICDIPTR_CPUTRGTLST53_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST53_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST53(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST53_SHIFT))&GIC_ICDIPTR_CPUTRGTLST53_MASK)
#define GIC_ICDIPTR_CPUTRGTLST45_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST45_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST45(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST45_SHIFT))&GIC_ICDIPTR_CPUTRGTLST45_MASK)
#define GIC_ICDIPTR_CPUTRGTLST85_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST85_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST85(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST85_SHIFT))&GIC_ICDIPTR_CPUTRGTLST85_MASK)
#define GIC_ICDIPTR_CPUTRGTLST137_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST137_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST137(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST137_SHIFT))&GIC_ICDIPTR_CPUTRGTLST137_MASK)
#define GIC_ICDIPTR_CPUTRGTLST41_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST41_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST41(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST41_SHIFT))&GIC_ICDIPTR_CPUTRGTLST41_MASK)
#define GIC_ICDIPTR_CPUTRGTLST121_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST121_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST121(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST121_SHIFT))&GIC_ICDIPTR_CPUTRGTLST121_MASK)
#define GIC_ICDIPTR_CPUTRGTLST81_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST81_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST81(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST81_SHIFT))&GIC_ICDIPTR_CPUTRGTLST81_MASK)
#define GIC_ICDIPTR_CPUTRGTLST21_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST21_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST21(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST21_SHIFT))&GIC_ICDIPTR_CPUTRGTLST21_MASK)
#define GIC_ICDIPTR_CPUTRGTLST25_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST25_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST25(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST25_SHIFT))&GIC_ICDIPTR_CPUTRGTLST25_MASK)
#define GIC_ICDIPTR_CPUTRGTLST65_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST65_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST65(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST65_SHIFT))&GIC_ICDIPTR_CPUTRGTLST65_MASK)
#define GIC_ICDIPTR_CPUTRGTLST77_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST77_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST77(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST77_SHIFT))&GIC_ICDIPTR_CPUTRGTLST77_MASK)
#define GIC_ICDIPTR_CPUTRGTLST133_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST133_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST133(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST133_SHIFT))&GIC_ICDIPTR_CPUTRGTLST133_MASK)
#define GIC_ICDIPTR_CPUTRGTLST49_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST49_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST49(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST49_SHIFT))&GIC_ICDIPTR_CPUTRGTLST49_MASK)
#define GIC_ICDIPTR_CPUTRGTLST125_MASK           0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST125_SHIFT          8
#define GIC_ICDIPTR_CPUTRGTLST125(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST125_SHIFT))&GIC_ICDIPTR_CPUTRGTLST125_MASK)
#define GIC_ICDIPTR_CPUTRGTLST73_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST73_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST73(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST73_SHIFT))&GIC_ICDIPTR_CPUTRGTLST73_MASK)
#define GIC_ICDIPTR_CPUTRGTLST37_MASK            0xFF00u
#define GIC_ICDIPTR_CPUTRGTLST37_SHIFT           8
#define GIC_ICDIPTR_CPUTRGTLST37(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST37_SHIFT))&GIC_ICDIPTR_CPUTRGTLST37_MASK)
#define GIC_ICDIPTR_CPUTRGTLST38_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST38_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST38(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST38_SHIFT))&GIC_ICDIPTR_CPUTRGTLST38_MASK)
#define GIC_ICDIPTR_CPUTRGTLST106_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST106_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST106(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST106_SHIFT))&GIC_ICDIPTR_CPUTRGTLST106_MASK)
#define GIC_ICDIPTR_CPUTRGTLST58_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST58_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST58(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST58_SHIFT))&GIC_ICDIPTR_CPUTRGTLST58_MASK)
#define GIC_ICDIPTR_CPUTRGTLST102_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST102_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST102(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST102_SHIFT))&GIC_ICDIPTR_CPUTRGTLST102_MASK)
#define GIC_ICDIPTR_CPUTRGTLST14_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST14_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST14(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST14_SHIFT))&GIC_ICDIPTR_CPUTRGTLST14_MASK)
#define GIC_ICDIPTR_CPUTRGTLST98_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST98_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST98(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST98_SHIFT))&GIC_ICDIPTR_CPUTRGTLST98_MASK)
#define GIC_ICDIPTR_CPUTRGTLST42_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST42_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST42(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST42_SHIFT))&GIC_ICDIPTR_CPUTRGTLST42_MASK)
#define GIC_ICDIPTR_CPUTRGTLST94_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST94_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST94(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST94_SHIFT))&GIC_ICDIPTR_CPUTRGTLST94_MASK)
#define GIC_ICDIPTR_CPUTRGTLST54_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST54_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST54(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST54_SHIFT))&GIC_ICDIPTR_CPUTRGTLST54_MASK)
#define GIC_ICDIPTR_CPUTRGTLST90_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST90_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST90(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST90_SHIFT))&GIC_ICDIPTR_CPUTRGTLST90_MASK)
#define GIC_ICDIPTR_CPUTRGTLST18_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST18_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST18(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST18_SHIFT))&GIC_ICDIPTR_CPUTRGTLST18_MASK)
#define GIC_ICDIPTR_CPUTRGTLST86_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST86_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST86(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST86_SHIFT))&GIC_ICDIPTR_CPUTRGTLST86_MASK)
#define GIC_ICDIPTR_CPUTRGTLST30_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST30_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST30(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST30_SHIFT))&GIC_ICDIPTR_CPUTRGTLST30_MASK)
#define GIC_ICDIPTR_CPUTRGTLST82_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST82_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST82(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST82_SHIFT))&GIC_ICDIPTR_CPUTRGTLST82_MASK)
#define GIC_ICDIPTR_CPUTRGTLST50_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST50_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST50(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST50_SHIFT))&GIC_ICDIPTR_CPUTRGTLST50_MASK)
#define GIC_ICDIPTR_CPUTRGTLST78_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST78_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST78(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST78_SHIFT))&GIC_ICDIPTR_CPUTRGTLST78_MASK)
#define GIC_ICDIPTR_CPUTRGTLST22_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST22_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST22(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST22_SHIFT))&GIC_ICDIPTR_CPUTRGTLST22_MASK)
#define GIC_ICDIPTR_CPUTRGTLST74_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST74_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST74(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST74_SHIFT))&GIC_ICDIPTR_CPUTRGTLST74_MASK)
#define GIC_ICDIPTR_CPUTRGTLST110_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST110_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST110(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST110_SHIFT))&GIC_ICDIPTR_CPUTRGTLST110_MASK)
#define GIC_ICDIPTR_CPUTRGTLST10_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST10_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST10(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST10_SHIFT))&GIC_ICDIPTR_CPUTRGTLST10_MASK)
#define GIC_ICDIPTR_CPUTRGTLST114_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST114_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST114(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST114_SHIFT))&GIC_ICDIPTR_CPUTRGTLST114_MASK)
#define GIC_ICDIPTR_CPUTRGTLST62_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST62_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST62(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST62_SHIFT))&GIC_ICDIPTR_CPUTRGTLST62_MASK)
#define GIC_ICDIPTR_CPUTRGTLST118_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST118_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST118(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST118_SHIFT))&GIC_ICDIPTR_CPUTRGTLST118_MASK)
#define GIC_ICDIPTR_CPUTRGTLST26_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST26_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST26(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST26_SHIFT))&GIC_ICDIPTR_CPUTRGTLST26_MASK)
#define GIC_ICDIPTR_CPUTRGTLST122_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST122_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST122(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST122_SHIFT))&GIC_ICDIPTR_CPUTRGTLST122_MASK)
#define GIC_ICDIPTR_CPUTRGTLST6_MASK             0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST6_SHIFT            16
#define GIC_ICDIPTR_CPUTRGTLST6(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST6_SHIFT))&GIC_ICDIPTR_CPUTRGTLST6_MASK)
#define GIC_ICDIPTR_CPUTRGTLST126_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST126_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST126(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST126_SHIFT))&GIC_ICDIPTR_CPUTRGTLST126_MASK)
#define GIC_ICDIPTR_CPUTRGTLST66_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST66_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST66(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST66_SHIFT))&GIC_ICDIPTR_CPUTRGTLST66_MASK)
#define GIC_ICDIPTR_CPUTRGTLST130_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST130_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST130(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST130_SHIFT))&GIC_ICDIPTR_CPUTRGTLST130_MASK)
#define GIC_ICDIPTR_CPUTRGTLST46_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST46_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST46(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST46_SHIFT))&GIC_ICDIPTR_CPUTRGTLST46_MASK)
#define GIC_ICDIPTR_CPUTRGTLST134_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST134_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST134(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST134_SHIFT))&GIC_ICDIPTR_CPUTRGTLST134_MASK)
#define GIC_ICDIPTR_CPUTRGTLST2_MASK             0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST2_SHIFT            16
#define GIC_ICDIPTR_CPUTRGTLST2(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST2_SHIFT))&GIC_ICDIPTR_CPUTRGTLST2_MASK)
#define GIC_ICDIPTR_CPUTRGTLST138_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST138_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST138(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST138_SHIFT))&GIC_ICDIPTR_CPUTRGTLST138_MASK)
#define GIC_ICDIPTR_CPUTRGTLST70_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST70_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST70(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST70_SHIFT))&GIC_ICDIPTR_CPUTRGTLST70_MASK)
#define GIC_ICDIPTR_CPUTRGTLST142_MASK           0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST142_SHIFT          16
#define GIC_ICDIPTR_CPUTRGTLST142(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST142_SHIFT))&GIC_ICDIPTR_CPUTRGTLST142_MASK)
#define GIC_ICDIPTR_CPUTRGTLST34_MASK            0xFF0000u
#define GIC_ICDIPTR_CPUTRGTLST34_SHIFT           16
#define GIC_ICDIPTR_CPUTRGTLST34(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST34_SHIFT))&GIC_ICDIPTR_CPUTRGTLST34_MASK)
#define GIC_ICDIPTR_CPUTRGTLST143_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST143_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST143(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST143_SHIFT))&GIC_ICDIPTR_CPUTRGTLST143_MASK)
#define GIC_ICDIPTR_CPUTRGTLST139_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST139_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST139(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST139_SHIFT))&GIC_ICDIPTR_CPUTRGTLST139_MASK)
#define GIC_ICDIPTR_CPUTRGTLST135_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST135_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST135(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST135_SHIFT))&GIC_ICDIPTR_CPUTRGTLST135_MASK)
#define GIC_ICDIPTR_CPUTRGTLST3_MASK             0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST3_SHIFT            24
#define GIC_ICDIPTR_CPUTRGTLST3(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST3_SHIFT))&GIC_ICDIPTR_CPUTRGTLST3_MASK)
#define GIC_ICDIPTR_CPUTRGTLST131_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST131_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST131(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST131_SHIFT))&GIC_ICDIPTR_CPUTRGTLST131_MASK)
#define GIC_ICDIPTR_CPUTRGTLST127_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST127_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST127(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST127_SHIFT))&GIC_ICDIPTR_CPUTRGTLST127_MASK)
#define GIC_ICDIPTR_CPUTRGTLST123_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST123_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST123(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST123_SHIFT))&GIC_ICDIPTR_CPUTRGTLST123_MASK)
#define GIC_ICDIPTR_CPUTRGTLST7_MASK             0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST7_SHIFT            24
#define GIC_ICDIPTR_CPUTRGTLST7(x)               (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST7_SHIFT))&GIC_ICDIPTR_CPUTRGTLST7_MASK)
#define GIC_ICDIPTR_CPUTRGTLST119_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST119_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST119(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST119_SHIFT))&GIC_ICDIPTR_CPUTRGTLST119_MASK)
#define GIC_ICDIPTR_CPUTRGTLST115_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST115_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST115(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST115_SHIFT))&GIC_ICDIPTR_CPUTRGTLST115_MASK)
#define GIC_ICDIPTR_CPUTRGTLST111_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST111_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST111(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST111_SHIFT))&GIC_ICDIPTR_CPUTRGTLST111_MASK)
#define GIC_ICDIPTR_CPUTRGTLST11_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST11_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST11(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST11_SHIFT))&GIC_ICDIPTR_CPUTRGTLST11_MASK)
#define GIC_ICDIPTR_CPUTRGTLST107_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST107_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST107(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST107_SHIFT))&GIC_ICDIPTR_CPUTRGTLST107_MASK)
#define GIC_ICDIPTR_CPUTRGTLST103_MASK           0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST103_SHIFT          24
#define GIC_ICDIPTR_CPUTRGTLST103(x)             (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST103_SHIFT))&GIC_ICDIPTR_CPUTRGTLST103_MASK)
#define GIC_ICDIPTR_CPUTRGTLST99_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST99_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST99(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST99_SHIFT))&GIC_ICDIPTR_CPUTRGTLST99_MASK)
#define GIC_ICDIPTR_CPUTRGTLST15_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST15_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST15(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST15_SHIFT))&GIC_ICDIPTR_CPUTRGTLST15_MASK)
#define GIC_ICDIPTR_CPUTRGTLST95_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST95_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST95(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST95_SHIFT))&GIC_ICDIPTR_CPUTRGTLST95_MASK)
#define GIC_ICDIPTR_CPUTRGTLST91_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST91_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST91(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST91_SHIFT))&GIC_ICDIPTR_CPUTRGTLST91_MASK)
#define GIC_ICDIPTR_CPUTRGTLST87_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST87_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST87(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST87_SHIFT))&GIC_ICDIPTR_CPUTRGTLST87_MASK)
#define GIC_ICDIPTR_CPUTRGTLST19_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST19_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST19(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST19_SHIFT))&GIC_ICDIPTR_CPUTRGTLST19_MASK)
#define GIC_ICDIPTR_CPUTRGTLST83_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST83_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST83(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST83_SHIFT))&GIC_ICDIPTR_CPUTRGTLST83_MASK)
#define GIC_ICDIPTR_CPUTRGTLST79_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST79_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST79(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST79_SHIFT))&GIC_ICDIPTR_CPUTRGTLST79_MASK)
#define GIC_ICDIPTR_CPUTRGTLST75_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST75_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST75(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST75_SHIFT))&GIC_ICDIPTR_CPUTRGTLST75_MASK)
#define GIC_ICDIPTR_CPUTRGTLST23_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST23_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST23(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST23_SHIFT))&GIC_ICDIPTR_CPUTRGTLST23_MASK)
#define GIC_ICDIPTR_CPUTRGTLST71_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST71_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST71(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST71_SHIFT))&GIC_ICDIPTR_CPUTRGTLST71_MASK)
#define GIC_ICDIPTR_CPUTRGTLST67_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST67_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST67(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST67_SHIFT))&GIC_ICDIPTR_CPUTRGTLST67_MASK)
#define GIC_ICDIPTR_CPUTRGTLST63_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST63_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST63(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST63_SHIFT))&GIC_ICDIPTR_CPUTRGTLST63_MASK)
#define GIC_ICDIPTR_CPUTRGTLST27_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST27_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST27(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST27_SHIFT))&GIC_ICDIPTR_CPUTRGTLST27_MASK)
#define GIC_ICDIPTR_CPUTRGTLST59_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST59_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST59(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST59_SHIFT))&GIC_ICDIPTR_CPUTRGTLST59_MASK)
#define GIC_ICDIPTR_CPUTRGTLST55_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST55_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST55(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST55_SHIFT))&GIC_ICDIPTR_CPUTRGTLST55_MASK)
#define GIC_ICDIPTR_CPUTRGTLST51_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST51_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST51(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST51_SHIFT))&GIC_ICDIPTR_CPUTRGTLST51_MASK)
#define GIC_ICDIPTR_CPUTRGTLST31_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST31_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST31(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST31_SHIFT))&GIC_ICDIPTR_CPUTRGTLST31_MASK)
#define GIC_ICDIPTR_CPUTRGTLST47_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST47_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST47(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST47_SHIFT))&GIC_ICDIPTR_CPUTRGTLST47_MASK)
#define GIC_ICDIPTR_CPUTRGTLST43_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST43_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST43(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST43_SHIFT))&GIC_ICDIPTR_CPUTRGTLST43_MASK)
#define GIC_ICDIPTR_CPUTRGTLST39_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST39_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST39(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST39_SHIFT))&GIC_ICDIPTR_CPUTRGTLST39_MASK)
#define GIC_ICDIPTR_CPUTRGTLST35_MASK            0xFF000000u
#define GIC_ICDIPTR_CPUTRGTLST35_SHIFT           24
#define GIC_ICDIPTR_CPUTRGTLST35(x)              (((uint32_t)(((uint32_t)(x))<<GIC_ICDIPTR_CPUTRGTLST35_SHIFT))&GIC_ICDIPTR_CPUTRGTLST35_MASK)
/* ICDICFR Bit Fields */
#define GIC_ICDICFR_CONFIG128_MASK               0x3u
#define GIC_ICDICFR_CONFIG128_SHIFT              0
#define GIC_ICDICFR_CONFIG128(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG128_SHIFT))&GIC_ICDICFR_CONFIG128_MASK)
#define GIC_ICDICFR_CONFIG16_MASK                0x3u
#define GIC_ICDICFR_CONFIG16_SHIFT               0
#define GIC_ICDICFR_CONFIG16(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG16_SHIFT))&GIC_ICDICFR_CONFIG16_MASK)
#define GIC_ICDICFR_CONFIG80_MASK                0x3u
#define GIC_ICDICFR_CONFIG80_SHIFT               0
#define GIC_ICDICFR_CONFIG80(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG80_SHIFT))&GIC_ICDICFR_CONFIG80_MASK)
#define GIC_ICDICFR_CONFIG0_MASK                 0x3u
#define GIC_ICDICFR_CONFIG0_SHIFT                0
#define GIC_ICDICFR_CONFIG0(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG0_SHIFT))&GIC_ICDICFR_CONFIG0_MASK)
#define GIC_ICDICFR_CONFIG32_MASK                0x3u
#define GIC_ICDICFR_CONFIG32_SHIFT               0
#define GIC_ICDICFR_CONFIG32(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG32_SHIFT))&GIC_ICDICFR_CONFIG32_MASK)
#define GIC_ICDICFR_CONFIG96_MASK                0x3u
#define GIC_ICDICFR_CONFIG96_SHIFT               0
#define GIC_ICDICFR_CONFIG96(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG96_SHIFT))&GIC_ICDICFR_CONFIG96_MASK)
#define GIC_ICDICFR_CONFIG64_MASK                0x3u
#define GIC_ICDICFR_CONFIG64_SHIFT               0
#define GIC_ICDICFR_CONFIG64(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG64_SHIFT))&GIC_ICDICFR_CONFIG64_MASK)
#define GIC_ICDICFR_CONFIG48_MASK                0x3u
#define GIC_ICDICFR_CONFIG48_SHIFT               0
#define GIC_ICDICFR_CONFIG48(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG48_SHIFT))&GIC_ICDICFR_CONFIG48_MASK)
#define GIC_ICDICFR_CONFIG112_MASK               0x3u
#define GIC_ICDICFR_CONFIG112_SHIFT              0
#define GIC_ICDICFR_CONFIG112(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG112_SHIFT))&GIC_ICDICFR_CONFIG112_MASK)
#define GIC_ICDICFR_CONFIG113_MASK               0xCu
#define GIC_ICDICFR_CONFIG113_SHIFT              2
#define GIC_ICDICFR_CONFIG113(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG113_SHIFT))&GIC_ICDICFR_CONFIG113_MASK)
#define GIC_ICDICFR_CONFIG65_MASK                0xCu
#define GIC_ICDICFR_CONFIG65_SHIFT               2
#define GIC_ICDICFR_CONFIG65(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG65_SHIFT))&GIC_ICDICFR_CONFIG65_MASK)
#define GIC_ICDICFR_CONFIG81_MASK                0xCu
#define GIC_ICDICFR_CONFIG81_SHIFT               2
#define GIC_ICDICFR_CONFIG81(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG81_SHIFT))&GIC_ICDICFR_CONFIG81_MASK)
#define GIC_ICDICFR_CONFIG1_MASK                 0xCu
#define GIC_ICDICFR_CONFIG1_SHIFT                2
#define GIC_ICDICFR_CONFIG1(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG1_SHIFT))&GIC_ICDICFR_CONFIG1_MASK)
#define GIC_ICDICFR_CONFIG97_MASK                0xCu
#define GIC_ICDICFR_CONFIG97_SHIFT               2
#define GIC_ICDICFR_CONFIG97(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG97_SHIFT))&GIC_ICDICFR_CONFIG97_MASK)
#define GIC_ICDICFR_CONFIG33_MASK                0xCu
#define GIC_ICDICFR_CONFIG33_SHIFT               2
#define GIC_ICDICFR_CONFIG33(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG33_SHIFT))&GIC_ICDICFR_CONFIG33_MASK)
#define GIC_ICDICFR_CONFIG49_MASK                0xCu
#define GIC_ICDICFR_CONFIG49_SHIFT               2
#define GIC_ICDICFR_CONFIG49(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG49_SHIFT))&GIC_ICDICFR_CONFIG49_MASK)
#define GIC_ICDICFR_CONFIG129_MASK               0xCu
#define GIC_ICDICFR_CONFIG129_SHIFT              2
#define GIC_ICDICFR_CONFIG129(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG129_SHIFT))&GIC_ICDICFR_CONFIG129_MASK)
#define GIC_ICDICFR_CONFIG17_MASK                0xCu
#define GIC_ICDICFR_CONFIG17_SHIFT               2
#define GIC_ICDICFR_CONFIG17(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG17_SHIFT))&GIC_ICDICFR_CONFIG17_MASK)
#define GIC_ICDICFR_CONFIG82_MASK                0x30u
#define GIC_ICDICFR_CONFIG82_SHIFT               4
#define GIC_ICDICFR_CONFIG82(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG82_SHIFT))&GIC_ICDICFR_CONFIG82_MASK)
#define GIC_ICDICFR_CONFIG98_MASK                0x30u
#define GIC_ICDICFR_CONFIG98_SHIFT               4
#define GIC_ICDICFR_CONFIG98(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG98_SHIFT))&GIC_ICDICFR_CONFIG98_MASK)
#define GIC_ICDICFR_CONFIG66_MASK                0x30u
#define GIC_ICDICFR_CONFIG66_SHIFT               4
#define GIC_ICDICFR_CONFIG66(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG66_SHIFT))&GIC_ICDICFR_CONFIG66_MASK)
#define GIC_ICDICFR_CONFIG130_MASK               0x30u
#define GIC_ICDICFR_CONFIG130_SHIFT              4
#define GIC_ICDICFR_CONFIG130(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG130_SHIFT))&GIC_ICDICFR_CONFIG130_MASK)
#define GIC_ICDICFR_CONFIG2_MASK                 0x30u
#define GIC_ICDICFR_CONFIG2_SHIFT                4
#define GIC_ICDICFR_CONFIG2(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG2_SHIFT))&GIC_ICDICFR_CONFIG2_MASK)
#define GIC_ICDICFR_CONFIG50_MASK                0x30u
#define GIC_ICDICFR_CONFIG50_SHIFT               4
#define GIC_ICDICFR_CONFIG50(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG50_SHIFT))&GIC_ICDICFR_CONFIG50_MASK)
#define GIC_ICDICFR_CONFIG34_MASK                0x30u
#define GIC_ICDICFR_CONFIG34_SHIFT               4
#define GIC_ICDICFR_CONFIG34(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG34_SHIFT))&GIC_ICDICFR_CONFIG34_MASK)
#define GIC_ICDICFR_CONFIG114_MASK               0x30u
#define GIC_ICDICFR_CONFIG114_SHIFT              4
#define GIC_ICDICFR_CONFIG114(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG114_SHIFT))&GIC_ICDICFR_CONFIG114_MASK)
#define GIC_ICDICFR_CONFIG18_MASK                0x30u
#define GIC_ICDICFR_CONFIG18_SHIFT               4
#define GIC_ICDICFR_CONFIG18(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG18_SHIFT))&GIC_ICDICFR_CONFIG18_MASK)
#define GIC_ICDICFR_CONFIG3_MASK                 0xC0u
#define GIC_ICDICFR_CONFIG3_SHIFT                6
#define GIC_ICDICFR_CONFIG3(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG3_SHIFT))&GIC_ICDICFR_CONFIG3_MASK)
#define GIC_ICDICFR_CONFIG99_MASK                0xC0u
#define GIC_ICDICFR_CONFIG99_SHIFT               6
#define GIC_ICDICFR_CONFIG99(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG99_SHIFT))&GIC_ICDICFR_CONFIG99_MASK)
#define GIC_ICDICFR_CONFIG67_MASK                0xC0u
#define GIC_ICDICFR_CONFIG67_SHIFT               6
#define GIC_ICDICFR_CONFIG67(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG67_SHIFT))&GIC_ICDICFR_CONFIG67_MASK)
#define GIC_ICDICFR_CONFIG19_MASK                0xC0u
#define GIC_ICDICFR_CONFIG19_SHIFT               6
#define GIC_ICDICFR_CONFIG19(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG19_SHIFT))&GIC_ICDICFR_CONFIG19_MASK)
#define GIC_ICDICFR_CONFIG131_MASK               0xC0u
#define GIC_ICDICFR_CONFIG131_SHIFT              6
#define GIC_ICDICFR_CONFIG131(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG131_SHIFT))&GIC_ICDICFR_CONFIG131_MASK)
#define GIC_ICDICFR_CONFIG83_MASK                0xC0u
#define GIC_ICDICFR_CONFIG83_SHIFT               6
#define GIC_ICDICFR_CONFIG83(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG83_SHIFT))&GIC_ICDICFR_CONFIG83_MASK)
#define GIC_ICDICFR_CONFIG51_MASK                0xC0u
#define GIC_ICDICFR_CONFIG51_SHIFT               6
#define GIC_ICDICFR_CONFIG51(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG51_SHIFT))&GIC_ICDICFR_CONFIG51_MASK)
#define GIC_ICDICFR_CONFIG115_MASK               0xC0u
#define GIC_ICDICFR_CONFIG115_SHIFT              6
#define GIC_ICDICFR_CONFIG115(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG115_SHIFT))&GIC_ICDICFR_CONFIG115_MASK)
#define GIC_ICDICFR_CONFIG35_MASK                0xC0u
#define GIC_ICDICFR_CONFIG35_SHIFT               6
#define GIC_ICDICFR_CONFIG35(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG35_SHIFT))&GIC_ICDICFR_CONFIG35_MASK)
#define GIC_ICDICFR_CONFIG116_MASK               0x300u
#define GIC_ICDICFR_CONFIG116_SHIFT              8
#define GIC_ICDICFR_CONFIG116(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG116_SHIFT))&GIC_ICDICFR_CONFIG116_MASK)
#define GIC_ICDICFR_CONFIG52_MASK                0x300u
#define GIC_ICDICFR_CONFIG52_SHIFT               8
#define GIC_ICDICFR_CONFIG52(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG52_SHIFT))&GIC_ICDICFR_CONFIG52_MASK)
#define GIC_ICDICFR_CONFIG100_MASK               0x300u
#define GIC_ICDICFR_CONFIG100_SHIFT              8
#define GIC_ICDICFR_CONFIG100(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG100_SHIFT))&GIC_ICDICFR_CONFIG100_MASK)
#define GIC_ICDICFR_CONFIG4_MASK                 0x300u
#define GIC_ICDICFR_CONFIG4_SHIFT                8
#define GIC_ICDICFR_CONFIG4(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG4_SHIFT))&GIC_ICDICFR_CONFIG4_MASK)
#define GIC_ICDICFR_CONFIG20_MASK                0x300u
#define GIC_ICDICFR_CONFIG20_SHIFT               8
#define GIC_ICDICFR_CONFIG20(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG20_SHIFT))&GIC_ICDICFR_CONFIG20_MASK)
#define GIC_ICDICFR_CONFIG132_MASK               0x300u
#define GIC_ICDICFR_CONFIG132_SHIFT              8
#define GIC_ICDICFR_CONFIG132(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG132_SHIFT))&GIC_ICDICFR_CONFIG132_MASK)
#define GIC_ICDICFR_CONFIG68_MASK                0x300u
#define GIC_ICDICFR_CONFIG68_SHIFT               8
#define GIC_ICDICFR_CONFIG68(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG68_SHIFT))&GIC_ICDICFR_CONFIG68_MASK)
#define GIC_ICDICFR_CONFIG84_MASK                0x300u
#define GIC_ICDICFR_CONFIG84_SHIFT               8
#define GIC_ICDICFR_CONFIG84(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG84_SHIFT))&GIC_ICDICFR_CONFIG84_MASK)
#define GIC_ICDICFR_CONFIG36_MASK                0x300u
#define GIC_ICDICFR_CONFIG36_SHIFT               8
#define GIC_ICDICFR_CONFIG36(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG36_SHIFT))&GIC_ICDICFR_CONFIG36_MASK)
#define GIC_ICDICFR_CONFIG21_MASK                0xC00u
#define GIC_ICDICFR_CONFIG21_SHIFT               10
#define GIC_ICDICFR_CONFIG21(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG21_SHIFT))&GIC_ICDICFR_CONFIG21_MASK)
#define GIC_ICDICFR_CONFIG53_MASK                0xC00u
#define GIC_ICDICFR_CONFIG53_SHIFT               10
#define GIC_ICDICFR_CONFIG53(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG53_SHIFT))&GIC_ICDICFR_CONFIG53_MASK)
#define GIC_ICDICFR_CONFIG133_MASK               0xC00u
#define GIC_ICDICFR_CONFIG133_SHIFT              10
#define GIC_ICDICFR_CONFIG133(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG133_SHIFT))&GIC_ICDICFR_CONFIG133_MASK)
#define GIC_ICDICFR_CONFIG117_MASK               0xC00u
#define GIC_ICDICFR_CONFIG117_SHIFT              10
#define GIC_ICDICFR_CONFIG117(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG117_SHIFT))&GIC_ICDICFR_CONFIG117_MASK)
#define GIC_ICDICFR_CONFIG37_MASK                0xC00u
#define GIC_ICDICFR_CONFIG37_SHIFT               10
#define GIC_ICDICFR_CONFIG37(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG37_SHIFT))&GIC_ICDICFR_CONFIG37_MASK)
#define GIC_ICDICFR_CONFIG101_MASK               0xC00u
#define GIC_ICDICFR_CONFIG101_SHIFT              10
#define GIC_ICDICFR_CONFIG101(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG101_SHIFT))&GIC_ICDICFR_CONFIG101_MASK)
#define GIC_ICDICFR_CONFIG5_MASK                 0xC00u
#define GIC_ICDICFR_CONFIG5_SHIFT                10
#define GIC_ICDICFR_CONFIG5(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG5_SHIFT))&GIC_ICDICFR_CONFIG5_MASK)
#define GIC_ICDICFR_CONFIG85_MASK                0xC00u
#define GIC_ICDICFR_CONFIG85_SHIFT               10
#define GIC_ICDICFR_CONFIG85(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG85_SHIFT))&GIC_ICDICFR_CONFIG85_MASK)
#define GIC_ICDICFR_CONFIG69_MASK                0xC00u
#define GIC_ICDICFR_CONFIG69_SHIFT               10
#define GIC_ICDICFR_CONFIG69(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG69_SHIFT))&GIC_ICDICFR_CONFIG69_MASK)
#define GIC_ICDICFR_CONFIG22_MASK                0x3000u
#define GIC_ICDICFR_CONFIG22_SHIFT               12
#define GIC_ICDICFR_CONFIG22(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG22_SHIFT))&GIC_ICDICFR_CONFIG22_MASK)
#define GIC_ICDICFR_CONFIG134_MASK               0x3000u
#define GIC_ICDICFR_CONFIG134_SHIFT              12
#define GIC_ICDICFR_CONFIG134(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG134_SHIFT))&GIC_ICDICFR_CONFIG134_MASK)
#define GIC_ICDICFR_CONFIG118_MASK               0x3000u
#define GIC_ICDICFR_CONFIG118_SHIFT              12
#define GIC_ICDICFR_CONFIG118(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG118_SHIFT))&GIC_ICDICFR_CONFIG118_MASK)
#define GIC_ICDICFR_CONFIG86_MASK                0x3000u
#define GIC_ICDICFR_CONFIG86_SHIFT               12
#define GIC_ICDICFR_CONFIG86(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG86_SHIFT))&GIC_ICDICFR_CONFIG86_MASK)
#define GIC_ICDICFR_CONFIG54_MASK                0x3000u
#define GIC_ICDICFR_CONFIG54_SHIFT               12
#define GIC_ICDICFR_CONFIG54(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG54_SHIFT))&GIC_ICDICFR_CONFIG54_MASK)
#define GIC_ICDICFR_CONFIG38_MASK                0x3000u
#define GIC_ICDICFR_CONFIG38_SHIFT               12
#define GIC_ICDICFR_CONFIG38(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG38_SHIFT))&GIC_ICDICFR_CONFIG38_MASK)
#define GIC_ICDICFR_CONFIG102_MASK               0x3000u
#define GIC_ICDICFR_CONFIG102_SHIFT              12
#define GIC_ICDICFR_CONFIG102(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG102_SHIFT))&GIC_ICDICFR_CONFIG102_MASK)
#define GIC_ICDICFR_CONFIG70_MASK                0x3000u
#define GIC_ICDICFR_CONFIG70_SHIFT               12
#define GIC_ICDICFR_CONFIG70(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG70_SHIFT))&GIC_ICDICFR_CONFIG70_MASK)
#define GIC_ICDICFR_CONFIG6_MASK                 0x3000u
#define GIC_ICDICFR_CONFIG6_SHIFT                12
#define GIC_ICDICFR_CONFIG6(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG6_SHIFT))&GIC_ICDICFR_CONFIG6_MASK)
#define GIC_ICDICFR_CONFIG23_MASK                0xC000u
#define GIC_ICDICFR_CONFIG23_SHIFT               14
#define GIC_ICDICFR_CONFIG23(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG23_SHIFT))&GIC_ICDICFR_CONFIG23_MASK)
#define GIC_ICDICFR_CONFIG119_MASK               0xC000u
#define GIC_ICDICFR_CONFIG119_SHIFT              14
#define GIC_ICDICFR_CONFIG119(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG119_SHIFT))&GIC_ICDICFR_CONFIG119_MASK)
#define GIC_ICDICFR_CONFIG135_MASK               0xC000u
#define GIC_ICDICFR_CONFIG135_SHIFT              14
#define GIC_ICDICFR_CONFIG135(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG135_SHIFT))&GIC_ICDICFR_CONFIG135_MASK)
#define GIC_ICDICFR_CONFIG87_MASK                0xC000u
#define GIC_ICDICFR_CONFIG87_SHIFT               14
#define GIC_ICDICFR_CONFIG87(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG87_SHIFT))&GIC_ICDICFR_CONFIG87_MASK)
#define GIC_ICDICFR_CONFIG7_MASK                 0xC000u
#define GIC_ICDICFR_CONFIG7_SHIFT                14
#define GIC_ICDICFR_CONFIG7(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG7_SHIFT))&GIC_ICDICFR_CONFIG7_MASK)
#define GIC_ICDICFR_CONFIG55_MASK                0xC000u
#define GIC_ICDICFR_CONFIG55_SHIFT               14
#define GIC_ICDICFR_CONFIG55(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG55_SHIFT))&GIC_ICDICFR_CONFIG55_MASK)
#define GIC_ICDICFR_CONFIG39_MASK                0xC000u
#define GIC_ICDICFR_CONFIG39_SHIFT               14
#define GIC_ICDICFR_CONFIG39(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG39_SHIFT))&GIC_ICDICFR_CONFIG39_MASK)
#define GIC_ICDICFR_CONFIG103_MASK               0xC000u
#define GIC_ICDICFR_CONFIG103_SHIFT              14
#define GIC_ICDICFR_CONFIG103(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG103_SHIFT))&GIC_ICDICFR_CONFIG103_MASK)
#define GIC_ICDICFR_CONFIG71_MASK                0xC000u
#define GIC_ICDICFR_CONFIG71_SHIFT               14
#define GIC_ICDICFR_CONFIG71(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG71_SHIFT))&GIC_ICDICFR_CONFIG71_MASK)
#define GIC_ICDICFR_CONFIG88_MASK                0x30000u
#define GIC_ICDICFR_CONFIG88_SHIFT               16
#define GIC_ICDICFR_CONFIG88(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG88_SHIFT))&GIC_ICDICFR_CONFIG88_MASK)
#define GIC_ICDICFR_CONFIG56_MASK                0x30000u
#define GIC_ICDICFR_CONFIG56_SHIFT               16
#define GIC_ICDICFR_CONFIG56(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG56_SHIFT))&GIC_ICDICFR_CONFIG56_MASK)
#define GIC_ICDICFR_CONFIG104_MASK               0x30000u
#define GIC_ICDICFR_CONFIG104_SHIFT              16
#define GIC_ICDICFR_CONFIG104(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG104_SHIFT))&GIC_ICDICFR_CONFIG104_MASK)
#define GIC_ICDICFR_CONFIG40_MASK                0x30000u
#define GIC_ICDICFR_CONFIG40_SHIFT               16
#define GIC_ICDICFR_CONFIG40(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG40_SHIFT))&GIC_ICDICFR_CONFIG40_MASK)
#define GIC_ICDICFR_CONFIG120_MASK               0x30000u
#define GIC_ICDICFR_CONFIG120_SHIFT              16
#define GIC_ICDICFR_CONFIG120(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG120_SHIFT))&GIC_ICDICFR_CONFIG120_MASK)
#define GIC_ICDICFR_CONFIG24_MASK                0x30000u
#define GIC_ICDICFR_CONFIG24_SHIFT               16
#define GIC_ICDICFR_CONFIG24(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG24_SHIFT))&GIC_ICDICFR_CONFIG24_MASK)
#define GIC_ICDICFR_CONFIG136_MASK               0x30000u
#define GIC_ICDICFR_CONFIG136_SHIFT              16
#define GIC_ICDICFR_CONFIG136(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG136_SHIFT))&GIC_ICDICFR_CONFIG136_MASK)
#define GIC_ICDICFR_CONFIG8_MASK                 0x30000u
#define GIC_ICDICFR_CONFIG8_SHIFT                16
#define GIC_ICDICFR_CONFIG8(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG8_SHIFT))&GIC_ICDICFR_CONFIG8_MASK)
#define GIC_ICDICFR_CONFIG72_MASK                0x30000u
#define GIC_ICDICFR_CONFIG72_SHIFT               16
#define GIC_ICDICFR_CONFIG72(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG72_SHIFT))&GIC_ICDICFR_CONFIG72_MASK)
#define GIC_ICDICFR_CONFIG89_MASK                0xC0000u
#define GIC_ICDICFR_CONFIG89_SHIFT               18
#define GIC_ICDICFR_CONFIG89(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG89_SHIFT))&GIC_ICDICFR_CONFIG89_MASK)
#define GIC_ICDICFR_CONFIG41_MASK                0xC0000u
#define GIC_ICDICFR_CONFIG41_SHIFT               18
#define GIC_ICDICFR_CONFIG41(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG41_SHIFT))&GIC_ICDICFR_CONFIG41_MASK)
#define GIC_ICDICFR_CONFIG105_MASK               0xC0000u
#define GIC_ICDICFR_CONFIG105_SHIFT              18
#define GIC_ICDICFR_CONFIG105(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG105_SHIFT))&GIC_ICDICFR_CONFIG105_MASK)
#define GIC_ICDICFR_CONFIG25_MASK                0xC0000u
#define GIC_ICDICFR_CONFIG25_SHIFT               18
#define GIC_ICDICFR_CONFIG25(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG25_SHIFT))&GIC_ICDICFR_CONFIG25_MASK)
#define GIC_ICDICFR_CONFIG121_MASK               0xC0000u
#define GIC_ICDICFR_CONFIG121_SHIFT              18
#define GIC_ICDICFR_CONFIG121(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG121_SHIFT))&GIC_ICDICFR_CONFIG121_MASK)
#define GIC_ICDICFR_CONFIG57_MASK                0xC0000u
#define GIC_ICDICFR_CONFIG57_SHIFT               18
#define GIC_ICDICFR_CONFIG57(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG57_SHIFT))&GIC_ICDICFR_CONFIG57_MASK)
#define GIC_ICDICFR_CONFIG73_MASK                0xC0000u
#define GIC_ICDICFR_CONFIG73_SHIFT               18
#define GIC_ICDICFR_CONFIG73(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG73_SHIFT))&GIC_ICDICFR_CONFIG73_MASK)
#define GIC_ICDICFR_CONFIG137_MASK               0xC0000u
#define GIC_ICDICFR_CONFIG137_SHIFT              18
#define GIC_ICDICFR_CONFIG137(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG137_SHIFT))&GIC_ICDICFR_CONFIG137_MASK)
#define GIC_ICDICFR_CONFIG9_MASK                 0xC0000u
#define GIC_ICDICFR_CONFIG9_SHIFT                18
#define GIC_ICDICFR_CONFIG9(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG9_SHIFT))&GIC_ICDICFR_CONFIG9_MASK)
#define GIC_ICDICFR_CONFIG42_MASK                0x300000u
#define GIC_ICDICFR_CONFIG42_SHIFT               20
#define GIC_ICDICFR_CONFIG42(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG42_SHIFT))&GIC_ICDICFR_CONFIG42_MASK)
#define GIC_ICDICFR_CONFIG74_MASK                0x300000u
#define GIC_ICDICFR_CONFIG74_SHIFT               20
#define GIC_ICDICFR_CONFIG74(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG74_SHIFT))&GIC_ICDICFR_CONFIG74_MASK)
#define GIC_ICDICFR_CONFIG122_MASK               0x300000u
#define GIC_ICDICFR_CONFIG122_SHIFT              20
#define GIC_ICDICFR_CONFIG122(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG122_SHIFT))&GIC_ICDICFR_CONFIG122_MASK)
#define GIC_ICDICFR_CONFIG26_MASK                0x300000u
#define GIC_ICDICFR_CONFIG26_SHIFT               20
#define GIC_ICDICFR_CONFIG26(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG26_SHIFT))&GIC_ICDICFR_CONFIG26_MASK)
#define GIC_ICDICFR_CONFIG90_MASK                0x300000u
#define GIC_ICDICFR_CONFIG90_SHIFT               20
#define GIC_ICDICFR_CONFIG90(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG90_SHIFT))&GIC_ICDICFR_CONFIG90_MASK)
#define GIC_ICDICFR_CONFIG138_MASK               0x300000u
#define GIC_ICDICFR_CONFIG138_SHIFT              20
#define GIC_ICDICFR_CONFIG138(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG138_SHIFT))&GIC_ICDICFR_CONFIG138_MASK)
#define GIC_ICDICFR_CONFIG58_MASK                0x300000u
#define GIC_ICDICFR_CONFIG58_SHIFT               20
#define GIC_ICDICFR_CONFIG58(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG58_SHIFT))&GIC_ICDICFR_CONFIG58_MASK)
#define GIC_ICDICFR_CONFIG106_MASK               0x300000u
#define GIC_ICDICFR_CONFIG106_SHIFT              20
#define GIC_ICDICFR_CONFIG106(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG106_SHIFT))&GIC_ICDICFR_CONFIG106_MASK)
#define GIC_ICDICFR_CONFIG10_MASK                0x300000u
#define GIC_ICDICFR_CONFIG10_SHIFT               20
#define GIC_ICDICFR_CONFIG10(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG10_SHIFT))&GIC_ICDICFR_CONFIG10_MASK)
#define GIC_ICDICFR_CONFIG107_MASK               0xC00000u
#define GIC_ICDICFR_CONFIG107_SHIFT              22
#define GIC_ICDICFR_CONFIG107(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG107_SHIFT))&GIC_ICDICFR_CONFIG107_MASK)
#define GIC_ICDICFR_CONFIG75_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG75_SHIFT               22
#define GIC_ICDICFR_CONFIG75(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG75_SHIFT))&GIC_ICDICFR_CONFIG75_MASK)
#define GIC_ICDICFR_CONFIG43_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG43_SHIFT               22
#define GIC_ICDICFR_CONFIG43(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG43_SHIFT))&GIC_ICDICFR_CONFIG43_MASK)
#define GIC_ICDICFR_CONFIG59_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG59_SHIFT               22
#define GIC_ICDICFR_CONFIG59(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG59_SHIFT))&GIC_ICDICFR_CONFIG59_MASK)
#define GIC_ICDICFR_CONFIG27_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG27_SHIFT               22
#define GIC_ICDICFR_CONFIG27(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG27_SHIFT))&GIC_ICDICFR_CONFIG27_MASK)
#define GIC_ICDICFR_CONFIG123_MASK               0xC00000u
#define GIC_ICDICFR_CONFIG123_SHIFT              22
#define GIC_ICDICFR_CONFIG123(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG123_SHIFT))&GIC_ICDICFR_CONFIG123_MASK)
#define GIC_ICDICFR_CONFIG91_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG91_SHIFT               22
#define GIC_ICDICFR_CONFIG91(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG91_SHIFT))&GIC_ICDICFR_CONFIG91_MASK)
#define GIC_ICDICFR_CONFIG139_MASK               0xC00000u
#define GIC_ICDICFR_CONFIG139_SHIFT              22
#define GIC_ICDICFR_CONFIG139(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG139_SHIFT))&GIC_ICDICFR_CONFIG139_MASK)
#define GIC_ICDICFR_CONFIG11_MASK                0xC00000u
#define GIC_ICDICFR_CONFIG11_SHIFT               22
#define GIC_ICDICFR_CONFIG11(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG11_SHIFT))&GIC_ICDICFR_CONFIG11_MASK)
#define GIC_ICDICFR_CONFIG44_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG44_SHIFT               24
#define GIC_ICDICFR_CONFIG44(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG44_SHIFT))&GIC_ICDICFR_CONFIG44_MASK)
#define GIC_ICDICFR_CONFIG124_MASK               0x3000000u
#define GIC_ICDICFR_CONFIG124_SHIFT              24
#define GIC_ICDICFR_CONFIG124(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG124_SHIFT))&GIC_ICDICFR_CONFIG124_MASK)
#define GIC_ICDICFR_CONFIG92_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG92_SHIFT               24
#define GIC_ICDICFR_CONFIG92(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG92_SHIFT))&GIC_ICDICFR_CONFIG92_MASK)
#define GIC_ICDICFR_CONFIG12_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG12_SHIFT               24
#define GIC_ICDICFR_CONFIG12(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG12_SHIFT))&GIC_ICDICFR_CONFIG12_MASK)
#define GIC_ICDICFR_CONFIG108_MASK               0x3000000u
#define GIC_ICDICFR_CONFIG108_SHIFT              24
#define GIC_ICDICFR_CONFIG108(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG108_SHIFT))&GIC_ICDICFR_CONFIG108_MASK)
#define GIC_ICDICFR_CONFIG60_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG60_SHIFT               24
#define GIC_ICDICFR_CONFIG60(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG60_SHIFT))&GIC_ICDICFR_CONFIG60_MASK)
#define GIC_ICDICFR_CONFIG28_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG28_SHIFT               24
#define GIC_ICDICFR_CONFIG28(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG28_SHIFT))&GIC_ICDICFR_CONFIG28_MASK)
#define GIC_ICDICFR_CONFIG76_MASK                0x3000000u
#define GIC_ICDICFR_CONFIG76_SHIFT               24
#define GIC_ICDICFR_CONFIG76(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG76_SHIFT))&GIC_ICDICFR_CONFIG76_MASK)
#define GIC_ICDICFR_CONFIG140_MASK               0x3000000u
#define GIC_ICDICFR_CONFIG140_SHIFT              24
#define GIC_ICDICFR_CONFIG140(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG140_SHIFT))&GIC_ICDICFR_CONFIG140_MASK)
#define GIC_ICDICFR_CONFIG125_MASK               0xC000000u
#define GIC_ICDICFR_CONFIG125_SHIFT              26
#define GIC_ICDICFR_CONFIG125(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG125_SHIFT))&GIC_ICDICFR_CONFIG125_MASK)
#define GIC_ICDICFR_CONFIG93_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG93_SHIFT               26
#define GIC_ICDICFR_CONFIG93(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG93_SHIFT))&GIC_ICDICFR_CONFIG93_MASK)
#define GIC_ICDICFR_CONFIG77_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG77_SHIFT               26
#define GIC_ICDICFR_CONFIG77(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG77_SHIFT))&GIC_ICDICFR_CONFIG77_MASK)
#define GIC_ICDICFR_CONFIG29_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG29_SHIFT               26
#define GIC_ICDICFR_CONFIG29(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG29_SHIFT))&GIC_ICDICFR_CONFIG29_MASK)
#define GIC_ICDICFR_CONFIG141_MASK               0xC000000u
#define GIC_ICDICFR_CONFIG141_SHIFT              26
#define GIC_ICDICFR_CONFIG141(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG141_SHIFT))&GIC_ICDICFR_CONFIG141_MASK)
#define GIC_ICDICFR_CONFIG61_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG61_SHIFT               26
#define GIC_ICDICFR_CONFIG61(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG61_SHIFT))&GIC_ICDICFR_CONFIG61_MASK)
#define GIC_ICDICFR_CONFIG13_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG13_SHIFT               26
#define GIC_ICDICFR_CONFIG13(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG13_SHIFT))&GIC_ICDICFR_CONFIG13_MASK)
#define GIC_ICDICFR_CONFIG109_MASK               0xC000000u
#define GIC_ICDICFR_CONFIG109_SHIFT              26
#define GIC_ICDICFR_CONFIG109(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG109_SHIFT))&GIC_ICDICFR_CONFIG109_MASK)
#define GIC_ICDICFR_CONFIG45_MASK                0xC000000u
#define GIC_ICDICFR_CONFIG45_SHIFT               26
#define GIC_ICDICFR_CONFIG45(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG45_SHIFT))&GIC_ICDICFR_CONFIG45_MASK)
#define GIC_ICDICFR_CONFIG126_MASK               0x30000000u
#define GIC_ICDICFR_CONFIG126_SHIFT              28
#define GIC_ICDICFR_CONFIG126(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG126_SHIFT))&GIC_ICDICFR_CONFIG126_MASK)
#define GIC_ICDICFR_CONFIG30_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG30_SHIFT               28
#define GIC_ICDICFR_CONFIG30(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG30_SHIFT))&GIC_ICDICFR_CONFIG30_MASK)
#define GIC_ICDICFR_CONFIG62_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG62_SHIFT               28
#define GIC_ICDICFR_CONFIG62(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG62_SHIFT))&GIC_ICDICFR_CONFIG62_MASK)
#define GIC_ICDICFR_CONFIG142_MASK               0x30000000u
#define GIC_ICDICFR_CONFIG142_SHIFT              28
#define GIC_ICDICFR_CONFIG142(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG142_SHIFT))&GIC_ICDICFR_CONFIG142_MASK)
#define GIC_ICDICFR_CONFIG78_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG78_SHIFT               28
#define GIC_ICDICFR_CONFIG78(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG78_SHIFT))&GIC_ICDICFR_CONFIG78_MASK)
#define GIC_ICDICFR_CONFIG14_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG14_SHIFT               28
#define GIC_ICDICFR_CONFIG14(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG14_SHIFT))&GIC_ICDICFR_CONFIG14_MASK)
#define GIC_ICDICFR_CONFIG46_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG46_SHIFT               28
#define GIC_ICDICFR_CONFIG46(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG46_SHIFT))&GIC_ICDICFR_CONFIG46_MASK)
#define GIC_ICDICFR_CONFIG110_MASK               0x30000000u
#define GIC_ICDICFR_CONFIG110_SHIFT              28
#define GIC_ICDICFR_CONFIG110(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG110_SHIFT))&GIC_ICDICFR_CONFIG110_MASK)
#define GIC_ICDICFR_CONFIG94_MASK                0x30000000u
#define GIC_ICDICFR_CONFIG94_SHIFT               28
#define GIC_ICDICFR_CONFIG94(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG94_SHIFT))&GIC_ICDICFR_CONFIG94_MASK)
#define GIC_ICDICFR_CONFIG143_MASK               0xC0000000u
#define GIC_ICDICFR_CONFIG143_SHIFT              30
#define GIC_ICDICFR_CONFIG143(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG143_SHIFT))&GIC_ICDICFR_CONFIG143_MASK)
#define GIC_ICDICFR_CONFIG15_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG15_SHIFT               30
#define GIC_ICDICFR_CONFIG15(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG15_SHIFT))&GIC_ICDICFR_CONFIG15_MASK)
#define GIC_ICDICFR_CONFIG127_MASK               0xC0000000u
#define GIC_ICDICFR_CONFIG127_SHIFT              30
#define GIC_ICDICFR_CONFIG127(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG127_SHIFT))&GIC_ICDICFR_CONFIG127_MASK)
#define GIC_ICDICFR_CONFIG31_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG31_SHIFT               30
#define GIC_ICDICFR_CONFIG31(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG31_SHIFT))&GIC_ICDICFR_CONFIG31_MASK)
#define GIC_ICDICFR_CONFIG111_MASK               0xC0000000u
#define GIC_ICDICFR_CONFIG111_SHIFT              30
#define GIC_ICDICFR_CONFIG111(x)                 (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG111_SHIFT))&GIC_ICDICFR_CONFIG111_MASK)
#define GIC_ICDICFR_CONFIG47_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG47_SHIFT               30
#define GIC_ICDICFR_CONFIG47(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG47_SHIFT))&GIC_ICDICFR_CONFIG47_MASK)
#define GIC_ICDICFR_CONFIG95_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG95_SHIFT               30
#define GIC_ICDICFR_CONFIG95(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG95_SHIFT))&GIC_ICDICFR_CONFIG95_MASK)
#define GIC_ICDICFR_CONFIG63_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG63_SHIFT               30
#define GIC_ICDICFR_CONFIG63(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG63_SHIFT))&GIC_ICDICFR_CONFIG63_MASK)
#define GIC_ICDICFR_CONFIG79_MASK                0xC0000000u
#define GIC_ICDICFR_CONFIG79_SHIFT               30
#define GIC_ICDICFR_CONFIG79(x)                  (((uint32_t)(((uint32_t)(x))<<GIC_ICDICFR_CONFIG79_SHIFT))&GIC_ICDICFR_CONFIG79_MASK)
/* PPIS Bit Fields */
#define GIC_PPIS_PPISTAT0_MASK                   0x800u
#define GIC_PPIS_PPISTAT0_SHIFT                  11
#define GIC_PPIS_PPISTAT1_MASK                   0x1000u
#define GIC_PPIS_PPISTAT1_SHIFT                  12
#define GIC_PPIS_PPISTAT2_MASK                   0x2000u
#define GIC_PPIS_PPISTAT2_SHIFT                  13
#define GIC_PPIS_PPISTAT3_MASK                   0x4000u
#define GIC_PPIS_PPISTAT3_SHIFT                  14
#define GIC_PPIS_PPISTAT4_MASK                   0x8000u
#define GIC_PPIS_PPISTAT4_SHIFT                  15
/* ICDSPIS Bit Fields */
#define GIC_ICDSPIS_SPISTAT_MASK                 0xFFFFFFFFu
#define GIC_ICDSPIS_SPISTAT_SHIFT                0
#define GIC_ICDSPIS_SPISTAT(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_ICDSPIS_SPISTAT_SHIFT))&GIC_ICDSPIS_SPISTAT_MASK)
/* SGIR Bit Fields */
#define GIC_SGIR_SGIINTID_MASK                   0xFu
#define GIC_SGIR_SGIINTID_SHIFT                  0
#define GIC_SGIR_SGIINTID(x)                     (((uint32_t)(((uint32_t)(x))<<GIC_SGIR_SGIINTID_SHIFT))&GIC_SGIR_SGIINTID_MASK)
#define GIC_SGIR_SATT_MASK                       0x8000u
#define GIC_SGIR_SATT_SHIFT                      15
#define GIC_SGIR_CPUTRGTLST_MASK                 0xFF0000u
#define GIC_SGIR_CPUTRGTLST_SHIFT                16
#define GIC_SGIR_CPUTRGTLST(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_SGIR_CPUTRGTLST_SHIFT))&GIC_SGIR_CPUTRGTLST_MASK)
#define GIC_SGIR_TRGTLSTFLT_MASK                 0x3000000u
#define GIC_SGIR_TRGTLSTFLT_SHIFT                24
#define GIC_SGIR_TRGTLSTFLT(x)                   (((uint32_t)(((uint32_t)(x))<<GIC_SGIR_TRGTLSTFLT_SHIFT))&GIC_SGIR_TRGTLSTFLT_MASK)

/**
 * @}
 */ /* end of group GIC_Register_Masks */


/* GIC - Peripheral instance base addresses */
/** Peripheral GIC base pointer */
#define GIC_BASE_PTR                             ((GIC_MemMapPtr)0x40002000u)
/** Array initializer of GIC peripheral base pointers */
#define GIC_BASE_PTRS                            { GIC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- GIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GIC_Register_Accessor_Macros GIC - Register accessor macros
 * @{
 */


/* GIC - Register instance definitions */
/* GIC */
#define ICCICR                                   GIC_ICR_REG(GIC_BASE_PTR,0)
#define ICCPMR                                   GIC_PMR_REG(GIC_BASE_PTR,0)
#define ICCBPR                                   GIC_BPR_REG(GIC_BASE_PTR,0)
#define ICCIAR                                   GIC_IAR_REG(GIC_BASE_PTR,0)
#define ICCEOIR                                  GIC_EOIR_REG(GIC_BASE_PTR,0)
#define ICCRPR                                   GIC_RPR_REG(GIC_BASE_PTR,0)
#define ICCHPIR                                  GIC_HPIR_REG(GIC_BASE_PTR,0)
#define ICCABPR                                  GIC_ABPR_REG(GIC_BASE_PTR,0)
#define ICDDCR                                   GIC_DCR_REG(GIC_BASE_PTR,0)
#define ICDISR0                                  GIC_ICDISR_REG(GIC_BASE_PTR,0)
#define ICDISR1                                  GIC_ICDISR_REG(GIC_BASE_PTR,1)
#define ICDISR2                                  GIC_ICDISR_REG(GIC_BASE_PTR,2)
#define ICDISR3                                  GIC_ICDISR_REG(GIC_BASE_PTR,3)
#define ICDISR4                                  GIC_ICDISR_REG(GIC_BASE_PTR,4)
#define ICDISER0                                 GIC_ICDISER_REG(GIC_BASE_PTR,0)
#define ICDISER1                                 GIC_ICDISER_REG(GIC_BASE_PTR,1)
#define ICDISER2                                 GIC_ICDISER_REG(GIC_BASE_PTR,2)
#define ICDISER3                                 GIC_ICDISER_REG(GIC_BASE_PTR,3)
#define ICDISER4                                 GIC_ICDISER_REG(GIC_BASE_PTR,4)
#define ICDICER0                                 GIC_ICDICER_REG(GIC_BASE_PTR,0)
#define ICDICER1                                 GIC_ICDICER_REG(GIC_BASE_PTR,1)
#define ICDICER2                                 GIC_ICDICER_REG(GIC_BASE_PTR,2)
#define ICDICER3                                 GIC_ICDICER_REG(GIC_BASE_PTR,3)
#define ICDICER4                                 GIC_ICDICER_REG(GIC_BASE_PTR,4)
#define ICDISPR0                                 GIC_ICDISPR_REG(GIC_BASE_PTR,0)
#define ICDISPR1                                 GIC_ICDISPR_REG(GIC_BASE_PTR,1)
#define ICDISPR2                                 GIC_ICDISPR_REG(GIC_BASE_PTR,2)
#define ICDISPR3                                 GIC_ICDISPR_REG(GIC_BASE_PTR,3)
#define ICDISPR4                                 GIC_ICDISPR_REG(GIC_BASE_PTR,4)
#define ICDICPR0                                 GIC_ICDICPR_REG(GIC_BASE_PTR,0)
#define ICDICPR1                                 GIC_ICDICPR_REG(GIC_BASE_PTR,1)
#define ICDICPR2                                 GIC_ICDICPR_REG(GIC_BASE_PTR,2)
#define ICDICPR3                                 GIC_ICDICPR_REG(GIC_BASE_PTR,3)
#define ICDICPR4                                 GIC_ICDICPR_REG(GIC_BASE_PTR,4)
#define ICDABR0                                  GIC_ICDABR_REG(GIC_BASE_PTR,0)
#define ICDABR1                                  GIC_ICDABR_REG(GIC_BASE_PTR,1)
#define ICDABR2                                  GIC_ICDABR_REG(GIC_BASE_PTR,2)
#define ICDABR3                                  GIC_ICDABR_REG(GIC_BASE_PTR,3)
#define ICDABR4                                  GIC_ICDABR_REG(GIC_BASE_PTR,4)
#define ICDIPR0                                  GIC_ICDIPR_REG(GIC_BASE_PTR,0)
#define ICDIPR1                                  GIC_ICDIPR_REG(GIC_BASE_PTR,1)
#define ICDIPR2                                  GIC_ICDIPR_REG(GIC_BASE_PTR,2)
#define ICDIPR3                                  GIC_ICDIPR_REG(GIC_BASE_PTR,3)
#define ICDIPR4                                  GIC_ICDIPR_REG(GIC_BASE_PTR,4)
#define ICDIPR5                                  GIC_ICDIPR_REG(GIC_BASE_PTR,5)
#define ICDIPR6                                  GIC_ICDIPR_REG(GIC_BASE_PTR,6)
#define ICDIPR7                                  GIC_ICDIPR_REG(GIC_BASE_PTR,7)
#define ICDIPR8                                  GIC_ICDIPR_REG(GIC_BASE_PTR,8)
#define ICDIPR9                                  GIC_ICDIPR_REG(GIC_BASE_PTR,9)
#define ICDIPR10                                 GIC_ICDIPR_REG(GIC_BASE_PTR,10)
#define ICDIPR11                                 GIC_ICDIPR_REG(GIC_BASE_PTR,11)
#define ICDIPR12                                 GIC_ICDIPR_REG(GIC_BASE_PTR,12)
#define ICDIPR13                                 GIC_ICDIPR_REG(GIC_BASE_PTR,13)
#define ICDIPR14                                 GIC_ICDIPR_REG(GIC_BASE_PTR,14)
#define ICDIPR15                                 GIC_ICDIPR_REG(GIC_BASE_PTR,15)
#define ICDIPR16                                 GIC_ICDIPR_REG(GIC_BASE_PTR,16)
#define ICDIPR17                                 GIC_ICDIPR_REG(GIC_BASE_PTR,17)
#define ICDIPR18                                 GIC_ICDIPR_REG(GIC_BASE_PTR,18)
#define ICDIPR19                                 GIC_ICDIPR_REG(GIC_BASE_PTR,19)
#define ICDIPR20                                 GIC_ICDIPR_REG(GIC_BASE_PTR,20)
#define ICDIPR21                                 GIC_ICDIPR_REG(GIC_BASE_PTR,21)
#define ICDIPR22                                 GIC_ICDIPR_REG(GIC_BASE_PTR,22)
#define ICDIPR23                                 GIC_ICDIPR_REG(GIC_BASE_PTR,23)
#define ICDIPR24                                 GIC_ICDIPR_REG(GIC_BASE_PTR,24)
#define ICDIPR25                                 GIC_ICDIPR_REG(GIC_BASE_PTR,25)
#define ICDIPR26                                 GIC_ICDIPR_REG(GIC_BASE_PTR,26)
#define ICDIPR27                                 GIC_ICDIPR_REG(GIC_BASE_PTR,27)
#define ICDIPR28                                 GIC_ICDIPR_REG(GIC_BASE_PTR,28)
#define ICDIPR29                                 GIC_ICDIPR_REG(GIC_BASE_PTR,29)
#define ICDIPR30                                 GIC_ICDIPR_REG(GIC_BASE_PTR,30)
#define ICDIPR31                                 GIC_ICDIPR_REG(GIC_BASE_PTR,31)
#define ICDIPR32                                 GIC_ICDIPR_REG(GIC_BASE_PTR,32)
#define ICDIPR33                                 GIC_ICDIPR_REG(GIC_BASE_PTR,33)
#define ICDIPR34                                 GIC_ICDIPR_REG(GIC_BASE_PTR,34)
#define ICDIPR35                                 GIC_ICDIPR_REG(GIC_BASE_PTR,35)
#define ICDIPTR0                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,0)
#define ICDIPTR1                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,1)
#define ICDIPTR2                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,2)
#define ICDIPTR3                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,3)
#define ICDIPTR4                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,4)
#define ICDIPTR5                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,5)
#define ICDIPTR6                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,6)
#define ICDIPTR7                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,7)
#define ICDIPTR8                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,8)
#define ICDIPTR9                                 GIC_ICDIPTR_REG(GIC_BASE_PTR,9)
#define ICDIPTR10                                GIC_ICDIPTR_REG(GIC_BASE_PTR,10)
#define ICDIPTR11                                GIC_ICDIPTR_REG(GIC_BASE_PTR,11)
#define ICDIPTR12                                GIC_ICDIPTR_REG(GIC_BASE_PTR,12)
#define ICDIPTR13                                GIC_ICDIPTR_REG(GIC_BASE_PTR,13)
#define ICDIPTR14                                GIC_ICDIPTR_REG(GIC_BASE_PTR,14)
#define ICDIPTR15                                GIC_ICDIPTR_REG(GIC_BASE_PTR,15)
#define ICDIPTR16                                GIC_ICDIPTR_REG(GIC_BASE_PTR,16)
#define ICDIPTR17                                GIC_ICDIPTR_REG(GIC_BASE_PTR,17)
#define ICDIPTR18                                GIC_ICDIPTR_REG(GIC_BASE_PTR,18)
#define ICDIPTR19                                GIC_ICDIPTR_REG(GIC_BASE_PTR,19)
#define ICDIPTR20                                GIC_ICDIPTR_REG(GIC_BASE_PTR,20)
#define ICDIPTR21                                GIC_ICDIPTR_REG(GIC_BASE_PTR,21)
#define ICDIPTR22                                GIC_ICDIPTR_REG(GIC_BASE_PTR,22)
#define ICDIPTR23                                GIC_ICDIPTR_REG(GIC_BASE_PTR,23)
#define ICDIPTR24                                GIC_ICDIPTR_REG(GIC_BASE_PTR,24)
#define ICDIPTR25                                GIC_ICDIPTR_REG(GIC_BASE_PTR,25)
#define ICDIPTR26                                GIC_ICDIPTR_REG(GIC_BASE_PTR,26)
#define ICDIPTR27                                GIC_ICDIPTR_REG(GIC_BASE_PTR,27)
#define ICDIPTR28                                GIC_ICDIPTR_REG(GIC_BASE_PTR,28)
#define ICDIPTR29                                GIC_ICDIPTR_REG(GIC_BASE_PTR,29)
#define ICDIPTR30                                GIC_ICDIPTR_REG(GIC_BASE_PTR,30)
#define ICDIPTR31                                GIC_ICDIPTR_REG(GIC_BASE_PTR,31)
#define ICDIPTR32                                GIC_ICDIPTR_REG(GIC_BASE_PTR,32)
#define ICDIPTR33                                GIC_ICDIPTR_REG(GIC_BASE_PTR,33)
#define ICDIPTR34                                GIC_ICDIPTR_REG(GIC_BASE_PTR,34)
#define ICDIPTR35                                GIC_ICDIPTR_REG(GIC_BASE_PTR,35)
#define ICDICFR0                                 GIC_ICDICFR_REG(GIC_BASE_PTR,0)
#define ICDICFR1                                 GIC_ICDICFR_REG(GIC_BASE_PTR,1)
#define ICDICFR2                                 GIC_ICDICFR_REG(GIC_BASE_PTR,2)
#define ICDICFR3                                 GIC_ICDICFR_REG(GIC_BASE_PTR,3)
#define ICDICFR4                                 GIC_ICDICFR_REG(GIC_BASE_PTR,4)
#define ICDICFR5                                 GIC_ICDICFR_REG(GIC_BASE_PTR,5)
#define ICDICFR6                                 GIC_ICDICFR_REG(GIC_BASE_PTR,6)
#define ICDICFR7                                 GIC_ICDICFR_REG(GIC_BASE_PTR,7)
#define ICDICFR8                                 GIC_ICDICFR_REG(GIC_BASE_PTR,8)
#define ICDPPIS                                  GIC_PPIS_REG(GIC_BASE_PTR,0)
#define ICDSPIS0                                 GIC_ICDSPIS_REG(GIC_BASE_PTR,0)
#define ICDSPIS1                                 GIC_ICDSPIS_REG(GIC_BASE_PTR,1)
#define ICDSPIS2                                 GIC_ICDSPIS_REG(GIC_BASE_PTR,2)
#define ICDSPIS3                                 GIC_ICDSPIS_REG(GIC_BASE_PTR,3)
#define ICDSPIS4                                 GIC_ICDSPIS_REG(GIC_BASE_PTR,4)
#define ICDSGIR                                  GIC_SGIR_REG(GIC_BASE_PTR,0)

/* GIC - Register array accessors */
#define GIC_ICR(index)                           GIC_ICR_REG(GIC_BASE_PTR,index)
#define GIC_PMR(index)                           GIC_PMR_REG(GIC_BASE_PTR,index)
#define GIC_BPR(index)                           GIC_BPR_REG(GIC_BASE_PTR,index)
#define GIC_IAR(index)                           GIC_IAR_REG(GIC_BASE_PTR,index)
#define GIC_EOIR(index)                          GIC_EOIR_REG(GIC_BASE_PTR,index)
#define GIC_RPR(index)                           GIC_RPR_REG(GIC_BASE_PTR,index)
#define GIC_HPIR(index)                          GIC_HPIR_REG(GIC_BASE_PTR,index)
#define GIC_ABPR(index)                          GIC_ABPR_REG(GIC_BASE_PTR,index)
#define GIC_DCR(index)                           GIC_DCR_REG(GIC_BASE_PTR,index)
#define GIC_ICDISR(index)                        GIC_ICDISR_REG(GIC_BASE_PTR,index)
#define GIC_ICDISER(index)                       GIC_ICDISER_REG(GIC_BASE_PTR,index)
#define GIC_ICDICER(index)                       GIC_ICDICER_REG(GIC_BASE_PTR,index)
#define GIC_ICDISPR(index)                       GIC_ICDISPR_REG(GIC_BASE_PTR,index)
#define GIC_ICDICPR(index)                       GIC_ICDICPR_REG(GIC_BASE_PTR,index)
#define GIC_ICDABR(index)                        GIC_ICDABR_REG(GIC_BASE_PTR,index)
#define GIC_ICDIPR(index)                        GIC_ICDIPR_REG(GIC_BASE_PTR,index)
#define GIC_ICDIPTR(index)                       GIC_ICDIPTR_REG(GIC_BASE_PTR,index)
#define GIC_ICDICFR(index)                       GIC_ICDICFR_REG(GIC_BASE_PTR,index)
#define GIC_PPIS(index)                          GIC_PPIS_REG(GIC_BASE_PTR,index)
#define GIC_ICDSPIS(index)                       GIC_ICDSPIS_REG(GIC_BASE_PTR,index)
#define GIC_SGIR(index)                          GIC_SGIR_REG(GIC_BASE_PTR,index)

/**
 * @}
 */ /* end of group GIC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group GIC_Peripheral */


/* ----------------------------------------------------------------------------
   -- GPC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPC_Peripheral GPC
 * @{
 */

/** GPC - Peripheral register structure */
typedef struct GPC_MemMap {
  uint32_t PGCR;                                   /**< Power Gating Control Register, offset: 0x0 */
  uint32_t PUPSCR;                                 /**< Power-Up Sequence Control Register, offset: 0x4 */
  uint8_t RESERVED_0[4];
  uint32_t PGSR;                                   /**< Power Gating Status Register, offset: 0xC */
  uint8_t RESERVED_1[48];
  uint32_t LPMR;                                   /**< Low Power Mode Register, offset: 0x40 */
  uint32_t IMR1;                                   /**< Interrupt Mask Register 1, offset: 0x44 */
  uint32_t IMR2;                                   /**< Interrupt Mask Register 2, offset: 0x48 */
  uint32_t IMR3;                                   /**< Interrupt Mask Register 3, offset: 0x4C */
  uint32_t IMR4;                                   /**< Interrupt Mask Register, offset: 0x50 */
  uint32_t ISR1;                                   /**< Interrupt Status Register 1, offset: 0x54 */
  uint32_t ISR2;                                   /**< Interrupt Status Register 2, offset: 0x58 */
  uint32_t ISR3;                                   /**< Interrupt Status Register 3, offset: 0x5C */
  uint32_t ISR4;                                   /**< Interrupt Status Register 4, offset: 0x60 */
} volatile *GPC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GPC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPC_Register_Accessor_Macros GPC - Register accessor macros
 * @{
 */


/* GPC - Register accessors */
#define GPC_PGCR_REG(base)                       ((base)->PGCR)
#define GPC_PUPSCR_REG(base)                     ((base)->PUPSCR)
#define GPC_PGSR_REG(base)                       ((base)->PGSR)
#define GPC_LPMR_REG(base)                       ((base)->LPMR)
#define GPC_IMR1_REG(base)                       ((base)->IMR1)
#define GPC_IMR2_REG(base)                       ((base)->IMR2)
#define GPC_IMR3_REG(base)                       ((base)->IMR3)
#define GPC_IMR4_REG(base)                       ((base)->IMR4)
#define GPC_ISR1_REG(base)                       ((base)->ISR1)
#define GPC_ISR2_REG(base)                       ((base)->ISR2)
#define GPC_ISR3_REG(base)                       ((base)->ISR3)
#define GPC_ISR4_REG(base)                       ((base)->ISR4)

/**
 * @}
 */ /* end of group GPC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GPC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPC_Register_Masks GPC Register Masks
 * @{
 */

/* PGCR Bit Fields */
#define GPC_PGCR_PG_PD1_MASK                     0x1u
#define GPC_PGCR_PG_PD1_SHIFT                    0
#define GPC_PGCR_PG_16K_MASK                     0x2u
#define GPC_PGCR_PG_16K_SHIFT                    1
#define GPC_PGCR_PG_48K_MASK                     0x4u
#define GPC_PGCR_PG_48K_SHIFT                    2
#define GPC_PGCR_HP_OFF_MASK                     0x8u
#define GPC_PGCR_HP_OFF_SHIFT                    3
#define GPC_PGCR_WB_STOP_MASK                    0x10u
#define GPC_PGCR_WB_STOP_SHIFT                   4
#define GPC_PGCR_DS_STBY_MASK                    0x40u
#define GPC_PGCR_DS_STBY_SHIFT                   6
#define GPC_PGCR_DS_STOP_MASK                    0x80u
#define GPC_PGCR_DS_STOP_SHIFT                   7
/* PUPSCR Bit Fields */
#define GPC_PUPSCR_SW_MASK                       0x3Fu
#define GPC_PUPSCR_SW_SHIFT                      0
#define GPC_PUPSCR_SW(x)                         (((uint32_t)(((uint32_t)(x))<<GPC_PUPSCR_SW_SHIFT))&GPC_PUPSCR_SW_MASK)
/* PGSR Bit Fields */
#define GPC_PGSR_PSR_MASK                        0x1u
#define GPC_PGSR_PSR_SHIFT                       0
#define GPC_PGSR_CUR_LPM_MASK                    0x6u
#define GPC_PGSR_CUR_LPM_SHIFT                   1
#define GPC_PGSR_CUR_LPM(x)                      (((uint32_t)(((uint32_t)(x))<<GPC_PGSR_CUR_LPM_SHIFT))&GPC_PGSR_CUR_LPM_MASK)
#define GPC_PGSR_PREV_LPM_MASK                   0x18u
#define GPC_PGSR_PREV_LPM_SHIFT                  3
#define GPC_PGSR_PREV_LPM(x)                     (((uint32_t)(((uint32_t)(x))<<GPC_PGSR_PREV_LPM_SHIFT))&GPC_PGSR_PREV_LPM_MASK)
/* LPMR Bit Fields */
#define GPC_LPMR_CLPCR_MASK                      0x3u
#define GPC_LPMR_CLPCR_SHIFT                     0
#define GPC_LPMR_CLPCR(x)                        (((uint32_t)(((uint32_t)(x))<<GPC_LPMR_CLPCR_SHIFT))&GPC_LPMR_CLPCR_MASK)
/* IMR1 Bit Fields */
#define GPC_IMR1_WDOGA5_MASK                     0x100000u
#define GPC_IMR1_WDOGA5_SHIFT                    20
#define GPC_IMR1_WDOGM4_MASK                     0x200000u
#define GPC_IMR1_WDOGM4_SHIFT                    21
#define GPC_IMR1_WDOGSNVS_MASK                   0x400000u
#define GPC_IMR1_WDOGSNVS_SHIFT                  22
#define GPC_IMR1_QSPI0_MASK                      0x1000000u
#define GPC_IMR1_QSPI0_SHIFT                     24
#define GPC_IMR1_QSPI1_MASK                      0x2000000u
#define GPC_IMR1_QSPI1_SHIFT                     25
#define GPC_IMR1_DRAMC_MASK                      0x4000000u
#define GPC_IMR1_DRAMC_SHIFT                     26
#define GPC_IMR1_SDHC0_MASK                      0x8000000u
#define GPC_IMR1_SDHC0_SHIFT                     27
#define GPC_IMR1_SDHC1_MASK                      0x10000000u
#define GPC_IMR1_SDHC1_SHIFT                     28
#define GPC_IMR1_DCU0_MASK                       0x40000000u
#define GPC_IMR1_DCU0_SHIFT                      30
#define GPC_IMR1_DCU1_MASK                       0x80000000u
#define GPC_IMR1_DCU1_SHIFT                      31
/* IMR2 Bit Fields */
#define GPC_IMR2_VIU_MASK                        0x1u
#define GPC_IMR2_VIU_SHIFT                       0
#define GPC_IMR2_GPU_MASK                        0x4u
#define GPC_IMR2_GPU_SHIFT                       2
#define GPC_IMR2_RLE_MASK                        0x8u
#define GPC_IMR2_RLE_SHIFT                       3
#define GPC_IMR2_LCD_MASK                        0x10u
#define GPC_IMR2_LCD_SHIFT                       4
#define GPC_IMR2_PIT_MASK                        0x80u
#define GPC_IMR2_PIT_SHIFT                       7
#define GPC_IMR2_LPTMR_MASK                      0x100u
#define GPC_IMR2_LPTMR_SHIFT                     8
#define GPC_IMR2_FTM_MASK                        0x3C00u
#define GPC_IMR2_FTM_SHIFT                       10
#define GPC_IMR2_FTM(x)                          (((uint32_t)(((uint32_t)(x))<<GPC_IMR2_FTM_SHIFT))&GPC_IMR2_FTM_MASK)
#define GPC_IMR2_ANADIGB_MASK                    0x40000u
#define GPC_IMR2_ANADIGB_SHIFT                   18
#define GPC_IMR2_ANADIGA_MASK                    0x80000u
#define GPC_IMR2_ANADIGA_SHIFT                   19
#define GPC_IMR2_ADC0_MASK                       0x200000u
#define GPC_IMR2_ADC0_SHIFT                      21
#define GPC_IMR2_ADC1_MASK                       0x400000u
#define GPC_IMR2_ADC1_SHIFT                      22
#define GPC_IMR2_DAC0_MASK                       0x800000u
#define GPC_IMR2_DAC0_SHIFT                      23
#define GPC_IMR2_DAC1_MASK                       0x1000000u
#define GPC_IMR2_DAC1_SHIFT                      24
#define GPC_IMR2_Flex_MASK                       0xC000000u
#define GPC_IMR2_Flex_SHIFT                      26
#define GPC_IMR2_Flex(x)                         (((uint32_t)(((uint32_t)(x))<<GPC_IMR2_Flex_SHIFT))&GPC_IMR2_Flex_MASK)
#define GPC_IMR2_MLB_MASK                        0x10000000u
#define GPC_IMR2_MLB_SHIFT                       28
#define GPC_IMR2_UART0_MASK                      0x20000000u
#define GPC_IMR2_UART0_SHIFT                     29
#define GPC_IMR2_UART1_MASK                      0x40000000u
#define GPC_IMR2_UART1_SHIFT                     30
#define GPC_IMR2_UART2_MASK                      0x80000000u
#define GPC_IMR2_UART2_SHIFT                     31
/* IMR3 Bit Fields */
#define GPC_IMR3_UART3_MASK                      0x1u
#define GPC_IMR3_UART3_SHIFT                     0
#define GPC_IMR3_UART4_MASK                      0x2u
#define GPC_IMR3_UART4_SHIFT                     1
#define GPC_IMR3_UART5_MASK                      0x4u
#define GPC_IMR3_UART5_SHIFT                     2
#define GPC_IMR3_DSPI0_MASK                      0x8u
#define GPC_IMR3_DSPI0_SHIFT                     3
#define GPC_IMR3_DSPI1_MASK                      0x10u
#define GPC_IMR3_DSPI1_SHIFT                     4
#define GPC_IMR3_DSPI2_MASK                      0x20u
#define GPC_IMR3_DSPI2_SHIFT                     5
#define GPC_IMR3_DSPI3_MASK                      0x40u
#define GPC_IMR3_DSPI3_SHIFT                     6
#define GPC_IMR3_I2C0_MASK                       0x80u
#define GPC_IMR3_I2C0_SHIFT                      7
#define GPC_IMR3_I2C1_MASK                       0x100u
#define GPC_IMR3_I2C1_SHIFT                      8
#define GPC_IMR3_I2C2_MASK                       0x200u
#define GPC_IMR3_I2C2_SHIFT                      9
#define GPC_IMR3_I2C3_MASK                       0x400u
#define GPC_IMR3_I2C3_SHIFT                      10
#define GPC_IMR3_USBC0_MASK                      0x800u
#define GPC_IMR3_USBC0_SHIFT                     11
#define GPC_IMR3_USBC1_MASK                      0x1000u
#define GPC_IMR3_USBC1_SHIFT                     12
#define GPC_IMR3_ENET0_MASK                      0x4000u
#define GPC_IMR3_ENET0_SHIFT                     14
#define GPC_IMR3_ENET1_MASK                      0x8000u
#define GPC_IMR3_ENET1_SHIFT                     15
#define GPC_IMR3_1588T0_MASK                     0x10000u
#define GPC_IMR3_1588T0_SHIFT                    16
#define GPC_IMR3_1588T1_MASK                     0x20000u
#define GPC_IMR3_1588T1_SHIFT                    17
#define GPC_IMR3_ESW_MASK                        0x40000u
#define GPC_IMR3_ESW_SHIFT                       18
#define GPC_IMR3_NFC_MASK                        0x80000u
#define GPC_IMR3_NFC_SHIFT                       19
#define GPC_IMR3_SAI0_MASK                       0x100000u
#define GPC_IMR3_SAI0_SHIFT                      20
#define GPC_IMR3_SAI1_MASK                       0x200000u
#define GPC_IMR3_SAI1_SHIFT                      21
#define GPC_IMR3_SAI2_MASK                       0x400000u
#define GPC_IMR3_SAI2_SHIFT                      22
#define GPC_IMR3_SAI3_MASK                       0x800000u
#define GPC_IMR3_SAI3_SHIFT                      23
#define GPC_IMR3_ESAI_MASK                       0x1000000u
#define GPC_IMR3_ESAI_SHIFT                      24
#define GPC_IMR3_SPDIF_MASK                      0x2000000u
#define GPC_IMR3_SPDIF_SHIFT                     25
#define GPC_IMR3_ASRC_MASK                       0x4000000u
#define GPC_IMR3_ASRC_SHIFT                      26
#define GPC_IMR3_CMU_MASK                        0x8000000u
#define GPC_IMR3_CMU_SHIFT                       27
#define GPC_IMR3_WKPU0_MASK                      0x10000000u
#define GPC_IMR3_WKPU0_SHIFT                     28
#define GPC_IMR3_CCM_A_MASK                      0x40000000u
#define GPC_IMR3_CCM_A_SHIFT                     30
#define GPC_IMR3_CCM_B_MASK                      0x80000000u
#define GPC_IMR3_CCM_B_SHIFT                     31
/* IMR4 Bit Fields */
#define GPC_IMR4_SRC_MASK                        0x1u
#define GPC_IMR4_SRC_SHIFT                       0
#define GPC_IMR4_PDB_MASK                        0x2u
#define GPC_IMR4_PDB_SHIFT                       1
#define GPC_IMR4_EWM_MASK                        0x4u
#define GPC_IMR4_EWM_SHIFT                       2
#define GPC_IMR4_SNVS_A_MASK                     0x10u
#define GPC_IMR4_SNVS_A_SHIFT                    4
#define GPC_IMR4_SNVS_B_MASK                     0x20u
#define GPC_IMR4_SNVS_B_SHIFT                    5
#define GPC_IMR4_CAAM_MASK                       0x40u
#define GPC_IMR4_CAAM_SHIFT                      6
#define GPC_IMR4_GPIO0_MASK                      0x800u
#define GPC_IMR4_GPIO0_SHIFT                     11
#define GPC_IMR4_GPIO1_MASK                      0x1000u
#define GPC_IMR4_GPIO1_SHIFT                     12
#define GPC_IMR4_GPIO2_MASK                      0x2000u
#define GPC_IMR4_GPIO2_SHIFT                     13
#define GPC_IMR4_GPIO3_MASK                      0x4000u
#define GPC_IMR4_GPIO3_SHIFT                     14
#define GPC_IMR4_GPIO4_MASK                      0x8000u
#define GPC_IMR4_GPIO4_SHIFT                     15
/* ISR1 Bit Fields */
#define GPC_ISR1_WDOGA5_MASK                     0x100000u
#define GPC_ISR1_WDOGA5_SHIFT                    20
#define GPC_ISR1_WDOGM4_MASK                     0x200000u
#define GPC_ISR1_WDOGM4_SHIFT                    21
#define GPC_ISR1_WDOGSNVS_MASK                   0x400000u
#define GPC_ISR1_WDOGSNVS_SHIFT                  22
#define GPC_ISR1_QSPI0_MASK                      0x1000000u
#define GPC_ISR1_QSPI0_SHIFT                     24
#define GPC_ISR1_QSPI1_MASK                      0x2000000u
#define GPC_ISR1_QSPI1_SHIFT                     25
#define GPC_ISR1_DRAMC_MASK                      0x4000000u
#define GPC_ISR1_DRAMC_SHIFT                     26
#define GPC_ISR1_SDHC0_MASK                      0x8000000u
#define GPC_ISR1_SDHC0_SHIFT                     27
#define GPC_ISR1_SDHC1_MASK                      0x10000000u
#define GPC_ISR1_SDHC1_SHIFT                     28
#define GPC_ISR1_DCU0_MASK                       0x40000000u
#define GPC_ISR1_DCU0_SHIFT                      30
#define GPC_ISR1_DCU1_MASK                       0x80000000u
#define GPC_ISR1_DCU1_SHIFT                      31
/* ISR2 Bit Fields */
#define GPC_ISR2_VIU_MASK                        0x1u
#define GPC_ISR2_VIU_SHIFT                       0
#define GPC_ISR2_GPU_MASK                        0x4u
#define GPC_ISR2_GPU_SHIFT                       2
#define GPC_ISR2_RLE_MASK                        0x8u
#define GPC_ISR2_RLE_SHIFT                       3
#define GPC_ISR2_LCD_MASK                        0x10u
#define GPC_ISR2_LCD_SHIFT                       4
#define GPC_ISR2_PIT_MASK                        0x80u
#define GPC_ISR2_PIT_SHIFT                       7
#define GPC_ISR2_LPTMR_MASK                      0x100u
#define GPC_ISR2_LPTMR_SHIFT                     8
#define GPC_ISR2_FTM_MASK                        0x3C00u
#define GPC_ISR2_FTM_SHIFT                       10
#define GPC_ISR2_FTM(x)                          (((uint32_t)(((uint32_t)(x))<<GPC_ISR2_FTM_SHIFT))&GPC_ISR2_FTM_MASK)
#define GPC_ISR2_ANADIGB_MASK                    0x40000u
#define GPC_ISR2_ANADIGB_SHIFT                   18
#define GPC_ISR2_ANADIGA_MASK                    0x80000u
#define GPC_ISR2_ANADIGA_SHIFT                   19
#define GPC_ISR2_ADC0_MASK                       0x200000u
#define GPC_ISR2_ADC0_SHIFT                      21
#define GPC_ISR2_ADC1_MASK                       0x400000u
#define GPC_ISR2_ADC1_SHIFT                      22
#define GPC_ISR2_DAC0_MASK                       0x800000u
#define GPC_ISR2_DAC0_SHIFT                      23
#define GPC_ISR2_DAC1_MASK                       0x1000000u
#define GPC_ISR2_DAC1_SHIFT                      24
#define GPC_ISR2_Flex_MASK                       0xC000000u
#define GPC_ISR2_Flex_SHIFT                      26
#define GPC_ISR2_Flex(x)                         (((uint32_t)(((uint32_t)(x))<<GPC_ISR2_Flex_SHIFT))&GPC_ISR2_Flex_MASK)
#define GPC_ISR2_MLB_MASK                        0x10000000u
#define GPC_ISR2_MLB_SHIFT                       28
#define GPC_ISR2_UART0_MASK                      0x20000000u
#define GPC_ISR2_UART0_SHIFT                     29
#define GPC_ISR2_UART1_MASK                      0x40000000u
#define GPC_ISR2_UART1_SHIFT                     30
#define GPC_ISR2_UART2_MASK                      0x80000000u
#define GPC_ISR2_UART2_SHIFT                     31
/* ISR3 Bit Fields */
#define GPC_ISR3_UART3_MASK                      0x1u
#define GPC_ISR3_UART3_SHIFT                     0
#define GPC_ISR3_UART4_MASK                      0x2u
#define GPC_ISR3_UART4_SHIFT                     1
#define GPC_ISR3_UART5_MASK                      0x4u
#define GPC_ISR3_UART5_SHIFT                     2
#define GPC_ISR3_DSPI0_MASK                      0x8u
#define GPC_ISR3_DSPI0_SHIFT                     3
#define GPC_ISR3_DSPI1_MASK                      0x10u
#define GPC_ISR3_DSPI1_SHIFT                     4
#define GPC_ISR3_DSPI2_MASK                      0x20u
#define GPC_ISR3_DSPI2_SHIFT                     5
#define GPC_ISR3_DSPI3_MASK                      0x40u
#define GPC_ISR3_DSPI3_SHIFT                     6
#define GPC_ISR3_I2C0_MASK                       0x80u
#define GPC_ISR3_I2C0_SHIFT                      7
#define GPC_ISR3_I2C1_MASK                       0x100u
#define GPC_ISR3_I2C1_SHIFT                      8
#define GPC_ISR3_I2C2_MASK                       0x200u
#define GPC_ISR3_I2C2_SHIFT                      9
#define GPC_ISR3_I2C3_MASK                       0x400u
#define GPC_ISR3_I2C3_SHIFT                      10
#define GPC_ISR3_USBC0_MASK                      0x800u
#define GPC_ISR3_USBC0_SHIFT                     11
#define GPC_ISR3_USBC1_MASK                      0x1000u
#define GPC_ISR3_USBC1_SHIFT                     12
#define GPC_ISR3_ENET0_MASK                      0x4000u
#define GPC_ISR3_ENET0_SHIFT                     14
#define GPC_ISR3_ENET1_MASK                      0x8000u
#define GPC_ISR3_ENET1_SHIFT                     15
#define GPC_ISR3_1588T0_MASK                     0x10000u
#define GPC_ISR3_1588T0_SHIFT                    16
#define GPC_ISR3_1588T1_MASK                     0x20000u
#define GPC_ISR3_1588T1_SHIFT                    17
#define GPC_ISR3_ESW_MASK                        0x40000u
#define GPC_ISR3_ESW_SHIFT                       18
#define GPC_ISR3_NFC_MASK                        0x80000u
#define GPC_ISR3_NFC_SHIFT                       19
#define GPC_ISR3_SAI0_MASK                       0x100000u
#define GPC_ISR3_SAI0_SHIFT                      20
#define GPC_ISR3_SAI1_MASK                       0x200000u
#define GPC_ISR3_SAI1_SHIFT                      21
#define GPC_ISR3_SAI2_MASK                       0x400000u
#define GPC_ISR3_SAI2_SHIFT                      22
#define GPC_ISR3_SAI3_MASK                       0x800000u
#define GPC_ISR3_SAI3_SHIFT                      23
#define GPC_ISR3_ESAI_MASK                       0x1000000u
#define GPC_ISR3_ESAI_SHIFT                      24
#define GPC_ISR3_SPDIF_MASK                      0x2000000u
#define GPC_ISR3_SPDIF_SHIFT                     25
#define GPC_ISR3_ASRC_MASK                       0x4000000u
#define GPC_ISR3_ASRC_SHIFT                      26
#define GPC_ISR3_CMU_MASK                        0x8000000u
#define GPC_ISR3_CMU_SHIFT                       27
#define GPC_ISR3_WKPU0_MASK                      0x10000000u
#define GPC_ISR3_WKPU0_SHIFT                     28
#define GPC_ISR3_CCM_A_MASK                      0x40000000u
#define GPC_ISR3_CCM_A_SHIFT                     30
#define GPC_ISR3_CCM_B_MASK                      0x80000000u
#define GPC_ISR3_CCM_B_SHIFT                     31
/* ISR4 Bit Fields */
#define GPC_ISR4_SRC_MASK                        0x1u
#define GPC_ISR4_SRC_SHIFT                       0
#define GPC_ISR4_PDB_MASK                        0x2u
#define GPC_ISR4_PDB_SHIFT                       1
#define GPC_ISR4_EWM_MASK                        0x4u
#define GPC_ISR4_EWM_SHIFT                       2
#define GPC_ISR4_SNVS_A_MASK                     0x10u
#define GPC_ISR4_SNVS_A_SHIFT                    4
#define GPC_ISR4_SNVS_B_MASK                     0x20u
#define GPC_ISR4_SNVS_B_SHIFT                    5
#define GPC_ISR4_CAAM_MASK                       0x40u
#define GPC_ISR4_CAAM_SHIFT                      6
#define GPC_ISR4_GPIO0_MASK                      0x800u
#define GPC_ISR4_GPIO0_SHIFT                     11
#define GPC_ISR4_GPIO1_MASK                      0x1000u
#define GPC_ISR4_GPIO1_SHIFT                     12
#define GPC_ISR4_GPIO2_MASK                      0x2000u
#define GPC_ISR4_GPIO2_SHIFT                     13
#define GPC_ISR4_GPIO3_MASK                      0x4000u
#define GPC_ISR4_GPIO3_SHIFT                     14
#define GPC_ISR4_GPIO4_MASK                      0x8000u
#define GPC_ISR4_GPIO4_SHIFT                     15

/**
 * @}
 */ /* end of group GPC_Register_Masks */


/* GPC - Peripheral instance base addresses */
/** Peripheral GPC base pointer */
#define GPC_BASE_PTR                             ((GPC_MemMapPtr)0x4006C000u)
/** Array initializer of GPC peripheral base pointers */
#define GPC_BASE_PTRS                            { GPC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- GPC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPC_Register_Accessor_Macros GPC - Register accessor macros
 * @{
 */


/* GPC - Register instance definitions */
/* GPC */
#define GPC_PGCR                                 GPC_PGCR_REG(GPC_BASE_PTR)
#define GPC_PUPSCR                               GPC_PUPSCR_REG(GPC_BASE_PTR)
#define GPC_PGSR                                 GPC_PGSR_REG(GPC_BASE_PTR)
#define GPC_LPMR                                 GPC_LPMR_REG(GPC_BASE_PTR)
#define GPC_IMR1                                 GPC_IMR1_REG(GPC_BASE_PTR)
#define GPC_IMR2                                 GPC_IMR2_REG(GPC_BASE_PTR)
#define GPC_IMR3                                 GPC_IMR3_REG(GPC_BASE_PTR)
#define GPC_IMR4                                 GPC_IMR4_REG(GPC_BASE_PTR)
#define GPC_ISR1                                 GPC_ISR1_REG(GPC_BASE_PTR)
#define GPC_ISR2                                 GPC_ISR2_REG(GPC_BASE_PTR)
#define GPC_ISR3                                 GPC_ISR3_REG(GPC_BASE_PTR)
#define GPC_ISR4                                 GPC_ISR4_REG(GPC_BASE_PTR)

/**
 * @}
 */ /* end of group GPC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group GPC_Peripheral */


/* ----------------------------------------------------------------------------
   -- GPIO
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPIO_Peripheral GPIO
 * @{
 */

/** GPIO - Peripheral register structure */
typedef struct GPIO_MemMap {
  uint32_t PDOR;                                   /**< Port Data Output Register, offset: 0x0 */
  uint32_t PSOR;                                   /**< Port Set Output Register, offset: 0x4 */
  uint32_t PCOR;                                   /**< Port Clear Output Register, offset: 0x8 */
  uint32_t PTOR;                                   /**< Port Toggle Output Register, offset: 0xC */
  uint32_t PDIR;                                   /**< Port Data Input Register, offset: 0x10 */
} volatile *GPIO_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GPIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPIO_Register_Accessor_Macros GPIO - Register accessor macros
 * @{
 */


/* GPIO - Register accessors */
#define GPIO_PDOR_REG(base)                      ((base)->PDOR)
#define GPIO_PSOR_REG(base)                      ((base)->PSOR)
#define GPIO_PCOR_REG(base)                      ((base)->PCOR)
#define GPIO_PTOR_REG(base)                      ((base)->PTOR)
#define GPIO_PDIR_REG(base)                      ((base)->PDIR)

/**
 * @}
 */ /* end of group GPIO_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GPIO Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPIO_Register_Masks GPIO Register Masks
 * @{
 */

/* PDOR Bit Fields */
#define GPIO_PDOR_PDO_MASK                       0xFFFFFFFFu
#define GPIO_PDOR_PDO_SHIFT                      0
#define GPIO_PDOR_PDO(x)                         (((uint32_t)(((uint32_t)(x))<<GPIO_PDOR_PDO_SHIFT))&GPIO_PDOR_PDO_MASK)
/* PSOR Bit Fields */
#define GPIO_PSOR_PTSO_MASK                      0xFFFFFFFFu
#define GPIO_PSOR_PTSO_SHIFT                     0
#define GPIO_PSOR_PTSO(x)                        (((uint32_t)(((uint32_t)(x))<<GPIO_PSOR_PTSO_SHIFT))&GPIO_PSOR_PTSO_MASK)
/* PCOR Bit Fields */
#define GPIO_PCOR_PTCO_MASK                      0xFFFFFFFFu
#define GPIO_PCOR_PTCO_SHIFT                     0
#define GPIO_PCOR_PTCO(x)                        (((uint32_t)(((uint32_t)(x))<<GPIO_PCOR_PTCO_SHIFT))&GPIO_PCOR_PTCO_MASK)
/* PTOR Bit Fields */
#define GPIO_PTOR_PTTO_MASK                      0xFFFFFFFFu
#define GPIO_PTOR_PTTO_SHIFT                     0
#define GPIO_PTOR_PTTO(x)                        (((uint32_t)(((uint32_t)(x))<<GPIO_PTOR_PTTO_SHIFT))&GPIO_PTOR_PTTO_MASK)
/* PDIR Bit Fields */
#define GPIO_PDIR_PDI_MASK                       0xFFFFFFFFu
#define GPIO_PDIR_PDI_SHIFT                      0
#define GPIO_PDIR_PDI(x)                         (((uint32_t)(((uint32_t)(x))<<GPIO_PDIR_PDI_SHIFT))&GPIO_PDIR_PDI_MASK)

/**
 * @}
 */ /* end of group GPIO_Register_Masks */


/* GPIO - Peripheral instance base addresses */
/** Peripheral PT0 base pointer */
#define PT0_BASE_PTR                             ((GPIO_MemMapPtr)0x400FF000u)
/** Peripheral PT1 base pointer */
#define PT1_BASE_PTR                             ((GPIO_MemMapPtr)0x400FF040u)
/** Peripheral PT2 base pointer */
#define PT2_BASE_PTR                             ((GPIO_MemMapPtr)0x400FF080u)
/** Peripheral PT3 base pointer */
#define PT3_BASE_PTR                             ((GPIO_MemMapPtr)0x400FF0C0u)
/** Peripheral PT4 base pointer */
#define PT4_BASE_PTR                             ((GPIO_MemMapPtr)0x400FF100u)
/** Array initializer of GPIO peripheral base pointers */
#define GPIO_BASE_PTRS                           { PT0_BASE_PTR, PT1_BASE_PTR, PT2_BASE_PTR, PT3_BASE_PTR, PT4_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- GPIO - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPIO_Register_Accessor_Macros GPIO - Register accessor macros
 * @{
 */


/* GPIO - Register instance definitions */
/* PT0 */
#define GPIO0_PDOR                               GPIO_PDOR_REG(PT0_BASE_PTR)
#define GPIO0_PSOR                               GPIO_PSOR_REG(PT0_BASE_PTR)
#define GPIO0_PCOR                               GPIO_PCOR_REG(PT0_BASE_PTR)
#define GPIO0_PTOR                               GPIO_PTOR_REG(PT0_BASE_PTR)
#define GPIO0_PDIR                               GPIO_PDIR_REG(PT0_BASE_PTR)
/* PT1 */
#define GPIO1_PDOR                               GPIO_PDOR_REG(PT1_BASE_PTR)
#define GPIO1_PSOR                               GPIO_PSOR_REG(PT1_BASE_PTR)
#define GPIO1_PCOR                               GPIO_PCOR_REG(PT1_BASE_PTR)
#define GPIO1_PTOR                               GPIO_PTOR_REG(PT1_BASE_PTR)
#define GPIO1_PDIR                               GPIO_PDIR_REG(PT1_BASE_PTR)
/* PT2 */
#define GPIO2_PDOR                               GPIO_PDOR_REG(PT2_BASE_PTR)
#define GPIO2_PSOR                               GPIO_PSOR_REG(PT2_BASE_PTR)
#define GPIO2_PCOR                               GPIO_PCOR_REG(PT2_BASE_PTR)
#define GPIO2_PTOR                               GPIO_PTOR_REG(PT2_BASE_PTR)
#define GPIO2_PDIR                               GPIO_PDIR_REG(PT2_BASE_PTR)
/* PT3 */
#define GPIO3_PDOR                               GPIO_PDOR_REG(PT3_BASE_PTR)
#define GPIO3_PSOR                               GPIO_PSOR_REG(PT3_BASE_PTR)
#define GPIO3_PCOR                               GPIO_PCOR_REG(PT3_BASE_PTR)
#define GPIO3_PTOR                               GPIO_PTOR_REG(PT3_BASE_PTR)
#define GPIO3_PDIR                               GPIO_PDIR_REG(PT3_BASE_PTR)
/* PT4 */
#define GPIO4_PDOR                               GPIO_PDOR_REG(PT4_BASE_PTR)
#define GPIO4_PSOR                               GPIO_PSOR_REG(PT4_BASE_PTR)
#define GPIO4_PCOR                               GPIO_PCOR_REG(PT4_BASE_PTR)
#define GPIO4_PTOR                               GPIO_PTOR_REG(PT4_BASE_PTR)
#define GPIO4_PDIR                               GPIO_PDIR_REG(PT4_BASE_PTR)

/**
 * @}
 */ /* end of group GPIO_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group GPIO_Peripheral */


/* ----------------------------------------------------------------------------
   -- GPU2D
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPU2D_Peripheral GPU2D
 * @{
 */

/** GPU2D - Peripheral register structure */
typedef struct GPU2D_MemMap {
  uint32_t AQHiClockControl;                       /**< Clock Control Register, offset: 0x0 */
  uint32_t AQHiIdle;                               /**< Idle Status Register, offset: 0x4 */
  uint32_t AQAxiConfig;                            /**< AXI Configuration Register, offset: 0x8 */
  uint32_t AQAxiStatus;                            /**< AXI Status Register, offset: 0xC */
  uint32_t AQIntrAcknowledge;                      /**< Interrupt Acknowledge Register, offset: 0x10 */
  uint32_t AQIntrEnbl;                             /**< Interrupt Enable Register, offset: 0x14 */
  uint32_t AQIdent;                                /**< Identification Register, offset: 0x18 */
  uint32_t Features;                               /**< Features Register, offset: 0x1C */
  uint32_t ChipId;                                 /**< Chip Identification Register, offset: 0x20 */
  uint32_t ChipRev;                                /**< Chip Revision Register, offset: 0x24 */
  uint32_t ChipDate;                               /**< Chip Release Date Register, offset: 0x28 */
  uint32_t ChipTime;                               /**< Chip Release Time Register, offset: 0x2C */
  uint32_t ChipCustomer;                           /**< Chip Customer Register, offset: 0x30 */
  uint32_t MinorFeatures0;                         /**< Minor Features Register 0, offset: 0x34 */
  uint32_t CacheControl;                           /**< Cache Control Register, offset: 0x38 */
  uint32_t ResetMemCounters;                       /**< Reset Mem Counters Register, offset: 0x3C */
  uint32_t TotalReads;                             /**< Read Count Register, offset: 0x40 */
  uint32_t TotalWrites;                            /**< Write Count Register, offset: 0x44 */
  uint32_t ChipSpecs;                              /**< Chip Specification Register, offset: 0x48 */
  uint32_t TotalWriteBursts;                       /**< Write Data Count Register, offset: 0x4C */
  uint32_t TotalWriteReqs;                         /**< Write REQ Count Register, offset: 0x50 */
  uint32_t TotalWriteLasts;                        /**< Total WLAST Count Register, offset: 0x54 */
  uint32_t TotalReadBursts;                        /**< Total Read Data Count Register, offset: 0x58 */
  uint32_t TotalReadReqs;                          /**< Total Read REQ Count Register, offset: 0x5C */
  uint32_t TotalReadLasts;                         /**< Total RLAST Count Register, offset: 0x60 */
  uint32_t GpOut0;                                 /**< General Purpose Register 0, offset: 0x64 */
  uint32_t GpOut1;                                 /**< General Purpose Register 1, offset: 0x68 */
  uint32_t GpOut2;                                 /**< General Purpose Register 2, offset: 0x6C */
  uint32_t AxiControl;                             /**< AXI Control Register, offset: 0x70 */
  uint32_t MinorFeatures1;                         /**< Minor Features Register 1, offset: 0x74 */
  uint32_t TotalCycles;                            /**< Total Cycle Counter Register, offset: 0x78 */
  uint32_t TotalIdleCyles;                         /**< Total Idle Cycle Register, offset: 0x7C */
  uint32_t ChipSpecs2;                             /**< Chip Specification Register, offset: 0x80 */
  uint32_t ModulePowerControls;                    /**< Power Control Register, offset: 0x84 */
  uint32_t ModulePowerModuleControl;               /**< Power Level Register, offset: 0x88 */
  uint32_t ModulePowerModuleStatus;                /**< Power Status Register, offset: 0x8C */
} volatile *GPU2D_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GPU2D - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPU2D_Register_Accessor_Macros GPU2D - Register accessor macros
 * @{
 */


/* GPU2D - Register accessors */
#define GPU2D_AQHiClockControl_REG(base)         ((base)->AQHiClockControl)
#define GPU2D_AQHiIdle_REG(base)                 ((base)->AQHiIdle)
#define GPU2D_AQAxiConfig_REG(base)              ((base)->AQAxiConfig)
#define GPU2D_AQAxiStatus_REG(base)              ((base)->AQAxiStatus)
#define GPU2D_AQIntrAcknowledge_REG(base)        ((base)->AQIntrAcknowledge)
#define GPU2D_AQIntrEnbl_REG(base)               ((base)->AQIntrEnbl)
#define GPU2D_AQIdent_REG(base)                  ((base)->AQIdent)
#define GPU2D_Features_REG(base)                 ((base)->Features)
#define GPU2D_ChipId_REG(base)                   ((base)->ChipId)
#define GPU2D_ChipRev_REG(base)                  ((base)->ChipRev)
#define GPU2D_ChipDate_REG(base)                 ((base)->ChipDate)
#define GPU2D_ChipTime_REG(base)                 ((base)->ChipTime)
#define GPU2D_ChipCustomer_REG(base)             ((base)->ChipCustomer)
#define GPU2D_MinorFeatures0_REG(base)           ((base)->MinorFeatures0)
#define GPU2D_CacheControl_REG(base)             ((base)->CacheControl)
#define GPU2D_ResetMemCounters_REG(base)         ((base)->ResetMemCounters)
#define GPU2D_TotalReads_REG(base)               ((base)->TotalReads)
#define GPU2D_TotalWrites_REG(base)              ((base)->TotalWrites)
#define GPU2D_ChipSpecs_REG(base)                ((base)->ChipSpecs)
#define GPU2D_TotalWriteBursts_REG(base)         ((base)->TotalWriteBursts)
#define GPU2D_TotalWriteReqs_REG(base)           ((base)->TotalWriteReqs)
#define GPU2D_TotalWriteLasts_REG(base)          ((base)->TotalWriteLasts)
#define GPU2D_TotalReadBursts_REG(base)          ((base)->TotalReadBursts)
#define GPU2D_TotalReadReqs_REG(base)            ((base)->TotalReadReqs)
#define GPU2D_TotalReadLasts_REG(base)           ((base)->TotalReadLasts)
#define GPU2D_GpOut0_REG(base)                   ((base)->GpOut0)
#define GPU2D_GpOut1_REG(base)                   ((base)->GpOut1)
#define GPU2D_GpOut2_REG(base)                   ((base)->GpOut2)
#define GPU2D_AxiControl_REG(base)               ((base)->AxiControl)
#define GPU2D_MinorFeatures1_REG(base)           ((base)->MinorFeatures1)
#define GPU2D_TotalCycles_REG(base)              ((base)->TotalCycles)
#define GPU2D_TotalIdleCyles_REG(base)           ((base)->TotalIdleCyles)
#define GPU2D_ChipSpecs2_REG(base)               ((base)->ChipSpecs2)
#define GPU2D_ModulePowerControls_REG(base)      ((base)->ModulePowerControls)
#define GPU2D_ModulePowerModuleControl_REG(base) ((base)->ModulePowerModuleControl)
#define GPU2D_ModulePowerModuleStatus_REG(base)  ((base)->ModulePowerModuleStatus)

/**
 * @}
 */ /* end of group GPU2D_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GPU2D Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPU2D_Register_Masks GPU2D Register Masks
 * @{
 */

/* AQHiClockControl Bit Fields */
#define GPU2D_AQHiClockControl_MULTI_PIPE_USE_SINGLE_AXI_MASK 0xF0u
#define GPU2D_AQHiClockControl_MULTI_PIPE_USE_SINGLE_AXI_SHIFT 4
#define GPU2D_AQHiClockControl_MULTI_PIPE_USE_SINGLE_AXI(x) (((uint32_t)(((uint32_t)(x))<<GPU2D_AQHiClockControl_MULTI_PIPE_USE_SINGLE_AXI_SHIFT))&GPU2D_AQHiClockControl_MULTI_PIPE_USE_SINGLE_AXI_MASK)
#define GPU2D_AQHiClockControl_MULTI_PIPE_REG_SELECT_MASK 0xF00u
#define GPU2D_AQHiClockControl_MULTI_PIPE_REG_SELECT_SHIFT 8
#define GPU2D_AQHiClockControl_MULTI_PIPE_REG_SELECT(x) (((uint32_t)(((uint32_t)(x))<<GPU2D_AQHiClockControl_MULTI_PIPE_REG_SELECT_SHIFT))&GPU2D_AQHiClockControl_MULTI_PIPE_REG_SELECT_MASK)
#define GPU2D_AQHiClockControl_ISOLATE_GPU_MASK  0x1000u
#define GPU2D_AQHiClockControl_ISOLATE_GPU_SHIFT 12
#define GPU2D_AQHiClockControl_IDLE_VG_MASK      0x2000u
#define GPU2D_AQHiClockControl_IDLE_VG_SHIFT     13
#define GPU2D_AQHiClockControl_IDLE2_D_MASK      0x4000u
#define GPU2D_AQHiClockControl_IDLE2_D_SHIFT     14
#define GPU2D_AQHiClockControl_IDLE3_D_MASK      0x8000u
#define GPU2D_AQHiClockControl_IDLE3_D_SHIFT     15
#define GPU2D_AQHiClockControl_SOFT_RESET_MASK   0x80000u
#define GPU2D_AQHiClockControl_SOFT_RESET_SHIFT  19
#define GPU2D_AQHiClockControl_DISABLE_DEBUG_REGISTERS_MASK 0x100000u
#define GPU2D_AQHiClockControl_DISABLE_DEBUG_REGISTERS_SHIFT 20
#define GPU2D_AQHiClockControl_DISABLE_RAM_CLOCK_GATING_MASK 0x200000u
#define GPU2D_AQHiClockControl_DISABLE_RAM_CLOCK_GATING_SHIFT 21
#define GPU2D_AQHiClockControl_FSCALE_CMD_LOAD_MASK 0x400000u
#define GPU2D_AQHiClockControl_FSCALE_CMD_LOAD_SHIFT 22
#define GPU2D_AQHiClockControl_FSCALE_VAL_MASK   0x3F800000u
#define GPU2D_AQHiClockControl_FSCALE_VAL_SHIFT  23
#define GPU2D_AQHiClockControl_FSCALE_VAL(x)     (((uint32_t)(((uint32_t)(x))<<GPU2D_AQHiClockControl_FSCALE_VAL_SHIFT))&GPU2D_AQHiClockControl_FSCALE_VAL_MASK)
#define GPU2D_AQHiClockControl_CLK2D_DIS_MASK    0x40000000u
#define GPU2D_AQHiClockControl_CLK2D_DIS_SHIFT   30
#define GPU2D_AQHiClockControl_CLK3D_DIS_MASK    0x80000000u
#define GPU2D_AQHiClockControl_CLK3D_DIS_SHIFT   31
/* AQHiIdle Bit Fields */
#define GPU2D_AQHiIdle_AXI_LP_MASK               0x1u
#define GPU2D_AQHiIdle_AXI_LP_SHIFT              0
#define GPU2D_AQHiIdle_IDLE_TS_MASK              0x100000u
#define GPU2D_AQHiIdle_IDLE_TS_SHIFT             20
#define GPU2D_AQHiIdle_IDLE_FP_MASK              0x200000u
#define GPU2D_AQHiIdle_IDLE_FP_SHIFT             21
#define GPU2D_AQHiIdle_IDLE_IM_MASK              0x400000u
#define GPU2D_AQHiIdle_IDLE_IM_SHIFT             22
#define GPU2D_AQHiIdle_IDLE_VG_MASK              0x800000u
#define GPU2D_AQHiIdle_IDLE_VG_SHIFT             23
#define GPU2D_AQHiIdle_IDLE_TX_MASK              0x1000000u
#define GPU2D_AQHiIdle_IDLE_TX_SHIFT             24
#define GPU2D_AQHiIdle_IDLE_RA_MASK              0x2000000u
#define GPU2D_AQHiIdle_IDLE_RA_SHIFT             25
#define GPU2D_AQHiIdle_IDLE_SE_MASK              0x4000000u
#define GPU2D_AQHiIdle_IDLE_SE_SHIFT             26
#define GPU2D_AQHiIdle_IDLE_PA_MASK              0x8000000u
#define GPU2D_AQHiIdle_IDLE_PA_SHIFT             27
#define GPU2D_AQHiIdle_IDLE_SH_MASK              0x10000000u
#define GPU2D_AQHiIdle_IDLE_SH_SHIFT             28
#define GPU2D_AQHiIdle_IDLE_PE_MASK              0x20000000u
#define GPU2D_AQHiIdle_IDLE_PE_SHIFT             29
#define GPU2D_AQHiIdle_IDLE_DE_MASK              0x40000000u
#define GPU2D_AQHiIdle_IDLE_DE_SHIFT             30
#define GPU2D_AQHiIdle_IDLE_FE_MASK              0x80000000u
#define GPU2D_AQHiIdle_IDLE_FE_SHIFT             31
/* AQAxiConfig Bit Fields */
#define GPU2D_AQAxiConfig_ARCACHE_MASK           0xF0000u
#define GPU2D_AQAxiConfig_ARCACHE_SHIFT          16
#define GPU2D_AQAxiConfig_ARCACHE(x)             (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiConfig_ARCACHE_SHIFT))&GPU2D_AQAxiConfig_ARCACHE_MASK)
#define GPU2D_AQAxiConfig_AWCACHE_MASK           0xF00000u
#define GPU2D_AQAxiConfig_AWCACHE_SHIFT          20
#define GPU2D_AQAxiConfig_AWCACHE(x)             (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiConfig_AWCACHE_SHIFT))&GPU2D_AQAxiConfig_AWCACHE_MASK)
#define GPU2D_AQAxiConfig_ARID_MASK              0xF000000u
#define GPU2D_AQAxiConfig_ARID_SHIFT             24
#define GPU2D_AQAxiConfig_ARID(x)                (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiConfig_ARID_SHIFT))&GPU2D_AQAxiConfig_ARID_MASK)
#define GPU2D_AQAxiConfig_AWID_MASK              0xF0000000u
#define GPU2D_AQAxiConfig_AWID_SHIFT             28
#define GPU2D_AQAxiConfig_AWID(x)                (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiConfig_AWID_SHIFT))&GPU2D_AQAxiConfig_AWID_MASK)
/* AQAxiStatus Bit Fields */
#define GPU2D_AQAxiStatus_WR_ERR_ID_MASK         0xFu
#define GPU2D_AQAxiStatus_WR_ERR_ID_SHIFT        0
#define GPU2D_AQAxiStatus_WR_ERR_ID(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiStatus_WR_ERR_ID_SHIFT))&GPU2D_AQAxiStatus_WR_ERR_ID_MASK)
#define GPU2D_AQAxiStatus_RD_ERR_ID_MASK         0xF0u
#define GPU2D_AQAxiStatus_RD_ERR_ID_SHIFT        4
#define GPU2D_AQAxiStatus_RD_ERR_ID(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_AQAxiStatus_RD_ERR_ID_SHIFT))&GPU2D_AQAxiStatus_RD_ERR_ID_MASK)
#define GPU2D_AQAxiStatus_DET_WR_ERR_MASK        0x100u
#define GPU2D_AQAxiStatus_DET_WR_ERR_SHIFT       8
#define GPU2D_AQAxiStatus_DET_RD_ERR_MASK        0x200u
#define GPU2D_AQAxiStatus_DET_RD_ERR_SHIFT       9
/* AQIntrAcknowledge Bit Fields */
#define GPU2D_AQIntrAcknowledge_INTR_VEC_MASK    0xFFFFFFFFu
#define GPU2D_AQIntrAcknowledge_INTR_VEC_SHIFT   0
#define GPU2D_AQIntrAcknowledge_INTR_VEC(x)      (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIntrAcknowledge_INTR_VEC_SHIFT))&GPU2D_AQIntrAcknowledge_INTR_VEC_MASK)
/* AQIntrEnbl Bit Fields */
#define GPU2D_AQIntrEnbl_INTR_ENBL_VEC_MASK      0xFFFFFFFFu
#define GPU2D_AQIntrEnbl_INTR_ENBL_VEC_SHIFT     0
#define GPU2D_AQIntrEnbl_INTR_ENBL_VEC(x)        (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIntrEnbl_INTR_ENBL_VEC_SHIFT))&GPU2D_AQIntrEnbl_INTR_ENBL_VEC_MASK)
/* AQIdent Bit Fields */
#define GPU2D_AQIdent_CUSTOMER_MASK              0xFFu
#define GPU2D_AQIdent_CUSTOMER_SHIFT             0
#define GPU2D_AQIdent_CUSTOMER(x)                (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIdent_CUSTOMER_SHIFT))&GPU2D_AQIdent_CUSTOMER_MASK)
#define GPU2D_AQIdent_TECHNOLOGY_MASK            0xF00u
#define GPU2D_AQIdent_TECHNOLOGY_SHIFT           8
#define GPU2D_AQIdent_TECHNOLOGY(x)              (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIdent_TECHNOLOGY_SHIFT))&GPU2D_AQIdent_TECHNOLOGY_MASK)
#define GPU2D_AQIdent_REVISION_MASK              0xF000u
#define GPU2D_AQIdent_REVISION_SHIFT             12
#define GPU2D_AQIdent_REVISION(x)                (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIdent_REVISION_SHIFT))&GPU2D_AQIdent_REVISION_MASK)
#define GPU2D_AQIdent_PRODUCT_MASK               0xFF0000u
#define GPU2D_AQIdent_PRODUCT_SHIFT              16
#define GPU2D_AQIdent_PRODUCT(x)                 (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIdent_PRODUCT_SHIFT))&GPU2D_AQIdent_PRODUCT_MASK)
#define GPU2D_AQIdent_FAMILY_MASK                0xFF000000u
#define GPU2D_AQIdent_FAMILY_SHIFT               24
#define GPU2D_AQIdent_FAMILY(x)                  (((uint32_t)(((uint32_t)(x))<<GPU2D_AQIdent_FAMILY_SHIFT))&GPU2D_AQIdent_FAMILY_MASK)
/* Features Bit Fields */
#define GPU2D_Features_FE20_BIT_INDEX_MASK       0x1u
#define GPU2D_Features_FE20_BIT_INDEX_SHIFT      0
#define GPU2D_Features_RS_YUV_TARGET_MASK        0x2u
#define GPU2D_Features_RS_YUV_TARGET_SHIFT       1
#define GPU2D_Features_BYTE_WRITE_3D_MASK        0x4u
#define GPU2D_Features_BYTE_WRITE_3D_SHIFT       2
#define GPU2D_Features_FE20_MASK                 0x8u
#define GPU2D_Features_FE20_SHIFT                3
#define GPU2D_Features_VGTS_MASK                 0x10u
#define GPU2D_Features_VGTS_SHIFT                4
#define GPU2D_Features_PIPE_VG_MASK              0x20u
#define GPU2D_Features_PIPE_VG_SHIFT             5
#define GPU2D_Features_MEM32_BIT_SUPPORT_MASK    0x40u
#define GPU2D_Features_MEM32_BIT_SUPPORT_SHIFT   6
#define GPU2D_Features_YUY2_RENDER_TARGET_MASK   0x80u
#define GPU2D_Features_YUY2_RENDER_TARGET_SHIFT  7
#define GPU2D_Features_HALF_TX_CACHE_MASK        0x100u
#define GPU2D_Features_HALF_TX_CACHE_SHIFT       8
#define GPU2D_Features_HALF_PE_CACHE_MASK        0x200u
#define GPU2D_Features_HALF_PE_CACHE_SHIFT       9
#define GPU2D_Features_YUY2_AVERAGING_MASK       0x400u
#define GPU2D_Features_YUY2_AVERAGING_SHIFT      10
#define GPU2D_Features_NO_SCALER_MASK            0x800u
#define GPU2D_Features_NO_SCALER_SHIFT           11
#define GPU2D_Features_BYTE_WRITE_2D_MASK        0x1000u
#define GPU2D_Features_BYTE_WRITE_2D_SHIFT       12
#define GPU2D_Features_BUFFER_INTERLEAVING_MASK  0x2000u
#define GPU2D_Features_BUFFER_INTERLEAVING_SHIFT 13
#define GPU2D_Features_NO422_TEXTURE_MASK        0x4000u
#define GPU2D_Features_NO422_TEXTURE_SHIFT       14
#define GPU2D_Features_NO_EZ_MASK                0x8000u
#define GPU2D_Features_NO_EZ_SHIFT               15
#define GPU2D_Features_MIN_AREA_MASK             0x10000u
#define GPU2D_Features_MIN_AREA_SHIFT            16
#define GPU2D_Features_MODULE_CG_MASK            0x20000u
#define GPU2D_Features_MODULE_CG_SHIFT           17
#define GPU2D_Features_YUV420_TILER_MASK         0x40000u
#define GPU2D_Features_YUV420_TILER_SHIFT        18
#define GPU2D_Features_HIGH_DYNAMIC_RANGE_MASK   0x80000u
#define GPU2D_Features_HIGH_DYNAMIC_RANGE_SHIFT  19
#define GPU2D_Features_FAST_SCALER_MASK          0x100000u
#define GPU2D_Features_FAST_SCALER_SHIFT         20
#define GPU2D_Features_ETC1_TEXTURE_COMPRESSION_MASK 0x200000u
#define GPU2D_Features_ETC1_TEXTURE_COMPRESSION_SHIFT 21
#define GPU2D_Features_PIPE_2D_MASK              0x400000u
#define GPU2D_Features_PIPE_2D_SHIFT             22
#define GPU2D_Features_DC_MASK                   0x800000u
#define GPU2D_Features_DC_SHIFT                  23
#define GPU2D_Features_MSAA_MASK                 0x1000000u
#define GPU2D_Features_MSAA_SHIFT                24
#define GPU2D_Features_YUV420_FILTER_MASK        0x2000000u
#define GPU2D_Features_YUV420_FILTER_SHIFT       25
#define GPU2D_Features_ZCOMPRESSION_MASK         0x4000000u
#define GPU2D_Features_ZCOMPRESSION_SHIFT        26
#define GPU2D_Features_DEBUG_MODE_MASK           0x8000000u
#define GPU2D_Features_DEBUG_MODE_SHIFT          27
#define GPU2D_Features_DXT_TEXTURE_COMPRESSION_MASK 0x10000000u
#define GPU2D_Features_DXT_TEXTURE_COMPRESSION_SHIFT 28
#define GPU2D_Features_PIPE_3D_MASK              0x20000000u
#define GPU2D_Features_PIPE_3D_SHIFT             29
#define GPU2D_Features_SPECIAL_ANTI_ALIASING_MASK 0x40000000u
#define GPU2D_Features_SPECIAL_ANTI_ALIASING_SHIFT 30
#define GPU2D_Features_FAST_CLEAR_MASK           0x80000000u
#define GPU2D_Features_FAST_CLEAR_SHIFT          31
/* ChipId Bit Fields */
#define GPU2D_ChipId_ID_MASK                     0xFFFFFFFFu
#define GPU2D_ChipId_ID_SHIFT                    0
#define GPU2D_ChipId_ID(x)                       (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipId_ID_SHIFT))&GPU2D_ChipId_ID_MASK)
/* ChipRev Bit Fields */
#define GPU2D_ChipRev_REV_MASK                   0xFFFFFFFFu
#define GPU2D_ChipRev_REV_SHIFT                  0
#define GPU2D_ChipRev_REV(x)                     (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipRev_REV_SHIFT))&GPU2D_ChipRev_REV_MASK)
/* ChipDate Bit Fields */
#define GPU2D_ChipDate_DATE_MASK                 0xFFFFFFFFu
#define GPU2D_ChipDate_DATE_SHIFT                0
#define GPU2D_ChipDate_DATE(x)                   (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipDate_DATE_SHIFT))&GPU2D_ChipDate_DATE_MASK)
/* ChipTime Bit Fields */
#define GPU2D_ChipTime_TIME_MASK                 0xFFFFFFFFu
#define GPU2D_ChipTime_TIME_SHIFT                0
#define GPU2D_ChipTime_TIME(x)                   (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipTime_TIME_SHIFT))&GPU2D_ChipTime_TIME_MASK)
/* ChipCustomer Bit Fields */
#define GPU2D_ChipCustomer_GROUP_MASK            0xFFFFu
#define GPU2D_ChipCustomer_GROUP_SHIFT           0
#define GPU2D_ChipCustomer_GROUP(x)              (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipCustomer_GROUP_SHIFT))&GPU2D_ChipCustomer_GROUP_MASK)
#define GPU2D_ChipCustomer_COMPANY_MASK          0xFFFF0000u
#define GPU2D_ChipCustomer_COMPANY_SHIFT         16
#define GPU2D_ChipCustomer_COMPANY(x)            (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipCustomer_COMPANY_SHIFT))&GPU2D_ChipCustomer_COMPANY_MASK)
/* MinorFeatures0 Bit Fields */
#define GPU2D_MinorFeatures0_FLIP_Y_MASK         0x1u
#define GPU2D_MinorFeatures0_FLIP_Y_SHIFT        0
#define GPU2D_MinorFeatures0_DUAL_RETURN_BUS_MASK 0x2u
#define GPU2D_MinorFeatures0_DUAL_RETURN_BUS_SHIFT 1
#define GPU2D_MinorFeatures0_ENDIANNESS_CONFIG_MASK 0x4u
#define GPU2D_MinorFeatures0_ENDIANNESS_CONFIG_SHIFT 2
#define GPU2D_MinorFeatures0_TEXTURE8_K_MASK     0x8u
#define GPU2D_MinorFeatures0_TEXTURE8_K_SHIFT    3
#define GPU2D_MinorFeatures0_CORRECT_TEXTURE_CONVERTER_MASK 0x10u
#define GPU2D_MinorFeatures0_CORRECT_TEXTURE_CONVERTER_SHIFT 4
#define GPU2D_MinorFeatures0_SPECIAL_MSAA_LOD_MASK 0x20u
#define GPU2D_MinorFeatures0_SPECIAL_MSAA_LOD_SHIFT 5
#define GPU2D_MinorFeatures0_FAST_CLEAR_FLUSH_MASK 0x40u
#define GPU2D_MinorFeatures0_FAST_CLEAR_FLUSH_SHIFT 6
#define GPU2D_MinorFeatures0_2DPE20_MASK         0x80u
#define GPU2D_MinorFeatures0_2DPE20_SHIFT        7
#define GPU2D_MinorFeatures0_CORRECT_AUTO_DISABLE_MASK 0x100u
#define GPU2D_MinorFeatures0_CORRECT_AUTO_DISABLE_SHIFT 8
#define GPU2D_MinorFeatures0_RENDER_8K_MASK      0x200u
#define GPU2D_MinorFeatures0_RENDER_8K_SHIFT     9
#define GPU2D_MinorFeatures0_TILE_STATUS_2BITS_MASK 0x400u
#define GPU2D_MinorFeatures0_TILE_STATUS_2BITS_SHIFT 10
#define GPU2D_MinorFeatures0_SEPARATE_TILE_STATUS_WHEN_INTERLEAVED_MASK 0x800u
#define GPU2D_MinorFeatures0_SEPARATE_TILE_STATUS_WHEN_INTERLEAVED_SHIFT 11
#define GPU2D_MinorFeatures0_SUPER_TILED_32X32_MASK 0x1000u
#define GPU2D_MinorFeatures0_SUPER_TILED_32X32_SHIFT 12
#define GPU2D_MinorFeatures0_VG_20_MASK          0x2000u
#define GPU2D_MinorFeatures0_VG_20_SHIFT         13
#define GPU2D_MinorFeatures0_TS_EXTENDED_COMMANDS_MASK 0x4000u
#define GPU2D_MinorFeatures0_TS_EXTENDED_COMMANDS_SHIFT 14
#define GPU2D_MinorFeatures0_COMPRESSION_FIFO_FIXED_MASK 0x8000u
#define GPU2D_MinorFeatures0_COMPRESSION_FIFO_FIXED_SHIFT 15
#define GPU2D_MinorFeatures0_EXTRA_SHADER_INSTRUCTIONS0_MASK 0x10000u
#define GPU2D_MinorFeatures0_EXTRA_SHADER_INSTRUCTIONS0_SHIFT 16
#define GPU2D_MinorFeatures0_VG_FILTER_MASK      0x20000u
#define GPU2D_MinorFeatures0_VG_FILTER_SHIFT     17
#define GPU2D_MinorFeatures0_VG_21_MASK          0x40000u
#define GPU2D_MinorFeatures0_VG_21_SHIFT         18
#define GPU2D_MinorFeatures0_SHADER_GETS_W_MASK  0x80000u
#define GPU2D_MinorFeatures0_SHADER_GETS_W_SHIFT 19
#define GPU2D_MinorFeatures0_EXTRA_SHADER_INSTRUCTIONS1_MASK 0x100000u
#define GPU2D_MinorFeatures0_EXTRA_SHADER_INSTRUCTIONS1_SHIFT 20
#define GPU2D_MinorFeatures0_DEFAULT_REG0_MASK   0x200000u
#define GPU2D_MinorFeatures0_DEFAULT_REG0_SHIFT  21
#define GPU2D_MinorFeatures0_MC_20_MASK          0x400000u
#define GPU2D_MinorFeatures0_MC_20_SHIFT         22
#define GPU2D_MinorFeatures0_SHADER_MSAA_SIDEBAND_MASK 0x800000u
#define GPU2D_MinorFeatures0_SHADER_MSAA_SIDEBAND_SHIFT 23
#define GPU2D_MinorFeatures0_BUG_FIXES0_MASK     0x1000000u
#define GPU2D_MinorFeatures0_BUG_FIXES0_SHIFT    24
#define GPU2D_MinorFeatures0_VAA_MASK            0x2000000u
#define GPU2D_MinorFeatures0_VAA_SHIFT           25
#define GPU2D_MinorFeatures0_BYPASS_IN_MSAA_MASK 0x4000000u
#define GPU2D_MinorFeatures0_BYPASS_IN_MSAA_SHIFT 26
#define GPU2D_MinorFeatures0_HIERARCHICAL_Z_MASK 0x8000000u
#define GPU2D_MinorFeatures0_HIERARCHICAL_Z_SHIFT 27
#define GPU2D_MinorFeatures0_NEW_TEXTURE_MASK    0x10000000u
#define GPU2D_MinorFeatures0_NEW_TEXTURE_SHIFT   28
#define GPU2D_MinorFeatures0_A8_TARGET_SUPPORT_MASK 0x20000000u
#define GPU2D_MinorFeatures0_A8_TARGET_SUPPORT_SHIFT 29
#define GPU2D_MinorFeatures0_CORRECT_STENCIL_MASK 0x40000000u
#define GPU2D_MinorFeatures0_CORRECT_STENCIL_SHIFT 30
#define GPU2D_MinorFeatures0_ENHANCE_VR_MASK     0x80000000u
#define GPU2D_MinorFeatures0_ENHANCE_VR_SHIFT    31
/* CacheControl Bit Fields */
#define GPU2D_CacheControl_NOT_USED_MASK         0xFFFFFFFFu
#define GPU2D_CacheControl_NOT_USED_SHIFT        0
#define GPU2D_CacheControl_NOT_USED(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_CacheControl_NOT_USED_SHIFT))&GPU2D_CacheControl_NOT_USED_MASK)
/* ResetMemCounters Bit Fields */
#define GPU2D_ResetMemCounters_RESET_MASK        0xFFFFFFFFu
#define GPU2D_ResetMemCounters_RESET_SHIFT       0
#define GPU2D_ResetMemCounters_RESET(x)          (((uint32_t)(((uint32_t)(x))<<GPU2D_ResetMemCounters_RESET_SHIFT))&GPU2D_ResetMemCounters_RESET_MASK)
/* TotalReads Bit Fields */
#define GPU2D_TotalReads_COUNT_MASK              0xFFFFFFFFu
#define GPU2D_TotalReads_COUNT_SHIFT             0
#define GPU2D_TotalReads_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalReads_COUNT_SHIFT))&GPU2D_TotalReads_COUNT_MASK)
/* TotalWrites Bit Fields */
#define GPU2D_TotalWrites_COUNT_MASK             0xFFFFFFFFu
#define GPU2D_TotalWrites_COUNT_SHIFT            0
#define GPU2D_TotalWrites_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalWrites_COUNT_SHIFT))&GPU2D_TotalWrites_COUNT_MASK)
/* ChipSpecs Bit Fields */
#define GPU2D_ChipSpecs_VERTEX_OUTPUT_BUFFER_SIZE_MASK 0xFu
#define GPU2D_ChipSpecs_VERTEX_OUTPUT_BUFFER_SIZE_SHIFT 0
#define GPU2D_ChipSpecs_VERTEX_OUTPUT_BUFFER_SIZE(x) (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_VERTEX_OUTPUT_BUFFER_SIZE_SHIFT))&GPU2D_ChipSpecs_VERTEX_OUTPUT_BUFFER_SIZE_MASK)
#define GPU2D_ChipSpecs_NUM_PIXEL_PIPES_MASK     0x70u
#define GPU2D_ChipSpecs_NUM_PIXEL_PIPES_SHIFT    4
#define GPU2D_ChipSpecs_NUM_PIXEL_PIPES(x)       (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_NUM_PIXEL_PIPES_SHIFT))&GPU2D_ChipSpecs_NUM_PIXEL_PIPES_MASK)
#define GPU2D_ChipSpecs_NUM_SHADER_CORES_MASK    0xF80u
#define GPU2D_ChipSpecs_NUM_SHADER_CORES_SHIFT   7
#define GPU2D_ChipSpecs_NUM_SHADER_CORES(x)      (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_NUM_SHADER_CORES_SHIFT))&GPU2D_ChipSpecs_NUM_SHADER_CORES_MASK)
#define GPU2D_ChipSpecs_VERTEX_CACHE_SIZE_MASK   0xF8000u
#define GPU2D_ChipSpecs_VERTEX_CACHE_SIZE_SHIFT  15
#define GPU2D_ChipSpecs_VERTEX_CACHE_SIZE(x)     (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_VERTEX_CACHE_SIZE_SHIFT))&GPU2D_ChipSpecs_VERTEX_CACHE_SIZE_MASK)
#define GPU2D_ChipSpecs_THREAD_COUNT_MASK        0xF00000u
#define GPU2D_ChipSpecs_THREAD_COUNT_SHIFT       20
#define GPU2D_ChipSpecs_THREAD_COUNT(x)          (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_THREAD_COUNT_SHIFT))&GPU2D_ChipSpecs_THREAD_COUNT_MASK)
#define GPU2D_ChipSpecs_TEMP_REGISTERS_MASK      0xF000000u
#define GPU2D_ChipSpecs_TEMP_REGISTERS_SHIFT     24
#define GPU2D_ChipSpecs_TEMP_REGISTERS(x)        (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_TEMP_REGISTERS_SHIFT))&GPU2D_ChipSpecs_TEMP_REGISTERS_MASK)
#define GPU2D_ChipSpecs_STREAMS_MASK             0xF0000000u
#define GPU2D_ChipSpecs_STREAMS_SHIFT            28
#define GPU2D_ChipSpecs_STREAMS(x)               (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs_STREAMS_SHIFT))&GPU2D_ChipSpecs_STREAMS_MASK)
/* TotalWriteBursts Bit Fields */
#define GPU2D_TotalWriteBursts_COUNT_MASK        0xFFFFFFFFu
#define GPU2D_TotalWriteBursts_COUNT_SHIFT       0
#define GPU2D_TotalWriteBursts_COUNT(x)          (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalWriteBursts_COUNT_SHIFT))&GPU2D_TotalWriteBursts_COUNT_MASK)
/* TotalWriteReqs Bit Fields */
#define GPU2D_TotalWriteReqs_COUNT_MASK          0xFFFFFFFFu
#define GPU2D_TotalWriteReqs_COUNT_SHIFT         0
#define GPU2D_TotalWriteReqs_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalWriteReqs_COUNT_SHIFT))&GPU2D_TotalWriteReqs_COUNT_MASK)
/* TotalWriteLasts Bit Fields */
#define GPU2D_TotalWriteLasts_COUNT_MASK         0xFFFFFFFFu
#define GPU2D_TotalWriteLasts_COUNT_SHIFT        0
#define GPU2D_TotalWriteLasts_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalWriteLasts_COUNT_SHIFT))&GPU2D_TotalWriteLasts_COUNT_MASK)
/* TotalReadBursts Bit Fields */
#define GPU2D_TotalReadBursts_COUNT_MASK         0xFFFFFFFFu
#define GPU2D_TotalReadBursts_COUNT_SHIFT        0
#define GPU2D_TotalReadBursts_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalReadBursts_COUNT_SHIFT))&GPU2D_TotalReadBursts_COUNT_MASK)
/* TotalReadReqs Bit Fields */
#define GPU2D_TotalReadReqs_COUNT_MASK           0xFFFFFFFFu
#define GPU2D_TotalReadReqs_COUNT_SHIFT          0
#define GPU2D_TotalReadReqs_COUNT(x)             (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalReadReqs_COUNT_SHIFT))&GPU2D_TotalReadReqs_COUNT_MASK)
/* TotalReadLasts Bit Fields */
#define GPU2D_TotalReadLasts_COUNT_MASK          0xFFFFFFFFu
#define GPU2D_TotalReadLasts_COUNT_SHIFT         0
#define GPU2D_TotalReadLasts_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalReadLasts_COUNT_SHIFT))&GPU2D_TotalReadLasts_COUNT_MASK)
/* GpOut0 Bit Fields */
#define GPU2D_GpOut0_COUNT_MASK                  0xFFFFFFFFu
#define GPU2D_GpOut0_COUNT_SHIFT                 0
#define GPU2D_GpOut0_COUNT(x)                    (((uint32_t)(((uint32_t)(x))<<GPU2D_GpOut0_COUNT_SHIFT))&GPU2D_GpOut0_COUNT_MASK)
/* GpOut1 Bit Fields */
#define GPU2D_GpOut1_COUNT_MASK                  0xFFFFFFFFu
#define GPU2D_GpOut1_COUNT_SHIFT                 0
#define GPU2D_GpOut1_COUNT(x)                    (((uint32_t)(((uint32_t)(x))<<GPU2D_GpOut1_COUNT_SHIFT))&GPU2D_GpOut1_COUNT_MASK)
/* GpOut2 Bit Fields */
#define GPU2D_GpOut2_COUNT_MASK                  0xFFFFFFFFu
#define GPU2D_GpOut2_COUNT_SHIFT                 0
#define GPU2D_GpOut2_COUNT(x)                    (((uint32_t)(((uint32_t)(x))<<GPU2D_GpOut2_COUNT_SHIFT))&GPU2D_GpOut2_COUNT_MASK)
/* AxiControl Bit Fields */
#define GPU2D_AxiControl_WR_FULL_BURST_MODE_MASK 0xFFFFFFFFu
#define GPU2D_AxiControl_WR_FULL_BURST_MODE_SHIFT 0
#define GPU2D_AxiControl_WR_FULL_BURST_MODE(x)   (((uint32_t)(((uint32_t)(x))<<GPU2D_AxiControl_WR_FULL_BURST_MODE_SHIFT))&GPU2D_AxiControl_WR_FULL_BURST_MODE_MASK)
/* MinorFeatures1 Bit Fields */
#define GPU2D_MinorFeatures1_TEXTURE_STRIDE_MASK 0x4000000u
#define GPU2D_MinorFeatures1_TEXTURE_STRIDE_SHIFT 26
#define GPU2D_MinorFeatures1_BUG_FIXES2_MASK     0x8000000u
#define GPU2D_MinorFeatures1_BUG_FIXES2_SHIFT    27
#define GPU2D_MinorFeatures1_BUG_FIXES1_MASK     0x10000000u
#define GPU2D_MinorFeatures1_BUG_FIXES1_SHIFT    28
#define GPU2D_MinorFeatures1_VG_DOUBLE_BUFFER_MASK 0x20000000u
#define GPU2D_MinorFeatures1_VG_DOUBLE_BUFFER_SHIFT 29
#define GPU2D_MinorFeatures1_V2_COMPRESSION_MASK 0x40000000u
#define GPU2D_MinorFeatures1_V2_COMPRESSION_SHIFT 30
#define GPU2D_MinorFeatures1_RSUV_SWIZZLE_MASK   0x80000000u
#define GPU2D_MinorFeatures1_RSUV_SWIZZLE_SHIFT  31
/* TotalCycles Bit Fields */
#define GPU2D_TotalCycles_CYCLES_MASK            0xFFFFFFFFu
#define GPU2D_TotalCycles_CYCLES_SHIFT           0
#define GPU2D_TotalCycles_CYCLES(x)              (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalCycles_CYCLES_SHIFT))&GPU2D_TotalCycles_CYCLES_MASK)
/* TotalIdleCyles Bit Fields */
#define GPU2D_TotalIdleCyles_CYCLES_MASK         0xFFFFFFFFu
#define GPU2D_TotalIdleCyles_CYCLES_SHIFT        0
#define GPU2D_TotalIdleCyles_CYCLES(x)           (((uint32_t)(((uint32_t)(x))<<GPU2D_TotalIdleCyles_CYCLES_SHIFT))&GPU2D_TotalIdleCyles_CYCLES_MASK)
/* ChipSpecs2 Bit Fields */
#define GPU2D_ChipSpecs2_CYCLES_MASK             0xFFFFFFFFu
#define GPU2D_ChipSpecs2_CYCLES_SHIFT            0
#define GPU2D_ChipSpecs2_CYCLES(x)               (((uint32_t)(((uint32_t)(x))<<GPU2D_ChipSpecs2_CYCLES_SHIFT))&GPU2D_ChipSpecs2_CYCLES_MASK)
/* ModulePowerControls Bit Fields */
#define GPU2D_ModulePowerControls_TURN_OFF_COUNTER_MASK 0xFFFFu
#define GPU2D_ModulePowerControls_TURN_OFF_COUNTER_SHIFT 0
#define GPU2D_ModulePowerControls_TURN_OFF_COUNTER(x) (((uint32_t)(((uint32_t)(x))<<GPU2D_ModulePowerControls_TURN_OFF_COUNTER_SHIFT))&GPU2D_ModulePowerControls_TURN_OFF_COUNTER_MASK)
#define GPU2D_ModulePowerControls_TURN_ON_COUNTER_MASK 0xF000000u
#define GPU2D_ModulePowerControls_TURN_ON_COUNTER_SHIFT 24
#define GPU2D_ModulePowerControls_TURN_ON_COUNTER(x) (((uint32_t)(((uint32_t)(x))<<GPU2D_ModulePowerControls_TURN_ON_COUNTER_SHIFT))&GPU2D_ModulePowerControls_TURN_ON_COUNTER_MASK)
#define GPU2D_ModulePowerControls_DISABLE_STARVE_MODULE_CLOCK_GATING_MASK 0x20000000u
#define GPU2D_ModulePowerControls_DISABLE_STARVE_MODULE_CLOCK_GATING_SHIFT 29
#define GPU2D_ModulePowerControls_DISABLE_STALL_MODULE_CLOCK_GATING_MASK 0x40000000u
#define GPU2D_ModulePowerControls_DISABLE_STALL_MODULE_CLOCK_GATING_SHIFT 30
#define GPU2D_ModulePowerControls_ENABLE_MODULE_CLOCK_GATING_MASK 0x80000000u
#define GPU2D_ModulePowerControls_ENABLE_MODULE_CLOCK_GATING_SHIFT 31
/* ModulePowerModuleControl Bit Fields */
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_TS_MASK 0x100000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_TS_SHIFT 20
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_FP_MASK 0x200000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_FP_SHIFT 21
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_IM_MASK 0x400000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_IM_SHIFT 22
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_VG_MASK 0x800000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_VG_SHIFT 23
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_TX_MASK 0x1000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_TX_SHIFT 24
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_RA_MASK 0x2000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_RA_SHIFT 25
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_SE_MASK 0x4000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_SE_SHIFT 26
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_PA_MASK 0x8000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_PA_SHIFT 27
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_SH_MASK 0x10000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_SH_SHIFT 28
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_PE_MASK 0x20000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_PE_SHIFT 29
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_DE_MASK 0x40000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_DE_SHIFT 30
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_FE_MASK 0x80000000u
#define GPU2D_ModulePowerModuleControl_DISABLE_MODULE_CLOCK_GATING_FE_SHIFT 31
/* ModulePowerModuleStatus Bit Fields */
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_TS_MASK 0x100000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_TS_SHIFT 20
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_FP_MASK 0x200000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_FP_SHIFT 21
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_IM_MASK 0x400000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_IM_SHIFT 22
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_VG_MASK 0x800000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_VG_SHIFT 23
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_TX_MASK 0x1000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_TX_SHIFT 24
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_RA_MASK 0x2000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_RA_SHIFT 25
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_SE_MASK 0x4000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_SE_SHIFT 26
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_PA_MASK 0x8000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_PA_SHIFT 27
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_SH_MASK 0x10000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_SH_SHIFT 28
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_PE_MASK 0x20000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_PE_SHIFT 29
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_DE_MASK 0x40000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_DE_SHIFT 30
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_FE_MASK 0x80000000u
#define GPU2D_ModulePowerModuleStatus_MODULE_CLOCK_GATED_FE_SHIFT 31

/**
 * @}
 */ /* end of group GPU2D_Register_Masks */


/* GPU2D - Peripheral instance base addresses */
/** Peripheral GPU2D base pointer */
#define GPU2D_BASE_PTR                           ((GPU2D_MemMapPtr)0x400CF000u)
/** Array initializer of GPU2D peripheral base pointers */
#define GPU2D_BASE_PTRS                          { GPU2D_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- GPU2D - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GPU2D_Register_Accessor_Macros GPU2D - Register accessor macros
 * @{
 */


/* GPU2D - Register instance definitions */
/* GPU2D */
#define GPU2D_AQHiClockControl                   GPU2D_AQHiClockControl_REG(GPU2D_BASE_PTR)
#define GPU2D_AQHiIdle                           GPU2D_AQHiIdle_REG(GPU2D_BASE_PTR)
#define GPU2D_AQAxiConfig                        GPU2D_AQAxiConfig_REG(GPU2D_BASE_PTR)
#define GPU2D_AQAxiStatus                        GPU2D_AQAxiStatus_REG(GPU2D_BASE_PTR)
#define GPU2D_AQIntrAcknowledge                  GPU2D_AQIntrAcknowledge_REG(GPU2D_BASE_PTR)
#define GPU2D_AQIntrEnbl                         GPU2D_AQIntrEnbl_REG(GPU2D_BASE_PTR)
#define GPU2D_AQIdent                            GPU2D_AQIdent_REG(GPU2D_BASE_PTR)
#define GPU2D_Features                           GPU2D_Features_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipId                             GPU2D_ChipId_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipRev                            GPU2D_ChipRev_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipDate                           GPU2D_ChipDate_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipTime                           GPU2D_ChipTime_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipCustomer                       GPU2D_ChipCustomer_REG(GPU2D_BASE_PTR)
#define GPU2D_MinorFeatures0                     GPU2D_MinorFeatures0_REG(GPU2D_BASE_PTR)
#define GPU2D_CacheControl                       GPU2D_CacheControl_REG(GPU2D_BASE_PTR)
#define GPU2D_ResetMemCounters                   GPU2D_ResetMemCounters_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalReads                         GPU2D_TotalReads_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalWrites                        GPU2D_TotalWrites_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipSpecs                          GPU2D_ChipSpecs_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalWriteBursts                   GPU2D_TotalWriteBursts_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalWriteReqs                     GPU2D_TotalWriteReqs_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalWriteLasts                    GPU2D_TotalWriteLasts_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalReadBursts                    GPU2D_TotalReadBursts_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalReadReqs                      GPU2D_TotalReadReqs_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalReadLasts                     GPU2D_TotalReadLasts_REG(GPU2D_BASE_PTR)
#define GPU2D_GpOut0                             GPU2D_GpOut0_REG(GPU2D_BASE_PTR)
#define GPU2D_GpOut1                             GPU2D_GpOut1_REG(GPU2D_BASE_PTR)
#define GPU2D_GpOut2                             GPU2D_GpOut2_REG(GPU2D_BASE_PTR)
#define GPU2D_AxiControl                         GPU2D_AxiControl_REG(GPU2D_BASE_PTR)
#define GPU2D_MinorFeatures1                     GPU2D_MinorFeatures1_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalCycles                        GPU2D_TotalCycles_REG(GPU2D_BASE_PTR)
#define GPU2D_TotalIdleCyles                     GPU2D_TotalIdleCyles_REG(GPU2D_BASE_PTR)
#define GPU2D_ChipSpecs2                         GPU2D_ChipSpecs2_REG(GPU2D_BASE_PTR)
#define GPU2D_ModulePowerControls                GPU2D_ModulePowerControls_REG(GPU2D_BASE_PTR)
#define GPU2D_ModulePowerModuleControl           GPU2D_ModulePowerModuleControl_REG(GPU2D_BASE_PTR)
#define GPU2D_ModulePowerModuleStatus            GPU2D_ModulePowerModuleStatus_REG(GPU2D_BASE_PTR)

/**
 * @}
 */ /* end of group GPU2D_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group GPU2D_Peripheral */


/* ----------------------------------------------------------------------------
   -- GTIM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GTIM_Peripheral GTIM
 * @{
 */

/** GTIM - Peripheral register structure */
typedef struct GTIM_MemMap {
  uint8_t RESERVED_0[512];
  uint32_t CNT0;                                   /**< Global Timer Counter Registers Low (0x0), offset: 0x200 */
  uint32_t CNT1;                                   /**< Global Timer Counter Registers High (0x04), offset: 0x204 */
  uint32_t CTRL;                                   /**< Global Timer Control Register, offset: 0x208 */
  uint32_t ISTAT;                                  /**< Global Timer Interrupt Status Register, offset: 0x20C */
  uint32_t CMP0;                                   /**< Global Timer Comparator Value Registers Low (0x10), offset: 0x210 */
  uint32_t CMP1;                                   /**< Global Timer Comparator Value Registers High (0x14), offset: 0x214 */
  uint32_t INCR;                                   /**< Global Timer Auto-increment Register, offset: 0x218 */
} volatile *GTIM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- GTIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GTIM_Register_Accessor_Macros GTIM - Register accessor macros
 * @{
 */


/* GTIM - Register accessors */
#define GTIM_CNT0_REG(base)                      ((base)->CNT0)
#define GTIM_CNT1_REG(base)                      ((base)->CNT1)
#define GTIM_CTRL_REG(base)                      ((base)->CTRL)
#define GTIM_ISTAT_REG(base)                     ((base)->ISTAT)
#define GTIM_CMP0_REG(base)                      ((base)->CMP0)
#define GTIM_CMP1_REG(base)                      ((base)->CMP1)
#define GTIM_INCR_REG(base)                      ((base)->INCR)

/**
 * @}
 */ /* end of group GTIM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- GTIM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GTIM_Register_Masks GTIM Register Masks
 * @{
 */

/* CNT0 Bit Fields */
#define GTIM_CNT0_CNT_MASK                       0xFFFFFFFFu
#define GTIM_CNT0_CNT_SHIFT                      0
#define GTIM_CNT0_CNT(x)                         (((uint32_t)(((uint32_t)(x))<<GTIM_CNT0_CNT_SHIFT))&GTIM_CNT0_CNT_MASK)
/* CNT1 Bit Fields */
#define GTIM_CNT1_CNT_MASK                       0xFFFFFFFFu
#define GTIM_CNT1_CNT_SHIFT                      0
#define GTIM_CNT1_CNT(x)                         (((uint32_t)(((uint32_t)(x))<<GTIM_CNT1_CNT_SHIFT))&GTIM_CNT1_CNT_MASK)
/* CTRL Bit Fields */
#define GTIM_CTRL_ENA_MASK                       0x1u
#define GTIM_CTRL_ENA_SHIFT                      0
#define GTIM_CTRL_COMP_MASK                      0x2u
#define GTIM_CTRL_COMP_SHIFT                     1
#define GTIM_CTRL_INT_MASK                       0x4u
#define GTIM_CTRL_INT_SHIFT                      2
#define GTIM_CTRL_INCR_MASK                      0x8u
#define GTIM_CTRL_INCR_SHIFT                     3
#define GTIM_CTRL_PRESC_MASK                     0xFF00u
#define GTIM_CTRL_PRESC_SHIFT                    8
#define GTIM_CTRL_PRESC(x)                       (((uint32_t)(((uint32_t)(x))<<GTIM_CTRL_PRESC_SHIFT))&GTIM_CTRL_PRESC_MASK)
/* CMP0 Bit Fields */
#define GTIM_CMP0_CMP_MASK                       0xFFFFFFFFu
#define GTIM_CMP0_CMP_SHIFT                      0
#define GTIM_CMP0_CMP(x)                         (((uint32_t)(((uint32_t)(x))<<GTIM_CMP0_CMP_SHIFT))&GTIM_CMP0_CMP_MASK)
/* CMP1 Bit Fields */
#define GTIM_CMP1_CMP_MASK                       0xFFFFFFFFu
#define GTIM_CMP1_CMP_SHIFT                      0
#define GTIM_CMP1_CMP(x)                         (((uint32_t)(((uint32_t)(x))<<GTIM_CMP1_CMP_SHIFT))&GTIM_CMP1_CMP_MASK)
/* INCR Bit Fields */
#define GTIM_INCR_INCR_MASK                      0xFFFFFFFFu
#define GTIM_INCR_INCR_SHIFT                     0
#define GTIM_INCR_INCR(x)                        (((uint32_t)(((uint32_t)(x))<<GTIM_INCR_INCR_SHIFT))&GTIM_INCR_INCR_MASK)

/**
 * @}
 */ /* end of group GTIM_Register_Masks */


/* GTIM - Peripheral instance base addresses */
/** Peripheral GTIM base pointer */
#define GTIM_BASE_PTR                            ((GTIM_MemMapPtr)0x40002000u)
/** Array initializer of GTIM peripheral base pointers */
#define GTIM_BASE_PTRS                           { GTIM_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- GTIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup GTIM_Register_Accessor_Macros GTIM - Register accessor macros
 * @{
 */


/* GTIM - Register instance definitions */
/* GTIM */
#define GTIM_CNT0                                GTIM_CNT0_REG(GTIM_BASE_PTR)
#define GTIM_CNT1                                GTIM_CNT1_REG(GTIM_BASE_PTR)
#define GTIM_CTRL                                GTIM_CTRL_REG(GTIM_BASE_PTR)
#define GTIM_ISTAT                               GTIM_ISTAT_REG(GTIM_BASE_PTR)
#define GTIM_CMP0                                GTIM_CMP0_REG(GTIM_BASE_PTR)
#define GTIM_CMP1                                GTIM_CMP1_REG(GTIM_BASE_PTR)
#define GTIM_INCR                                GTIM_INCR_REG(GTIM_BASE_PTR)

/**
 * @}
 */ /* end of group GTIM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group GTIM_Peripheral */


/* ----------------------------------------------------------------------------
   -- I2C
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2C_Peripheral I2C
 * @{
 */

/** I2C - Peripheral register structure */
typedef struct I2C_MemMap {
  uint8_t IBAD;                                    /**< I2C Bus Address Register, offset: 0x0 */
  uint8_t IBFD;                                    /**< I2C Bus Frequency Divider Register, offset: 0x1 */
  uint8_t IBCR;                                    /**< I2C Bus Control Register, offset: 0x2 */
  uint8_t IBSR;                                    /**< I2C Bus Status Register, offset: 0x3 */
  uint8_t IBDR;                                    /**< I2C Bus Data I/O Register, offset: 0x4 */
  uint8_t IBIC;                                    /**< I2C Bus Interrupt Config Register, offset: 0x5 */
  uint8_t IBDBG;                                   /**< I2C Bus Debug Register, offset: 0x6 */
} volatile *I2C_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- I2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2C_Register_Accessor_Macros I2C - Register accessor macros
 * @{
 */


/* I2C - Register accessors */
#define I2C_IBAD_REG(base)                       ((base)->IBAD)
#define I2C_IBFD_REG(base)                       ((base)->IBFD)
#define I2C_IBCR_REG(base)                       ((base)->IBCR)
#define I2C_IBSR_REG(base)                       ((base)->IBSR)
#define I2C_IBDR_REG(base)                       ((base)->IBDR)
#define I2C_IBIC_REG(base)                       ((base)->IBIC)
#define I2C_IBDBG_REG(base)                      ((base)->IBDBG)

/**
 * @}
 */ /* end of group I2C_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- I2C Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2C_Register_Masks I2C Register Masks
 * @{
 */

/* IBAD Bit Fields */
#define I2C_IBAD_ADR_MASK                        0xFEu
#define I2C_IBAD_ADR_SHIFT                       1
#define I2C_IBAD_ADR(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBAD_ADR_SHIFT))&I2C_IBAD_ADR_MASK)
/* IBFD Bit Fields */
#define I2C_IBFD_IBC_MASK                        0xFFu
#define I2C_IBFD_IBC_SHIFT                       0
#define I2C_IBFD_IBC(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBFD_IBC_SHIFT))&I2C_IBFD_IBC_MASK)
/* IBCR Bit Fields */
#define I2C_IBCR_DMAEN_MASK                      0x2u
#define I2C_IBCR_DMAEN_SHIFT                     1
#define I2C_IBCR_RSTA_MASK                       0x4u
#define I2C_IBCR_RSTA_SHIFT                      2
#define I2C_IBCR_NOACK_MASK                      0x8u
#define I2C_IBCR_NOACK_SHIFT                     3
#define I2C_IBCR_TXRX_MASK                       0x10u
#define I2C_IBCR_TXRX_SHIFT                      4
#define I2C_IBCR_MSSL_MASK                       0x20u
#define I2C_IBCR_MSSL_SHIFT                      5
#define I2C_IBCR_IBIE_MASK                       0x40u
#define I2C_IBCR_IBIE_SHIFT                      6
#define I2C_IBCR_MDIS_MASK                       0x80u
#define I2C_IBCR_MDIS_SHIFT                      7
/* IBSR Bit Fields */
#define I2C_IBSR_RXAK_MASK                       0x1u
#define I2C_IBSR_RXAK_SHIFT                      0
#define I2C_IBSR_IBIF_MASK                       0x2u
#define I2C_IBSR_IBIF_SHIFT                      1
#define I2C_IBSR_SRW_MASK                        0x4u
#define I2C_IBSR_SRW_SHIFT                       2
#define I2C_IBSR_IBAL_MASK                       0x10u
#define I2C_IBSR_IBAL_SHIFT                      4
#define I2C_IBSR_IBB_MASK                        0x20u
#define I2C_IBSR_IBB_SHIFT                       5
#define I2C_IBSR_IAAS_MASK                       0x40u
#define I2C_IBSR_IAAS_SHIFT                      6
#define I2C_IBSR_TCF_MASK                        0x80u
#define I2C_IBSR_TCF_SHIFT                       7
/* IBDR Bit Fields */
#define I2C_IBDR_DATA_MASK                       0xFFu
#define I2C_IBDR_DATA_SHIFT                      0
#define I2C_IBDR_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBDR_DATA_SHIFT))&I2C_IBDR_DATA_MASK)
/* IBIC Bit Fields */
#define I2C_IBIC_BIIE_MASK                       0x80u
#define I2C_IBIC_BIIE_SHIFT                      7
/* IBDBG Bit Fields */
#define I2C_IBDBG_IPG_DEBUG_EN_MASK              0x1u
#define I2C_IBDBG_IPG_DEBUG_EN_SHIFT             0
#define I2C_IBDBG_IPG_DEBUG_HALTED_MASK          0x2u
#define I2C_IBDBG_IPG_DEBUG_HALTED_SHIFT         1

/**
 * @}
 */ /* end of group I2C_Register_Masks */


/* I2C - Peripheral instance base addresses */
/** Peripheral I2C0 base pointer */
#define I2C0_BASE_PTR                            ((I2C_MemMapPtr)0x40066000u)
/** Peripheral I2C1 base pointer */
#define I2C1_BASE_PTR                            ((I2C_MemMapPtr)0x40067000u)
/** Peripheral I2C2 base pointer */
#define I2C2_BASE_PTR                            ((I2C_MemMapPtr)0x400E6000u)
/** Peripheral I2C3 base pointer */
#define I2C3_BASE_PTR                            ((I2C_MemMapPtr)0x400E7000u)
/** Array initializer of I2C peripheral base pointers */
#define I2C_BASE_PTRS                            { I2C0_BASE_PTR, I2C1_BASE_PTR, I2C2_BASE_PTR, I2C3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- I2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2C_Register_Accessor_Macros I2C - Register accessor macros
 * @{
 */


/* I2C - Register instance definitions */
/* I2C0 */
#define I2C0_IBAD                                I2C_IBAD_REG(I2C0_BASE_PTR)
#define I2C0_IBFD                                I2C_IBFD_REG(I2C0_BASE_PTR)
#define I2C0_IBCR                                I2C_IBCR_REG(I2C0_BASE_PTR)
#define I2C0_IBSR                                I2C_IBSR_REG(I2C0_BASE_PTR)
#define I2C0_IBDR                                I2C_IBDR_REG(I2C0_BASE_PTR)
#define I2C0_IBIC                                I2C_IBIC_REG(I2C0_BASE_PTR)
#define I2C0_IBDBG                               I2C_IBDBG_REG(I2C0_BASE_PTR)
/* I2C1 */
#define I2C1_IBAD                                I2C_IBAD_REG(I2C1_BASE_PTR)
#define I2C1_IBFD                                I2C_IBFD_REG(I2C1_BASE_PTR)
#define I2C1_IBCR                                I2C_IBCR_REG(I2C1_BASE_PTR)
#define I2C1_IBSR                                I2C_IBSR_REG(I2C1_BASE_PTR)
#define I2C1_IBDR                                I2C_IBDR_REG(I2C1_BASE_PTR)
#define I2C1_IBIC                                I2C_IBIC_REG(I2C1_BASE_PTR)
#define I2C1_IBDBG                               I2C_IBDBG_REG(I2C1_BASE_PTR)
/* I2C2 */
#define I2C2_IBAD                                I2C_IBAD_REG(I2C2_BASE_PTR)
#define I2C2_IBFD                                I2C_IBFD_REG(I2C2_BASE_PTR)
#define I2C2_IBCR                                I2C_IBCR_REG(I2C2_BASE_PTR)
#define I2C2_IBSR                                I2C_IBSR_REG(I2C2_BASE_PTR)
#define I2C2_IBDR                                I2C_IBDR_REG(I2C2_BASE_PTR)
#define I2C2_IBIC                                I2C_IBIC_REG(I2C2_BASE_PTR)
#define I2C2_IBDBG                               I2C_IBDBG_REG(I2C2_BASE_PTR)
/* I2C3 */
#define I2C3_IBAD                                I2C_IBAD_REG(I2C3_BASE_PTR)
#define I2C3_IBFD                                I2C_IBFD_REG(I2C3_BASE_PTR)
#define I2C3_IBCR                                I2C_IBCR_REG(I2C3_BASE_PTR)
#define I2C3_IBSR                                I2C_IBSR_REG(I2C3_BASE_PTR)
#define I2C3_IBDR                                I2C_IBDR_REG(I2C3_BASE_PTR)
#define I2C3_IBIC                                I2C_IBIC_REG(I2C3_BASE_PTR)
#define I2C3_IBDBG                               I2C_IBDBG_REG(I2C3_BASE_PTR)

/**
 * @}
 */ /* end of group I2C_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group I2C_Peripheral */


/* ----------------------------------------------------------------------------
   -- I2S
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2S_Peripheral I2S
 * @{
 */

/** I2S - Peripheral register structure */
typedef struct I2S_MemMap {
  uint32_t TCSR;                                   /**< SAI Transmit Control Register, offset: 0x0 */
  uint32_t TCR1;                                   /**< SAI Transmit Configuration 1 Register, offset: 0x4 */
  uint32_t TCR2;                                   /**< SAI Transmit Configuration 2 Register, offset: 0x8 */
  uint32_t TCR3;                                   /**< SAI Transmit Configuration 3 Register, offset: 0xC */
  uint32_t TCR4;                                   /**< SAI Transmit Configuration 4 Register, offset: 0x10 */
  uint32_t TCR5;                                   /**< SAI Transmit Configuration 5 Register, offset: 0x14 */
  uint8_t RESERVED_0[8];
  uint32_t TDR[1];                                 /**< SAI Transmit Data Register, array offset: 0x20, array step: 0x4 */
  uint8_t RESERVED_1[28];
  uint32_t TFR[1];                                 /**< SAI Transmit FIFO Register, array offset: 0x40, array step: 0x4 */
  uint8_t RESERVED_2[28];
  uint32_t TMR;                                    /**< SAI Transmit Mask Register, offset: 0x60 */
  uint8_t RESERVED_3[28];
  uint32_t RCSR;                                   /**< SAI Receive Control Register, offset: 0x80 */
  uint32_t RCR1;                                   /**< SAI Receive Configuration 1 Register, offset: 0x84 */
  uint32_t RCR2;                                   /**< SAI Receive Configuration 2 Register, offset: 0x88 */
  uint32_t RCR3;                                   /**< SAI Receive Configuration 3 Register, offset: 0x8C */
  uint32_t RCR4;                                   /**< SAI Receive Configuration 4 Register, offset: 0x90 */
  uint32_t RCR5;                                   /**< SAI Receive Configuration 5 Register, offset: 0x94 */
  uint8_t RESERVED_4[8];
  uint32_t RDR[1];                                 /**< SAI Receive Data Register, array offset: 0xA0, array step: 0x4 */
  uint8_t RESERVED_5[28];
  uint32_t RFR[1];                                 /**< SAI Receive FIFO Register, array offset: 0xC0, array step: 0x4 */
  uint8_t RESERVED_6[28];
  uint32_t RMR;                                    /**< SAI Receive Mask Register, offset: 0xE0 */
} volatile *I2S_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- I2S - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2S_Register_Accessor_Macros I2S - Register accessor macros
 * @{
 */


/* I2S - Register accessors */
#define I2S_TCSR_REG(base)                       ((base)->TCSR)
#define I2S_TCR1_REG(base)                       ((base)->TCR1)
#define I2S_TCR2_REG(base)                       ((base)->TCR2)
#define I2S_TCR3_REG(base)                       ((base)->TCR3)
#define I2S_TCR4_REG(base)                       ((base)->TCR4)
#define I2S_TCR5_REG(base)                       ((base)->TCR5)
#define I2S_TDR_REG(base,index)                  ((base)->TDR[index])
#define I2S_TFR_REG(base,index)                  ((base)->TFR[index])
#define I2S_TMR_REG(base)                        ((base)->TMR)
#define I2S_RCSR_REG(base)                       ((base)->RCSR)
#define I2S_RCR1_REG(base)                       ((base)->RCR1)
#define I2S_RCR2_REG(base)                       ((base)->RCR2)
#define I2S_RCR3_REG(base)                       ((base)->RCR3)
#define I2S_RCR4_REG(base)                       ((base)->RCR4)
#define I2S_RCR5_REG(base)                       ((base)->RCR5)
#define I2S_RDR_REG(base,index)                  ((base)->RDR[index])
#define I2S_RFR_REG(base,index)                  ((base)->RFR[index])
#define I2S_RMR_REG(base)                        ((base)->RMR)

/**
 * @}
 */ /* end of group I2S_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- I2S Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2S_Register_Masks I2S Register Masks
 * @{
 */

/* TCSR Bit Fields */
#define I2S_TCSR_FRDE_MASK                       0x1u
#define I2S_TCSR_FRDE_SHIFT                      0
#define I2S_TCSR_FWDE_MASK                       0x2u
#define I2S_TCSR_FWDE_SHIFT                      1
#define I2S_TCSR_FRIE_MASK                       0x100u
#define I2S_TCSR_FRIE_SHIFT                      8
#define I2S_TCSR_FWIE_MASK                       0x200u
#define I2S_TCSR_FWIE_SHIFT                      9
#define I2S_TCSR_FEIE_MASK                       0x400u
#define I2S_TCSR_FEIE_SHIFT                      10
#define I2S_TCSR_SEIE_MASK                       0x800u
#define I2S_TCSR_SEIE_SHIFT                      11
#define I2S_TCSR_WSIE_MASK                       0x1000u
#define I2S_TCSR_WSIE_SHIFT                      12
#define I2S_TCSR_FRF_MASK                        0x10000u
#define I2S_TCSR_FRF_SHIFT                       16
#define I2S_TCSR_FWF_MASK                        0x20000u
#define I2S_TCSR_FWF_SHIFT                       17
#define I2S_TCSR_FEF_MASK                        0x40000u
#define I2S_TCSR_FEF_SHIFT                       18
#define I2S_TCSR_SEF_MASK                        0x80000u
#define I2S_TCSR_SEF_SHIFT                       19
#define I2S_TCSR_WSF_MASK                        0x100000u
#define I2S_TCSR_WSF_SHIFT                       20
#define I2S_TCSR_SR_MASK                         0x1000000u
#define I2S_TCSR_SR_SHIFT                        24
#define I2S_TCSR_FR_MASK                         0x2000000u
#define I2S_TCSR_FR_SHIFT                        25
#define I2S_TCSR_BCE_MASK                        0x10000000u
#define I2S_TCSR_BCE_SHIFT                       28
#define I2S_TCSR_DBGE_MASK                       0x20000000u
#define I2S_TCSR_DBGE_SHIFT                      29
#define I2S_TCSR_STOPE_MASK                      0x40000000u
#define I2S_TCSR_STOPE_SHIFT                     30
#define I2S_TCSR_TE_MASK                         0x80000000u
#define I2S_TCSR_TE_SHIFT                        31
/* TCR1 Bit Fields */
#define I2S_TCR1_TFW_MASK                        0x3Fu
#define I2S_TCR1_TFW_SHIFT                       0
#define I2S_TCR1_TFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR1_TFW_SHIFT))&I2S_TCR1_TFW_MASK)
/* TCR2 Bit Fields */
#define I2S_TCR2_DIV_MASK                        0xFFu
#define I2S_TCR2_DIV_SHIFT                       0
#define I2S_TCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_DIV_SHIFT))&I2S_TCR2_DIV_MASK)
#define I2S_TCR2_BCD_MASK                        0x1000000u
#define I2S_TCR2_BCD_SHIFT                       24
#define I2S_TCR2_BCP_MASK                        0x2000000u
#define I2S_TCR2_BCP_SHIFT                       25
#define I2S_TCR2_MSEL_MASK                       0xC000000u
#define I2S_TCR2_MSEL_SHIFT                      26
#define I2S_TCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_MSEL_SHIFT))&I2S_TCR2_MSEL_MASK)
#define I2S_TCR2_BCI_MASK                        0x10000000u
#define I2S_TCR2_BCI_SHIFT                       28
#define I2S_TCR2_BCS_MASK                        0x20000000u
#define I2S_TCR2_BCS_SHIFT                       29
#define I2S_TCR2_SYNC_MASK                       0xC0000000u
#define I2S_TCR2_SYNC_SHIFT                      30
#define I2S_TCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_SYNC_SHIFT))&I2S_TCR2_SYNC_MASK)
/* TCR3 Bit Fields */
#define I2S_TCR3_WDFL_MASK                       0x1Fu
#define I2S_TCR3_WDFL_SHIFT                      0
#define I2S_TCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_WDFL_SHIFT))&I2S_TCR3_WDFL_MASK)
#define I2S_TCR3_TCE_MASK                        0x10000u
#define I2S_TCR3_TCE_SHIFT                       16
#define I2S_TCR3_TCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_TCE_SHIFT))&I2S_TCR3_TCE_MASK)
/* TCR4 Bit Fields */
#define I2S_TCR4_FSD_MASK                        0x1u
#define I2S_TCR4_FSD_SHIFT                       0
#define I2S_TCR4_FSP_MASK                        0x2u
#define I2S_TCR4_FSP_SHIFT                       1
#define I2S_TCR4_FSE_MASK                        0x8u
#define I2S_TCR4_FSE_SHIFT                       3
#define I2S_TCR4_MF_MASK                         0x10u
#define I2S_TCR4_MF_SHIFT                        4
#define I2S_TCR4_SYWD_MASK                       0x1F00u
#define I2S_TCR4_SYWD_SHIFT                      8
#define I2S_TCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_SYWD_SHIFT))&I2S_TCR4_SYWD_MASK)
#define I2S_TCR4_FRSZ_MASK                       0x1F0000u
#define I2S_TCR4_FRSZ_SHIFT                      16
#define I2S_TCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FRSZ_SHIFT))&I2S_TCR4_FRSZ_MASK)
/* TCR5 Bit Fields */
#define I2S_TCR5_FBT_MASK                        0x1F00u
#define I2S_TCR5_FBT_SHIFT                       8
#define I2S_TCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_FBT_SHIFT))&I2S_TCR5_FBT_MASK)
#define I2S_TCR5_W0W_MASK                        0x1F0000u
#define I2S_TCR5_W0W_SHIFT                       16
#define I2S_TCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_W0W_SHIFT))&I2S_TCR5_W0W_MASK)
#define I2S_TCR5_WNW_MASK                        0x1F000000u
#define I2S_TCR5_WNW_SHIFT                       24
#define I2S_TCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_WNW_SHIFT))&I2S_TCR5_WNW_MASK)
/* TDR Bit Fields */
#define I2S_TDR_TDR_MASK                         0xFFFFFFFFu
#define I2S_TDR_TDR_SHIFT                        0
#define I2S_TDR_TDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TDR_TDR_SHIFT))&I2S_TDR_TDR_MASK)
/* TFR Bit Fields */
#define I2S_TFR_RFP_MASK                         0x7Fu
#define I2S_TFR_RFP_SHIFT                        0
#define I2S_TFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_RFP_SHIFT))&I2S_TFR_RFP_MASK)
#define I2S_TFR_WFP_MASK                         0x7F0000u
#define I2S_TFR_WFP_SHIFT                        16
#define I2S_TFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_WFP_SHIFT))&I2S_TFR_WFP_MASK)
/* TMR Bit Fields */
#define I2S_TMR_TWM_MASK                         0xFFFFFFFFu
#define I2S_TMR_TWM_SHIFT                        0
#define I2S_TMR_TWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TMR_TWM_SHIFT))&I2S_TMR_TWM_MASK)
/* RCSR Bit Fields */
#define I2S_RCSR_FRDE_MASK                       0x1u
#define I2S_RCSR_FRDE_SHIFT                      0
#define I2S_RCSR_FWDE_MASK                       0x2u
#define I2S_RCSR_FWDE_SHIFT                      1
#define I2S_RCSR_FRIE_MASK                       0x100u
#define I2S_RCSR_FRIE_SHIFT                      8
#define I2S_RCSR_FWIE_MASK                       0x200u
#define I2S_RCSR_FWIE_SHIFT                      9
#define I2S_RCSR_FEIE_MASK                       0x400u
#define I2S_RCSR_FEIE_SHIFT                      10
#define I2S_RCSR_SEIE_MASK                       0x800u
#define I2S_RCSR_SEIE_SHIFT                      11
#define I2S_RCSR_WSIE_MASK                       0x1000u
#define I2S_RCSR_WSIE_SHIFT                      12
#define I2S_RCSR_FRF_MASK                        0x10000u
#define I2S_RCSR_FRF_SHIFT                       16
#define I2S_RCSR_FWF_MASK                        0x20000u
#define I2S_RCSR_FWF_SHIFT                       17
#define I2S_RCSR_FEF_MASK                        0x40000u
#define I2S_RCSR_FEF_SHIFT                       18
#define I2S_RCSR_SEF_MASK                        0x80000u
#define I2S_RCSR_SEF_SHIFT                       19
#define I2S_RCSR_WSF_MASK                        0x100000u
#define I2S_RCSR_WSF_SHIFT                       20
#define I2S_RCSR_SR_MASK                         0x1000000u
#define I2S_RCSR_SR_SHIFT                        24
#define I2S_RCSR_FR_MASK                         0x2000000u
#define I2S_RCSR_FR_SHIFT                        25
#define I2S_RCSR_BCE_MASK                        0x10000000u
#define I2S_RCSR_BCE_SHIFT                       28
#define I2S_RCSR_DBGE_MASK                       0x20000000u
#define I2S_RCSR_DBGE_SHIFT                      29
#define I2S_RCSR_STOPE_MASK                      0x40000000u
#define I2S_RCSR_STOPE_SHIFT                     30
#define I2S_RCSR_RE_MASK                         0x80000000u
#define I2S_RCSR_RE_SHIFT                        31
/* RCR1 Bit Fields */
#define I2S_RCR1_RFW_MASK                        0x3Fu
#define I2S_RCR1_RFW_SHIFT                       0
#define I2S_RCR1_RFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR1_RFW_SHIFT))&I2S_RCR1_RFW_MASK)
/* RCR2 Bit Fields */
#define I2S_RCR2_DIV_MASK                        0xFFu
#define I2S_RCR2_DIV_SHIFT                       0
#define I2S_RCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_DIV_SHIFT))&I2S_RCR2_DIV_MASK)
#define I2S_RCR2_BCD_MASK                        0x1000000u
#define I2S_RCR2_BCD_SHIFT                       24
#define I2S_RCR2_BCP_MASK                        0x2000000u
#define I2S_RCR2_BCP_SHIFT                       25
#define I2S_RCR2_MSEL_MASK                       0xC000000u
#define I2S_RCR2_MSEL_SHIFT                      26
#define I2S_RCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_MSEL_SHIFT))&I2S_RCR2_MSEL_MASK)
#define I2S_RCR2_BCI_MASK                        0x10000000u
#define I2S_RCR2_BCI_SHIFT                       28
#define I2S_RCR2_BCS_MASK                        0x20000000u
#define I2S_RCR2_BCS_SHIFT                       29
#define I2S_RCR2_SYNC_MASK                       0xC0000000u
#define I2S_RCR2_SYNC_SHIFT                      30
#define I2S_RCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_SYNC_SHIFT))&I2S_RCR2_SYNC_MASK)
/* RCR3 Bit Fields */
#define I2S_RCR3_WDFL_MASK                       0x1Fu
#define I2S_RCR3_WDFL_SHIFT                      0
#define I2S_RCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_WDFL_SHIFT))&I2S_RCR3_WDFL_MASK)
#define I2S_RCR3_RCE_MASK                        0x10000u
#define I2S_RCR3_RCE_SHIFT                       16
#define I2S_RCR3_RCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_RCE_SHIFT))&I2S_RCR3_RCE_MASK)
/* RCR4 Bit Fields */
#define I2S_RCR4_FSD_MASK                        0x1u
#define I2S_RCR4_FSD_SHIFT                       0
#define I2S_RCR4_FSP_MASK                        0x2u
#define I2S_RCR4_FSP_SHIFT                       1
#define I2S_RCR4_FSE_MASK                        0x8u
#define I2S_RCR4_FSE_SHIFT                       3
#define I2S_RCR4_MF_MASK                         0x10u
#define I2S_RCR4_MF_SHIFT                        4
#define I2S_RCR4_SYWD_MASK                       0x1F00u
#define I2S_RCR4_SYWD_SHIFT                      8
#define I2S_RCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_SYWD_SHIFT))&I2S_RCR4_SYWD_MASK)
#define I2S_RCR4_FRSZ_MASK                       0x1F0000u
#define I2S_RCR4_FRSZ_SHIFT                      16
#define I2S_RCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FRSZ_SHIFT))&I2S_RCR4_FRSZ_MASK)
/* RCR5 Bit Fields */
#define I2S_RCR5_FBT_MASK                        0x1F00u
#define I2S_RCR5_FBT_SHIFT                       8
#define I2S_RCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_FBT_SHIFT))&I2S_RCR5_FBT_MASK)
#define I2S_RCR5_W0W_MASK                        0x1F0000u
#define I2S_RCR5_W0W_SHIFT                       16
#define I2S_RCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_W0W_SHIFT))&I2S_RCR5_W0W_MASK)
#define I2S_RCR5_WNW_MASK                        0x1F000000u
#define I2S_RCR5_WNW_SHIFT                       24
#define I2S_RCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_WNW_SHIFT))&I2S_RCR5_WNW_MASK)
/* RDR Bit Fields */
#define I2S_RDR_RDR_MASK                         0xFFFFFFFFu
#define I2S_RDR_RDR_SHIFT                        0
#define I2S_RDR_RDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RDR_RDR_SHIFT))&I2S_RDR_RDR_MASK)
/* RFR Bit Fields */
#define I2S_RFR_RFP_MASK                         0x7Fu
#define I2S_RFR_RFP_SHIFT                        0
#define I2S_RFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_RFP_SHIFT))&I2S_RFR_RFP_MASK)
#define I2S_RFR_WFP_MASK                         0x7F0000u
#define I2S_RFR_WFP_SHIFT                        16
#define I2S_RFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_WFP_SHIFT))&I2S_RFR_WFP_MASK)
/* RMR Bit Fields */
#define I2S_RMR_RWM_MASK                         0xFFFFFFFFu
#define I2S_RMR_RWM_SHIFT                        0
#define I2S_RMR_RWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RMR_RWM_SHIFT))&I2S_RMR_RWM_MASK)

/**
 * @}
 */ /* end of group I2S_Register_Masks */


/* I2S - Peripheral instance base addresses */
/** Peripheral I2S0 base pointer */
#define I2S0_BASE_PTR                            ((I2S_MemMapPtr)0x4002F000u)
/** Peripheral I2S1 base pointer */
#define I2S1_BASE_PTR                            ((I2S_MemMapPtr)0x40030000u)
/** Peripheral I2S2 base pointer */
#define I2S2_BASE_PTR                            ((I2S_MemMapPtr)0x40031000u)
/** Peripheral I2S3 base pointer */
#define I2S3_BASE_PTR                            ((I2S_MemMapPtr)0x40032000u)
/** Array initializer of I2S peripheral base pointers */
#define I2S_BASE_PTRS                            { I2S0_BASE_PTR, I2S1_BASE_PTR, I2S2_BASE_PTR, I2S3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- I2S - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup I2S_Register_Accessor_Macros I2S - Register accessor macros
 * @{
 */


/* I2S - Register instance definitions */
/* I2S0 */
#define I2S0_TCSR                                I2S_TCSR_REG(I2S0_BASE_PTR)
#define I2S0_TCR1                                I2S_TCR1_REG(I2S0_BASE_PTR)
#define I2S0_TCR2                                I2S_TCR2_REG(I2S0_BASE_PTR)
#define I2S0_TCR3                                I2S_TCR3_REG(I2S0_BASE_PTR)
#define I2S0_TCR4                                I2S_TCR4_REG(I2S0_BASE_PTR)
#define I2S0_TCR5                                I2S_TCR5_REG(I2S0_BASE_PTR)
#define I2S0_TDR0                                I2S_TDR_REG(I2S0_BASE_PTR,0)
#define I2S0_TFR0                                I2S_TFR_REG(I2S0_BASE_PTR,0)
#define I2S0_TMR                                 I2S_TMR_REG(I2S0_BASE_PTR)
#define I2S0_RCSR                                I2S_RCSR_REG(I2S0_BASE_PTR)
#define I2S0_RCR1                                I2S_RCR1_REG(I2S0_BASE_PTR)
#define I2S0_RCR2                                I2S_RCR2_REG(I2S0_BASE_PTR)
#define I2S0_RCR3                                I2S_RCR3_REG(I2S0_BASE_PTR)
#define I2S0_RCR4                                I2S_RCR4_REG(I2S0_BASE_PTR)
#define I2S0_RCR5                                I2S_RCR5_REG(I2S0_BASE_PTR)
#define I2S0_RDR0                                I2S_RDR_REG(I2S0_BASE_PTR,0)
#define I2S0_RFR0                                I2S_RFR_REG(I2S0_BASE_PTR,0)
#define I2S0_RMR                                 I2S_RMR_REG(I2S0_BASE_PTR)
/* I2S1 */
#define I2S1_TCSR                                I2S_TCSR_REG(I2S1_BASE_PTR)
#define I2S1_TCR1                                I2S_TCR1_REG(I2S1_BASE_PTR)
#define I2S1_TCR2                                I2S_TCR2_REG(I2S1_BASE_PTR)
#define I2S1_TCR3                                I2S_TCR3_REG(I2S1_BASE_PTR)
#define I2S1_TCR4                                I2S_TCR4_REG(I2S1_BASE_PTR)
#define I2S1_TCR5                                I2S_TCR5_REG(I2S1_BASE_PTR)
#define I2S1_TDR0                                I2S_TDR_REG(I2S1_BASE_PTR,0)
#define I2S1_TFR0                                I2S_TFR_REG(I2S1_BASE_PTR,0)
#define I2S1_TMR                                 I2S_TMR_REG(I2S1_BASE_PTR)
#define I2S1_RCSR                                I2S_RCSR_REG(I2S1_BASE_PTR)
#define I2S1_RCR1                                I2S_RCR1_REG(I2S1_BASE_PTR)
#define I2S1_RCR2                                I2S_RCR2_REG(I2S1_BASE_PTR)
#define I2S1_RCR3                                I2S_RCR3_REG(I2S1_BASE_PTR)
#define I2S1_RCR4                                I2S_RCR4_REG(I2S1_BASE_PTR)
#define I2S1_RCR5                                I2S_RCR5_REG(I2S1_BASE_PTR)
#define I2S1_RDR0                                I2S_RDR_REG(I2S1_BASE_PTR,0)
#define I2S1_RFR0                                I2S_RFR_REG(I2S1_BASE_PTR,0)
#define I2S1_RMR                                 I2S_RMR_REG(I2S1_BASE_PTR)
/* I2S2 */
#define I2S2_TCSR                                I2S_TCSR_REG(I2S2_BASE_PTR)
#define I2S2_TCR1                                I2S_TCR1_REG(I2S2_BASE_PTR)
#define I2S2_TCR2                                I2S_TCR2_REG(I2S2_BASE_PTR)
#define I2S2_TCR3                                I2S_TCR3_REG(I2S2_BASE_PTR)
#define I2S2_TCR4                                I2S_TCR4_REG(I2S2_BASE_PTR)
#define I2S2_TCR5                                I2S_TCR5_REG(I2S2_BASE_PTR)
#define I2S2_TDR0                                I2S_TDR_REG(I2S2_BASE_PTR,0)
#define I2S2_TFR0                                I2S_TFR_REG(I2S2_BASE_PTR,0)
#define I2S2_TMR                                 I2S_TMR_REG(I2S2_BASE_PTR)
#define I2S2_RCSR                                I2S_RCSR_REG(I2S2_BASE_PTR)
#define I2S2_RCR1                                I2S_RCR1_REG(I2S2_BASE_PTR)
#define I2S2_RCR2                                I2S_RCR2_REG(I2S2_BASE_PTR)
#define I2S2_RCR3                                I2S_RCR3_REG(I2S2_BASE_PTR)
#define I2S2_RCR4                                I2S_RCR4_REG(I2S2_BASE_PTR)
#define I2S2_RCR5                                I2S_RCR5_REG(I2S2_BASE_PTR)
#define I2S2_RDR0                                I2S_RDR_REG(I2S2_BASE_PTR,0)
#define I2S2_RFR0                                I2S_RFR_REG(I2S2_BASE_PTR,0)
#define I2S2_RMR                                 I2S_RMR_REG(I2S2_BASE_PTR)
/* I2S3 */
#define I2S3_TCSR                                I2S_TCSR_REG(I2S3_BASE_PTR)
#define I2S3_TCR1                                I2S_TCR1_REG(I2S3_BASE_PTR)
#define I2S3_TCR2                                I2S_TCR2_REG(I2S3_BASE_PTR)
#define I2S3_TCR3                                I2S_TCR3_REG(I2S3_BASE_PTR)
#define I2S3_TCR4                                I2S_TCR4_REG(I2S3_BASE_PTR)
#define I2S3_TCR5                                I2S_TCR5_REG(I2S3_BASE_PTR)
#define I2S3_TDR0                                I2S_TDR_REG(I2S3_BASE_PTR,0)
#define I2S3_TFR0                                I2S_TFR_REG(I2S3_BASE_PTR,0)
#define I2S3_TMR                                 I2S_TMR_REG(I2S3_BASE_PTR)
#define I2S3_RCSR                                I2S_RCSR_REG(I2S3_BASE_PTR)
#define I2S3_RCR1                                I2S_RCR1_REG(I2S3_BASE_PTR)
#define I2S3_RCR2                                I2S_RCR2_REG(I2S3_BASE_PTR)
#define I2S3_RCR3                                I2S_RCR3_REG(I2S3_BASE_PTR)
#define I2S3_RCR4                                I2S_RCR4_REG(I2S3_BASE_PTR)
#define I2S3_RCR5                                I2S_RCR5_REG(I2S3_BASE_PTR)
#define I2S3_RDR0                                I2S_RDR_REG(I2S3_BASE_PTR,0)
#define I2S3_RFR0                                I2S_RFR_REG(I2S3_BASE_PTR,0)
#define I2S3_RMR                                 I2S_RMR_REG(I2S3_BASE_PTR)

/* I2S - Register array accessors */
#define I2S0_TDR(index)                          I2S_TDR_REG(I2S0_BASE_PTR,index)
#define I2S1_TDR(index)                          I2S_TDR_REG(I2S1_BASE_PTR,index)
#define I2S2_TDR(index)                          I2S_TDR_REG(I2S2_BASE_PTR,index)
#define I2S3_TDR(index)                          I2S_TDR_REG(I2S3_BASE_PTR,index)
#define I2S0_TFR(index)                          I2S_TFR_REG(I2S0_BASE_PTR,index)
#define I2S1_TFR(index)                          I2S_TFR_REG(I2S1_BASE_PTR,index)
#define I2S2_TFR(index)                          I2S_TFR_REG(I2S2_BASE_PTR,index)
#define I2S3_TFR(index)                          I2S_TFR_REG(I2S3_BASE_PTR,index)
#define I2S0_RDR(index)                          I2S_RDR_REG(I2S0_BASE_PTR,index)
#define I2S1_RDR(index)                          I2S_RDR_REG(I2S1_BASE_PTR,index)
#define I2S2_RDR(index)                          I2S_RDR_REG(I2S2_BASE_PTR,index)
#define I2S3_RDR(index)                          I2S_RDR_REG(I2S3_BASE_PTR,index)
#define I2S0_RFR(index)                          I2S_RFR_REG(I2S0_BASE_PTR,index)
#define I2S1_RFR(index)                          I2S_RFR_REG(I2S1_BASE_PTR,index)
#define I2S2_RFR(index)                          I2S_RFR_REG(I2S2_BASE_PTR,index)
#define I2S3_RFR(index)                          I2S_RFR_REG(I2S3_BASE_PTR,index)

/**
 * @}
 */ /* end of group I2S_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group I2S_Peripheral */


/* ----------------------------------------------------------------------------
   -- IOMUXC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup IOMUXC_Peripheral IOMUXC
 * @{
 */

/** IOMUXC - Peripheral register structure */
typedef struct IOMUXC_MemMap {
  uint32_t RGPIO[135];                             /**< Software MUX Pad Control Register 0..Software MUX Pad Control Register 134, array offset: 0x0, array step: 0x4 */
  uint32_t DDR_RESETB;                             /**< Software MUX DDR RESET Pad Configuration Register, offset: 0x21C */
  uint32_t DDR_A_15;                               /**< Software MUX DDR A15 Pad Control Register, offset: 0x220 */
  uint32_t DDR_A_14;                               /**< Software MUX DDR A14 Pad Control Register, offset: 0x224 */
  uint32_t DDR_A_13;                               /**< Software MUX DDR A13 Pad Control Register, offset: 0x228 */
  uint32_t DDR_A_12;                               /**< Software MUX DDR A12 Pad Control Register, offset: 0x22C */
  uint32_t DDR_A_11;                               /**< Software MUX DDR A11 Pad Control Register, offset: 0x230 */
  uint32_t DDR_A_10;                               /**< Software MUX DDR A10 Pad Control Register, offset: 0x234 */
  uint32_t DDR_A_9;                                /**< Software MUX DDR A9 Pad Control Register, offset: 0x238 */
  uint32_t DDR_A_8;                                /**< Software MUX DDR A8 Pad Control Register, offset: 0x23C */
  uint32_t DDR_A_7;                                /**< Software MUX DDR A7 Pad Control Register, offset: 0x240 */
  uint32_t DDR_A_6;                                /**< Software MUX DDR A6 Pad Control Register, offset: 0x244 */
  uint32_t DDR_A_5;                                /**< Software MUX DDR A5 Pad Control Register, offset: 0x248 */
  uint32_t DDR_A_4;                                /**< Software MUX DDR A4 Pad Control Register, offset: 0x24C */
  uint32_t DDR_A_3;                                /**< Software MUX DDR Pad A3 Control Register, offset: 0x250 */
  uint32_t DDR_A_2;                                /**< Software MUX DDR A2 Pad Control Register, offset: 0x254 */
  uint32_t DDR_A_1;                                /**< Software MUX DDR A1 Pad Control Register, offset: 0x258 */
  uint32_t DDR_A_0;                                /**< Software MUX DDR A0 Pad Control Register, offset: 0x25C */
  uint32_t DDR_BA_2;                               /**< Software MUX DDR BA2 Pad Control Register, offset: 0x260 */
  uint32_t DDR_BA_1;                               /**< Software MUX DDR BA1 Pad Control Register, offset: 0x264 */
  uint32_t DDR_BA_0;                               /**< Software MUX DDR BA0 Pad Control Register, offset: 0x268 */
  uint32_t DDR_CAS_B;                              /**< Software MUX DDR CAS Pad Control Register, offset: 0x26C */
  uint32_t DDR_CKE_0;                              /**< Software MUX DDR CKE0 Pad Control Register, offset: 0x270 */
  uint32_t DDR_CLK_0;                              /**< Software MUX DDR CLK0 Pad Control Register, offset: 0x274 */
  uint32_t DDR_CS_B_0;                             /**< Software MUX DDR CS B0 Pad Control Register, offset: 0x278 */
  uint32_t DDR_CS_D_15;                            /**< Software MUX DDR CS D15 Pad Control Register, offset: 0x27C */
  uint32_t DDR_CS_D_14;                            /**< Software MUX DDR CS D14 Pad Control Register, offset: 0x280 */
  uint32_t DDR_CS_D_13;                            /**< Software MUX DDR CS D13 Pad Control Register, offset: 0x284 */
  uint32_t DDR_CS_D_12;                            /**< Software MUX DDR CS D12 Pad Control Register, offset: 0x288 */
  uint32_t DDR_CS_D_11;                            /**< Software MUX DDR CS D11 Pad Control Register, offset: 0x28C */
  uint32_t DDR_CS_D_10;                            /**< Software MUX DDR CS D10 Pad Control Register, offset: 0x290 */
  uint32_t DDR_CS_D_9;                             /**< Software MUX DDR CS D9 Pad Control Register, offset: 0x294 */
  uint32_t DDR_CS_D_8;                             /**< Software MUX DDR CS D8 Pad Control Register, offset: 0x298 */
  uint32_t DDR_CS_D_7;                             /**< Software MUX DDR CS D7 Pad Control Register, offset: 0x29C */
  uint32_t DDR_CS_D_6;                             /**< Software MUX DDR CS D6 Pad Control Register, offset: 0x2A0 */
  uint32_t DDR_CS_D_5;                             /**< Software MUX DDR CS D5 Pad Control Register, offset: 0x2A4 */
  uint32_t DDR_CS_D_4;                             /**< Software MUX DDR CS D4 Pad Control Register, offset: 0x2A8 */
  uint32_t DDR_CS_D_3;                             /**< Software MUX DDR CS D3 Pad Control Register, offset: 0x2AC */
  uint32_t DDR_CS_D_2;                             /**< Software MUX DDR CS D2 Pad Control Register, offset: 0x2B0 */
  uint32_t DDR_CS_D_1;                             /**< Software MUX DDR CS D1 Pad Control Register, offset: 0x2B4 */
  uint32_t DDR_CS_D_0;                             /**< Software MUX DDR CS D0 Pad Control Register, offset: 0x2B8 */
  uint32_t DDR_DQM_1;                              /**< Software MUX DDR DQM1 Pad Control Register, offset: 0x2BC */
  uint32_t DDR_DQM_0;                              /**< Software MUX DDR DQM0 Pad Control Register 0, offset: 0x2C0 */
  uint32_t DDR_DQS_1;                              /**< Software MUX DDR DQS1 Pad Control Register 1, offset: 0x2C4 */
  uint32_t DDR_DQS_0;                              /**< Software MUX DDR DQS0 Pad Control Register 0, offset: 0x2C8 */
  uint32_t DDR_RAS_B;                              /**< Software MUX DDR RAS Pad Control Register, offset: 0x2CC */
  uint32_t DDR_WE_B;                               /**< Software MUX DDR WE Pad Control Register, offset: 0x2D0 */
  uint32_t DDR_ODT_0;                              /**< Software MUX DDR ODT0 Pad Control Register, offset: 0x2D4 */
  uint32_t DDR_ODT_1;                              /**< Software MUX DDR ODT1 Pad Control Register, offset: 0x2D8 */
  uint32_t DUMMY_DDRBYTE1;                         /**< Software MUX Dummy DDRBYTE1 Pad Control Register, offset: 0x2DC */
  uint32_t DUMMY_DDRBYTE2;                         /**< Software MUX Dummy DDRBYTE2 Pad Control Register, offset: 0x2E0 */
  uint32_t DUMMY_QUADSPI0;                         /**< Software MUX Dummy QUADSPI0 Pad Control Register, offset: 0x2E4 */
  uint32_t DUMMY_QUADSPI1;                         /**< Software MUX Dummy QUADSPI1 Pad Control Register, offset: 0x2E8 */
  uint32_t CCM_AUD_EXT_CLK_SELECT_INPUT;           /**< CCM Audio External Clock Input Select Register, offset: 0x2EC */
  uint32_t CCM_ENET_EXT_CLK_SELECT_INPUT;          /**< CCM Ethernet External Clock Input Select Register, offset: 0x2F0 */
  uint32_t CCM_ENET_TS_CLK_SELECT_INPUT;           /**< CCM Ethernet TS Clock Input Select Register, offset: 0x2F4 */
  uint32_t DSPI1_IPP_IND_SCK_SELECT_INPUT;         /**< DSPI1 SCK Input Select Register, offset: 0x2F8 */
  uint32_t DSPI1_IPP_IND_SIN_SELECT_INPUT;         /**< DSPI1 SIN Input Select Register, offset: 0x2FC */
  uint32_t DSPI1_IPP_IND_SS_B_SELECT_INPUT;        /**< DSPI1 SS Input Select Register, offset: 0x300 */
  uint32_t ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT; /**< Ethernet MAC0 TIMER0 Input Select Register, offset: 0x304 */
  uint32_t ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT; /**< Ethernet MAC0 TIMER1 Input Select Register, offset: 0x308 */
  uint32_t ESAI_IPP_IND_FST_SELECT_INPUT;          /**< ESAI FST Input Select Register, offset: 0x30C */
  uint32_t ESAI_IPP_IND_SCKT_SELECT_INPUT;         /**< ESAI SCKT Input Select Register, offset: 0x310 */
  uint32_t ESAI_IPP_IND_SDO0_SELECT_INPUT;         /**< ESAI SDO0 Input Select Register, offset: 0x314 */
  uint32_t ESAI_IPP_IND_SDO1_SELECT_INPUT;         /**< ESAI SDO1 Input Select Register, offset: 0x318 */
  uint32_t ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT;    /**< ESAI SDO2 Input Select Register, offset: 0x31C */
  uint32_t ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT;    /**< ESAI SDO3 Input Select Register, offset: 0x320 */
  uint32_t ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT;    /**< ESAI SDO4 Input Select Register, offset: 0x324 */
  uint32_t ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT;    /**< ESAI SDO5 Input Select Register, offset: 0x328 */
  uint32_t FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT; /**< FlexTimer1 CH0 Input Select Register, offset: 0x32C */
  uint32_t FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT; /**< FlexTimer1 CH1 Input Select Register, offset: 0x330 */
  uint32_t FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT; /**< FlexTimer1 PHA Input Select Register, offset: 0x334 */
  uint32_t FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT; /**< FlexTimer1 PHB Input Select Register, offset: 0x338 */
  uint32_t I2C0_IPP_SCL_IND_SELECT_INPUT;          /**< I2C0 SCL Input Select Register, offset: 0x33C */
  uint32_t I2C0_IPP_SDA_IND_SELECT_INPUT;          /**< I2C0 SDA Input Select Register, offset: 0x340 */
  uint32_t I2C1_IPP_SCL_IND_SELECT_INPUT;          /**< I2C1 SCL Input Select Register, offset: 0x344 */
  uint32_t I2C1_IPP_SDA_IND_SELECT_INPUT;          /**< I2C1 SDA Input Select Register, offset: 0x348 */
  uint32_t I2C2_IPP_SCL_IND_SELECT_INPUT;          /**< I2C2 SCL Input Select Register, offset: 0x34C */
  uint32_t I2C2_IPP_SDA_IND_SELECT_INPUT;          /**< I2C2 SDA Input Select Register, offset: 0x350 */
  uint32_t MLB_TOP_MLBCLK_IN_SELECT_INPUT;         /**< MediaLB Clock Input Select Register, offset: 0x354 */
  uint32_t MLB_TOP_MLBDAT_IN_SELECT_INPUT;         /**< MediaLB Data Input Select Register, offset: 0x358 */
  uint32_t MLB_TOP_MLBSIG_IN_SELECT_INPUT;         /**< MediaLB Signal Input Select Register, offset: 0x35C */
  uint32_t SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT;   /**< SAI1 TXSYNC Input Select Register, offset: 0x360 */
  uint32_t SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT;   /**< SAI2 RXBCLK Input Select Register, offset: 0x364 */
  uint32_t SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT; /**< SAI2 RXDATA0 Input Select Register, offset: 0x368 */
  uint32_t SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT;   /**< SAI2 RXSYNC Input Select Register, offset: 0x36C */
  uint32_t SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT;   /**< SAI2 TXBLCK Input Select Register, offset: 0x370 */
  uint32_t SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT;   /**< SAI2 TXSYNC Input Select Register, offset: 0x374 */
  uint32_t SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT;    /**< UART FLX1 CTS Input Select Register, offset: 0x378 */
  uint32_t SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT;   /**< UART FLX1 RX Input Select Register, offset: 0x37C */
  uint32_t SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT;   /**< UART FLX1 TX Input Select Register, offset: 0x380 */
  uint32_t SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT;    /**< UART FLX2 CTS Input Select Register, offset: 0x384 */
  uint32_t SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT;   /**< UART FLX2 RX Input Select Register, offset: 0x388 */
  uint32_t SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT;   /**< UART FLX2 TX Input Select Register, offset: 0x38C */
  uint32_t SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT;   /**< UART FLX3 RX Input Select Register, offset: 0x390 */
  uint32_t SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT;   /**< UART FLX3 TX Input Select Register, offset: 0x394 */
  uint32_t SRC_IPP_BOOT_CFG_18_SELECT_INPUT;       /**< BOOTCFG18 Input Select Register, offset: 0x398 */
  uint32_t SRC_IPP_BOOT_CFG_19_SELECT_INPUT;       /**< BOOTCFG19 Input Select Register, offset: 0x39C */
  uint32_t SRC_IPP_BOOT_CFG_20_SELECT_INPUT;       /**< BOOTCFG20 Input Select Register, offset: 0x3A0 */
  uint32_t VIDEO_IN0_IPP_IND_DE_SELECT_INPUT;      /**< Video Decoder Input Select Register, offset: 0x3A4 */
  uint32_t VIDEO_IN0_IPP_IND_FID_SELECT_INPUT;     /**< Video IN0 Input Select Register, offset: 0x3A8 */
  uint32_t VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT; /**< Video PIXCLK Input Select Register, offset: 0x3AC */
} volatile *IOMUXC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- IOMUXC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup IOMUXC_Register_Accessor_Macros IOMUXC - Register accessor macros
 * @{
 */


/* IOMUXC - Register accessors */
#define IOMUXC_RGPIO_REG(base,index)             ((base)->RGPIO[index])
#define IOMUXC_DDR_RESETB_REG(base)              ((base)->DDR_RESETB)
#define IOMUXC_DDR_A_15_REG(base)                ((base)->DDR_A_15)
#define IOMUXC_DDR_A_14_REG(base)                ((base)->DDR_A_14)
#define IOMUXC_DDR_A_13_REG(base)                ((base)->DDR_A_13)
#define IOMUXC_DDR_A_12_REG(base)                ((base)->DDR_A_12)
#define IOMUXC_DDR_A_11_REG(base)                ((base)->DDR_A_11)
#define IOMUXC_DDR_A_10_REG(base)                ((base)->DDR_A_10)
#define IOMUXC_DDR_A_9_REG(base)                 ((base)->DDR_A_9)
#define IOMUXC_DDR_A_8_REG(base)                 ((base)->DDR_A_8)
#define IOMUXC_DDR_A_7_REG(base)                 ((base)->DDR_A_7)
#define IOMUXC_DDR_A_6_REG(base)                 ((base)->DDR_A_6)
#define IOMUXC_DDR_A_5_REG(base)                 ((base)->DDR_A_5)
#define IOMUXC_DDR_A_4_REG(base)                 ((base)->DDR_A_4)
#define IOMUXC_DDR_A_3_REG(base)                 ((base)->DDR_A_3)
#define IOMUXC_DDR_A_2_REG(base)                 ((base)->DDR_A_2)
#define IOMUXC_DDR_A_1_REG(base)                 ((base)->DDR_A_1)
#define IOMUXC_DDR_A_0_REG(base)                 ((base)->DDR_A_0)
#define IOMUXC_DDR_BA_2_REG(base)                ((base)->DDR_BA_2)
#define IOMUXC_DDR_BA_1_REG(base)                ((base)->DDR_BA_1)
#define IOMUXC_DDR_BA_0_REG(base)                ((base)->DDR_BA_0)
#define IOMUXC_DDR_CAS_B_REG(base)               ((base)->DDR_CAS_B)
#define IOMUXC_DDR_CKE_0_REG(base)               ((base)->DDR_CKE_0)
#define IOMUXC_DDR_CLK_0_REG(base)               ((base)->DDR_CLK_0)
#define IOMUXC_DDR_CS_B_0_REG(base)              ((base)->DDR_CS_B_0)
#define IOMUXC_DDR_CS_D_15_REG(base)             ((base)->DDR_CS_D_15)
#define IOMUXC_DDR_CS_D_14_REG(base)             ((base)->DDR_CS_D_14)
#define IOMUXC_DDR_CS_D_13_REG(base)             ((base)->DDR_CS_D_13)
#define IOMUXC_DDR_CS_D_12_REG(base)             ((base)->DDR_CS_D_12)
#define IOMUXC_DDR_CS_D_11_REG(base)             ((base)->DDR_CS_D_11)
#define IOMUXC_DDR_CS_D_10_REG(base)             ((base)->DDR_CS_D_10)
#define IOMUXC_DDR_CS_D_9_REG(base)              ((base)->DDR_CS_D_9)
#define IOMUXC_DDR_CS_D_8_REG(base)              ((base)->DDR_CS_D_8)
#define IOMUXC_DDR_CS_D_7_REG(base)              ((base)->DDR_CS_D_7)
#define IOMUXC_DDR_CS_D_6_REG(base)              ((base)->DDR_CS_D_6)
#define IOMUXC_DDR_CS_D_5_REG(base)              ((base)->DDR_CS_D_5)
#define IOMUXC_DDR_CS_D_4_REG(base)              ((base)->DDR_CS_D_4)
#define IOMUXC_DDR_CS_D_3_REG(base)              ((base)->DDR_CS_D_3)
#define IOMUXC_DDR_CS_D_2_REG(base)              ((base)->DDR_CS_D_2)
#define IOMUXC_DDR_CS_D_1_REG(base)              ((base)->DDR_CS_D_1)
#define IOMUXC_DDR_CS_D_0_REG(base)              ((base)->DDR_CS_D_0)
#define IOMUXC_DDR_DQM_1_REG(base)               ((base)->DDR_DQM_1)
#define IOMUXC_DDR_DQM_0_REG(base)               ((base)->DDR_DQM_0)
#define IOMUXC_DDR_DQS_1_REG(base)               ((base)->DDR_DQS_1)
#define IOMUXC_DDR_DQS_0_REG(base)               ((base)->DDR_DQS_0)
#define IOMUXC_DDR_RAS_B_REG(base)               ((base)->DDR_RAS_B)
#define IOMUXC_DDR_WE_B_REG(base)                ((base)->DDR_WE_B)
#define IOMUXC_DDR_ODT_0_REG(base)               ((base)->DDR_ODT_0)
#define IOMUXC_DDR_ODT_1_REG(base)               ((base)->DDR_ODT_1)
#define IOMUXC_DUMMY_DDRBYTE1_REG(base)          ((base)->DUMMY_DDRBYTE1)
#define IOMUXC_DUMMY_DDRBYTE2_REG(base)          ((base)->DUMMY_DDRBYTE2)
#define IOMUXC_DUMMY_QUADSPI0_REG(base)          ((base)->DUMMY_QUADSPI0)
#define IOMUXC_DUMMY_QUADSPI1_REG(base)          ((base)->DUMMY_QUADSPI1)
#define IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_REG(base) ((base)->CCM_AUD_EXT_CLK_SELECT_INPUT)
#define IOMUXC_CCM_ENET_EXT_CLK_SELECT_INPUT_REG(base) ((base)->CCM_ENET_EXT_CLK_SELECT_INPUT)
#define IOMUXC_CCM_ENET_TS_CLK_SELECT_INPUT_REG(base) ((base)->CCM_ENET_TS_CLK_SELECT_INPUT)
#define IOMUXC_DSPI1_IPP_IND_SCK_SELECT_INPUT_REG(base) ((base)->DSPI1_IPP_IND_SCK_SELECT_INPUT)
#define IOMUXC_DSPI1_IPP_IND_SIN_SELECT_INPUT_REG(base) ((base)->DSPI1_IPP_IND_SIN_SELECT_INPUT)
#define IOMUXC_DSPI1_IPP_IND_SS_B_SELECT_INPUT_REG(base) ((base)->DSPI1_IPP_IND_SS_B_SELECT_INPUT)
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT_REG(base) ((base)->ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT)
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT_REG(base) ((base)->ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_FST_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_FST_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SCKT_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SCKT_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO0_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO0_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO1_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO1_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT)
#define IOMUXC_ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT_REG(base) ((base)->ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT_REG(base) ((base)->FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT_REG(base) ((base)->FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT_REG(base) ((base)->FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT_REG(base) ((base)->FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT)
#define IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_REG(base) ((base)->I2C0_IPP_SCL_IND_SELECT_INPUT)
#define IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_REG(base) ((base)->I2C0_IPP_SDA_IND_SELECT_INPUT)
#define IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_REG(base) ((base)->I2C1_IPP_SCL_IND_SELECT_INPUT)
#define IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_REG(base) ((base)->I2C1_IPP_SDA_IND_SELECT_INPUT)
#define IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_REG(base) ((base)->I2C2_IPP_SCL_IND_SELECT_INPUT)
#define IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_REG(base) ((base)->I2C2_IPP_SDA_IND_SELECT_INPUT)
#define IOMUXC_MLB_TOP_MLBCLK_IN_SELECT_INPUT_REG(base) ((base)->MLB_TOP_MLBCLK_IN_SELECT_INPUT)
#define IOMUXC_MLB_TOP_MLBDAT_IN_SELECT_INPUT_REG(base) ((base)->MLB_TOP_MLBDAT_IN_SELECT_INPUT)
#define IOMUXC_MLB_TOP_MLBSIG_IN_SELECT_INPUT_REG(base) ((base)->MLB_TOP_MLBSIG_IN_SELECT_INPUT)
#define IOMUXC_SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT_REG(base) ((base)->SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT)
#define IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_REG(base) ((base)->SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT)
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_REG(base) ((base)->SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT)
#define IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_REG(base) ((base)->SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT)
#define IOMUXC_SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT_REG(base) ((base)->SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT)
#define IOMUXC_SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT_REG(base) ((base)->SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT)
#define IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_REG(base) ((base)->SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT)
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_REG(base) ((base)->SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT)
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_REG(base) ((base)->SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT)
#define IOMUXC_SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT_REG(base) ((base)->SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT)
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_REG(base) ((base)->SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT)
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_REG(base) ((base)->SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT)
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT_REG(base) ((base)->SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT)
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT_REG(base) ((base)->SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT)
#define IOMUXC_SRC_IPP_BOOT_CFG_18_SELECT_INPUT_REG(base) ((base)->SRC_IPP_BOOT_CFG_18_SELECT_INPUT)
#define IOMUXC_SRC_IPP_BOOT_CFG_19_SELECT_INPUT_REG(base) ((base)->SRC_IPP_BOOT_CFG_19_SELECT_INPUT)
#define IOMUXC_SRC_IPP_BOOT_CFG_20_SELECT_INPUT_REG(base) ((base)->SRC_IPP_BOOT_CFG_20_SELECT_INPUT)
#define IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_REG(base) ((base)->VIDEO_IN0_IPP_IND_DE_SELECT_INPUT)
#define IOMUXC_VIDEO_IN0_IPP_IND_FID_SELECT_INPUT_REG(base) ((base)->VIDEO_IN0_IPP_IND_FID_SELECT_INPUT)
#define IOMUXC_VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT_REG(base) ((base)->VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT)

/**
 * @}
 */ /* end of group IOMUXC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- IOMUXC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup IOMUXC_Register_Masks IOMUXC Register Masks
 * @{
 */

/* RGPIO Bit Fields */
#define IOMUXC_RGPIO_IBE_MASK                    0x1u
#define IOMUXC_RGPIO_IBE_SHIFT                   0
#define IOMUXC_RGPIO_OBE_MASK                    0x2u
#define IOMUXC_RGPIO_OBE_SHIFT                   1
#define IOMUXC_RGPIO_PUE_MASK                    0x4u
#define IOMUXC_RGPIO_PUE_SHIFT                   2
#define IOMUXC_RGPIO_PKE_MASK                    0x8u
#define IOMUXC_RGPIO_PKE_SHIFT                   3
#define IOMUXC_RGPIO_PUS_MASK                    0x30u
#define IOMUXC_RGPIO_PUS_SHIFT                   4
#define IOMUXC_RGPIO_PUS(x)                      (((uint32_t)(((uint32_t)(x))<<IOMUXC_RGPIO_PUS_SHIFT))&IOMUXC_RGPIO_PUS_MASK)
#define IOMUXC_RGPIO_DSE_MASK                    0x1C0u
#define IOMUXC_RGPIO_DSE_SHIFT                   6
#define IOMUXC_RGPIO_DSE(x)                      (((uint32_t)(((uint32_t)(x))<<IOMUXC_RGPIO_DSE_SHIFT))&IOMUXC_RGPIO_DSE_MASK)
#define IOMUXC_RGPIO_HYS_MASK                    0x200u
#define IOMUXC_RGPIO_HYS_SHIFT                   9
#define IOMUXC_RGPIO_ODE_MASK                    0x400u
#define IOMUXC_RGPIO_ODE_SHIFT                   10
#define IOMUXC_RGPIO_SRE_MASK                    0x800u
#define IOMUXC_RGPIO_SRE_SHIFT                   11
#define IOMUXC_RGPIO_SPEED_MASK                  0x3000u
#define IOMUXC_RGPIO_SPEED_SHIFT                 12
#define IOMUXC_RGPIO_SPEED(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_RGPIO_SPEED_SHIFT))&IOMUXC_RGPIO_SPEED_MASK)
#define IOMUXC_RGPIO_MUX_MODE_MASK               0x700000u
#define IOMUXC_RGPIO_MUX_MODE_SHIFT              20
#define IOMUXC_RGPIO_MUX_MODE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_RGPIO_MUX_MODE_SHIFT))&IOMUXC_RGPIO_MUX_MODE_MASK)
/* DDR_RESETB Bit Fields */
#define IOMUXC_DDR_RESETB_PUE_MASK               0x4u
#define IOMUXC_DDR_RESETB_PUE_SHIFT              2
#define IOMUXC_DDR_RESETB_PKE_MASK               0x8u
#define IOMUXC_DDR_RESETB_PKE_SHIFT              3
#define IOMUXC_DDR_RESETB_PUS_MASK               0x30u
#define IOMUXC_DDR_RESETB_PUS_SHIFT              4
#define IOMUXC_DDR_RESETB_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RESETB_PUS_SHIFT))&IOMUXC_DDR_RESETB_PUS_MASK)
#define IOMUXC_DDR_RESETB_DSE_MASK               0x1C0u
#define IOMUXC_DDR_RESETB_DSE_SHIFT              6
#define IOMUXC_DDR_RESETB_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RESETB_DSE_SHIFT))&IOMUXC_DDR_RESETB_DSE_MASK)
#define IOMUXC_DDR_RESETB_HYS_MASK               0x200u
#define IOMUXC_DDR_RESETB_HYS_SHIFT              9
#define IOMUXC_DDR_RESETB_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_RESETB_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_RESETB_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RESETB_DDR_TRIM_SHIFT))&IOMUXC_DDR_RESETB_DDR_TRIM_MASK)
#define IOMUXC_DDR_RESETB_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_RESETB_DDR_INPUT_SHIFT        16
/* DDR_A_15 Bit Fields */
#define IOMUXC_DDR_A_15_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_15_PUE_SHIFT                2
#define IOMUXC_DDR_A_15_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_15_PKE_SHIFT                3
#define IOMUXC_DDR_A_15_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_15_PUS_SHIFT                4
#define IOMUXC_DDR_A_15_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_15_PUS_SHIFT))&IOMUXC_DDR_A_15_PUS_MASK)
#define IOMUXC_DDR_A_15_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_15_DSE_SHIFT                6
#define IOMUXC_DDR_A_15_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_15_DSE_SHIFT))&IOMUXC_DDR_A_15_DSE_MASK)
#define IOMUXC_DDR_A_15_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_15_HYS_SHIFT                9
#define IOMUXC_DDR_A_15_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_15_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_15_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_15_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_15_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_15_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_15_DDR_INPUT_SHIFT          16
/* DDR_A_14 Bit Fields */
#define IOMUXC_DDR_A_14_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_14_PUE_SHIFT                2
#define IOMUXC_DDR_A_14_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_14_PKE_SHIFT                3
#define IOMUXC_DDR_A_14_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_14_PUS_SHIFT                4
#define IOMUXC_DDR_A_14_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_14_PUS_SHIFT))&IOMUXC_DDR_A_14_PUS_MASK)
#define IOMUXC_DDR_A_14_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_14_DSE_SHIFT                6
#define IOMUXC_DDR_A_14_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_14_DSE_SHIFT))&IOMUXC_DDR_A_14_DSE_MASK)
#define IOMUXC_DDR_A_14_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_14_HYS_SHIFT                9
#define IOMUXC_DDR_A_14_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_14_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_14_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_14_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_14_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_14_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_14_DDR_INPUT_SHIFT          16
/* DDR_A_13 Bit Fields */
#define IOMUXC_DDR_A_13_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_13_PUE_SHIFT                2
#define IOMUXC_DDR_A_13_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_13_PKE_SHIFT                3
#define IOMUXC_DDR_A_13_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_13_PUS_SHIFT                4
#define IOMUXC_DDR_A_13_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_13_PUS_SHIFT))&IOMUXC_DDR_A_13_PUS_MASK)
#define IOMUXC_DDR_A_13_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_13_DSE_SHIFT                6
#define IOMUXC_DDR_A_13_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_13_DSE_SHIFT))&IOMUXC_DDR_A_13_DSE_MASK)
#define IOMUXC_DDR_A_13_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_13_HYS_SHIFT                9
#define IOMUXC_DDR_A_13_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_13_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_13_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_13_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_13_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_13_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_13_DDR_INPUT_SHIFT          16
/* DDR_A_12 Bit Fields */
#define IOMUXC_DDR_A_12_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_12_PUE_SHIFT                2
#define IOMUXC_DDR_A_12_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_12_PKE_SHIFT                3
#define IOMUXC_DDR_A_12_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_12_PUS_SHIFT                4
#define IOMUXC_DDR_A_12_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_12_PUS_SHIFT))&IOMUXC_DDR_A_12_PUS_MASK)
#define IOMUXC_DDR_A_12_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_12_DSE_SHIFT                6
#define IOMUXC_DDR_A_12_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_12_DSE_SHIFT))&IOMUXC_DDR_A_12_DSE_MASK)
#define IOMUXC_DDR_A_12_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_12_HYS_SHIFT                9
#define IOMUXC_DDR_A_12_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_12_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_12_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_12_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_12_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_12_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_12_DDR_INPUT_SHIFT          16
/* DDR_A_11 Bit Fields */
#define IOMUXC_DDR_A_11_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_11_PUE_SHIFT                2
#define IOMUXC_DDR_A_11_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_11_PKE_SHIFT                3
#define IOMUXC_DDR_A_11_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_11_PUS_SHIFT                4
#define IOMUXC_DDR_A_11_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_11_PUS_SHIFT))&IOMUXC_DDR_A_11_PUS_MASK)
#define IOMUXC_DDR_A_11_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_11_DSE_SHIFT                6
#define IOMUXC_DDR_A_11_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_11_DSE_SHIFT))&IOMUXC_DDR_A_11_DSE_MASK)
#define IOMUXC_DDR_A_11_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_11_HYS_SHIFT                9
#define IOMUXC_DDR_A_11_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_11_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_11_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_11_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_11_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_11_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_11_DDR_INPUT_SHIFT          16
/* DDR_A_10 Bit Fields */
#define IOMUXC_DDR_A_10_PUE_MASK                 0x4u
#define IOMUXC_DDR_A_10_PUE_SHIFT                2
#define IOMUXC_DDR_A_10_PKE_MASK                 0x8u
#define IOMUXC_DDR_A_10_PKE_SHIFT                3
#define IOMUXC_DDR_A_10_PUS_MASK                 0x30u
#define IOMUXC_DDR_A_10_PUS_SHIFT                4
#define IOMUXC_DDR_A_10_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_10_PUS_SHIFT))&IOMUXC_DDR_A_10_PUS_MASK)
#define IOMUXC_DDR_A_10_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_A_10_DSE_SHIFT                6
#define IOMUXC_DDR_A_10_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_10_DSE_SHIFT))&IOMUXC_DDR_A_10_DSE_MASK)
#define IOMUXC_DDR_A_10_HYS_MASK                 0x200u
#define IOMUXC_DDR_A_10_HYS_SHIFT                9
#define IOMUXC_DDR_A_10_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_A_10_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_A_10_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_10_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_10_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_10_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_A_10_DDR_INPUT_SHIFT          16
/* DDR_A_9 Bit Fields */
#define IOMUXC_DDR_A_9_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_9_PUE_SHIFT                 2
#define IOMUXC_DDR_A_9_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_9_PKE_SHIFT                 3
#define IOMUXC_DDR_A_9_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_9_PUS_SHIFT                 4
#define IOMUXC_DDR_A_9_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_9_PUS_SHIFT))&IOMUXC_DDR_A_9_PUS_MASK)
#define IOMUXC_DDR_A_9_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_9_DSE_SHIFT                 6
#define IOMUXC_DDR_A_9_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_9_DSE_SHIFT))&IOMUXC_DDR_A_9_DSE_MASK)
#define IOMUXC_DDR_A_9_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_9_HYS_SHIFT                 9
#define IOMUXC_DDR_A_9_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_9_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_9_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_9_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_9_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_9_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_9_DDR_INPUT_SHIFT           16
/* DDR_A_8 Bit Fields */
#define IOMUXC_DDR_A_8_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_8_PUE_SHIFT                 2
#define IOMUXC_DDR_A_8_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_8_PKE_SHIFT                 3
#define IOMUXC_DDR_A_8_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_8_PUS_SHIFT                 4
#define IOMUXC_DDR_A_8_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_8_PUS_SHIFT))&IOMUXC_DDR_A_8_PUS_MASK)
#define IOMUXC_DDR_A_8_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_8_DSE_SHIFT                 6
#define IOMUXC_DDR_A_8_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_8_DSE_SHIFT))&IOMUXC_DDR_A_8_DSE_MASK)
#define IOMUXC_DDR_A_8_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_8_HYS_SHIFT                 9
#define IOMUXC_DDR_A_8_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_8_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_8_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_8_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_8_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_8_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_8_DDR_INPUT_SHIFT           16
/* DDR_A_7 Bit Fields */
#define IOMUXC_DDR_A_7_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_7_PUE_SHIFT                 2
#define IOMUXC_DDR_A_7_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_7_PKE_SHIFT                 3
#define IOMUXC_DDR_A_7_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_7_PUS_SHIFT                 4
#define IOMUXC_DDR_A_7_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_7_PUS_SHIFT))&IOMUXC_DDR_A_7_PUS_MASK)
#define IOMUXC_DDR_A_7_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_7_DSE_SHIFT                 6
#define IOMUXC_DDR_A_7_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_7_DSE_SHIFT))&IOMUXC_DDR_A_7_DSE_MASK)
#define IOMUXC_DDR_A_7_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_7_HYS_SHIFT                 9
#define IOMUXC_DDR_A_7_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_7_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_7_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_7_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_7_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_7_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_7_DDR_INPUT_SHIFT           16
/* DDR_A_6 Bit Fields */
#define IOMUXC_DDR_A_6_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_6_PUE_SHIFT                 2
#define IOMUXC_DDR_A_6_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_6_PKE_SHIFT                 3
#define IOMUXC_DDR_A_6_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_6_PUS_SHIFT                 4
#define IOMUXC_DDR_A_6_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_6_PUS_SHIFT))&IOMUXC_DDR_A_6_PUS_MASK)
#define IOMUXC_DDR_A_6_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_6_DSE_SHIFT                 6
#define IOMUXC_DDR_A_6_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_6_DSE_SHIFT))&IOMUXC_DDR_A_6_DSE_MASK)
#define IOMUXC_DDR_A_6_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_6_HYS_SHIFT                 9
#define IOMUXC_DDR_A_6_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_6_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_6_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_6_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_6_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_6_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_6_DDR_INPUT_SHIFT           16
/* DDR_A_5 Bit Fields */
#define IOMUXC_DDR_A_5_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_5_PUE_SHIFT                 2
#define IOMUXC_DDR_A_5_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_5_PKE_SHIFT                 3
#define IOMUXC_DDR_A_5_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_5_PUS_SHIFT                 4
#define IOMUXC_DDR_A_5_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_5_PUS_SHIFT))&IOMUXC_DDR_A_5_PUS_MASK)
#define IOMUXC_DDR_A_5_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_5_DSE_SHIFT                 6
#define IOMUXC_DDR_A_5_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_5_DSE_SHIFT))&IOMUXC_DDR_A_5_DSE_MASK)
#define IOMUXC_DDR_A_5_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_5_HYS_SHIFT                 9
#define IOMUXC_DDR_A_5_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_5_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_5_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_5_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_5_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_5_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_5_DDR_INPUT_SHIFT           16
/* DDR_A_4 Bit Fields */
#define IOMUXC_DDR_A_4_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_4_PUE_SHIFT                 2
#define IOMUXC_DDR_A_4_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_4_PKE_SHIFT                 3
#define IOMUXC_DDR_A_4_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_4_PUS_SHIFT                 4
#define IOMUXC_DDR_A_4_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_4_PUS_SHIFT))&IOMUXC_DDR_A_4_PUS_MASK)
#define IOMUXC_DDR_A_4_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_4_DSE_SHIFT                 6
#define IOMUXC_DDR_A_4_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_4_DSE_SHIFT))&IOMUXC_DDR_A_4_DSE_MASK)
#define IOMUXC_DDR_A_4_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_4_HYS_SHIFT                 9
#define IOMUXC_DDR_A_4_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_4_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_4_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_4_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_4_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_4_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_4_DDR_INPUT_SHIFT           16
/* DDR_A_3 Bit Fields */
#define IOMUXC_DDR_A_3_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_3_PUE_SHIFT                 2
#define IOMUXC_DDR_A_3_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_3_PKE_SHIFT                 3
#define IOMUXC_DDR_A_3_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_3_PUS_SHIFT                 4
#define IOMUXC_DDR_A_3_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_3_PUS_SHIFT))&IOMUXC_DDR_A_3_PUS_MASK)
#define IOMUXC_DDR_A_3_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_3_DSE_SHIFT                 6
#define IOMUXC_DDR_A_3_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_3_DSE_SHIFT))&IOMUXC_DDR_A_3_DSE_MASK)
#define IOMUXC_DDR_A_3_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_3_HYS_SHIFT                 9
#define IOMUXC_DDR_A_3_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_3_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_3_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_3_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_3_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_3_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_3_DDR_INPUT_SHIFT           16
/* DDR_A_2 Bit Fields */
#define IOMUXC_DDR_A_2_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_2_PUE_SHIFT                 2
#define IOMUXC_DDR_A_2_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_2_PKE_SHIFT                 3
#define IOMUXC_DDR_A_2_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_2_PUS_SHIFT                 4
#define IOMUXC_DDR_A_2_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_2_PUS_SHIFT))&IOMUXC_DDR_A_2_PUS_MASK)
#define IOMUXC_DDR_A_2_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_2_DSE_SHIFT                 6
#define IOMUXC_DDR_A_2_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_2_DSE_SHIFT))&IOMUXC_DDR_A_2_DSE_MASK)
#define IOMUXC_DDR_A_2_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_2_HYS_SHIFT                 9
#define IOMUXC_DDR_A_2_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_2_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_2_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_2_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_2_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_2_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_2_DDR_INPUT_SHIFT           16
/* DDR_A_1 Bit Fields */
#define IOMUXC_DDR_A_1_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_1_PUE_SHIFT                 2
#define IOMUXC_DDR_A_1_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_1_PKE_SHIFT                 3
#define IOMUXC_DDR_A_1_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_1_PUS_SHIFT                 4
#define IOMUXC_DDR_A_1_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_1_PUS_SHIFT))&IOMUXC_DDR_A_1_PUS_MASK)
#define IOMUXC_DDR_A_1_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_1_DSE_SHIFT                 6
#define IOMUXC_DDR_A_1_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_1_DSE_SHIFT))&IOMUXC_DDR_A_1_DSE_MASK)
#define IOMUXC_DDR_A_1_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_1_HYS_SHIFT                 9
#define IOMUXC_DDR_A_1_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_1_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_1_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_1_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_1_DDR_INPUT_SHIFT           16
/* DDR_A_0 Bit Fields */
#define IOMUXC_DDR_A_0_PUE_MASK                  0x4u
#define IOMUXC_DDR_A_0_PUE_SHIFT                 2
#define IOMUXC_DDR_A_0_PKE_MASK                  0x8u
#define IOMUXC_DDR_A_0_PKE_SHIFT                 3
#define IOMUXC_DDR_A_0_PUS_MASK                  0x30u
#define IOMUXC_DDR_A_0_PUS_SHIFT                 4
#define IOMUXC_DDR_A_0_PUS(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_0_PUS_SHIFT))&IOMUXC_DDR_A_0_PUS_MASK)
#define IOMUXC_DDR_A_0_DSE_MASK                  0x1C0u
#define IOMUXC_DDR_A_0_DSE_SHIFT                 6
#define IOMUXC_DDR_A_0_DSE(x)                    (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_0_DSE_SHIFT))&IOMUXC_DDR_A_0_DSE_MASK)
#define IOMUXC_DDR_A_0_HYS_MASK                  0x200u
#define IOMUXC_DDR_A_0_HYS_SHIFT                 9
#define IOMUXC_DDR_A_0_DDR_TRIM_MASK             0xC000u
#define IOMUXC_DDR_A_0_DDR_TRIM_SHIFT            14
#define IOMUXC_DDR_A_0_DDR_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_A_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_A_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_A_0_DDR_INPUT_MASK            0x10000u
#define IOMUXC_DDR_A_0_DDR_INPUT_SHIFT           16
/* DDR_BA_2 Bit Fields */
#define IOMUXC_DDR_BA_2_PUE_MASK                 0x4u
#define IOMUXC_DDR_BA_2_PUE_SHIFT                2
#define IOMUXC_DDR_BA_2_PKE_MASK                 0x8u
#define IOMUXC_DDR_BA_2_PKE_SHIFT                3
#define IOMUXC_DDR_BA_2_PUS_MASK                 0x30u
#define IOMUXC_DDR_BA_2_PUS_SHIFT                4
#define IOMUXC_DDR_BA_2_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_2_PUS_SHIFT))&IOMUXC_DDR_BA_2_PUS_MASK)
#define IOMUXC_DDR_BA_2_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_BA_2_DSE_SHIFT                6
#define IOMUXC_DDR_BA_2_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_2_DSE_SHIFT))&IOMUXC_DDR_BA_2_DSE_MASK)
#define IOMUXC_DDR_BA_2_HYS_MASK                 0x200u
#define IOMUXC_DDR_BA_2_HYS_SHIFT                9
#define IOMUXC_DDR_BA_2_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_BA_2_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_BA_2_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_2_DDR_TRIM_SHIFT))&IOMUXC_DDR_BA_2_DDR_TRIM_MASK)
#define IOMUXC_DDR_BA_2_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_BA_2_DDR_INPUT_SHIFT          16
/* DDR_BA_1 Bit Fields */
#define IOMUXC_DDR_BA_1_PUE_MASK                 0x4u
#define IOMUXC_DDR_BA_1_PUE_SHIFT                2
#define IOMUXC_DDR_BA_1_PKE_MASK                 0x8u
#define IOMUXC_DDR_BA_1_PKE_SHIFT                3
#define IOMUXC_DDR_BA_1_PUS_MASK                 0x30u
#define IOMUXC_DDR_BA_1_PUS_SHIFT                4
#define IOMUXC_DDR_BA_1_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_1_PUS_SHIFT))&IOMUXC_DDR_BA_1_PUS_MASK)
#define IOMUXC_DDR_BA_1_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_BA_1_DSE_SHIFT                6
#define IOMUXC_DDR_BA_1_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_1_DSE_SHIFT))&IOMUXC_DDR_BA_1_DSE_MASK)
#define IOMUXC_DDR_BA_1_HYS_MASK                 0x200u
#define IOMUXC_DDR_BA_1_HYS_SHIFT                9
#define IOMUXC_DDR_BA_1_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_BA_1_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_BA_1_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_BA_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_BA_1_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_BA_1_DDR_INPUT_SHIFT          16
/* DDR_BA_0 Bit Fields */
#define IOMUXC_DDR_BA_0_PUE_MASK                 0x4u
#define IOMUXC_DDR_BA_0_PUE_SHIFT                2
#define IOMUXC_DDR_BA_0_PKE_MASK                 0x8u
#define IOMUXC_DDR_BA_0_PKE_SHIFT                3
#define IOMUXC_DDR_BA_0_PUS_MASK                 0x30u
#define IOMUXC_DDR_BA_0_PUS_SHIFT                4
#define IOMUXC_DDR_BA_0_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_0_PUS_SHIFT))&IOMUXC_DDR_BA_0_PUS_MASK)
#define IOMUXC_DDR_BA_0_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_BA_0_DSE_SHIFT                6
#define IOMUXC_DDR_BA_0_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_0_DSE_SHIFT))&IOMUXC_DDR_BA_0_DSE_MASK)
#define IOMUXC_DDR_BA_0_HYS_MASK                 0x200u
#define IOMUXC_DDR_BA_0_HYS_SHIFT                9
#define IOMUXC_DDR_BA_0_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_BA_0_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_BA_0_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_BA_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_BA_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_BA_0_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_BA_0_DDR_INPUT_SHIFT          16
/* DDR_CAS_B Bit Fields */
#define IOMUXC_DDR_CAS_B_PUE_MASK                0x4u
#define IOMUXC_DDR_CAS_B_PUE_SHIFT               2
#define IOMUXC_DDR_CAS_B_PKE_MASK                0x8u
#define IOMUXC_DDR_CAS_B_PKE_SHIFT               3
#define IOMUXC_DDR_CAS_B_PUS_MASK                0x30u
#define IOMUXC_DDR_CAS_B_PUS_SHIFT               4
#define IOMUXC_DDR_CAS_B_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CAS_B_PUS_SHIFT))&IOMUXC_DDR_CAS_B_PUS_MASK)
#define IOMUXC_DDR_CAS_B_DSE_MASK                0x1C0u
#define IOMUXC_DDR_CAS_B_DSE_SHIFT               6
#define IOMUXC_DDR_CAS_B_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CAS_B_DSE_SHIFT))&IOMUXC_DDR_CAS_B_DSE_MASK)
#define IOMUXC_DDR_CAS_B_HYS_MASK                0x200u
#define IOMUXC_DDR_CAS_B_HYS_SHIFT               9
#define IOMUXC_DDR_CAS_B_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_CAS_B_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_CAS_B_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CAS_B_DDR_TRIM_SHIFT))&IOMUXC_DDR_CAS_B_DDR_TRIM_MASK)
#define IOMUXC_DDR_CAS_B_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_CAS_B_DDR_INPUT_SHIFT         16
/* DDR_CKE_0 Bit Fields */
#define IOMUXC_DDR_CKE_0_PUE_MASK                0x4u
#define IOMUXC_DDR_CKE_0_PUE_SHIFT               2
#define IOMUXC_DDR_CKE_0_PKE_MASK                0x8u
#define IOMUXC_DDR_CKE_0_PKE_SHIFT               3
#define IOMUXC_DDR_CKE_0_PUS_MASK                0x30u
#define IOMUXC_DDR_CKE_0_PUS_SHIFT               4
#define IOMUXC_DDR_CKE_0_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CKE_0_PUS_SHIFT))&IOMUXC_DDR_CKE_0_PUS_MASK)
#define IOMUXC_DDR_CKE_0_DSE_MASK                0x1C0u
#define IOMUXC_DDR_CKE_0_DSE_SHIFT               6
#define IOMUXC_DDR_CKE_0_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CKE_0_DSE_SHIFT))&IOMUXC_DDR_CKE_0_DSE_MASK)
#define IOMUXC_DDR_CKE_0_HYS_MASK                0x200u
#define IOMUXC_DDR_CKE_0_HYS_SHIFT               9
#define IOMUXC_DDR_CKE_0_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_CKE_0_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_CKE_0_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CKE_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_CKE_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_CKE_0_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_CKE_0_DDR_INPUT_SHIFT         16
/* DDR_CLK_0 Bit Fields */
#define IOMUXC_DDR_CLK_0_PUE_MASK                0x4u
#define IOMUXC_DDR_CLK_0_PUE_SHIFT               2
#define IOMUXC_DDR_CLK_0_PKE_MASK                0x8u
#define IOMUXC_DDR_CLK_0_PKE_SHIFT               3
#define IOMUXC_DDR_CLK_0_PUS_MASK                0x30u
#define IOMUXC_DDR_CLK_0_PUS_SHIFT               4
#define IOMUXC_DDR_CLK_0_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CLK_0_PUS_SHIFT))&IOMUXC_DDR_CLK_0_PUS_MASK)
#define IOMUXC_DDR_CLK_0_DSE_MASK                0x1C0u
#define IOMUXC_DDR_CLK_0_DSE_SHIFT               6
#define IOMUXC_DDR_CLK_0_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CLK_0_DSE_SHIFT))&IOMUXC_DDR_CLK_0_DSE_MASK)
#define IOMUXC_DDR_CLK_0_HYS_MASK                0x200u
#define IOMUXC_DDR_CLK_0_HYS_SHIFT               9
#define IOMUXC_DDR_CLK_0_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_CLK_0_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_CLK_0_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CLK_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_CLK_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_CLK_0_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_CLK_0_DDR_INPUT_SHIFT         16
/* DDR_CS_B_0 Bit Fields */
#define IOMUXC_DDR_CS_B_0_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_B_0_PUE_SHIFT              2
#define IOMUXC_DDR_CS_B_0_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_B_0_PKE_SHIFT              3
#define IOMUXC_DDR_CS_B_0_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_B_0_PUS_SHIFT              4
#define IOMUXC_DDR_CS_B_0_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_B_0_PUS_SHIFT))&IOMUXC_DDR_CS_B_0_PUS_MASK)
#define IOMUXC_DDR_CS_B_0_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_B_0_DSE_SHIFT              6
#define IOMUXC_DDR_CS_B_0_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_B_0_DSE_SHIFT))&IOMUXC_DDR_CS_B_0_DSE_MASK)
#define IOMUXC_DDR_CS_B_0_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_B_0_HYS_SHIFT              9
#define IOMUXC_DDR_CS_B_0_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_B_0_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_B_0_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_B_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_B_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_B_0_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_B_0_DDR_INPUT_SHIFT        16
/* DDR_CS_D_15 Bit Fields */
#define IOMUXC_DDR_CS_D_15_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_15_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_15_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_15_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_15_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_15_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_15_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_15_PUS_SHIFT))&IOMUXC_DDR_CS_D_15_PUS_MASK)
#define IOMUXC_DDR_CS_D_15_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_15_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_15_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_15_DSE_SHIFT))&IOMUXC_DDR_CS_D_15_DSE_MASK)
#define IOMUXC_DDR_CS_D_15_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_15_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_15_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_15_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_15_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_15_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_15_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_15_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_15_DDR_INPUT_SHIFT       16
/* DDR_CS_D_14 Bit Fields */
#define IOMUXC_DDR_CS_D_14_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_14_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_14_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_14_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_14_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_14_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_14_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_14_PUS_SHIFT))&IOMUXC_DDR_CS_D_14_PUS_MASK)
#define IOMUXC_DDR_CS_D_14_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_14_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_14_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_14_DSE_SHIFT))&IOMUXC_DDR_CS_D_14_DSE_MASK)
#define IOMUXC_DDR_CS_D_14_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_14_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_14_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_14_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_14_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_14_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_14_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_14_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_14_DDR_INPUT_SHIFT       16
/* DDR_CS_D_13 Bit Fields */
#define IOMUXC_DDR_CS_D_13_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_13_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_13_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_13_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_13_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_13_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_13_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_13_PUS_SHIFT))&IOMUXC_DDR_CS_D_13_PUS_MASK)
#define IOMUXC_DDR_CS_D_13_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_13_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_13_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_13_DSE_SHIFT))&IOMUXC_DDR_CS_D_13_DSE_MASK)
#define IOMUXC_DDR_CS_D_13_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_13_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_13_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_13_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_13_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_13_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_13_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_13_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_13_DDR_INPUT_SHIFT       16
/* DDR_CS_D_12 Bit Fields */
#define IOMUXC_DDR_CS_D_12_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_12_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_12_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_12_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_12_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_12_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_12_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_12_PUS_SHIFT))&IOMUXC_DDR_CS_D_12_PUS_MASK)
#define IOMUXC_DDR_CS_D_12_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_12_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_12_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_12_DSE_SHIFT))&IOMUXC_DDR_CS_D_12_DSE_MASK)
#define IOMUXC_DDR_CS_D_12_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_12_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_12_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_12_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_12_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_12_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_12_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_12_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_12_DDR_INPUT_SHIFT       16
/* DDR_CS_D_11 Bit Fields */
#define IOMUXC_DDR_CS_D_11_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_11_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_11_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_11_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_11_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_11_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_11_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_11_PUS_SHIFT))&IOMUXC_DDR_CS_D_11_PUS_MASK)
#define IOMUXC_DDR_CS_D_11_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_11_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_11_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_11_DSE_SHIFT))&IOMUXC_DDR_CS_D_11_DSE_MASK)
#define IOMUXC_DDR_CS_D_11_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_11_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_11_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_11_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_11_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_11_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_11_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_11_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_11_DDR_INPUT_SHIFT       16
/* DDR_CS_D_10 Bit Fields */
#define IOMUXC_DDR_CS_D_10_PUE_MASK              0x4u
#define IOMUXC_DDR_CS_D_10_PUE_SHIFT             2
#define IOMUXC_DDR_CS_D_10_PKE_MASK              0x8u
#define IOMUXC_DDR_CS_D_10_PKE_SHIFT             3
#define IOMUXC_DDR_CS_D_10_PUS_MASK              0x30u
#define IOMUXC_DDR_CS_D_10_PUS_SHIFT             4
#define IOMUXC_DDR_CS_D_10_PUS(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_10_PUS_SHIFT))&IOMUXC_DDR_CS_D_10_PUS_MASK)
#define IOMUXC_DDR_CS_D_10_DSE_MASK              0x1C0u
#define IOMUXC_DDR_CS_D_10_DSE_SHIFT             6
#define IOMUXC_DDR_CS_D_10_DSE(x)                (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_10_DSE_SHIFT))&IOMUXC_DDR_CS_D_10_DSE_MASK)
#define IOMUXC_DDR_CS_D_10_HYS_MASK              0x200u
#define IOMUXC_DDR_CS_D_10_HYS_SHIFT             9
#define IOMUXC_DDR_CS_D_10_DDR_TRIM_MASK         0xC000u
#define IOMUXC_DDR_CS_D_10_DDR_TRIM_SHIFT        14
#define IOMUXC_DDR_CS_D_10_DDR_TRIM(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_10_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_10_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_10_DDR_INPUT_MASK        0x10000u
#define IOMUXC_DDR_CS_D_10_DDR_INPUT_SHIFT       16
/* DDR_CS_D_9 Bit Fields */
#define IOMUXC_DDR_CS_D_9_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_9_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_9_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_9_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_9_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_9_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_9_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_9_PUS_SHIFT))&IOMUXC_DDR_CS_D_9_PUS_MASK)
#define IOMUXC_DDR_CS_D_9_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_9_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_9_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_9_DSE_SHIFT))&IOMUXC_DDR_CS_D_9_DSE_MASK)
#define IOMUXC_DDR_CS_D_9_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_9_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_9_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_9_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_9_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_9_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_9_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_9_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_9_DDR_INPUT_SHIFT        16
/* DDR_CS_D_8 Bit Fields */
#define IOMUXC_DDR_CS_D_8_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_8_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_8_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_8_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_8_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_8_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_8_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_8_PUS_SHIFT))&IOMUXC_DDR_CS_D_8_PUS_MASK)
#define IOMUXC_DDR_CS_D_8_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_8_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_8_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_8_DSE_SHIFT))&IOMUXC_DDR_CS_D_8_DSE_MASK)
#define IOMUXC_DDR_CS_D_8_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_8_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_8_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_8_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_8_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_8_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_8_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_8_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_8_DDR_INPUT_SHIFT        16
/* DDR_CS_D_7 Bit Fields */
#define IOMUXC_DDR_CS_D_7_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_7_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_7_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_7_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_7_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_7_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_7_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_7_PUS_SHIFT))&IOMUXC_DDR_CS_D_7_PUS_MASK)
#define IOMUXC_DDR_CS_D_7_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_7_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_7_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_7_DSE_SHIFT))&IOMUXC_DDR_CS_D_7_DSE_MASK)
#define IOMUXC_DDR_CS_D_7_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_7_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_7_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_7_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_7_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_7_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_7_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_7_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_7_DDR_INPUT_SHIFT        16
/* DDR_CS_D_6 Bit Fields */
#define IOMUXC_DDR_CS_D_6_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_6_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_6_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_6_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_6_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_6_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_6_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_6_PUS_SHIFT))&IOMUXC_DDR_CS_D_6_PUS_MASK)
#define IOMUXC_DDR_CS_D_6_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_6_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_6_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_6_DSE_SHIFT))&IOMUXC_DDR_CS_D_6_DSE_MASK)
#define IOMUXC_DDR_CS_D_6_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_6_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_6_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_6_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_6_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_6_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_6_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_6_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_6_DDR_INPUT_SHIFT        16
/* DDR_CS_D_5 Bit Fields */
#define IOMUXC_DDR_CS_D_5_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_5_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_5_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_5_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_5_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_5_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_5_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_5_PUS_SHIFT))&IOMUXC_DDR_CS_D_5_PUS_MASK)
#define IOMUXC_DDR_CS_D_5_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_5_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_5_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_5_DSE_SHIFT))&IOMUXC_DDR_CS_D_5_DSE_MASK)
#define IOMUXC_DDR_CS_D_5_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_5_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_5_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_5_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_5_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_5_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_5_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_5_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_5_DDR_INPUT_SHIFT        16
/* DDR_CS_D_4 Bit Fields */
#define IOMUXC_DDR_CS_D_4_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_4_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_4_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_4_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_4_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_4_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_4_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_4_PUS_SHIFT))&IOMUXC_DDR_CS_D_4_PUS_MASK)
#define IOMUXC_DDR_CS_D_4_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_4_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_4_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_4_DSE_SHIFT))&IOMUXC_DDR_CS_D_4_DSE_MASK)
#define IOMUXC_DDR_CS_D_4_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_4_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_4_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_4_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_4_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_4_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_4_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_4_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_4_DDR_INPUT_SHIFT        16
/* DDR_CS_D_3 Bit Fields */
#define IOMUXC_DDR_CS_D_3_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_3_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_3_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_3_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_3_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_3_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_3_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_3_PUS_SHIFT))&IOMUXC_DDR_CS_D_3_PUS_MASK)
#define IOMUXC_DDR_CS_D_3_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_3_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_3_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_3_DSE_SHIFT))&IOMUXC_DDR_CS_D_3_DSE_MASK)
#define IOMUXC_DDR_CS_D_3_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_3_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_3_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_3_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_3_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_3_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_3_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_3_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_3_DDR_INPUT_SHIFT        16
/* DDR_CS_D_2 Bit Fields */
#define IOMUXC_DDR_CS_D_2_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_2_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_2_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_2_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_2_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_2_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_2_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_2_PUS_SHIFT))&IOMUXC_DDR_CS_D_2_PUS_MASK)
#define IOMUXC_DDR_CS_D_2_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_2_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_2_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_2_DSE_SHIFT))&IOMUXC_DDR_CS_D_2_DSE_MASK)
#define IOMUXC_DDR_CS_D_2_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_2_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_2_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_2_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_2_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_2_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_2_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_2_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_2_DDR_INPUT_SHIFT        16
/* DDR_CS_D_1 Bit Fields */
#define IOMUXC_DDR_CS_D_1_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_1_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_1_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_1_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_1_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_1_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_1_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_1_PUS_SHIFT))&IOMUXC_DDR_CS_D_1_PUS_MASK)
#define IOMUXC_DDR_CS_D_1_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_1_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_1_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_1_DSE_SHIFT))&IOMUXC_DDR_CS_D_1_DSE_MASK)
#define IOMUXC_DDR_CS_D_1_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_1_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_1_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_1_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_1_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_1_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_1_DDR_INPUT_SHIFT        16
/* DDR_CS_D_0 Bit Fields */
#define IOMUXC_DDR_CS_D_0_PUE_MASK               0x4u
#define IOMUXC_DDR_CS_D_0_PUE_SHIFT              2
#define IOMUXC_DDR_CS_D_0_PKE_MASK               0x8u
#define IOMUXC_DDR_CS_D_0_PKE_SHIFT              3
#define IOMUXC_DDR_CS_D_0_PUS_MASK               0x30u
#define IOMUXC_DDR_CS_D_0_PUS_SHIFT              4
#define IOMUXC_DDR_CS_D_0_PUS(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_0_PUS_SHIFT))&IOMUXC_DDR_CS_D_0_PUS_MASK)
#define IOMUXC_DDR_CS_D_0_DSE_MASK               0x1C0u
#define IOMUXC_DDR_CS_D_0_DSE_SHIFT              6
#define IOMUXC_DDR_CS_D_0_DSE(x)                 (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_0_DSE_SHIFT))&IOMUXC_DDR_CS_D_0_DSE_MASK)
#define IOMUXC_DDR_CS_D_0_HYS_MASK               0x200u
#define IOMUXC_DDR_CS_D_0_HYS_SHIFT              9
#define IOMUXC_DDR_CS_D_0_DDR_TRIM_MASK          0xC000u
#define IOMUXC_DDR_CS_D_0_DDR_TRIM_SHIFT         14
#define IOMUXC_DDR_CS_D_0_DDR_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_CS_D_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_CS_D_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_CS_D_0_DDR_INPUT_MASK         0x10000u
#define IOMUXC_DDR_CS_D_0_DDR_INPUT_SHIFT        16
/* DDR_DQM_1 Bit Fields */
#define IOMUXC_DDR_DQM_1_PUE_MASK                0x4u
#define IOMUXC_DDR_DQM_1_PUE_SHIFT               2
#define IOMUXC_DDR_DQM_1_PKE_MASK                0x8u
#define IOMUXC_DDR_DQM_1_PKE_SHIFT               3
#define IOMUXC_DDR_DQM_1_PUS_MASK                0x30u
#define IOMUXC_DDR_DQM_1_PUS_SHIFT               4
#define IOMUXC_DDR_DQM_1_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_1_PUS_SHIFT))&IOMUXC_DDR_DQM_1_PUS_MASK)
#define IOMUXC_DDR_DQM_1_DSE_MASK                0x1C0u
#define IOMUXC_DDR_DQM_1_DSE_SHIFT               6
#define IOMUXC_DDR_DQM_1_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_1_DSE_SHIFT))&IOMUXC_DDR_DQM_1_DSE_MASK)
#define IOMUXC_DDR_DQM_1_HYS_MASK                0x200u
#define IOMUXC_DDR_DQM_1_HYS_SHIFT               9
#define IOMUXC_DDR_DQM_1_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_DQM_1_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_DQM_1_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_DQM_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_DQM_1_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_DQM_1_DDR_INPUT_SHIFT         16
/* DDR_DQM_0 Bit Fields */
#define IOMUXC_DDR_DQM_0_PUE_MASK                0x4u
#define IOMUXC_DDR_DQM_0_PUE_SHIFT               2
#define IOMUXC_DDR_DQM_0_PKE_MASK                0x8u
#define IOMUXC_DDR_DQM_0_PKE_SHIFT               3
#define IOMUXC_DDR_DQM_0_PUS_MASK                0x30u
#define IOMUXC_DDR_DQM_0_PUS_SHIFT               4
#define IOMUXC_DDR_DQM_0_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_0_PUS_SHIFT))&IOMUXC_DDR_DQM_0_PUS_MASK)
#define IOMUXC_DDR_DQM_0_DSE_MASK                0x1C0u
#define IOMUXC_DDR_DQM_0_DSE_SHIFT               6
#define IOMUXC_DDR_DQM_0_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_0_DSE_SHIFT))&IOMUXC_DDR_DQM_0_DSE_MASK)
#define IOMUXC_DDR_DQM_0_HYS_MASK                0x200u
#define IOMUXC_DDR_DQM_0_HYS_SHIFT               9
#define IOMUXC_DDR_DQM_0_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_DQM_0_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_DQM_0_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQM_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_DQM_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_DQM_0_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_DQM_0_DDR_INPUT_SHIFT         16
/* DDR_DQS_1 Bit Fields */
#define IOMUXC_DDR_DQS_1_PUE_MASK                0x4u
#define IOMUXC_DDR_DQS_1_PUE_SHIFT               2
#define IOMUXC_DDR_DQS_1_PKE_MASK                0x8u
#define IOMUXC_DDR_DQS_1_PKE_SHIFT               3
#define IOMUXC_DDR_DQS_1_PUS_MASK                0x30u
#define IOMUXC_DDR_DQS_1_PUS_SHIFT               4
#define IOMUXC_DDR_DQS_1_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_1_PUS_SHIFT))&IOMUXC_DDR_DQS_1_PUS_MASK)
#define IOMUXC_DDR_DQS_1_DSE_MASK                0x1C0u
#define IOMUXC_DDR_DQS_1_DSE_SHIFT               6
#define IOMUXC_DDR_DQS_1_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_1_DSE_SHIFT))&IOMUXC_DDR_DQS_1_DSE_MASK)
#define IOMUXC_DDR_DQS_1_HYS_MASK                0x200u
#define IOMUXC_DDR_DQS_1_HYS_SHIFT               9
#define IOMUXC_DDR_DQS_1_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_DQS_1_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_DQS_1_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_DQS_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_DQS_1_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_DQS_1_DDR_INPUT_SHIFT         16
/* DDR_DQS_0 Bit Fields */
#define IOMUXC_DDR_DQS_0_PUE_MASK                0x4u
#define IOMUXC_DDR_DQS_0_PUE_SHIFT               2
#define IOMUXC_DDR_DQS_0_PKE_MASK                0x8u
#define IOMUXC_DDR_DQS_0_PKE_SHIFT               3
#define IOMUXC_DDR_DQS_0_PUS_MASK                0x30u
#define IOMUXC_DDR_DQS_0_PUS_SHIFT               4
#define IOMUXC_DDR_DQS_0_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_0_PUS_SHIFT))&IOMUXC_DDR_DQS_0_PUS_MASK)
#define IOMUXC_DDR_DQS_0_DSE_MASK                0x1C0u
#define IOMUXC_DDR_DQS_0_DSE_SHIFT               6
#define IOMUXC_DDR_DQS_0_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_0_DSE_SHIFT))&IOMUXC_DDR_DQS_0_DSE_MASK)
#define IOMUXC_DDR_DQS_0_HYS_MASK                0x200u
#define IOMUXC_DDR_DQS_0_HYS_SHIFT               9
#define IOMUXC_DDR_DQS_0_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_DQS_0_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_DQS_0_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_DQS_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_DQS_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_DQS_0_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_DQS_0_DDR_INPUT_SHIFT         16
/* DDR_RAS_B Bit Fields */
#define IOMUXC_DDR_RAS_B_PUE_MASK                0x4u
#define IOMUXC_DDR_RAS_B_PUE_SHIFT               2
#define IOMUXC_DDR_RAS_B_PKE_MASK                0x8u
#define IOMUXC_DDR_RAS_B_PKE_SHIFT               3
#define IOMUXC_DDR_RAS_B_PUS_MASK                0x30u
#define IOMUXC_DDR_RAS_B_PUS_SHIFT               4
#define IOMUXC_DDR_RAS_B_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RAS_B_PUS_SHIFT))&IOMUXC_DDR_RAS_B_PUS_MASK)
#define IOMUXC_DDR_RAS_B_DSE_MASK                0x1C0u
#define IOMUXC_DDR_RAS_B_DSE_SHIFT               6
#define IOMUXC_DDR_RAS_B_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RAS_B_DSE_SHIFT))&IOMUXC_DDR_RAS_B_DSE_MASK)
#define IOMUXC_DDR_RAS_B_HYS_MASK                0x200u
#define IOMUXC_DDR_RAS_B_HYS_SHIFT               9
#define IOMUXC_DDR_RAS_B_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_RAS_B_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_RAS_B_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_RAS_B_DDR_TRIM_SHIFT))&IOMUXC_DDR_RAS_B_DDR_TRIM_MASK)
#define IOMUXC_DDR_RAS_B_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_RAS_B_DDR_INPUT_SHIFT         16
/* DDR_WE_B Bit Fields */
#define IOMUXC_DDR_WE_B_PUE_MASK                 0x4u
#define IOMUXC_DDR_WE_B_PUE_SHIFT                2
#define IOMUXC_DDR_WE_B_PKE_MASK                 0x8u
#define IOMUXC_DDR_WE_B_PKE_SHIFT                3
#define IOMUXC_DDR_WE_B_PUS_MASK                 0x30u
#define IOMUXC_DDR_WE_B_PUS_SHIFT                4
#define IOMUXC_DDR_WE_B_PUS(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_WE_B_PUS_SHIFT))&IOMUXC_DDR_WE_B_PUS_MASK)
#define IOMUXC_DDR_WE_B_DSE_MASK                 0x1C0u
#define IOMUXC_DDR_WE_B_DSE_SHIFT                6
#define IOMUXC_DDR_WE_B_DSE(x)                   (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_WE_B_DSE_SHIFT))&IOMUXC_DDR_WE_B_DSE_MASK)
#define IOMUXC_DDR_WE_B_HYS_MASK                 0x200u
#define IOMUXC_DDR_WE_B_HYS_SHIFT                9
#define IOMUXC_DDR_WE_B_DDR_TRIM_MASK            0xC000u
#define IOMUXC_DDR_WE_B_DDR_TRIM_SHIFT           14
#define IOMUXC_DDR_WE_B_DDR_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_WE_B_DDR_TRIM_SHIFT))&IOMUXC_DDR_WE_B_DDR_TRIM_MASK)
#define IOMUXC_DDR_WE_B_DDR_INPUT_MASK           0x10000u
#define IOMUXC_DDR_WE_B_DDR_INPUT_SHIFT          16
/* DDR_ODT_0 Bit Fields */
#define IOMUXC_DDR_ODT_0_PUE_MASK                0x4u
#define IOMUXC_DDR_ODT_0_PUE_SHIFT               2
#define IOMUXC_DDR_ODT_0_PKE_MASK                0x8u
#define IOMUXC_DDR_ODT_0_PKE_SHIFT               3
#define IOMUXC_DDR_ODT_0_PUS_MASK                0x30u
#define IOMUXC_DDR_ODT_0_PUS_SHIFT               4
#define IOMUXC_DDR_ODT_0_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_0_PUS_SHIFT))&IOMUXC_DDR_ODT_0_PUS_MASK)
#define IOMUXC_DDR_ODT_0_DSE_MASK                0x1C0u
#define IOMUXC_DDR_ODT_0_DSE_SHIFT               6
#define IOMUXC_DDR_ODT_0_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_0_DSE_SHIFT))&IOMUXC_DDR_ODT_0_DSE_MASK)
#define IOMUXC_DDR_ODT_0_HYS_MASK                0x200u
#define IOMUXC_DDR_ODT_0_HYS_SHIFT               9
#define IOMUXC_DDR_ODT_0_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_ODT_0_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_ODT_0_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_0_DDR_TRIM_SHIFT))&IOMUXC_DDR_ODT_0_DDR_TRIM_MASK)
#define IOMUXC_DDR_ODT_0_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_ODT_0_DDR_INPUT_SHIFT         16
/* DDR_ODT_1 Bit Fields */
#define IOMUXC_DDR_ODT_1_PUE_MASK                0x4u
#define IOMUXC_DDR_ODT_1_PUE_SHIFT               2
#define IOMUXC_DDR_ODT_1_PKE_MASK                0x8u
#define IOMUXC_DDR_ODT_1_PKE_SHIFT               3
#define IOMUXC_DDR_ODT_1_PUS_MASK                0x30u
#define IOMUXC_DDR_ODT_1_PUS_SHIFT               4
#define IOMUXC_DDR_ODT_1_PUS(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_1_PUS_SHIFT))&IOMUXC_DDR_ODT_1_PUS_MASK)
#define IOMUXC_DDR_ODT_1_DSE_MASK                0x1C0u
#define IOMUXC_DDR_ODT_1_DSE_SHIFT               6
#define IOMUXC_DDR_ODT_1_DSE(x)                  (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_1_DSE_SHIFT))&IOMUXC_DDR_ODT_1_DSE_MASK)
#define IOMUXC_DDR_ODT_1_HYS_MASK                0x200u
#define IOMUXC_DDR_ODT_1_HYS_SHIFT               9
#define IOMUXC_DDR_ODT_1_DDR_TRIM_MASK           0xC000u
#define IOMUXC_DDR_ODT_1_DDR_TRIM_SHIFT          14
#define IOMUXC_DDR_ODT_1_DDR_TRIM(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DDR_ODT_1_DDR_TRIM_SHIFT))&IOMUXC_DDR_ODT_1_DDR_TRIM_MASK)
#define IOMUXC_DDR_ODT_1_DDR_INPUT_MASK          0x10000u
#define IOMUXC_DDR_ODT_1_DDR_INPUT_SHIFT         16
/* DUMMY_DDRBYTE1 Bit Fields */
#define IOMUXC_DUMMY_DDRBYTE1_PUE_MASK           0x4u
#define IOMUXC_DUMMY_DDRBYTE1_PUE_SHIFT          2
#define IOMUXC_DUMMY_DDRBYTE1_PKE_MASK           0x8u
#define IOMUXC_DUMMY_DDRBYTE1_PKE_SHIFT          3
#define IOMUXC_DUMMY_DDRBYTE1_PUS_MASK           0x30u
#define IOMUXC_DUMMY_DDRBYTE1_PUS_SHIFT          4
#define IOMUXC_DUMMY_DDRBYTE1_PUS(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE1_PUS_SHIFT))&IOMUXC_DUMMY_DDRBYTE1_PUS_MASK)
#define IOMUXC_DUMMY_DDRBYTE1_DSE_MASK           0x1C0u
#define IOMUXC_DUMMY_DDRBYTE1_DSE_SHIFT          6
#define IOMUXC_DUMMY_DDRBYTE1_DSE(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE1_DSE_SHIFT))&IOMUXC_DUMMY_DDRBYTE1_DSE_MASK)
#define IOMUXC_DUMMY_DDRBYTE1_HYS_MASK           0x200u
#define IOMUXC_DUMMY_DDRBYTE1_HYS_SHIFT          9
#define IOMUXC_DUMMY_DDRBYTE1_DDR_TRIM_MASK      0xC000u
#define IOMUXC_DUMMY_DDRBYTE1_DDR_TRIM_SHIFT     14
#define IOMUXC_DUMMY_DDRBYTE1_DDR_TRIM(x)        (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE1_DDR_TRIM_SHIFT))&IOMUXC_DUMMY_DDRBYTE1_DDR_TRIM_MASK)
#define IOMUXC_DUMMY_DDRBYTE1_DDR_INPUT_MASK     0x10000u
#define IOMUXC_DUMMY_DDRBYTE1_DDR_INPUT_SHIFT    16
/* DUMMY_DDRBYTE2 Bit Fields */
#define IOMUXC_DUMMY_DDRBYTE2_PUE_MASK           0x4u
#define IOMUXC_DUMMY_DDRBYTE2_PUE_SHIFT          2
#define IOMUXC_DUMMY_DDRBYTE2_PKE_MASK           0x8u
#define IOMUXC_DUMMY_DDRBYTE2_PKE_SHIFT          3
#define IOMUXC_DUMMY_DDRBYTE2_PUS_MASK           0x30u
#define IOMUXC_DUMMY_DDRBYTE2_PUS_SHIFT          4
#define IOMUXC_DUMMY_DDRBYTE2_PUS(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE2_PUS_SHIFT))&IOMUXC_DUMMY_DDRBYTE2_PUS_MASK)
#define IOMUXC_DUMMY_DDRBYTE2_DSE_MASK           0x1C0u
#define IOMUXC_DUMMY_DDRBYTE2_DSE_SHIFT          6
#define IOMUXC_DUMMY_DDRBYTE2_DSE(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE2_DSE_SHIFT))&IOMUXC_DUMMY_DDRBYTE2_DSE_MASK)
#define IOMUXC_DUMMY_DDRBYTE2_HYS_MASK           0x200u
#define IOMUXC_DUMMY_DDRBYTE2_HYS_SHIFT          9
#define IOMUXC_DUMMY_DDRBYTE2_DDR_TRIM_MASK      0xC000u
#define IOMUXC_DUMMY_DDRBYTE2_DDR_TRIM_SHIFT     14
#define IOMUXC_DUMMY_DDRBYTE2_DDR_TRIM(x)        (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_DDRBYTE2_DDR_TRIM_SHIFT))&IOMUXC_DUMMY_DDRBYTE2_DDR_TRIM_MASK)
#define IOMUXC_DUMMY_DDRBYTE2_DDR_INPUT_MASK     0x10000u
#define IOMUXC_DUMMY_DDRBYTE2_DDR_INPUT_SHIFT    16
/* DUMMY_QUADSPI0 Bit Fields */
#define IOMUXC_DUMMY_QUADSPI0_IBE_MASK           0x1u
#define IOMUXC_DUMMY_QUADSPI0_IBE_SHIFT          0
#define IOMUXC_DUMMY_QUADSPI0_OBE_MASK           0x2u
#define IOMUXC_DUMMY_QUADSPI0_OBE_SHIFT          1
#define IOMUXC_DUMMY_QUADSPI0_PUE_MASK           0x4u
#define IOMUXC_DUMMY_QUADSPI0_PUE_SHIFT          2
#define IOMUXC_DUMMY_QUADSPI0_PKE_MASK           0x8u
#define IOMUXC_DUMMY_QUADSPI0_PKE_SHIFT          3
#define IOMUXC_DUMMY_QUADSPI0_PUS_MASK           0x30u
#define IOMUXC_DUMMY_QUADSPI0_PUS_SHIFT          4
#define IOMUXC_DUMMY_QUADSPI0_PUS(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI0_PUS_SHIFT))&IOMUXC_DUMMY_QUADSPI0_PUS_MASK)
#define IOMUXC_DUMMY_QUADSPI0_DSE_MASK           0x1C0u
#define IOMUXC_DUMMY_QUADSPI0_DSE_SHIFT          6
#define IOMUXC_DUMMY_QUADSPI0_DSE(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI0_DSE_SHIFT))&IOMUXC_DUMMY_QUADSPI0_DSE_MASK)
#define IOMUXC_DUMMY_QUADSPI0_HYS_MASK           0x200u
#define IOMUXC_DUMMY_QUADSPI0_HYS_SHIFT          9
#define IOMUXC_DUMMY_QUADSPI0_ODE_MASK           0x400u
#define IOMUXC_DUMMY_QUADSPI0_ODE_SHIFT          10
#define IOMUXC_DUMMY_QUADSPI0_SRE_MASK           0x800u
#define IOMUXC_DUMMY_QUADSPI0_SRE_SHIFT          11
#define IOMUXC_DUMMY_QUADSPI0_SPEED_MASK         0x3000u
#define IOMUXC_DUMMY_QUADSPI0_SPEED_SHIFT        12
#define IOMUXC_DUMMY_QUADSPI0_SPEED(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI0_SPEED_SHIFT))&IOMUXC_DUMMY_QUADSPI0_SPEED_MASK)
/* DUMMY_QUADSPI1 Bit Fields */
#define IOMUXC_DUMMY_QUADSPI1_IBE_MASK           0x1u
#define IOMUXC_DUMMY_QUADSPI1_IBE_SHIFT          0
#define IOMUXC_DUMMY_QUADSPI1_OBE_MASK           0x2u
#define IOMUXC_DUMMY_QUADSPI1_OBE_SHIFT          1
#define IOMUXC_DUMMY_QUADSPI1_PUE_MASK           0x4u
#define IOMUXC_DUMMY_QUADSPI1_PUE_SHIFT          2
#define IOMUXC_DUMMY_QUADSPI1_PKE_MASK           0x8u
#define IOMUXC_DUMMY_QUADSPI1_PKE_SHIFT          3
#define IOMUXC_DUMMY_QUADSPI1_PUS_MASK           0x30u
#define IOMUXC_DUMMY_QUADSPI1_PUS_SHIFT          4
#define IOMUXC_DUMMY_QUADSPI1_PUS(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI1_PUS_SHIFT))&IOMUXC_DUMMY_QUADSPI1_PUS_MASK)
#define IOMUXC_DUMMY_QUADSPI1_DSE_MASK           0x1C0u
#define IOMUXC_DUMMY_QUADSPI1_DSE_SHIFT          6
#define IOMUXC_DUMMY_QUADSPI1_DSE(x)             (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI1_DSE_SHIFT))&IOMUXC_DUMMY_QUADSPI1_DSE_MASK)
#define IOMUXC_DUMMY_QUADSPI1_HYS_MASK           0x200u
#define IOMUXC_DUMMY_QUADSPI1_HYS_SHIFT          9
#define IOMUXC_DUMMY_QUADSPI1_ODE_MASK           0x400u
#define IOMUXC_DUMMY_QUADSPI1_ODE_SHIFT          10
#define IOMUXC_DUMMY_QUADSPI1_SRE_MASK           0x800u
#define IOMUXC_DUMMY_QUADSPI1_SRE_SHIFT          11
#define IOMUXC_DUMMY_QUADSPI1_SPEED_MASK         0x3000u
#define IOMUXC_DUMMY_QUADSPI1_SPEED_SHIFT        12
#define IOMUXC_DUMMY_QUADSPI1_SPEED(x)           (((uint32_t)(((uint32_t)(x))<<IOMUXC_DUMMY_QUADSPI1_SPEED_SHIFT))&IOMUXC_DUMMY_QUADSPI1_SPEED_MASK)
/* CCM_AUD_EXT_CLK_SELECT_INPUT Bit Fields */
#define IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_DAISY_MASK)
/* CCM_ENET_EXT_CLK_SELECT_INPUT Bit Fields */
#define IOMUXC_CCM_ENET_EXT_CLK_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_CCM_ENET_EXT_CLK_SELECT_INPUT_DAISY_SHIFT 0
/* CCM_ENET_TS_CLK_SELECT_INPUT Bit Fields */
#define IOMUXC_CCM_ENET_TS_CLK_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_CCM_ENET_TS_CLK_SELECT_INPUT_DAISY_SHIFT 0
/* DSPI1_IPP_IND_SCK_SELECT_INPUT Bit Fields */
#define IOMUXC_DSPI1_IPP_IND_SCK_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_DSPI1_IPP_IND_SCK_SELECT_INPUT_DAISY_SHIFT 0
/* DSPI1_IPP_IND_SIN_SELECT_INPUT Bit Fields */
#define IOMUXC_DSPI1_IPP_IND_SIN_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_DSPI1_IPP_IND_SIN_SELECT_INPUT_DAISY_SHIFT 0
/* DSPI1_IPP_IND_SS_B_SELECT_INPUT Bit Fields */
#define IOMUXC_DSPI1_IPP_IND_SS_B_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_DSPI1_IPP_IND_SS_B_SELECT_INPUT_DAISY_SHIFT 0
/* ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT Bit Fields */
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT_DAISY_SHIFT 0
/* ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT Bit Fields */
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_FST_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_FST_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_FST_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SCKT_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SCKT_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SCKT_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO0_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO0_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO0_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO1_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO1_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO1_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT_DAISY_SHIFT 0
/* ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT Bit Fields */
#define IOMUXC_ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT_DAISY_SHIFT 0
/* FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT Bit Fields */
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT_DAISY_SHIFT 0
/* FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT Bit Fields */
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT_DAISY_SHIFT 0
/* FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT Bit Fields */
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT_DAISY_SHIFT 0
/* FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT Bit Fields */
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT_DAISY_SHIFT 0
/* I2C0_IPP_SCL_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK)
/* I2C0_IPP_SDA_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK)
/* I2C1_IPP_SCL_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK)
/* I2C1_IPP_SDA_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK)
/* I2C2_IPP_SCL_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_DAISY_MASK)
/* I2C2_IPP_SDA_IND_SELECT_INPUT Bit Fields */
#define IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_DAISY_MASK)
/* MLB_TOP_MLBCLK_IN_SELECT_INPUT Bit Fields */
#define IOMUXC_MLB_TOP_MLBCLK_IN_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_MLB_TOP_MLBCLK_IN_SELECT_INPUT_DAISY_SHIFT 0
/* MLB_TOP_MLBDAT_IN_SELECT_INPUT Bit Fields */
#define IOMUXC_MLB_TOP_MLBDAT_IN_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_MLB_TOP_MLBDAT_IN_SELECT_INPUT_DAISY_SHIFT 0
/* MLB_TOP_MLBSIG_IN_SELECT_INPUT Bit Fields */
#define IOMUXC_MLB_TOP_MLBSIG_IN_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_MLB_TOP_MLBSIG_IN_SELECT_INPUT_DAISY_SHIFT 0
/* SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT 0
/* SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_DAISY_MASK)
/* SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_DAISY_MASK)
/* SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_DAISY_MASK)
/* SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT_DAISY_SHIFT 0
/* SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT Bit Fields */
#define IOMUXC_SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT_DAISY_SHIFT 0
/* SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_DAISY_MASK)
/* SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_MASK)
/* SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_MASK)
/* SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT_DAISY_SHIFT 0
/* SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_MASK)
/* SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_MASK)
/* SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT_DAISY_SHIFT 0
/* SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT Bit Fields */
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT_DAISY_SHIFT 0
/* SRC_IPP_BOOT_CFG_18_SELECT_INPUT Bit Fields */
#define IOMUXC_SRC_IPP_BOOT_CFG_18_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SRC_IPP_BOOT_CFG_18_SELECT_INPUT_DAISY_SHIFT 0
/* SRC_IPP_BOOT_CFG_19_SELECT_INPUT Bit Fields */
#define IOMUXC_SRC_IPP_BOOT_CFG_19_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SRC_IPP_BOOT_CFG_19_SELECT_INPUT_DAISY_SHIFT 0
/* SRC_IPP_BOOT_CFG_20_SELECT_INPUT Bit Fields */
#define IOMUXC_SRC_IPP_BOOT_CFG_20_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_SRC_IPP_BOOT_CFG_20_SELECT_INPUT_DAISY_SHIFT 0
/* VIDEO_IN0_IPP_IND_DE_SELECT_INPUT Bit Fields */
#define IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_DAISY_MASK 0x3u
#define IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_DAISY_SHIFT 0
#define IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_DAISY(x) (((uint32_t)(((uint32_t)(x))<<IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_DAISY_SHIFT))&IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_DAISY_MASK)
/* VIDEO_IN0_IPP_IND_FID_SELECT_INPUT Bit Fields */
#define IOMUXC_VIDEO_IN0_IPP_IND_FID_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_VIDEO_IN0_IPP_IND_FID_SELECT_INPUT_DAISY_SHIFT 0
/* VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT Bit Fields */
#define IOMUXC_VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT_DAISY_MASK 0x1u
#define IOMUXC_VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT_DAISY_SHIFT 0

/**
 * @}
 */ /* end of group IOMUXC_Register_Masks */


/* IOMUXC - Peripheral instance base addresses */
/** Peripheral IOMUXC base pointer */
#define IOMUXC_BASE_PTR                          ((IOMUXC_MemMapPtr)0x40048000u)
/** Array initializer of IOMUXC peripheral base pointers */
#define IOMUXC_BASE_PTRS                         { IOMUXC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- IOMUXC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup IOMUXC_Register_Accessor_Macros IOMUXC - Register accessor macros
 * @{
 */


/* IOMUXC - Register instance definitions */
/* IOMUXC */
#define IOMUXC_PTA6                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,0)
#define IOMUXC_PTA8                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,1)
#define IOMUXC_PTA9                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,2)
#define IOMUXC_PTA10                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,3)
#define IOMUXC_PTA11                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,4)
#define IOMUXC_PTA12                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,5)
#define IOMUXC_PTA16                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,6)
#define IOMUXC_PTA17                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,7)
#define IOMUXC_PTA18                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,8)
#define IOMUXC_PTA19                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,9)
#define IOMUXC_PTA20                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,10)
#define IOMUXC_PTA21                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,11)
#define IOMUXC_PTA22                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,12)
#define IOMUXC_PTA23                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,13)
#define IOMUXC_PTA24                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,14)
#define IOMUXC_PTA25                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,15)
#define IOMUXC_PTA26                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,16)
#define IOMUXC_PTA27                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,17)
#define IOMUXC_PTA28                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,18)
#define IOMUXC_PTA29                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,19)
#define IOMUXC_PTA30                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,20)
#define IOMUXC_PTA31                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,21)
#define IOMUXC_PTB0                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,22)
#define IOMUXC_PTB1                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,23)
#define IOMUXC_PTB2                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,24)
#define IOMUXC_PTB3                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,25)
#define IOMUXC_PTB4                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,26)
#define IOMUXC_PTB5                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,27)
#define IOMUXC_PTB6                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,28)
#define IOMUXC_PTB7                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,29)
#define IOMUXC_PTB8                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,30)
#define IOMUXC_PTB9                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,31)
#define IOMUXC_PTB10                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,32)
#define IOMUXC_PTB11                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,33)
#define IOMUXC_PTB12                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,34)
#define IOMUXC_PTB13                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,35)
#define IOMUXC_PTB14                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,36)
#define IOMUXC_PTB15                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,37)
#define IOMUXC_PTB16                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,38)
#define IOMUXC_PTB17                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,39)
#define IOMUXC_PTB18                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,40)
#define IOMUXC_PTB19                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,41)
#define IOMUXC_PTB20                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,42)
#define IOMUXC_PTB21                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,43)
#define IOMUXC_PTB22                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,44)
#define IOMUXC_PTC0                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,45)
#define IOMUXC_PTC1                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,46)
#define IOMUXC_PTC2                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,47)
#define IOMUXC_PTC3                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,48)
#define IOMUXC_PTC4                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,49)
#define IOMUXC_PTC5                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,50)
#define IOMUXC_PTC6                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,51)
#define IOMUXC_PTC7                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,52)
#define IOMUXC_PTC8                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,53)
#define IOMUXC_PTC9                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,54)
#define IOMUXC_PTC10                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,55)
#define IOMUXC_PTC11                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,56)
#define IOMUXC_PTC12                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,57)
#define IOMUXC_PTC13                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,58)
#define IOMUXC_PTC14                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,59)
#define IOMUXC_PTC15                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,60)
#define IOMUXC_PTC16                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,61)
#define IOMUXC_PTC17                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,62)
#define IOMUXC_PTD31                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,63)
#define IOMUXC_PTD30                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,64)
#define IOMUXC_PTD29                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,65)
#define IOMUXC_PTD28                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,66)
#define IOMUXC_PTD27                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,67)
#define IOMUXC_PTD26                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,68)
#define IOMUXC_PTD25                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,69)
#define IOMUXC_PTD24                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,70)
#define IOMUXC_PTD23                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,71)
#define IOMUXC_PTD22                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,72)
#define IOMUXC_PTD21                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,73)
#define IOMUXC_PTD20                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,74)
#define IOMUXC_PTD19                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,75)
#define IOMUXC_PTD18                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,76)
#define IOMUXC_PTD17                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,77)
#define IOMUXC_PTD16                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,78)
#define IOMUXC_PTD0                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,79)
#define IOMUXC_PTD1                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,80)
#define IOMUXC_PTD2                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,81)
#define IOMUXC_PTD3                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,82)
#define IOMUXC_PTD4                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,83)
#define IOMUXC_PTD5                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,84)
#define IOMUXC_PTD6                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,85)
#define IOMUXC_PTD7                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,86)
#define IOMUXC_PTD8                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,87)
#define IOMUXC_PTD9                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,88)
#define IOMUXC_PTD10                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,89)
#define IOMUXC_PTD11                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,90)
#define IOMUXC_PTD12                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,91)
#define IOMUXC_PTD13                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,92)
#define IOMUXC_PTB23                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,93)
#define IOMUXC_PTB24                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,94)
#define IOMUXC_PTB25                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,95)
#define IOMUXC_PTB26                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,96)
#define IOMUXC_PTB27                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,97)
#define IOMUXC_PTB28                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,98)
#define IOMUXC_PTC26                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,99)
#define IOMUXC_PTC27                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,100)
#define IOMUXC_PTC28                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,101)
#define IOMUXC_PTC29                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,102)
#define IOMUXC_PTC30                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,103)
#define IOMUXC_PTC31                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,104)
#define IOMUXC_PTE0                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,105)
#define IOMUXC_PTE1                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,106)
#define IOMUXC_PTE2                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,107)
#define IOMUXC_PTE3                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,108)
#define IOMUXC_PTE4                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,109)
#define IOMUXC_PTE5                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,110)
#define IOMUXC_PTE6                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,111)
#define IOMUXC_PTE7                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,112)
#define IOMUXC_PTE8                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,113)
#define IOMUXC_PTE9                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,114)
#define IOMUXC_PTE10                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,115)
#define IOMUXC_PTE11                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,116)
#define IOMUXC_PTE12                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,117)
#define IOMUXC_PTE13                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,118)
#define IOMUXC_PTE14                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,119)
#define IOMUXC_PTE15                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,120)
#define IOMUXC_PTE16                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,121)
#define IOMUXC_PTE17                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,122)
#define IOMUXC_PTE18                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,123)
#define IOMUXC_PTE19                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,124)
#define IOMUXC_PTE20                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,125)
#define IOMUXC_PTE21                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,126)
#define IOMUXC_PTE22                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,127)
#define IOMUXC_PTE23                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,128)
#define IOMUXC_PTE24                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,129)
#define IOMUXC_PTE25                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,130)
#define IOMUXC_PTE26                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,131)
#define IOMUXC_PTE27                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,132)
#define IOMUXC_PTE28                             IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,133)
#define IOMUXC_PTA7                              IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,134)
#define IOMUXC_DDR_RESETB                        IOMUXC_DDR_RESETB_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_15                          IOMUXC_DDR_A_15_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_14                          IOMUXC_DDR_A_14_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_13                          IOMUXC_DDR_A_13_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_12                          IOMUXC_DDR_A_12_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_11                          IOMUXC_DDR_A_11_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_10                          IOMUXC_DDR_A_10_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_9                           IOMUXC_DDR_A_9_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_8                           IOMUXC_DDR_A_8_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_7                           IOMUXC_DDR_A_7_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_6                           IOMUXC_DDR_A_6_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_5                           IOMUXC_DDR_A_5_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_4                           IOMUXC_DDR_A_4_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_3                           IOMUXC_DDR_A_3_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_2                           IOMUXC_DDR_A_2_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_1                           IOMUXC_DDR_A_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_A_0                           IOMUXC_DDR_A_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_BA_2                          IOMUXC_DDR_BA_2_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_BA_1                          IOMUXC_DDR_BA_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_BA_0                          IOMUXC_DDR_BA_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CAS_B                         IOMUXC_DDR_CAS_B_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CKE_0                         IOMUXC_DDR_CKE_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CLK_0                         IOMUXC_DDR_CLK_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_B_0                        IOMUXC_DDR_CS_B_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_15                       IOMUXC_DDR_CS_D_15_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_14                       IOMUXC_DDR_CS_D_14_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_13                       IOMUXC_DDR_CS_D_13_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_12                       IOMUXC_DDR_CS_D_12_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_11                       IOMUXC_DDR_CS_D_11_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_10                       IOMUXC_DDR_CS_D_10_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_9                        IOMUXC_DDR_CS_D_9_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_8                        IOMUXC_DDR_CS_D_8_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_7                        IOMUXC_DDR_CS_D_7_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_6                        IOMUXC_DDR_CS_D_6_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_5                        IOMUXC_DDR_CS_D_5_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_4                        IOMUXC_DDR_CS_D_4_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_3                        IOMUXC_DDR_CS_D_3_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_2                        IOMUXC_DDR_CS_D_2_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_1                        IOMUXC_DDR_CS_D_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_CS_D_0                        IOMUXC_DDR_CS_D_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_DQM_1                         IOMUXC_DDR_DQM_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_DQM_0                         IOMUXC_DDR_DQM_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_DQS_1                         IOMUXC_DDR_DQS_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_DQS_0                         IOMUXC_DDR_DQS_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_RAS_B                         IOMUXC_DDR_RAS_B_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_WE_B                          IOMUXC_DDR_WE_B_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_ODT_0                         IOMUXC_DDR_ODT_0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DDR_ODT_1                         IOMUXC_DDR_ODT_1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DUMMY_DDRBYTE1                    IOMUXC_DUMMY_DDRBYTE1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DUMMY_DDRBYTE2                    IOMUXC_DUMMY_DDRBYTE2_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DUMMY_QUADSPI0                    IOMUXC_DUMMY_QUADSPI0_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DUMMY_QUADSPI1                    IOMUXC_DUMMY_QUADSPI1_REG(IOMUXC_BASE_PTR)
#define IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT      IOMUXC_CCM_AUD_EXT_CLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_CCM_ENET_EXT_CLK_SELECT_INPUT     IOMUXC_CCM_ENET_EXT_CLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_CCM_ENET_TS_CLK_SELECT_INPUT      IOMUXC_CCM_ENET_TS_CLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DSPI1_IPP_IND_SCK_SELECT_INPUT    IOMUXC_DSPI1_IPP_IND_SCK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DSPI1_IPP_IND_SIN_SELECT_INPUT    IOMUXC_DSPI1_IPP_IND_SIN_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_DSPI1_IPP_IND_SS_B_SELECT_INPUT   IOMUXC_DSPI1_IPP_IND_SS_B_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_0_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT IOMUXC_ENET_SWIAHB_IPP_IND_MAC0_TIMER_1_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_FST_SELECT_INPUT     IOMUXC_ESAI_IPP_IND_FST_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SCKT_SELECT_INPUT    IOMUXC_ESAI_IPP_IND_SCKT_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO0_SELECT_INPUT    IOMUXC_ESAI_IPP_IND_SDO0_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO1_SELECT_INPUT    IOMUXC_ESAI_IPP_IND_SDO1_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT IOMUXC_ESAI_IPP_IND_SDO2_SDI3_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT IOMUXC_ESAI_IPP_IND_SDO3_SDI2_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT IOMUXC_ESAI_IPP_IND_SDO4_SDI1_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT IOMUXC_ESAI_IPP_IND_SDO5_SDI0_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_0_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT IOMUXC_FLEXTIMER1_IPP_IND_FTM_CH_1_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHA_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT IOMUXC_FLEXTIMER1_IPP_IND_FTM_PHB_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT     IOMUXC_I2C0_IPP_SCL_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT     IOMUXC_I2C0_IPP_SDA_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT     IOMUXC_I2C1_IPP_SCL_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT     IOMUXC_I2C1_IPP_SDA_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT     IOMUXC_I2C2_IPP_SCL_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT     IOMUXC_I2C2_IPP_SDA_IND_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_MLB_TOP_MLBCLK_IN_SELECT_INPUT    IOMUXC_MLB_TOP_MLBCLK_IN_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_MLB_TOP_MLBDAT_IN_SELECT_INPUT    IOMUXC_MLB_TOP_MLBDAT_IN_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_MLB_TOP_MLBSIG_IN_SELECT_INPUT    IOMUXC_MLB_TOP_MLBSIG_IN_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT IOMUXC_SAI1_IPP_IND_SAI_TXSYNC_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT IOMUXC_SAI2_IPP_IND_SAI_RXBCLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT IOMUXC_SAI2_IPP_IND_SAI_RXDATA_0_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT IOMUXC_SAI2_IPP_IND_SAI_RXSYNC_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT IOMUXC_SAI2_IPP_IND_SAI_TXBCLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT IOMUXC_SAI2_IPP_IND_SAI_TXSYNC_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT IOMUXC_SCI_FLX1_IPP_IND_CTS_B_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT IOMUXC_SCI_FLX1_IPP_IND_SCI_RX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT IOMUXC_SCI_FLX1_IPP_IND_SCI_TX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT IOMUXC_SCI_FLX2_IPP_IND_CTS_B_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT IOMUXC_SCI_FLX2_IPP_IND_SCI_RX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT IOMUXC_SCI_FLX2_IPP_IND_SCI_TX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT IOMUXC_SCI_FLX3_IPP_IND_SCI_RX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT IOMUXC_SCI_FLX3_IPP_IND_SCI_TX_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SRC_IPP_BOOT_CFG_18_SELECT_INPUT  IOMUXC_SRC_IPP_BOOT_CFG_18_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SRC_IPP_BOOT_CFG_19_SELECT_INPUT  IOMUXC_SRC_IPP_BOOT_CFG_19_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_SRC_IPP_BOOT_CFG_20_SELECT_INPUT  IOMUXC_SRC_IPP_BOOT_CFG_20_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT IOMUXC_VIDEO_IN0_IPP_IND_DE_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_VIDEO_IN0_IPP_IND_FID_SELECT_INPUT IOMUXC_VIDEO_IN0_IPP_IND_FID_SELECT_INPUT_REG(IOMUXC_BASE_PTR)
#define IOMUXC_VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT IOMUXC_VIDEO_IN0_IPP_IND_PIX_CLK_SELECT_INPUT_REG(IOMUXC_BASE_PTR)

/* IOMUXC - Register array accessors */
#define IOMUXC_RGPIO(index)                      IOMUXC_RGPIO_REG(IOMUXC_BASE_PTR,index)

/**
 * @}
 */ /* end of group IOMUXC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group IOMUXC_Peripheral */


/* ----------------------------------------------------------------------------
   -- LCD
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LCD_Peripheral LCD
 * @{
 */

/** LCD - Peripheral register structure */
typedef struct LCD_MemMap {
  uint32_t LCDCR;                                  /**< LCD Control Register, offset: 0x0 */
  uint32_t LCDPCR;                                 /**< LCD Prescaler Control Register, offset: 0x4 */
  uint32_t LCDCCR;                                 /**< LCD Contrast Control Register, offset: 0x8 */
  uint8_t RESERVED_0[4];
  uint32_t ENFPR0;                                 /**< LCD Frontplane Enable Register 0, offset: 0x10 */
  uint32_t ENFPR1;                                 /**< LCD Frontplane Enable Register 1, offset: 0x14 */
  uint8_t RESERVED_1[8];
  uint32_t Location0;                              /**< LCDRAM, offset: 0x20 */
  uint32_t Location1;                              /**< LCDRAM, offset: 0x24 */
  uint32_t Location2;                              /**< LCDRAM, offset: 0x28 */
  uint32_t Location3;                              /**< LCDRAM, offset: 0x2C */
  uint32_t Location4;                              /**< LCDRAM, offset: 0x30 */
  uint32_t Location5;                              /**< LCDRAM, offset: 0x34 */
  uint32_t Location6;                              /**< LCDRAM, offset: 0x38 */
  uint32_t Location7;                              /**< LCDRAM, offset: 0x3C */
  uint32_t Location8;                              /**< LCDRAM, offset: 0x40 */
  uint32_t Location9;                              /**< LCDRAM, offset: 0x44 */
  uint32_t Location10;                             /**< LCDRAM, offset: 0x48 */
  uint32_t Location11;                             /**< LCDRAM, offset: 0x4C */
  uint32_t Location12;                             /**< LCDRAM, offset: 0x50 */
  uint32_t Location13;                             /**< LCDRAM, offset: 0x54 */
  uint32_t Location14;                             /**< LCDRAM, offset: 0x58 */
  uint32_t Location15;                             /**< LCDRAM, offset: 0x5C */
} volatile *LCD_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LCD - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LCD_Register_Accessor_Macros LCD - Register accessor macros
 * @{
 */


/* LCD - Register accessors */
#define LCD_LCDCR_REG(base)                      ((base)->LCDCR)
#define LCD_LCDPCR_REG(base)                     ((base)->LCDPCR)
#define LCD_LCDCCR_REG(base)                     ((base)->LCDCCR)
#define LCD_ENFPR0_REG(base)                     ((base)->ENFPR0)
#define LCD_ENFPR1_REG(base)                     ((base)->ENFPR1)
#define LCD_Location0_REG(base)                  ((base)->Location0)
#define LCD_Location1_REG(base)                  ((base)->Location1)
#define LCD_Location2_REG(base)                  ((base)->Location2)
#define LCD_Location3_REG(base)                  ((base)->Location3)
#define LCD_Location4_REG(base)                  ((base)->Location4)
#define LCD_Location5_REG(base)                  ((base)->Location5)
#define LCD_Location6_REG(base)                  ((base)->Location6)
#define LCD_Location7_REG(base)                  ((base)->Location7)
#define LCD_Location8_REG(base)                  ((base)->Location8)
#define LCD_Location9_REG(base)                  ((base)->Location9)
#define LCD_Location10_REG(base)                 ((base)->Location10)
#define LCD_Location11_REG(base)                 ((base)->Location11)
#define LCD_Location12_REG(base)                 ((base)->Location12)
#define LCD_Location13_REG(base)                 ((base)->Location13)
#define LCD_Location14_REG(base)                 ((base)->Location14)
#define LCD_Location15_REG(base)                 ((base)->Location15)

/**
 * @}
 */ /* end of group LCD_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LCD Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LCD_Register_Masks LCD Register Masks
 * @{
 */

/* LCDCR Bit Fields */
#define LCD_LCDCR_LCDBPS_MASK                    0x7u
#define LCD_LCDCR_LCDBPS_SHIFT                   0
#define LCD_LCDCR_LCDBPS(x)                      (((uint32_t)(((uint32_t)(x))<<LCD_LCDCR_LCDBPS_SHIFT))&LCD_LCDCR_LCDBPS_MASK)
#define LCD_LCDCR_LCDBPA_MASK                    0x30u
#define LCD_LCDCR_LCDBPA_SHIFT                   4
#define LCD_LCDCR_LCDBPA(x)                      (((uint32_t)(((uint32_t)(x))<<LCD_LCDCR_LCDBPA_SHIFT))&LCD_LCDCR_LCDBPA_MASK)
#define LCD_LCDCR_NOF_MASK                       0xFF00u
#define LCD_LCDCR_NOF_SHIFT                      8
#define LCD_LCDCR_NOF(x)                         (((uint32_t)(((uint32_t)(x))<<LCD_LCDCR_NOF_SHIFT))&LCD_LCDCR_NOF_MASK)
#define LCD_LCDCR_EOF_MASK                       0x10000u
#define LCD_LCDCR_EOF_SHIFT                      16
#define LCD_LCDCR_LCDINT_MASK                    0x20000u
#define LCD_LCDCR_LCDINT_SHIFT                   17
#define LCD_LCDCR_LCDOCS_MASK                    0x40000u
#define LCD_LCDCR_LCDOCS_SHIFT                   18
#define LCD_LCDCR_BSTAO_MASK                     0x80000u
#define LCD_LCDCR_BSTAO_SHIFT                    19
#define LCD_LCDCR_BSTSEL_MASK                    0x100000u
#define LCD_LCDCR_BSTSEL_SHIFT                   20
#define LCD_LCDCR_BSTEN_MASK                     0x200000u
#define LCD_LCDCR_BSTEN_SHIFT                    21
#define LCD_LCDCR_PWR_MASK                       0xC00000u
#define LCD_LCDCR_PWR_SHIFT                      22
#define LCD_LCDCR_PWR(x)                         (((uint32_t)(((uint32_t)(x))<<LCD_LCDCR_PWR_SHIFT))&LCD_LCDCR_PWR_MASK)
#define LCD_LCDCR_VLCDS_MASK                     0x1000000u
#define LCD_LCDCR_VLCDS_SHIFT                    24
#define LCD_LCDCR_BIAS_MASK                      0x2000000u
#define LCD_LCDCR_BIAS_SHIFT                     25
#define LCD_LCDCR_DUTY_MASK                      0x1C000000u
#define LCD_LCDCR_DUTY_SHIFT                     26
#define LCD_LCDCR_DUTY(x)                        (((uint32_t)(((uint32_t)(x))<<LCD_LCDCR_DUTY_SHIFT))&LCD_LCDCR_DUTY_MASK)
#define LCD_LCDCR_LCDRCS_MASK                    0x20000000u
#define LCD_LCDCR_LCDRCS_SHIFT                   29
#define LCD_LCDCR_LCDRST_MASK                    0x40000000u
#define LCD_LCDCR_LCDRST_SHIFT                   30
#define LCD_LCDCR_LCDEN_MASK                     0x80000000u
#define LCD_LCDCR_LCDEN_SHIFT                    31
/* LCDPCR Bit Fields */
#define LCD_LCDPCR_LCLK_MASK                     0xF000000u
#define LCD_LCDPCR_LCLK_SHIFT                    24
#define LCD_LCDPCR_LCLK(x)                       (((uint32_t)(((uint32_t)(x))<<LCD_LCDPCR_LCLK_SHIFT))&LCD_LCDPCR_LCLK_MASK)
/* LCDCCR Bit Fields */
#define LCD_LCDCCR_LCC_MASK                      0x7FF0000u
#define LCD_LCDCCR_LCC_SHIFT                     16
#define LCD_LCDCCR_LCC(x)                        (((uint32_t)(((uint32_t)(x))<<LCD_LCDCCR_LCC_SHIFT))&LCD_LCDCCR_LCC_MASK)
#define LCD_LCDCCR_CCEN_MASK                     0x80000000u
#define LCD_LCDCCR_CCEN_SHIFT                    31
/* ENFPR0 Bit Fields */
#define LCD_ENFPR0_ENFP_MASK                     0xFFFFFFFFu
#define LCD_ENFPR0_ENFP_SHIFT                    0
#define LCD_ENFPR0_ENFP(x)                       (((uint32_t)(((uint32_t)(x))<<LCD_ENFPR0_ENFP_SHIFT))&LCD_ENFPR0_ENFP_MASK)
/* ENFPR1 Bit Fields */
#define LCD_ENFPR1_ENFP_MASK                     0xFFFFFFFFu
#define LCD_ENFPR1_ENFP_SHIFT                    0
#define LCD_ENFPR1_ENFP(x)                       (((uint32_t)(((uint32_t)(x))<<LCD_ENFPR1_ENFP_SHIFT))&LCD_ENFPR1_ENFP_MASK)
/* Location0 Bit Fields */
#define LCD_Location0_FP3_BP_MASK                0xFFu
#define LCD_Location0_FP3_BP_SHIFT               0
#define LCD_Location0_FP3_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location0_FP3_BP_SHIFT))&LCD_Location0_FP3_BP_MASK)
#define LCD_Location0_FP2_BP_MASK                0xFF00u
#define LCD_Location0_FP2_BP_SHIFT               8
#define LCD_Location0_FP2_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location0_FP2_BP_SHIFT))&LCD_Location0_FP2_BP_MASK)
#define LCD_Location0_FP1_BP_MASK                0xFF0000u
#define LCD_Location0_FP1_BP_SHIFT               16
#define LCD_Location0_FP1_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location0_FP1_BP_SHIFT))&LCD_Location0_FP1_BP_MASK)
#define LCD_Location0_FP0_BP_MASK                0xFF000000u
#define LCD_Location0_FP0_BP_SHIFT               24
#define LCD_Location0_FP0_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location0_FP0_BP_SHIFT))&LCD_Location0_FP0_BP_MASK)
/* Location1 Bit Fields */
#define LCD_Location1_FP7_BP_MASK                0xFFu
#define LCD_Location1_FP7_BP_SHIFT               0
#define LCD_Location1_FP7_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location1_FP7_BP_SHIFT))&LCD_Location1_FP7_BP_MASK)
#define LCD_Location1_FP6_BP_MASK                0xFF00u
#define LCD_Location1_FP6_BP_SHIFT               8
#define LCD_Location1_FP6_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location1_FP6_BP_SHIFT))&LCD_Location1_FP6_BP_MASK)
#define LCD_Location1_FP5_BP_MASK                0xFF0000u
#define LCD_Location1_FP5_BP_SHIFT               16
#define LCD_Location1_FP5_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location1_FP5_BP_SHIFT))&LCD_Location1_FP5_BP_MASK)
#define LCD_Location1_FP4_BP_MASK                0xFF000000u
#define LCD_Location1_FP4_BP_SHIFT               24
#define LCD_Location1_FP4_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location1_FP4_BP_SHIFT))&LCD_Location1_FP4_BP_MASK)
/* Location2 Bit Fields */
#define LCD_Location2_FP11_BP_MASK               0xFFu
#define LCD_Location2_FP11_BP_SHIFT              0
#define LCD_Location2_FP11_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location2_FP11_BP_SHIFT))&LCD_Location2_FP11_BP_MASK)
#define LCD_Location2_FP10_BP_MASK               0xFF00u
#define LCD_Location2_FP10_BP_SHIFT              8
#define LCD_Location2_FP10_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location2_FP10_BP_SHIFT))&LCD_Location2_FP10_BP_MASK)
#define LCD_Location2_FP9_BP_MASK                0xFF0000u
#define LCD_Location2_FP9_BP_SHIFT               16
#define LCD_Location2_FP9_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location2_FP9_BP_SHIFT))&LCD_Location2_FP9_BP_MASK)
#define LCD_Location2_FP8_BP_MASK                0xFF000000u
#define LCD_Location2_FP8_BP_SHIFT               24
#define LCD_Location2_FP8_BP(x)                  (((uint32_t)(((uint32_t)(x))<<LCD_Location2_FP8_BP_SHIFT))&LCD_Location2_FP8_BP_MASK)
/* Location3 Bit Fields */
#define LCD_Location3_FP15_BP_MASK               0xFFu
#define LCD_Location3_FP15_BP_SHIFT              0
#define LCD_Location3_FP15_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location3_FP15_BP_SHIFT))&LCD_Location3_FP15_BP_MASK)
#define LCD_Location3_FP14_BP_MASK               0xFF00u
#define LCD_Location3_FP14_BP_SHIFT              8
#define LCD_Location3_FP14_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location3_FP14_BP_SHIFT))&LCD_Location3_FP14_BP_MASK)
#define LCD_Location3_FP13_BP_MASK               0xFF0000u
#define LCD_Location3_FP13_BP_SHIFT              16
#define LCD_Location3_FP13_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location3_FP13_BP_SHIFT))&LCD_Location3_FP13_BP_MASK)
#define LCD_Location3_FP12_BP_MASK               0xFF000000u
#define LCD_Location3_FP12_BP_SHIFT              24
#define LCD_Location3_FP12_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location3_FP12_BP_SHIFT))&LCD_Location3_FP12_BP_MASK)
/* Location4 Bit Fields */
#define LCD_Location4_FP19_BP_MASK               0xFFu
#define LCD_Location4_FP19_BP_SHIFT              0
#define LCD_Location4_FP19_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location4_FP19_BP_SHIFT))&LCD_Location4_FP19_BP_MASK)
#define LCD_Location4_FP18_BP_MASK               0xFF00u
#define LCD_Location4_FP18_BP_SHIFT              8
#define LCD_Location4_FP18_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location4_FP18_BP_SHIFT))&LCD_Location4_FP18_BP_MASK)
#define LCD_Location4_FP17_BP_MASK               0xFF0000u
#define LCD_Location4_FP17_BP_SHIFT              16
#define LCD_Location4_FP17_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location4_FP17_BP_SHIFT))&LCD_Location4_FP17_BP_MASK)
#define LCD_Location4_FP16_BP_MASK               0xFF000000u
#define LCD_Location4_FP16_BP_SHIFT              24
#define LCD_Location4_FP16_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location4_FP16_BP_SHIFT))&LCD_Location4_FP16_BP_MASK)
/* Location5 Bit Fields */
#define LCD_Location5_FP23_BP_MASK               0xFFu
#define LCD_Location5_FP23_BP_SHIFT              0
#define LCD_Location5_FP23_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location5_FP23_BP_SHIFT))&LCD_Location5_FP23_BP_MASK)
#define LCD_Location5_FP22_BP_MASK               0xFF00u
#define LCD_Location5_FP22_BP_SHIFT              8
#define LCD_Location5_FP22_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location5_FP22_BP_SHIFT))&LCD_Location5_FP22_BP_MASK)
#define LCD_Location5_FP21_BP_MASK               0xFF0000u
#define LCD_Location5_FP21_BP_SHIFT              16
#define LCD_Location5_FP21_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location5_FP21_BP_SHIFT))&LCD_Location5_FP21_BP_MASK)
#define LCD_Location5_FP20_BP_MASK               0xFF000000u
#define LCD_Location5_FP20_BP_SHIFT              24
#define LCD_Location5_FP20_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location5_FP20_BP_SHIFT))&LCD_Location5_FP20_BP_MASK)
/* Location6 Bit Fields */
#define LCD_Location6_FP27_BP_MASK               0xFFu
#define LCD_Location6_FP27_BP_SHIFT              0
#define LCD_Location6_FP27_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location6_FP27_BP_SHIFT))&LCD_Location6_FP27_BP_MASK)
#define LCD_Location6_FP26_BP_MASK               0xFF00u
#define LCD_Location6_FP26_BP_SHIFT              8
#define LCD_Location6_FP26_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location6_FP26_BP_SHIFT))&LCD_Location6_FP26_BP_MASK)
#define LCD_Location6_FP25_BP_MASK               0xFF0000u
#define LCD_Location6_FP25_BP_SHIFT              16
#define LCD_Location6_FP25_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location6_FP25_BP_SHIFT))&LCD_Location6_FP25_BP_MASK)
#define LCD_Location6_FP24_BP_MASK               0xFF000000u
#define LCD_Location6_FP24_BP_SHIFT              24
#define LCD_Location6_FP24_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location6_FP24_BP_SHIFT))&LCD_Location6_FP24_BP_MASK)
/* Location7 Bit Fields */
#define LCD_Location7_FP31_BP_MASK               0xFFu
#define LCD_Location7_FP31_BP_SHIFT              0
#define LCD_Location7_FP31_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location7_FP31_BP_SHIFT))&LCD_Location7_FP31_BP_MASK)
#define LCD_Location7_FP30_BP_MASK               0xFF00u
#define LCD_Location7_FP30_BP_SHIFT              8
#define LCD_Location7_FP30_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location7_FP30_BP_SHIFT))&LCD_Location7_FP30_BP_MASK)
#define LCD_Location7_FP29_BP_MASK               0xFF0000u
#define LCD_Location7_FP29_BP_SHIFT              16
#define LCD_Location7_FP29_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location7_FP29_BP_SHIFT))&LCD_Location7_FP29_BP_MASK)
#define LCD_Location7_FP28_BP_MASK               0xFF000000u
#define LCD_Location7_FP28_BP_SHIFT              24
#define LCD_Location7_FP28_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location7_FP28_BP_SHIFT))&LCD_Location7_FP28_BP_MASK)
/* Location8 Bit Fields */
#define LCD_Location8_FP35_BP_MASK               0xFFu
#define LCD_Location8_FP35_BP_SHIFT              0
#define LCD_Location8_FP35_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location8_FP35_BP_SHIFT))&LCD_Location8_FP35_BP_MASK)
#define LCD_Location8_FP34_BP_MASK               0xFF00u
#define LCD_Location8_FP34_BP_SHIFT              8
#define LCD_Location8_FP34_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location8_FP34_BP_SHIFT))&LCD_Location8_FP34_BP_MASK)
#define LCD_Location8_FP33_BP_MASK               0xFF0000u
#define LCD_Location8_FP33_BP_SHIFT              16
#define LCD_Location8_FP33_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location8_FP33_BP_SHIFT))&LCD_Location8_FP33_BP_MASK)
#define LCD_Location8_FP32_BP_MASK               0xFF000000u
#define LCD_Location8_FP32_BP_SHIFT              24
#define LCD_Location8_FP32_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location8_FP32_BP_SHIFT))&LCD_Location8_FP32_BP_MASK)
/* Location9 Bit Fields */
#define LCD_Location9_FP39_BP_MASK               0xFFu
#define LCD_Location9_FP39_BP_SHIFT              0
#define LCD_Location9_FP39_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location9_FP39_BP_SHIFT))&LCD_Location9_FP39_BP_MASK)
#define LCD_Location9_FP38_BP_MASK               0xFF00u
#define LCD_Location9_FP38_BP_SHIFT              8
#define LCD_Location9_FP38_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location9_FP38_BP_SHIFT))&LCD_Location9_FP38_BP_MASK)
#define LCD_Location9_FP37_BP_MASK               0xFF0000u
#define LCD_Location9_FP37_BP_SHIFT              16
#define LCD_Location9_FP37_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location9_FP37_BP_SHIFT))&LCD_Location9_FP37_BP_MASK)
#define LCD_Location9_FP36_BP_MASK               0xFF000000u
#define LCD_Location9_FP36_BP_SHIFT              24
#define LCD_Location9_FP36_BP(x)                 (((uint32_t)(((uint32_t)(x))<<LCD_Location9_FP36_BP_SHIFT))&LCD_Location9_FP36_BP_MASK)
/* Location10 Bit Fields */
#define LCD_Location10_FP43_BP_MASK              0xFFu
#define LCD_Location10_FP43_BP_SHIFT             0
#define LCD_Location10_FP43_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location10_FP43_BP_SHIFT))&LCD_Location10_FP43_BP_MASK)
#define LCD_Location10_FP42_BP_MASK              0xFF00u
#define LCD_Location10_FP42_BP_SHIFT             8
#define LCD_Location10_FP42_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location10_FP42_BP_SHIFT))&LCD_Location10_FP42_BP_MASK)
#define LCD_Location10_FP41_BP_MASK              0xFF0000u
#define LCD_Location10_FP41_BP_SHIFT             16
#define LCD_Location10_FP41_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location10_FP41_BP_SHIFT))&LCD_Location10_FP41_BP_MASK)
#define LCD_Location10_FP40_BP_MASK              0xFF000000u
#define LCD_Location10_FP40_BP_SHIFT             24
#define LCD_Location10_FP40_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location10_FP40_BP_SHIFT))&LCD_Location10_FP40_BP_MASK)
/* Location11 Bit Fields */
#define LCD_Location11_FP47_BP_MASK              0xFFu
#define LCD_Location11_FP47_BP_SHIFT             0
#define LCD_Location11_FP47_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location11_FP47_BP_SHIFT))&LCD_Location11_FP47_BP_MASK)
#define LCD_Location11_FP46_BP_MASK              0xFF00u
#define LCD_Location11_FP46_BP_SHIFT             8
#define LCD_Location11_FP46_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location11_FP46_BP_SHIFT))&LCD_Location11_FP46_BP_MASK)
#define LCD_Location11_FP45_BP_MASK              0xFF0000u
#define LCD_Location11_FP45_BP_SHIFT             16
#define LCD_Location11_FP45_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location11_FP45_BP_SHIFT))&LCD_Location11_FP45_BP_MASK)
#define LCD_Location11_FP44_BP_MASK              0xFF000000u
#define LCD_Location11_FP44_BP_SHIFT             24
#define LCD_Location11_FP44_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location11_FP44_BP_SHIFT))&LCD_Location11_FP44_BP_MASK)
/* Location12 Bit Fields */
#define LCD_Location12_FP51_BP_MASK              0xFFu
#define LCD_Location12_FP51_BP_SHIFT             0
#define LCD_Location12_FP51_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location12_FP51_BP_SHIFT))&LCD_Location12_FP51_BP_MASK)
#define LCD_Location12_FP50_BP_MASK              0xFF00u
#define LCD_Location12_FP50_BP_SHIFT             8
#define LCD_Location12_FP50_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location12_FP50_BP_SHIFT))&LCD_Location12_FP50_BP_MASK)
#define LCD_Location12_FP49_BP_MASK              0xFF0000u
#define LCD_Location12_FP49_BP_SHIFT             16
#define LCD_Location12_FP49_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location12_FP49_BP_SHIFT))&LCD_Location12_FP49_BP_MASK)
#define LCD_Location12_FP48_BP_MASK              0xFF000000u
#define LCD_Location12_FP48_BP_SHIFT             24
#define LCD_Location12_FP48_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location12_FP48_BP_SHIFT))&LCD_Location12_FP48_BP_MASK)
/* Location13 Bit Fields */
#define LCD_Location13_FP55_BP_MASK              0xFFu
#define LCD_Location13_FP55_BP_SHIFT             0
#define LCD_Location13_FP55_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location13_FP55_BP_SHIFT))&LCD_Location13_FP55_BP_MASK)
#define LCD_Location13_FP54_BP_MASK              0xFF00u
#define LCD_Location13_FP54_BP_SHIFT             8
#define LCD_Location13_FP54_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location13_FP54_BP_SHIFT))&LCD_Location13_FP54_BP_MASK)
#define LCD_Location13_FP53_BP_MASK              0xFF0000u
#define LCD_Location13_FP53_BP_SHIFT             16
#define LCD_Location13_FP53_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location13_FP53_BP_SHIFT))&LCD_Location13_FP53_BP_MASK)
#define LCD_Location13_FP52_BP_MASK              0xFF000000u
#define LCD_Location13_FP52_BP_SHIFT             24
#define LCD_Location13_FP52_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location13_FP52_BP_SHIFT))&LCD_Location13_FP52_BP_MASK)
/* Location14 Bit Fields */
#define LCD_Location14_FP59_BP_MASK              0xFFu
#define LCD_Location14_FP59_BP_SHIFT             0
#define LCD_Location14_FP59_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location14_FP59_BP_SHIFT))&LCD_Location14_FP59_BP_MASK)
#define LCD_Location14_FP58_BP_MASK              0xFF00u
#define LCD_Location14_FP58_BP_SHIFT             8
#define LCD_Location14_FP58_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location14_FP58_BP_SHIFT))&LCD_Location14_FP58_BP_MASK)
#define LCD_Location14_FP57_BP_MASK              0xFF0000u
#define LCD_Location14_FP57_BP_SHIFT             16
#define LCD_Location14_FP57_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location14_FP57_BP_SHIFT))&LCD_Location14_FP57_BP_MASK)
#define LCD_Location14_FP56_BP_MASK              0xFF000000u
#define LCD_Location14_FP56_BP_SHIFT             24
#define LCD_Location14_FP56_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location14_FP56_BP_SHIFT))&LCD_Location14_FP56_BP_MASK)
/* Location15 Bit Fields */
#define LCD_Location15_FP63_BP_MASK              0xFFu
#define LCD_Location15_FP63_BP_SHIFT             0
#define LCD_Location15_FP63_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location15_FP63_BP_SHIFT))&LCD_Location15_FP63_BP_MASK)
#define LCD_Location15_FP62_BP_MASK              0xFF00u
#define LCD_Location15_FP62_BP_SHIFT             8
#define LCD_Location15_FP62_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location15_FP62_BP_SHIFT))&LCD_Location15_FP62_BP_MASK)
#define LCD_Location15_FP61_BP_MASK              0xFF0000u
#define LCD_Location15_FP61_BP_SHIFT             16
#define LCD_Location15_FP61_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location15_FP61_BP_SHIFT))&LCD_Location15_FP61_BP_MASK)
#define LCD_Location15_FP60_BP_MASK              0xFF000000u
#define LCD_Location15_FP60_BP_SHIFT             24
#define LCD_Location15_FP60_BP(x)                (((uint32_t)(((uint32_t)(x))<<LCD_Location15_FP60_BP_SHIFT))&LCD_Location15_FP60_BP_MASK)

/**
 * @}
 */ /* end of group LCD_Register_Masks */


/* LCD - Peripheral instance base addresses */
/** Peripheral LCD base pointer */
#define LCD_BASE_PTR                             ((LCD_MemMapPtr)0x400BE000u)
/** Array initializer of LCD peripheral base pointers */
#define LCD_BASE_PTRS                            { LCD_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- LCD - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LCD_Register_Accessor_Macros LCD - Register accessor macros
 * @{
 */


/* LCD - Register instance definitions */
/* LCD */
#define LCD_LCDCR                                LCD_LCDCR_REG(LCD_BASE_PTR)
#define LCD_LCDPCR                               LCD_LCDPCR_REG(LCD_BASE_PTR)
#define LCD_LCDCCR                               LCD_LCDCCR_REG(LCD_BASE_PTR)
#define LCD_ENFPR0                               LCD_ENFPR0_REG(LCD_BASE_PTR)
#define LCD_ENFPR1                               LCD_ENFPR1_REG(LCD_BASE_PTR)
#define LCD_Location0                            LCD_Location0_REG(LCD_BASE_PTR)
#define LCD_Location1                            LCD_Location1_REG(LCD_BASE_PTR)
#define LCD_Location2                            LCD_Location2_REG(LCD_BASE_PTR)
#define LCD_Location3                            LCD_Location3_REG(LCD_BASE_PTR)
#define LCD_Location4                            LCD_Location4_REG(LCD_BASE_PTR)
#define LCD_Location5                            LCD_Location5_REG(LCD_BASE_PTR)
#define LCD_Location6                            LCD_Location6_REG(LCD_BASE_PTR)
#define LCD_Location7                            LCD_Location7_REG(LCD_BASE_PTR)
#define LCD_Location8                            LCD_Location8_REG(LCD_BASE_PTR)
#define LCD_Location9                            LCD_Location9_REG(LCD_BASE_PTR)
#define LCD_Location10                           LCD_Location10_REG(LCD_BASE_PTR)
#define LCD_Location11                           LCD_Location11_REG(LCD_BASE_PTR)
#define LCD_Location12                           LCD_Location12_REG(LCD_BASE_PTR)
#define LCD_Location13                           LCD_Location13_REG(LCD_BASE_PTR)
#define LCD_Location14                           LCD_Location14_REG(LCD_BASE_PTR)
#define LCD_Location15                           LCD_Location15_REG(LCD_BASE_PTR)

/**
 * @}
 */ /* end of group LCD_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group LCD_Peripheral */


/* ----------------------------------------------------------------------------
   -- LPTMR
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LPTMR_Peripheral LPTMR
 * @{
 */

/** LPTMR - Peripheral register structure */
typedef struct LPTMR_MemMap {
  uint32_t CSR;                                    /**< Low Power Timer Control Status Register, offset: 0x0 */
  uint32_t PSR;                                    /**< Low Power Timer Prescale Register, offset: 0x4 */
  uint32_t CMR;                                    /**< Low Power Timer Compare Register, offset: 0x8 */
  uint32_t CNR;                                    /**< Low Power Timer Counter Register, offset: 0xC */
} volatile *LPTMR_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LPTMR - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LPTMR_Register_Accessor_Macros LPTMR - Register accessor macros
 * @{
 */


/* LPTMR - Register accessors */
#define LPTMR_CSR_REG(base)                      ((base)->CSR)
#define LPTMR_PSR_REG(base)                      ((base)->PSR)
#define LPTMR_CMR_REG(base)                      ((base)->CMR)
#define LPTMR_CNR_REG(base)                      ((base)->CNR)

/**
 * @}
 */ /* end of group LPTMR_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LPTMR Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LPTMR_Register_Masks LPTMR Register Masks
 * @{
 */

/* CSR Bit Fields */
#define LPTMR_CSR_TEN_MASK                       0x1u
#define LPTMR_CSR_TEN_SHIFT                      0
#define LPTMR_CSR_TMS_MASK                       0x2u
#define LPTMR_CSR_TMS_SHIFT                      1
#define LPTMR_CSR_TFC_MASK                       0x4u
#define LPTMR_CSR_TFC_SHIFT                      2
#define LPTMR_CSR_TPP_MASK                       0x8u
#define LPTMR_CSR_TPP_SHIFT                      3
#define LPTMR_CSR_TPS_MASK                       0x30u
#define LPTMR_CSR_TPS_SHIFT                      4
#define LPTMR_CSR_TPS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPS_SHIFT))&LPTMR_CSR_TPS_MASK)
#define LPTMR_CSR_TIE_MASK                       0x40u
#define LPTMR_CSR_TIE_SHIFT                      6
#define LPTMR_CSR_TCF_MASK                       0x80u
#define LPTMR_CSR_TCF_SHIFT                      7
/* PSR Bit Fields */
#define LPTMR_PSR_PCS_MASK                       0x3u
#define LPTMR_PSR_PCS_SHIFT                      0
#define LPTMR_PSR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PCS_SHIFT))&LPTMR_PSR_PCS_MASK)
#define LPTMR_PSR_PBYP_MASK                      0x4u
#define LPTMR_PSR_PBYP_SHIFT                     2
#define LPTMR_PSR_PRESCALE_MASK                  0x78u
#define LPTMR_PSR_PRESCALE_SHIFT                 3
#define LPTMR_PSR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PRESCALE_SHIFT))&LPTMR_PSR_PRESCALE_MASK)
/* CMR Bit Fields */
#define LPTMR_CMR_COMPARE_MASK                   0xFFFFu
#define LPTMR_CMR_COMPARE_SHIFT                  0
#define LPTMR_CMR_COMPARE(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CMR_COMPARE_SHIFT))&LPTMR_CMR_COMPARE_MASK)
/* CNR Bit Fields */
#define LPTMR_CNR_COUNTER_MASK                   0xFFFFu
#define LPTMR_CNR_COUNTER_SHIFT                  0
#define LPTMR_CNR_COUNTER(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CNR_COUNTER_SHIFT))&LPTMR_CNR_COUNTER_MASK)

/**
 * @}
 */ /* end of group LPTMR_Register_Masks */


/* LPTMR - Peripheral instance base addresses */
/** Peripheral LPTMR0 base pointer */
#define LPTMR0_BASE_PTR                          ((LPTMR_MemMapPtr)0x40040000u)
/** Array initializer of LPTMR peripheral base pointers */
#define LPTMR_BASE_PTRS                          { LPTMR0_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- LPTMR - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LPTMR_Register_Accessor_Macros LPTMR - Register accessor macros
 * @{
 */


/* LPTMR - Register instance definitions */
/* LPTMR0 */
#define LPTMR0_CSR                               LPTMR_CSR_REG(LPTMR0_BASE_PTR)
#define LPTMR0_PSR                               LPTMR_PSR_REG(LPTMR0_BASE_PTR)
#define LPTMR0_CMR                               LPTMR_CMR_REG(LPTMR0_BASE_PTR)
#define LPTMR0_CNR                               LPTMR_CNR_REG(LPTMR0_BASE_PTR)

/**
 * @}
 */ /* end of group LPTMR_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group LPTMR_Peripheral */


/* ----------------------------------------------------------------------------
   -- MLB
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup MLB_Peripheral MLB
 * @{
 */

/** MLB - Peripheral register structure */
typedef struct MLB_MemMap {
  uint8_t RESERVED_0[1677606912];
  uint32_t DCCR;                                   /**< Device Control Configuration Register, offset: 0x63FE4000 */
  uint32_t SSCR;                                   /**< System Status Configuration Register, offset: 0x63FE4004 */
  uint32_t SDCR;                                   /**< System Data Configuration Register, offset: 0x63FE4008 */
  uint32_t SMCR;                                   /**< System Mask Configuration Register, offset: 0x63FE400C */
  uint8_t RESERVED_1[12];
  uint32_t VCCR;                                   /**< Version Control Configuration Register, offset: 0x63FE401C */
  uint32_t SBCR;                                   /**< Synchronous Base Address Configuration Register, offset: 0x63FE4020 */
  uint32_t ABCR;                                   /**< Asynchronous Base Address Configuration Register, offset: 0x63FE4024 */
  uint32_t CBCR;                                   /**< Control Base Address Configuration Register, offset: 0x63FE4028 */
  uint32_t IBCR;                                   /**< Isochronous Base Address Configuration Register, offset: 0x63FE402C */
  uint32_t CICR;                                   /**< Channel Interrupt Configuration Register, offset: 0x63FE4030 */
  uint8_t RESERVED_2[12];
  uint32_t CECR0;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4040 */
  uint32_t CSCR0;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4044 */
  uint32_t CCBCR0;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4048 */
  uint32_t CNBCR0;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE404C */
  uint32_t CECR1;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4050 */
  uint32_t CSCR1;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4054 */
  uint32_t CCBCR1;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4058 */
  uint32_t CNBCR1;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE405C */
  uint32_t CECR2;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4060 */
  uint32_t CSCR2;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4064 */
  uint32_t CCBCR2;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4068 */
  uint32_t CNBCR2;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE406C */
  uint32_t CECR3;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4070 */
  uint32_t CSCR3;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4074 */
  uint32_t CCBCR3;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4078 */
  uint32_t CNBCR3;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE407C */
  uint32_t CECR4;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4080 */
  uint32_t CSCR4;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4084 */
  uint32_t CCBCR4;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4088 */
  uint32_t CNBCR4;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE408C */
  uint32_t CECR5;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE4090 */
  uint32_t CSCR5;                                  /**< Channel n Status Configuration Register, offset: 0x63FE4094 */
  uint32_t CCBCR5;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4098 */
  uint32_t CNBCR5;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE409C */
  uint32_t CECR6;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE40A0 */
  uint32_t CSCR6;                                  /**< Channel n Status Configuration Register, offset: 0x63FE40A4 */
  uint32_t CCBCR6;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40A8 */
  uint32_t CNBCR6;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40AC */
  uint32_t CECR7;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE40B0 */
  uint32_t CSCR7;                                  /**< Channel n Status Configuration Register, offset: 0x63FE40B4 */
  uint32_t CCBCR7;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40B8 */
  uint32_t CNBCR7;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40BC */
  uint32_t CECR8;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE40C0 */
  uint32_t CSCR8;                                  /**< Channel n Status Configuration Register, offset: 0x63FE40C4 */
  uint32_t CCBCR8;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40C8 */
  uint32_t CNBCR8;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40CC */
  uint32_t CECR9;                                  /**< Channel n Entry Configuration Register, offset: 0x63FE40D0 */
  uint32_t CSCR9;                                  /**< Channel n Status Configuration Register, offset: 0x63FE40D4 */
  uint32_t CCBCR9;                                 /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40D8 */
  uint32_t CNBCR9;                                 /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40DC */
  uint32_t CECR10;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE40E0 */
  uint32_t CSCR10;                                 /**< Channel n Status Configuration Register, offset: 0x63FE40E4 */
  uint32_t CCBCR10;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40E8 */
  uint32_t CNBCR10;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40EC */
  uint32_t CECR11;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE40F0 */
  uint32_t CSCR11;                                 /**< Channel n Status Configuration Register, offset: 0x63FE40F4 */
  uint32_t CCBCR11;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE40F8 */
  uint32_t CNBCR11;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE40FC */
  uint32_t CECR12;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE4100 */
  uint32_t CSCR12;                                 /**< Channel n Status Configuration Register, offset: 0x63FE4104 */
  uint32_t CCBCR12;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4108 */
  uint32_t CNBCR12;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE410C */
  uint32_t CECR13;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE4110 */
  uint32_t CSCR13;                                 /**< Channel n Status Configuration Register, offset: 0x63FE4114 */
  uint32_t CCBCR13;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4118 */
  uint32_t CNBCR13;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE411C */
  uint32_t CECR14;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE4120 */
  uint32_t CSCR14;                                 /**< Channel n Status Configuration Register, offset: 0x63FE4124 */
  uint32_t CCBCR14;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4128 */
  uint32_t CNBCR14;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE412C */
  uint32_t CECR15;                                 /**< Channel n Entry Configuration Register, offset: 0x63FE4130 */
  uint32_t CSCR15;                                 /**< Channel n Status Configuration Register, offset: 0x63FE4134 */
  uint32_t CCBCR15;                                /**< Channel n Current Buffer Configuration Register, offset: 0x63FE4138 */
  uint32_t CNBCR15;                                /**< Channel n Next Buffer Configuration Register, offset: 0x63FE413C */
  uint8_t RESERVED_3[320];
  uint32_t LCBCR0;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4280 */
  uint32_t LCBCR1;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4284 */
  uint32_t LCBCR2;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4288 */
  uint32_t LCBCR3;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE428C */
  uint32_t LCBCR4;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4290 */
  uint32_t LCBCR5;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4294 */
  uint32_t LCBCR6;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE4298 */
  uint32_t LCBCR7;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE429C */
  uint32_t LCBCR8;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42A0 */
  uint32_t LCBCR9;                                 /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42A4 */
  uint32_t LCBCR10;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42A8 */
  uint32_t LCBCR11;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42AC */
  uint32_t LCBCR12;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42B0 */
  uint32_t LCBCR13;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42B4 */
  uint32_t LCBCR14;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42B8 */
  uint32_t LCBCR15;                                /**< Local Channel n Buffer Configuration Register, offset: 0x63FE42BC */
} volatile *MLB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- MLB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup MLB_Register_Accessor_Macros MLB - Register accessor macros
 * @{
 */


/* MLB - Register accessors */
#define MLB_DCCR_REG(base)                       ((base)->DCCR)
#define MLB_SSCR_REG(base)                       ((base)->SSCR)
#define MLB_SDCR_REG(base)                       ((base)->SDCR)
#define MLB_SMCR_REG(base)                       ((base)->SMCR)
#define MLB_VCCR_REG(base)                       ((base)->VCCR)
#define MLB_SBCR_REG(base)                       ((base)->SBCR)
#define MLB_ABCR_REG(base)                       ((base)->ABCR)
#define MLB_CBCR_REG(base)                       ((base)->CBCR)
#define MLB_IBCR_REG(base)                       ((base)->IBCR)
#define MLB_CICR_REG(base)                       ((base)->CICR)
#define MLB_CECR0_REG(base)                      ((base)->CECR0)
#define MLB_CSCR0_REG(base)                      ((base)->CSCR0)
#define MLB_CCBCR0_REG(base)                     ((base)->CCBCR0)
#define MLB_CNBCR0_REG(base)                     ((base)->CNBCR0)
#define MLB_CECR1_REG(base)                      ((base)->CECR1)
#define MLB_CSCR1_REG(base)                      ((base)->CSCR1)
#define MLB_CCBCR1_REG(base)                     ((base)->CCBCR1)
#define MLB_CNBCR1_REG(base)                     ((base)->CNBCR1)
#define MLB_CECR2_REG(base)                      ((base)->CECR2)
#define MLB_CSCR2_REG(base)                      ((base)->CSCR2)
#define MLB_CCBCR2_REG(base)                     ((base)->CCBCR2)
#define MLB_CNBCR2_REG(base)                     ((base)->CNBCR2)
#define MLB_CECR3_REG(base)                      ((base)->CECR3)
#define MLB_CSCR3_REG(base)                      ((base)->CSCR3)
#define MLB_CCBCR3_REG(base)                     ((base)->CCBCR3)
#define MLB_CNBCR3_REG(base)                     ((base)->CNBCR3)
#define MLB_CECR4_REG(base)                      ((base)->CECR4)
#define MLB_CSCR4_REG(base)                      ((base)->CSCR4)
#define MLB_CCBCR4_REG(base)                     ((base)->CCBCR4)
#define MLB_CNBCR4_REG(base)                     ((base)->CNBCR4)
#define MLB_CECR5_REG(base)                      ((base)->CECR5)
#define MLB_CSCR5_REG(base)                      ((base)->CSCR5)
#define MLB_CCBCR5_REG(base)                     ((base)->CCBCR5)
#define MLB_CNBCR5_REG(base)                     ((base)->CNBCR5)
#define MLB_CECR6_REG(base)                      ((base)->CECR6)
#define MLB_CSCR6_REG(base)                      ((base)->CSCR6)
#define MLB_CCBCR6_REG(base)                     ((base)->CCBCR6)
#define MLB_CNBCR6_REG(base)                     ((base)->CNBCR6)
#define MLB_CECR7_REG(base)                      ((base)->CECR7)
#define MLB_CSCR7_REG(base)                      ((base)->CSCR7)
#define MLB_CCBCR7_REG(base)                     ((base)->CCBCR7)
#define MLB_CNBCR7_REG(base)                     ((base)->CNBCR7)
#define MLB_CECR8_REG(base)                      ((base)->CECR8)
#define MLB_CSCR8_REG(base)                      ((base)->CSCR8)
#define MLB_CCBCR8_REG(base)                     ((base)->CCBCR8)
#define MLB_CNBCR8_REG(base)                     ((base)->CNBCR8)
#define MLB_CECR9_REG(base)                      ((base)->CECR9)
#define MLB_CSCR9_REG(base)                      ((base)->CSCR9)
#define MLB_CCBCR9_REG(base)                     ((base)->CCBCR9)
#define MLB_CNBCR9_REG(base)                     ((base)->CNBCR9)
#define MLB_CECR10_REG(base)                     ((base)->CECR10)
#define MLB_CSCR10_REG(base)                     ((base)->CSCR10)
#define MLB_CCBCR10_REG(base)                    ((base)->CCBCR10)
#define MLB_CNBCR10_REG(base)                    ((base)->CNBCR10)
#define MLB_CECR11_REG(base)                     ((base)->CECR11)
#define MLB_CSCR11_REG(base)                     ((base)->CSCR11)
#define MLB_CCBCR11_REG(base)                    ((base)->CCBCR11)
#define MLB_CNBCR11_REG(base)                    ((base)->CNBCR11)
#define MLB_CECR12_REG(base)                     ((base)->CECR12)
#define MLB_CSCR12_REG(base)                     ((base)->CSCR12)
#define MLB_CCBCR12_REG(base)                    ((base)->CCBCR12)
#define MLB_CNBCR12_REG(base)                    ((base)->CNBCR12)
#define MLB_CECR13_REG(base)                     ((base)->CECR13)
#define MLB_CSCR13_REG(base)                     ((base)->CSCR13)
#define MLB_CCBCR13_REG(base)                    ((base)->CCBCR13)
#define MLB_CNBCR13_REG(base)                    ((base)->CNBCR13)
#define MLB_CECR14_REG(base)                     ((base)->CECR14)
#define MLB_CSCR14_REG(base)                     ((base)->CSCR14)
#define MLB_CCBCR14_REG(base)                    ((base)->CCBCR14)
#define MLB_CNBCR14_REG(base)                    ((base)->CNBCR14)
#define MLB_CECR15_REG(base)                     ((base)->CECR15)
#define MLB_CSCR15_REG(base)                     ((base)->CSCR15)
#define MLB_CCBCR15_REG(base)                    ((base)->CCBCR15)
#define MLB_CNBCR15_REG(base)                    ((base)->CNBCR15)
#define MLB_LCBCR0_REG(base)                     ((base)->LCBCR0)
#define MLB_LCBCR1_REG(base)                     ((base)->LCBCR1)
#define MLB_LCBCR2_REG(base)                     ((base)->LCBCR2)
#define MLB_LCBCR3_REG(base)                     ((base)->LCBCR3)
#define MLB_LCBCR4_REG(base)                     ((base)->LCBCR4)
#define MLB_LCBCR5_REG(base)                     ((base)->LCBCR5)
#define MLB_LCBCR6_REG(base)                     ((base)->LCBCR6)
#define MLB_LCBCR7_REG(base)                     ((base)->LCBCR7)
#define MLB_LCBCR8_REG(base)                     ((base)->LCBCR8)
#define MLB_LCBCR9_REG(base)                     ((base)->LCBCR9)
#define MLB_LCBCR10_REG(base)                    ((base)->LCBCR10)
#define MLB_LCBCR11_REG(base)                    ((base)->LCBCR11)
#define MLB_LCBCR12_REG(base)                    ((base)->LCBCR12)
#define MLB_LCBCR13_REG(base)                    ((base)->LCBCR13)
#define MLB_LCBCR14_REG(base)                    ((base)->LCBCR14)
#define MLB_LCBCR15_REG(base)                    ((base)->LCBCR15)

/**
 * @}
 */ /* end of group MLB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- MLB Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup MLB_Register_Masks MLB Register Masks
 * @{
 */

/* DCCR Bit Fields */
#define MLB_DCCR_MDA_MASK                        0xFFu
#define MLB_DCCR_MDA_SHIFT                       0
#define MLB_DCCR_MDA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_DCCR_MDA_SHIFT))&MLB_DCCR_MDA_MASK)
#define MLB_DCCR_MRS_MASK                        0x800000u
#define MLB_DCCR_MRS_SHIFT                       23
#define MLB_DCCR_MHRE_MASK                       0x1000000u
#define MLB_DCCR_MHRE_SHIFT                      24
#define MLB_DCCR_MLE_MASK                        0x2000000u
#define MLB_DCCR_MLE_SHIFT                       25
#define MLB_DCCR_MLK_MASK                        0x4000000u
#define MLB_DCCR_MLK_SHIFT                       26
#define MLB_DCCR_MCS_MASK                        0x30000000u
#define MLB_DCCR_MCS_SHIFT                       28
#define MLB_DCCR_MCS(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_DCCR_MCS_SHIFT))&MLB_DCCR_MCS_MASK)
#define MLB_DCCR_LBM_MASK                        0x40000000u
#define MLB_DCCR_LBM_SHIFT                       30
#define MLB_DCCR_MDE_MASK                        0x80000000u
#define MLB_DCCR_MDE_SHIFT                       31
/* SSCR Bit Fields */
#define MLB_SSCR_SDR_MASK                        0x1u
#define MLB_SSCR_SDR_SHIFT                       0
#define MLB_SSCR_SDNL_MASK                       0x2u
#define MLB_SSCR_SDNL_SHIFT                      1
#define MLB_SSCR_SDNU_MASK                       0x4u
#define MLB_SSCR_SDNU_SHIFT                      2
#define MLB_SSCR_SDCS_MASK                       0x8u
#define MLB_SSCR_SDCS_SHIFT                      3
#define MLB_SSCR_SDSC_MASK                       0x10u
#define MLB_SSCR_SDSC_SHIFT                      4
#define MLB_SSCR_SDML_MASK                       0x20u
#define MLB_SSCR_SDML_SHIFT                      5
#define MLB_SSCR_SDMU_MASK                       0x40u
#define MLB_SSCR_SDMU_SHIFT                      6
#define MLB_SSCR_SSRE_MASK                       0x80u
#define MLB_SSCR_SSRE_SHIFT                      7
/* SDCR Bit Fields */
#define MLB_SDCR_MSD_MASK                        0xFFFFFFFFu
#define MLB_SDCR_MSD_SHIFT                       0
#define MLB_SDCR_MSD(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_SDCR_MSD_SHIFT))&MLB_SDCR_MSD_MASK)
/* SMCR Bit Fields */
#define MLB_SMCR_SMR_MASK                        0x1u
#define MLB_SMCR_SMR_SHIFT                       0
#define MLB_SMCR_SMNL_MASK                       0x2u
#define MLB_SMCR_SMNL_SHIFT                      1
#define MLB_SMCR_SMNU_MASK                       0x4u
#define MLB_SMCR_SMNU_SHIFT                      2
#define MLB_SMCR_SMCS_MASK                       0x8u
#define MLB_SMCR_SMCS_SHIFT                      3
#define MLB_SMCR_SMSC_MASK                       0x10u
#define MLB_SMCR_SMSC_SHIFT                      4
#define MLB_SMCR_SMML_MASK                       0x20u
#define MLB_SMCR_SMML_SHIFT                      5
#define MLB_SMCR_SMMU_MASK                       0x40u
#define MLB_SMCR_SMMU_SHIFT                      6
/* VCCR Bit Fields */
#define MLB_VCCR_MMI_MASK                        0xFFu
#define MLB_VCCR_MMI_SHIFT                       0
#define MLB_VCCR_MMI(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_VCCR_MMI_SHIFT))&MLB_VCCR_MMI_MASK)
#define MLB_VCCR_MMA_MASK                        0xFF00u
#define MLB_VCCR_MMA_SHIFT                       8
#define MLB_VCCR_MMA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_VCCR_MMA_SHIFT))&MLB_VCCR_MMA_MASK)
#define MLB_VCCR_UMI_MASK                        0xFF0000u
#define MLB_VCCR_UMI_SHIFT                       16
#define MLB_VCCR_UMI(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_VCCR_UMI_SHIFT))&MLB_VCCR_UMI_MASK)
#define MLB_VCCR_UMA_MASK                        0xFF000000u
#define MLB_VCCR_UMA_SHIFT                       24
#define MLB_VCCR_UMA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_VCCR_UMA_SHIFT))&MLB_VCCR_UMA_MASK)
/* SBCR Bit Fields */
#define MLB_SBCR_STBA_MASK                       0xFFFFu
#define MLB_SBCR_STBA_SHIFT                      0
#define MLB_SBCR_STBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_SBCR_STBA_SHIFT))&MLB_SBCR_STBA_MASK)
#define MLB_SBCR_SRBA_MASK                       0xFFFF0000u
#define MLB_SBCR_SRBA_SHIFT                      16
#define MLB_SBCR_SRBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_SBCR_SRBA_SHIFT))&MLB_SBCR_SRBA_MASK)
/* ABCR Bit Fields */
#define MLB_ABCR_ATBA_MASK                       0xFFFFu
#define MLB_ABCR_ATBA_SHIFT                      0
#define MLB_ABCR_ATBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_ABCR_ATBA_SHIFT))&MLB_ABCR_ATBA_MASK)
#define MLB_ABCR_ARBA_MASK                       0xFFFF0000u
#define MLB_ABCR_ARBA_SHIFT                      16
#define MLB_ABCR_ARBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_ABCR_ARBA_SHIFT))&MLB_ABCR_ARBA_MASK)
/* CBCR Bit Fields */
#define MLB_CBCR_CTBA_MASK                       0xFFFFu
#define MLB_CBCR_CTBA_SHIFT                      0
#define MLB_CBCR_CTBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CBCR_CTBA_SHIFT))&MLB_CBCR_CTBA_MASK)
#define MLB_CBCR_CRBA_MASK                       0xFFFF0000u
#define MLB_CBCR_CRBA_SHIFT                      16
#define MLB_CBCR_CRBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CBCR_CRBA_SHIFT))&MLB_CBCR_CRBA_MASK)
/* IBCR Bit Fields */
#define MLB_IBCR_ITBA_MASK                       0xFFFFu
#define MLB_IBCR_ITBA_SHIFT                      0
#define MLB_IBCR_ITBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_IBCR_ITBA_SHIFT))&MLB_IBCR_ITBA_MASK)
#define MLB_IBCR_IRBA_MASK                       0xFFFF0000u
#define MLB_IBCR_IRBA_SHIFT                      16
#define MLB_IBCR_IRBA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_IBCR_IRBA_SHIFT))&MLB_IBCR_IRBA_MASK)
/* CICR Bit Fields */
#define MLB_CICR_CSU_MASK                        0xFFFFu
#define MLB_CICR_CSU_SHIFT                       0
#define MLB_CICR_CSU(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CICR_CSU_SHIFT))&MLB_CICR_CSU_MASK)
/* CECR0 Bit Fields */
#define MLB_CECR0_CA_MASK                        0xFFu
#define MLB_CECR0_CA_SHIFT                       0
#define MLB_CECR0_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR0_CA_SHIFT))&MLB_CECR0_CA_MASK)
#define MLB_CECR0_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR0_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR0_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR0_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR0_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR0_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR0_Rsvd_IPL_SHIFT                 13
#define MLB_CECR0_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR0_Rsvd_IPL_SHIFT))&MLB_CECR0_Rsvd_IPL_MASK)
#define MLB_CECR0_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR0_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR0_MPE_MASK                       0x10000u
#define MLB_CECR0_MPE_SHIFT                      16
#define MLB_CECR0_MDB_MASK                       0x20000u
#define MLB_CECR0_MDB_SHIFT                      17
#define MLB_CECR0_MBD_MASK                       0x40000u
#define MLB_CECR0_MBD_SHIFT                      18
#define MLB_CECR0_MBS_MASK                       0x80000u
#define MLB_CECR0_MBS_SHIFT                      19
#define MLB_CECR0_MBE_MASK                       0x100000u
#define MLB_CECR0_MBE_SHIFT                      20
#define MLB_CECR0_MLFS_MASK                      0x400000u
#define MLB_CECR0_MLFS_SHIFT                     22
#define MLB_CECR0_MDS_MASK                       0x6000000u
#define MLB_CECR0_MDS_SHIFT                      25
#define MLB_CECR0_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR0_MDS_SHIFT))&MLB_CECR0_MDS_MASK)
#define MLB_CECR0_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR0_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR0_CT_MASK                        0x30000000u
#define MLB_CECR0_CT_SHIFT                       28
#define MLB_CECR0_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR0_CT_SHIFT))&MLB_CECR0_CT_MASK)
#define MLB_CECR0_TR_MASK                        0x40000000u
#define MLB_CECR0_TR_SHIFT                       30
#define MLB_CECR0_CE_MASK                        0x80000000u
#define MLB_CECR0_CE_SHIFT                       31
/* CSCR0 Bit Fields */
#define MLB_CSCR0_CBPE_MASK                      0x1u
#define MLB_CSCR0_CBPE_SHIFT                     0
#define MLB_CSCR0_CBDB_MASK                      0x2u
#define MLB_CSCR0_CBDB_SHIFT                     1
#define MLB_CSCR0_CBD_MASK                       0x4u
#define MLB_CSCR0_CBD_SHIFT                      2
#define MLB_CSCR0_CBS_MASK                       0x8u
#define MLB_CSCR0_CBS_SHIFT                      3
#define MLB_CSCR0_BE_MASK                        0x10u
#define MLB_CSCR0_BE_SHIFT                       4
#define MLB_CSCR0_ABE_MASK                       0x20u
#define MLB_CSCR0_ABE_SHIFT                      5
#define MLB_CSCR0_LFS_MASK                       0x40u
#define MLB_CSCR0_LFS_SHIFT                      6
#define MLB_CSCR0_PBPE_MASK                      0x100u
#define MLB_CSCR0_PBPE_SHIFT                     8
#define MLB_CSCR0_PBDB_MASK                      0x200u
#define MLB_CSCR0_PBDB_SHIFT                     9
#define MLB_CSCR0_PBD_MASK                       0x400u
#define MLB_CSCR0_PBD_SHIFT                      10
#define MLB_CSCR0_PBS_MASK                       0x800u
#define MLB_CSCR0_PBS_SHIFT                      11
#define MLB_CSCR0_RDY_MASK                       0x10000u
#define MLB_CSCR0_RDY_SHIFT                      16
#define MLB_CSCR0_GIRB_MASK                      0x20000u
#define MLB_CSCR0_GIRB_SHIFT                     17
#define MLB_CSCR0_IVB_MASK                       0xC0000u
#define MLB_CSCR0_IVB_SHIFT                      18
#define MLB_CSCR0_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR0_IVB_SHIFT))&MLB_CSCR0_IVB_MASK)
#define MLB_CSCR0_BF_MASK                        0x40000000u
#define MLB_CSCR0_BF_SHIFT                       30
#define MLB_CSCR0_BM_MASK                        0x80000000u
#define MLB_CSCR0_BM_SHIFT                       31
/* CCBCR0 Bit Fields */
#define MLB_CCBCR0_BFA0_MASK                     0x3u
#define MLB_CCBCR0_BFA0_SHIFT                    0
#define MLB_CCBCR0_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR0_BFA0_SHIFT))&MLB_CCBCR0_BFA0_MASK)
#define MLB_CCBCR0_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR0_BFA1_SHIFT                    2
#define MLB_CCBCR0_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR0_BFA1_SHIFT))&MLB_CCBCR0_BFA1_MASK)
#define MLB_CCBCR0_BCA0_MASK                     0x30000u
#define MLB_CCBCR0_BCA0_SHIFT                    16
#define MLB_CCBCR0_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR0_BCA0_SHIFT))&MLB_CCBCR0_BCA0_MASK)
#define MLB_CCBCR0_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR0_BCA1_SHIFT                    18
#define MLB_CCBCR0_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR0_BCA1_SHIFT))&MLB_CCBCR0_BCA1_MASK)
/* CNBCR0 Bit Fields */
#define MLB_CNBCR0_BEA_MASK                      0xFFFFu
#define MLB_CNBCR0_BEA_SHIFT                     0
#define MLB_CNBCR0_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR0_BEA_SHIFT))&MLB_CNBCR0_BEA_MASK)
#define MLB_CNBCR0_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR0_BSA_SHIFT                     16
#define MLB_CNBCR0_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR0_BSA_SHIFT))&MLB_CNBCR0_BSA_MASK)
/* CECR1 Bit Fields */
#define MLB_CECR1_CA_MASK                        0xFFu
#define MLB_CECR1_CA_SHIFT                       0
#define MLB_CECR1_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR1_CA_SHIFT))&MLB_CECR1_CA_MASK)
#define MLB_CECR1_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR1_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR1_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR1_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR1_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR1_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR1_Rsvd_IPL_SHIFT                 13
#define MLB_CECR1_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR1_Rsvd_IPL_SHIFT))&MLB_CECR1_Rsvd_IPL_MASK)
#define MLB_CECR1_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR1_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR1_MPE_MASK                       0x10000u
#define MLB_CECR1_MPE_SHIFT                      16
#define MLB_CECR1_MDB_MASK                       0x20000u
#define MLB_CECR1_MDB_SHIFT                      17
#define MLB_CECR1_MBD_MASK                       0x40000u
#define MLB_CECR1_MBD_SHIFT                      18
#define MLB_CECR1_MBS_MASK                       0x80000u
#define MLB_CECR1_MBS_SHIFT                      19
#define MLB_CECR1_MBE_MASK                       0x100000u
#define MLB_CECR1_MBE_SHIFT                      20
#define MLB_CECR1_MLFS_MASK                      0x400000u
#define MLB_CECR1_MLFS_SHIFT                     22
#define MLB_CECR1_MDS_MASK                       0x6000000u
#define MLB_CECR1_MDS_SHIFT                      25
#define MLB_CECR1_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR1_MDS_SHIFT))&MLB_CECR1_MDS_MASK)
#define MLB_CECR1_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR1_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR1_CT_MASK                        0x30000000u
#define MLB_CECR1_CT_SHIFT                       28
#define MLB_CECR1_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR1_CT_SHIFT))&MLB_CECR1_CT_MASK)
#define MLB_CECR1_TR_MASK                        0x40000000u
#define MLB_CECR1_TR_SHIFT                       30
#define MLB_CECR1_CE_MASK                        0x80000000u
#define MLB_CECR1_CE_SHIFT                       31
/* CSCR1 Bit Fields */
#define MLB_CSCR1_CBPE_MASK                      0x1u
#define MLB_CSCR1_CBPE_SHIFT                     0
#define MLB_CSCR1_CBDB_MASK                      0x2u
#define MLB_CSCR1_CBDB_SHIFT                     1
#define MLB_CSCR1_CBD_MASK                       0x4u
#define MLB_CSCR1_CBD_SHIFT                      2
#define MLB_CSCR1_CBS_MASK                       0x8u
#define MLB_CSCR1_CBS_SHIFT                      3
#define MLB_CSCR1_BE_MASK                        0x10u
#define MLB_CSCR1_BE_SHIFT                       4
#define MLB_CSCR1_ABE_MASK                       0x20u
#define MLB_CSCR1_ABE_SHIFT                      5
#define MLB_CSCR1_LFS_MASK                       0x40u
#define MLB_CSCR1_LFS_SHIFT                      6
#define MLB_CSCR1_PBPE_MASK                      0x100u
#define MLB_CSCR1_PBPE_SHIFT                     8
#define MLB_CSCR1_PBDB_MASK                      0x200u
#define MLB_CSCR1_PBDB_SHIFT                     9
#define MLB_CSCR1_PBD_MASK                       0x400u
#define MLB_CSCR1_PBD_SHIFT                      10
#define MLB_CSCR1_PBS_MASK                       0x800u
#define MLB_CSCR1_PBS_SHIFT                      11
#define MLB_CSCR1_RDY_MASK                       0x10000u
#define MLB_CSCR1_RDY_SHIFT                      16
#define MLB_CSCR1_GIRB_MASK                      0x20000u
#define MLB_CSCR1_GIRB_SHIFT                     17
#define MLB_CSCR1_IVB_MASK                       0xC0000u
#define MLB_CSCR1_IVB_SHIFT                      18
#define MLB_CSCR1_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR1_IVB_SHIFT))&MLB_CSCR1_IVB_MASK)
#define MLB_CSCR1_BF_MASK                        0x40000000u
#define MLB_CSCR1_BF_SHIFT                       30
#define MLB_CSCR1_BM_MASK                        0x80000000u
#define MLB_CSCR1_BM_SHIFT                       31
/* CCBCR1 Bit Fields */
#define MLB_CCBCR1_BFA0_MASK                     0x3u
#define MLB_CCBCR1_BFA0_SHIFT                    0
#define MLB_CCBCR1_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR1_BFA0_SHIFT))&MLB_CCBCR1_BFA0_MASK)
#define MLB_CCBCR1_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR1_BFA1_SHIFT                    2
#define MLB_CCBCR1_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR1_BFA1_SHIFT))&MLB_CCBCR1_BFA1_MASK)
#define MLB_CCBCR1_BCA0_MASK                     0x30000u
#define MLB_CCBCR1_BCA0_SHIFT                    16
#define MLB_CCBCR1_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR1_BCA0_SHIFT))&MLB_CCBCR1_BCA0_MASK)
#define MLB_CCBCR1_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR1_BCA1_SHIFT                    18
#define MLB_CCBCR1_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR1_BCA1_SHIFT))&MLB_CCBCR1_BCA1_MASK)
/* CNBCR1 Bit Fields */
#define MLB_CNBCR1_BEA_MASK                      0xFFFFu
#define MLB_CNBCR1_BEA_SHIFT                     0
#define MLB_CNBCR1_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR1_BEA_SHIFT))&MLB_CNBCR1_BEA_MASK)
#define MLB_CNBCR1_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR1_BSA_SHIFT                     16
#define MLB_CNBCR1_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR1_BSA_SHIFT))&MLB_CNBCR1_BSA_MASK)
/* CECR2 Bit Fields */
#define MLB_CECR2_CA_MASK                        0xFFu
#define MLB_CECR2_CA_SHIFT                       0
#define MLB_CECR2_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR2_CA_SHIFT))&MLB_CECR2_CA_MASK)
#define MLB_CECR2_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR2_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR2_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR2_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR2_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR2_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR2_Rsvd_IPL_SHIFT                 13
#define MLB_CECR2_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR2_Rsvd_IPL_SHIFT))&MLB_CECR2_Rsvd_IPL_MASK)
#define MLB_CECR2_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR2_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR2_MPE_MASK                       0x10000u
#define MLB_CECR2_MPE_SHIFT                      16
#define MLB_CECR2_MDB_MASK                       0x20000u
#define MLB_CECR2_MDB_SHIFT                      17
#define MLB_CECR2_MBD_MASK                       0x40000u
#define MLB_CECR2_MBD_SHIFT                      18
#define MLB_CECR2_MBS_MASK                       0x80000u
#define MLB_CECR2_MBS_SHIFT                      19
#define MLB_CECR2_MBE_MASK                       0x100000u
#define MLB_CECR2_MBE_SHIFT                      20
#define MLB_CECR2_MLFS_MASK                      0x400000u
#define MLB_CECR2_MLFS_SHIFT                     22
#define MLB_CECR2_MDS_MASK                       0x6000000u
#define MLB_CECR2_MDS_SHIFT                      25
#define MLB_CECR2_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR2_MDS_SHIFT))&MLB_CECR2_MDS_MASK)
#define MLB_CECR2_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR2_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR2_CT_MASK                        0x30000000u
#define MLB_CECR2_CT_SHIFT                       28
#define MLB_CECR2_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR2_CT_SHIFT))&MLB_CECR2_CT_MASK)
#define MLB_CECR2_TR_MASK                        0x40000000u
#define MLB_CECR2_TR_SHIFT                       30
#define MLB_CECR2_CE_MASK                        0x80000000u
#define MLB_CECR2_CE_SHIFT                       31
/* CSCR2 Bit Fields */
#define MLB_CSCR2_CBPE_MASK                      0x1u
#define MLB_CSCR2_CBPE_SHIFT                     0
#define MLB_CSCR2_CBDB_MASK                      0x2u
#define MLB_CSCR2_CBDB_SHIFT                     1
#define MLB_CSCR2_CBD_MASK                       0x4u
#define MLB_CSCR2_CBD_SHIFT                      2
#define MLB_CSCR2_CBS_MASK                       0x8u
#define MLB_CSCR2_CBS_SHIFT                      3
#define MLB_CSCR2_BE_MASK                        0x10u
#define MLB_CSCR2_BE_SHIFT                       4
#define MLB_CSCR2_ABE_MASK                       0x20u
#define MLB_CSCR2_ABE_SHIFT                      5
#define MLB_CSCR2_LFS_MASK                       0x40u
#define MLB_CSCR2_LFS_SHIFT                      6
#define MLB_CSCR2_PBPE_MASK                      0x100u
#define MLB_CSCR2_PBPE_SHIFT                     8
#define MLB_CSCR2_PBDB_MASK                      0x200u
#define MLB_CSCR2_PBDB_SHIFT                     9
#define MLB_CSCR2_PBD_MASK                       0x400u
#define MLB_CSCR2_PBD_SHIFT                      10
#define MLB_CSCR2_PBS_MASK                       0x800u
#define MLB_CSCR2_PBS_SHIFT                      11
#define MLB_CSCR2_RDY_MASK                       0x10000u
#define MLB_CSCR2_RDY_SHIFT                      16
#define MLB_CSCR2_GIRB_MASK                      0x20000u
#define MLB_CSCR2_GIRB_SHIFT                     17
#define MLB_CSCR2_IVB_MASK                       0xC0000u
#define MLB_CSCR2_IVB_SHIFT                      18
#define MLB_CSCR2_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR2_IVB_SHIFT))&MLB_CSCR2_IVB_MASK)
#define MLB_CSCR2_BF_MASK                        0x40000000u
#define MLB_CSCR2_BF_SHIFT                       30
#define MLB_CSCR2_BM_MASK                        0x80000000u
#define MLB_CSCR2_BM_SHIFT                       31
/* CCBCR2 Bit Fields */
#define MLB_CCBCR2_BFA0_MASK                     0x3u
#define MLB_CCBCR2_BFA0_SHIFT                    0
#define MLB_CCBCR2_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR2_BFA0_SHIFT))&MLB_CCBCR2_BFA0_MASK)
#define MLB_CCBCR2_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR2_BFA1_SHIFT                    2
#define MLB_CCBCR2_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR2_BFA1_SHIFT))&MLB_CCBCR2_BFA1_MASK)
#define MLB_CCBCR2_BCA0_MASK                     0x30000u
#define MLB_CCBCR2_BCA0_SHIFT                    16
#define MLB_CCBCR2_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR2_BCA0_SHIFT))&MLB_CCBCR2_BCA0_MASK)
#define MLB_CCBCR2_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR2_BCA1_SHIFT                    18
#define MLB_CCBCR2_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR2_BCA1_SHIFT))&MLB_CCBCR2_BCA1_MASK)
/* CNBCR2 Bit Fields */
#define MLB_CNBCR2_BEA_MASK                      0xFFFFu
#define MLB_CNBCR2_BEA_SHIFT                     0
#define MLB_CNBCR2_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR2_BEA_SHIFT))&MLB_CNBCR2_BEA_MASK)
#define MLB_CNBCR2_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR2_BSA_SHIFT                     16
#define MLB_CNBCR2_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR2_BSA_SHIFT))&MLB_CNBCR2_BSA_MASK)
/* CECR3 Bit Fields */
#define MLB_CECR3_CA_MASK                        0xFFu
#define MLB_CECR3_CA_SHIFT                       0
#define MLB_CECR3_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR3_CA_SHIFT))&MLB_CECR3_CA_MASK)
#define MLB_CECR3_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR3_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR3_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR3_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR3_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR3_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR3_Rsvd_IPL_SHIFT                 13
#define MLB_CECR3_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR3_Rsvd_IPL_SHIFT))&MLB_CECR3_Rsvd_IPL_MASK)
#define MLB_CECR3_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR3_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR3_MPE_MASK                       0x10000u
#define MLB_CECR3_MPE_SHIFT                      16
#define MLB_CECR3_MDB_MASK                       0x20000u
#define MLB_CECR3_MDB_SHIFT                      17
#define MLB_CECR3_MBD_MASK                       0x40000u
#define MLB_CECR3_MBD_SHIFT                      18
#define MLB_CECR3_MBS_MASK                       0x80000u
#define MLB_CECR3_MBS_SHIFT                      19
#define MLB_CECR3_MBE_MASK                       0x100000u
#define MLB_CECR3_MBE_SHIFT                      20
#define MLB_CECR3_MLFS_MASK                      0x400000u
#define MLB_CECR3_MLFS_SHIFT                     22
#define MLB_CECR3_MDS_MASK                       0x6000000u
#define MLB_CECR3_MDS_SHIFT                      25
#define MLB_CECR3_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR3_MDS_SHIFT))&MLB_CECR3_MDS_MASK)
#define MLB_CECR3_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR3_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR3_CT_MASK                        0x30000000u
#define MLB_CECR3_CT_SHIFT                       28
#define MLB_CECR3_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR3_CT_SHIFT))&MLB_CECR3_CT_MASK)
#define MLB_CECR3_TR_MASK                        0x40000000u
#define MLB_CECR3_TR_SHIFT                       30
#define MLB_CECR3_CE_MASK                        0x80000000u
#define MLB_CECR3_CE_SHIFT                       31
/* CSCR3 Bit Fields */
#define MLB_CSCR3_CBPE_MASK                      0x1u
#define MLB_CSCR3_CBPE_SHIFT                     0
#define MLB_CSCR3_CBDB_MASK                      0x2u
#define MLB_CSCR3_CBDB_SHIFT                     1
#define MLB_CSCR3_CBD_MASK                       0x4u
#define MLB_CSCR3_CBD_SHIFT                      2
#define MLB_CSCR3_CBS_MASK                       0x8u
#define MLB_CSCR3_CBS_SHIFT                      3
#define MLB_CSCR3_BE_MASK                        0x10u
#define MLB_CSCR3_BE_SHIFT                       4
#define MLB_CSCR3_ABE_MASK                       0x20u
#define MLB_CSCR3_ABE_SHIFT                      5
#define MLB_CSCR3_LFS_MASK                       0x40u
#define MLB_CSCR3_LFS_SHIFT                      6
#define MLB_CSCR3_PBPE_MASK                      0x100u
#define MLB_CSCR3_PBPE_SHIFT                     8
#define MLB_CSCR3_PBDB_MASK                      0x200u
#define MLB_CSCR3_PBDB_SHIFT                     9
#define MLB_CSCR3_PBD_MASK                       0x400u
#define MLB_CSCR3_PBD_SHIFT                      10
#define MLB_CSCR3_PBS_MASK                       0x800u
#define MLB_CSCR3_PBS_SHIFT                      11
#define MLB_CSCR3_RDY_MASK                       0x10000u
#define MLB_CSCR3_RDY_SHIFT                      16
#define MLB_CSCR3_GIRB_MASK                      0x20000u
#define MLB_CSCR3_GIRB_SHIFT                     17
#define MLB_CSCR3_IVB_MASK                       0xC0000u
#define MLB_CSCR3_IVB_SHIFT                      18
#define MLB_CSCR3_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR3_IVB_SHIFT))&MLB_CSCR3_IVB_MASK)
#define MLB_CSCR3_BF_MASK                        0x40000000u
#define MLB_CSCR3_BF_SHIFT                       30
#define MLB_CSCR3_BM_MASK                        0x80000000u
#define MLB_CSCR3_BM_SHIFT                       31
/* CCBCR3 Bit Fields */
#define MLB_CCBCR3_BFA0_MASK                     0x3u
#define MLB_CCBCR3_BFA0_SHIFT                    0
#define MLB_CCBCR3_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR3_BFA0_SHIFT))&MLB_CCBCR3_BFA0_MASK)
#define MLB_CCBCR3_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR3_BFA1_SHIFT                    2
#define MLB_CCBCR3_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR3_BFA1_SHIFT))&MLB_CCBCR3_BFA1_MASK)
#define MLB_CCBCR3_BCA0_MASK                     0x30000u
#define MLB_CCBCR3_BCA0_SHIFT                    16
#define MLB_CCBCR3_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR3_BCA0_SHIFT))&MLB_CCBCR3_BCA0_MASK)
#define MLB_CCBCR3_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR3_BCA1_SHIFT                    18
#define MLB_CCBCR3_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR3_BCA1_SHIFT))&MLB_CCBCR3_BCA1_MASK)
/* CNBCR3 Bit Fields */
#define MLB_CNBCR3_BEA_MASK                      0xFFFFu
#define MLB_CNBCR3_BEA_SHIFT                     0
#define MLB_CNBCR3_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR3_BEA_SHIFT))&MLB_CNBCR3_BEA_MASK)
#define MLB_CNBCR3_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR3_BSA_SHIFT                     16
#define MLB_CNBCR3_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR3_BSA_SHIFT))&MLB_CNBCR3_BSA_MASK)
/* CECR4 Bit Fields */
#define MLB_CECR4_CA_MASK                        0xFFu
#define MLB_CECR4_CA_SHIFT                       0
#define MLB_CECR4_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR4_CA_SHIFT))&MLB_CECR4_CA_MASK)
#define MLB_CECR4_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR4_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR4_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR4_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR4_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR4_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR4_Rsvd_IPL_SHIFT                 13
#define MLB_CECR4_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR4_Rsvd_IPL_SHIFT))&MLB_CECR4_Rsvd_IPL_MASK)
#define MLB_CECR4_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR4_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR4_MPE_MASK                       0x10000u
#define MLB_CECR4_MPE_SHIFT                      16
#define MLB_CECR4_MDB_MASK                       0x20000u
#define MLB_CECR4_MDB_SHIFT                      17
#define MLB_CECR4_MBD_MASK                       0x40000u
#define MLB_CECR4_MBD_SHIFT                      18
#define MLB_CECR4_MBS_MASK                       0x80000u
#define MLB_CECR4_MBS_SHIFT                      19
#define MLB_CECR4_MBE_MASK                       0x100000u
#define MLB_CECR4_MBE_SHIFT                      20
#define MLB_CECR4_MLFS_MASK                      0x400000u
#define MLB_CECR4_MLFS_SHIFT                     22
#define MLB_CECR4_MDS_MASK                       0x6000000u
#define MLB_CECR4_MDS_SHIFT                      25
#define MLB_CECR4_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR4_MDS_SHIFT))&MLB_CECR4_MDS_MASK)
#define MLB_CECR4_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR4_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR4_CT_MASK                        0x30000000u
#define MLB_CECR4_CT_SHIFT                       28
#define MLB_CECR4_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR4_CT_SHIFT))&MLB_CECR4_CT_MASK)
#define MLB_CECR4_TR_MASK                        0x40000000u
#define MLB_CECR4_TR_SHIFT                       30
#define MLB_CECR4_CE_MASK                        0x80000000u
#define MLB_CECR4_CE_SHIFT                       31
/* CSCR4 Bit Fields */
#define MLB_CSCR4_CBPE_MASK                      0x1u
#define MLB_CSCR4_CBPE_SHIFT                     0
#define MLB_CSCR4_CBDB_MASK                      0x2u
#define MLB_CSCR4_CBDB_SHIFT                     1
#define MLB_CSCR4_CBD_MASK                       0x4u
#define MLB_CSCR4_CBD_SHIFT                      2
#define MLB_CSCR4_CBS_MASK                       0x8u
#define MLB_CSCR4_CBS_SHIFT                      3
#define MLB_CSCR4_BE_MASK                        0x10u
#define MLB_CSCR4_BE_SHIFT                       4
#define MLB_CSCR4_ABE_MASK                       0x20u
#define MLB_CSCR4_ABE_SHIFT                      5
#define MLB_CSCR4_LFS_MASK                       0x40u
#define MLB_CSCR4_LFS_SHIFT                      6
#define MLB_CSCR4_PBPE_MASK                      0x100u
#define MLB_CSCR4_PBPE_SHIFT                     8
#define MLB_CSCR4_PBDB_MASK                      0x200u
#define MLB_CSCR4_PBDB_SHIFT                     9
#define MLB_CSCR4_PBD_MASK                       0x400u
#define MLB_CSCR4_PBD_SHIFT                      10
#define MLB_CSCR4_PBS_MASK                       0x800u
#define MLB_CSCR4_PBS_SHIFT                      11
#define MLB_CSCR4_RDY_MASK                       0x10000u
#define MLB_CSCR4_RDY_SHIFT                      16
#define MLB_CSCR4_GIRB_MASK                      0x20000u
#define MLB_CSCR4_GIRB_SHIFT                     17
#define MLB_CSCR4_IVB_MASK                       0xC0000u
#define MLB_CSCR4_IVB_SHIFT                      18
#define MLB_CSCR4_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR4_IVB_SHIFT))&MLB_CSCR4_IVB_MASK)
#define MLB_CSCR4_BF_MASK                        0x40000000u
#define MLB_CSCR4_BF_SHIFT                       30
#define MLB_CSCR4_BM_MASK                        0x80000000u
#define MLB_CSCR4_BM_SHIFT                       31
/* CCBCR4 Bit Fields */
#define MLB_CCBCR4_BFA0_MASK                     0x3u
#define MLB_CCBCR4_BFA0_SHIFT                    0
#define MLB_CCBCR4_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR4_BFA0_SHIFT))&MLB_CCBCR4_BFA0_MASK)
#define MLB_CCBCR4_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR4_BFA1_SHIFT                    2
#define MLB_CCBCR4_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR4_BFA1_SHIFT))&MLB_CCBCR4_BFA1_MASK)
#define MLB_CCBCR4_BCA0_MASK                     0x30000u
#define MLB_CCBCR4_BCA0_SHIFT                    16
#define MLB_CCBCR4_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR4_BCA0_SHIFT))&MLB_CCBCR4_BCA0_MASK)
#define MLB_CCBCR4_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR4_BCA1_SHIFT                    18
#define MLB_CCBCR4_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR4_BCA1_SHIFT))&MLB_CCBCR4_BCA1_MASK)
/* CNBCR4 Bit Fields */
#define MLB_CNBCR4_BEA_MASK                      0xFFFFu
#define MLB_CNBCR4_BEA_SHIFT                     0
#define MLB_CNBCR4_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR4_BEA_SHIFT))&MLB_CNBCR4_BEA_MASK)
#define MLB_CNBCR4_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR4_BSA_SHIFT                     16
#define MLB_CNBCR4_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR4_BSA_SHIFT))&MLB_CNBCR4_BSA_MASK)
/* CECR5 Bit Fields */
#define MLB_CECR5_CA_MASK                        0xFFu
#define MLB_CECR5_CA_SHIFT                       0
#define MLB_CECR5_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR5_CA_SHIFT))&MLB_CECR5_CA_MASK)
#define MLB_CECR5_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR5_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR5_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR5_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR5_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR5_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR5_Rsvd_IPL_SHIFT                 13
#define MLB_CECR5_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR5_Rsvd_IPL_SHIFT))&MLB_CECR5_Rsvd_IPL_MASK)
#define MLB_CECR5_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR5_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR5_MPE_MASK                       0x10000u
#define MLB_CECR5_MPE_SHIFT                      16
#define MLB_CECR5_MDB_MASK                       0x20000u
#define MLB_CECR5_MDB_SHIFT                      17
#define MLB_CECR5_MBD_MASK                       0x40000u
#define MLB_CECR5_MBD_SHIFT                      18
#define MLB_CECR5_MBS_MASK                       0x80000u
#define MLB_CECR5_MBS_SHIFT                      19
#define MLB_CECR5_MBE_MASK                       0x100000u
#define MLB_CECR5_MBE_SHIFT                      20
#define MLB_CECR5_MLFS_MASK                      0x400000u
#define MLB_CECR5_MLFS_SHIFT                     22
#define MLB_CECR5_MDS_MASK                       0x6000000u
#define MLB_CECR5_MDS_SHIFT                      25
#define MLB_CECR5_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR5_MDS_SHIFT))&MLB_CECR5_MDS_MASK)
#define MLB_CECR5_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR5_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR5_CT_MASK                        0x30000000u
#define MLB_CECR5_CT_SHIFT                       28
#define MLB_CECR5_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR5_CT_SHIFT))&MLB_CECR5_CT_MASK)
#define MLB_CECR5_TR_MASK                        0x40000000u
#define MLB_CECR5_TR_SHIFT                       30
#define MLB_CECR5_CE_MASK                        0x80000000u
#define MLB_CECR5_CE_SHIFT                       31
/* CSCR5 Bit Fields */
#define MLB_CSCR5_CBPE_MASK                      0x1u
#define MLB_CSCR5_CBPE_SHIFT                     0
#define MLB_CSCR5_CBDB_MASK                      0x2u
#define MLB_CSCR5_CBDB_SHIFT                     1
#define MLB_CSCR5_CBD_MASK                       0x4u
#define MLB_CSCR5_CBD_SHIFT                      2
#define MLB_CSCR5_CBS_MASK                       0x8u
#define MLB_CSCR5_CBS_SHIFT                      3
#define MLB_CSCR5_BE_MASK                        0x10u
#define MLB_CSCR5_BE_SHIFT                       4
#define MLB_CSCR5_ABE_MASK                       0x20u
#define MLB_CSCR5_ABE_SHIFT                      5
#define MLB_CSCR5_LFS_MASK                       0x40u
#define MLB_CSCR5_LFS_SHIFT                      6
#define MLB_CSCR5_PBPE_MASK                      0x100u
#define MLB_CSCR5_PBPE_SHIFT                     8
#define MLB_CSCR5_PBDB_MASK                      0x200u
#define MLB_CSCR5_PBDB_SHIFT                     9
#define MLB_CSCR5_PBD_MASK                       0x400u
#define MLB_CSCR5_PBD_SHIFT                      10
#define MLB_CSCR5_PBS_MASK                       0x800u
#define MLB_CSCR5_PBS_SHIFT                      11
#define MLB_CSCR5_RDY_MASK                       0x10000u
#define MLB_CSCR5_RDY_SHIFT                      16
#define MLB_CSCR5_GIRB_MASK                      0x20000u
#define MLB_CSCR5_GIRB_SHIFT                     17
#define MLB_CSCR5_IVB_MASK                       0xC0000u
#define MLB_CSCR5_IVB_SHIFT                      18
#define MLB_CSCR5_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR5_IVB_SHIFT))&MLB_CSCR5_IVB_MASK)
#define MLB_CSCR5_BF_MASK                        0x40000000u
#define MLB_CSCR5_BF_SHIFT                       30
#define MLB_CSCR5_BM_MASK                        0x80000000u
#define MLB_CSCR5_BM_SHIFT                       31
/* CCBCR5 Bit Fields */
#define MLB_CCBCR5_BFA0_MASK                     0x3u
#define MLB_CCBCR5_BFA0_SHIFT                    0
#define MLB_CCBCR5_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR5_BFA0_SHIFT))&MLB_CCBCR5_BFA0_MASK)
#define MLB_CCBCR5_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR5_BFA1_SHIFT                    2
#define MLB_CCBCR5_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR5_BFA1_SHIFT))&MLB_CCBCR5_BFA1_MASK)
#define MLB_CCBCR5_BCA0_MASK                     0x30000u
#define MLB_CCBCR5_BCA0_SHIFT                    16
#define MLB_CCBCR5_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR5_BCA0_SHIFT))&MLB_CCBCR5_BCA0_MASK)
#define MLB_CCBCR5_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR5_BCA1_SHIFT                    18
#define MLB_CCBCR5_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR5_BCA1_SHIFT))&MLB_CCBCR5_BCA1_MASK)
/* CNBCR5 Bit Fields */
#define MLB_CNBCR5_BEA_MASK                      0xFFFFu
#define MLB_CNBCR5_BEA_SHIFT                     0
#define MLB_CNBCR5_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR5_BEA_SHIFT))&MLB_CNBCR5_BEA_MASK)
#define MLB_CNBCR5_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR5_BSA_SHIFT                     16
#define MLB_CNBCR5_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR5_BSA_SHIFT))&MLB_CNBCR5_BSA_MASK)
/* CECR6 Bit Fields */
#define MLB_CECR6_CA_MASK                        0xFFu
#define MLB_CECR6_CA_SHIFT                       0
#define MLB_CECR6_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR6_CA_SHIFT))&MLB_CECR6_CA_MASK)
#define MLB_CECR6_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR6_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR6_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR6_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR6_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR6_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR6_Rsvd_IPL_SHIFT                 13
#define MLB_CECR6_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR6_Rsvd_IPL_SHIFT))&MLB_CECR6_Rsvd_IPL_MASK)
#define MLB_CECR6_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR6_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR6_MPE_MASK                       0x10000u
#define MLB_CECR6_MPE_SHIFT                      16
#define MLB_CECR6_MDB_MASK                       0x20000u
#define MLB_CECR6_MDB_SHIFT                      17
#define MLB_CECR6_MBD_MASK                       0x40000u
#define MLB_CECR6_MBD_SHIFT                      18
#define MLB_CECR6_MBS_MASK                       0x80000u
#define MLB_CECR6_MBS_SHIFT                      19
#define MLB_CECR6_MBE_MASK                       0x100000u
#define MLB_CECR6_MBE_SHIFT                      20
#define MLB_CECR6_MLFS_MASK                      0x400000u
#define MLB_CECR6_MLFS_SHIFT                     22
#define MLB_CECR6_MDS_MASK                       0x6000000u
#define MLB_CECR6_MDS_SHIFT                      25
#define MLB_CECR6_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR6_MDS_SHIFT))&MLB_CECR6_MDS_MASK)
#define MLB_CECR6_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR6_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR6_CT_MASK                        0x30000000u
#define MLB_CECR6_CT_SHIFT                       28
#define MLB_CECR6_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR6_CT_SHIFT))&MLB_CECR6_CT_MASK)
#define MLB_CECR6_TR_MASK                        0x40000000u
#define MLB_CECR6_TR_SHIFT                       30
#define MLB_CECR6_CE_MASK                        0x80000000u
#define MLB_CECR6_CE_SHIFT                       31
/* CSCR6 Bit Fields */
#define MLB_CSCR6_CBPE_MASK                      0x1u
#define MLB_CSCR6_CBPE_SHIFT                     0
#define MLB_CSCR6_CBDB_MASK                      0x2u
#define MLB_CSCR6_CBDB_SHIFT                     1
#define MLB_CSCR6_CBD_MASK                       0x4u
#define MLB_CSCR6_CBD_SHIFT                      2
#define MLB_CSCR6_CBS_MASK                       0x8u
#define MLB_CSCR6_CBS_SHIFT                      3
#define MLB_CSCR6_BE_MASK                        0x10u
#define MLB_CSCR6_BE_SHIFT                       4
#define MLB_CSCR6_ABE_MASK                       0x20u
#define MLB_CSCR6_ABE_SHIFT                      5
#define MLB_CSCR6_LFS_MASK                       0x40u
#define MLB_CSCR6_LFS_SHIFT                      6
#define MLB_CSCR6_PBPE_MASK                      0x100u
#define MLB_CSCR6_PBPE_SHIFT                     8
#define MLB_CSCR6_PBDB_MASK                      0x200u
#define MLB_CSCR6_PBDB_SHIFT                     9
#define MLB_CSCR6_PBD_MASK                       0x400u
#define MLB_CSCR6_PBD_SHIFT                      10
#define MLB_CSCR6_PBS_MASK                       0x800u
#define MLB_CSCR6_PBS_SHIFT                      11
#define MLB_CSCR6_RDY_MASK                       0x10000u
#define MLB_CSCR6_RDY_SHIFT                      16
#define MLB_CSCR6_GIRB_MASK                      0x20000u
#define MLB_CSCR6_GIRB_SHIFT                     17
#define MLB_CSCR6_IVB_MASK                       0xC0000u
#define MLB_CSCR6_IVB_SHIFT                      18
#define MLB_CSCR6_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR6_IVB_SHIFT))&MLB_CSCR6_IVB_MASK)
#define MLB_CSCR6_BF_MASK                        0x40000000u
#define MLB_CSCR6_BF_SHIFT                       30
#define MLB_CSCR6_BM_MASK                        0x80000000u
#define MLB_CSCR6_BM_SHIFT                       31
/* CCBCR6 Bit Fields */
#define MLB_CCBCR6_BFA0_MASK                     0x3u
#define MLB_CCBCR6_BFA0_SHIFT                    0
#define MLB_CCBCR6_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR6_BFA0_SHIFT))&MLB_CCBCR6_BFA0_MASK)
#define MLB_CCBCR6_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR6_BFA1_SHIFT                    2
#define MLB_CCBCR6_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR6_BFA1_SHIFT))&MLB_CCBCR6_BFA1_MASK)
#define MLB_CCBCR6_BCA0_MASK                     0x30000u
#define MLB_CCBCR6_BCA0_SHIFT                    16
#define MLB_CCBCR6_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR6_BCA0_SHIFT))&MLB_CCBCR6_BCA0_MASK)
#define MLB_CCBCR6_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR6_BCA1_SHIFT                    18
#define MLB_CCBCR6_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR6_BCA1_SHIFT))&MLB_CCBCR6_BCA1_MASK)
/* CNBCR6 Bit Fields */
#define MLB_CNBCR6_BEA_MASK                      0xFFFFu
#define MLB_CNBCR6_BEA_SHIFT                     0
#define MLB_CNBCR6_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR6_BEA_SHIFT))&MLB_CNBCR6_BEA_MASK)
#define MLB_CNBCR6_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR6_BSA_SHIFT                     16
#define MLB_CNBCR6_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR6_BSA_SHIFT))&MLB_CNBCR6_BSA_MASK)
/* CECR7 Bit Fields */
#define MLB_CECR7_CA_MASK                        0xFFu
#define MLB_CECR7_CA_SHIFT                       0
#define MLB_CECR7_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR7_CA_SHIFT))&MLB_CECR7_CA_MASK)
#define MLB_CECR7_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR7_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR7_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR7_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR7_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR7_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR7_Rsvd_IPL_SHIFT                 13
#define MLB_CECR7_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR7_Rsvd_IPL_SHIFT))&MLB_CECR7_Rsvd_IPL_MASK)
#define MLB_CECR7_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR7_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR7_MPE_MASK                       0x10000u
#define MLB_CECR7_MPE_SHIFT                      16
#define MLB_CECR7_MDB_MASK                       0x20000u
#define MLB_CECR7_MDB_SHIFT                      17
#define MLB_CECR7_MBD_MASK                       0x40000u
#define MLB_CECR7_MBD_SHIFT                      18
#define MLB_CECR7_MBS_MASK                       0x80000u
#define MLB_CECR7_MBS_SHIFT                      19
#define MLB_CECR7_MBE_MASK                       0x100000u
#define MLB_CECR7_MBE_SHIFT                      20
#define MLB_CECR7_MLFS_MASK                      0x400000u
#define MLB_CECR7_MLFS_SHIFT                     22
#define MLB_CECR7_MDS_MASK                       0x6000000u
#define MLB_CECR7_MDS_SHIFT                      25
#define MLB_CECR7_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR7_MDS_SHIFT))&MLB_CECR7_MDS_MASK)
#define MLB_CECR7_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR7_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR7_CT_MASK                        0x30000000u
#define MLB_CECR7_CT_SHIFT                       28
#define MLB_CECR7_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR7_CT_SHIFT))&MLB_CECR7_CT_MASK)
#define MLB_CECR7_TR_MASK                        0x40000000u
#define MLB_CECR7_TR_SHIFT                       30
#define MLB_CECR7_CE_MASK                        0x80000000u
#define MLB_CECR7_CE_SHIFT                       31
/* CSCR7 Bit Fields */
#define MLB_CSCR7_CBPE_MASK                      0x1u
#define MLB_CSCR7_CBPE_SHIFT                     0
#define MLB_CSCR7_CBDB_MASK                      0x2u
#define MLB_CSCR7_CBDB_SHIFT                     1
#define MLB_CSCR7_CBD_MASK                       0x4u
#define MLB_CSCR7_CBD_SHIFT                      2
#define MLB_CSCR7_CBS_MASK                       0x8u
#define MLB_CSCR7_CBS_SHIFT                      3
#define MLB_CSCR7_BE_MASK                        0x10u
#define MLB_CSCR7_BE_SHIFT                       4
#define MLB_CSCR7_ABE_MASK                       0x20u
#define MLB_CSCR7_ABE_SHIFT                      5
#define MLB_CSCR7_LFS_MASK                       0x40u
#define MLB_CSCR7_LFS_SHIFT                      6
#define MLB_CSCR7_PBPE_MASK                      0x100u
#define MLB_CSCR7_PBPE_SHIFT                     8
#define MLB_CSCR7_PBDB_MASK                      0x200u
#define MLB_CSCR7_PBDB_SHIFT                     9
#define MLB_CSCR7_PBD_MASK                       0x400u
#define MLB_CSCR7_PBD_SHIFT                      10
#define MLB_CSCR7_PBS_MASK                       0x800u
#define MLB_CSCR7_PBS_SHIFT                      11
#define MLB_CSCR7_RDY_MASK                       0x10000u
#define MLB_CSCR7_RDY_SHIFT                      16
#define MLB_CSCR7_GIRB_MASK                      0x20000u
#define MLB_CSCR7_GIRB_SHIFT                     17
#define MLB_CSCR7_IVB_MASK                       0xC0000u
#define MLB_CSCR7_IVB_SHIFT                      18
#define MLB_CSCR7_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR7_IVB_SHIFT))&MLB_CSCR7_IVB_MASK)
#define MLB_CSCR7_BF_MASK                        0x40000000u
#define MLB_CSCR7_BF_SHIFT                       30
#define MLB_CSCR7_BM_MASK                        0x80000000u
#define MLB_CSCR7_BM_SHIFT                       31
/* CCBCR7 Bit Fields */
#define MLB_CCBCR7_BFA0_MASK                     0x3u
#define MLB_CCBCR7_BFA0_SHIFT                    0
#define MLB_CCBCR7_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR7_BFA0_SHIFT))&MLB_CCBCR7_BFA0_MASK)
#define MLB_CCBCR7_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR7_BFA1_SHIFT                    2
#define MLB_CCBCR7_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR7_BFA1_SHIFT))&MLB_CCBCR7_BFA1_MASK)
#define MLB_CCBCR7_BCA0_MASK                     0x30000u
#define MLB_CCBCR7_BCA0_SHIFT                    16
#define MLB_CCBCR7_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR7_BCA0_SHIFT))&MLB_CCBCR7_BCA0_MASK)
#define MLB_CCBCR7_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR7_BCA1_SHIFT                    18
#define MLB_CCBCR7_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR7_BCA1_SHIFT))&MLB_CCBCR7_BCA1_MASK)
/* CNBCR7 Bit Fields */
#define MLB_CNBCR7_BEA_MASK                      0xFFFFu
#define MLB_CNBCR7_BEA_SHIFT                     0
#define MLB_CNBCR7_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR7_BEA_SHIFT))&MLB_CNBCR7_BEA_MASK)
#define MLB_CNBCR7_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR7_BSA_SHIFT                     16
#define MLB_CNBCR7_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR7_BSA_SHIFT))&MLB_CNBCR7_BSA_MASK)
/* CECR8 Bit Fields */
#define MLB_CECR8_CA_MASK                        0xFFu
#define MLB_CECR8_CA_SHIFT                       0
#define MLB_CECR8_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR8_CA_SHIFT))&MLB_CECR8_CA_MASK)
#define MLB_CECR8_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR8_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR8_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR8_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR8_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR8_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR8_Rsvd_IPL_SHIFT                 13
#define MLB_CECR8_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR8_Rsvd_IPL_SHIFT))&MLB_CECR8_Rsvd_IPL_MASK)
#define MLB_CECR8_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR8_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR8_MPE_MASK                       0x10000u
#define MLB_CECR8_MPE_SHIFT                      16
#define MLB_CECR8_MDB_MASK                       0x20000u
#define MLB_CECR8_MDB_SHIFT                      17
#define MLB_CECR8_MBD_MASK                       0x40000u
#define MLB_CECR8_MBD_SHIFT                      18
#define MLB_CECR8_MBS_MASK                       0x80000u
#define MLB_CECR8_MBS_SHIFT                      19
#define MLB_CECR8_MBE_MASK                       0x100000u
#define MLB_CECR8_MBE_SHIFT                      20
#define MLB_CECR8_MLFS_MASK                      0x400000u
#define MLB_CECR8_MLFS_SHIFT                     22
#define MLB_CECR8_MDS_MASK                       0x6000000u
#define MLB_CECR8_MDS_SHIFT                      25
#define MLB_CECR8_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR8_MDS_SHIFT))&MLB_CECR8_MDS_MASK)
#define MLB_CECR8_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR8_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR8_CT_MASK                        0x30000000u
#define MLB_CECR8_CT_SHIFT                       28
#define MLB_CECR8_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR8_CT_SHIFT))&MLB_CECR8_CT_MASK)
#define MLB_CECR8_TR_MASK                        0x40000000u
#define MLB_CECR8_TR_SHIFT                       30
#define MLB_CECR8_CE_MASK                        0x80000000u
#define MLB_CECR8_CE_SHIFT                       31
/* CSCR8 Bit Fields */
#define MLB_CSCR8_CBPE_MASK                      0x1u
#define MLB_CSCR8_CBPE_SHIFT                     0
#define MLB_CSCR8_CBDB_MASK                      0x2u
#define MLB_CSCR8_CBDB_SHIFT                     1
#define MLB_CSCR8_CBD_MASK                       0x4u
#define MLB_CSCR8_CBD_SHIFT                      2
#define MLB_CSCR8_CBS_MASK                       0x8u
#define MLB_CSCR8_CBS_SHIFT                      3
#define MLB_CSCR8_BE_MASK                        0x10u
#define MLB_CSCR8_BE_SHIFT                       4
#define MLB_CSCR8_ABE_MASK                       0x20u
#define MLB_CSCR8_ABE_SHIFT                      5
#define MLB_CSCR8_LFS_MASK                       0x40u
#define MLB_CSCR8_LFS_SHIFT                      6
#define MLB_CSCR8_PBPE_MASK                      0x100u
#define MLB_CSCR8_PBPE_SHIFT                     8
#define MLB_CSCR8_PBDB_MASK                      0x200u
#define MLB_CSCR8_PBDB_SHIFT                     9
#define MLB_CSCR8_PBD_MASK                       0x400u
#define MLB_CSCR8_PBD_SHIFT                      10
#define MLB_CSCR8_PBS_MASK                       0x800u
#define MLB_CSCR8_PBS_SHIFT                      11
#define MLB_CSCR8_RDY_MASK                       0x10000u
#define MLB_CSCR8_RDY_SHIFT                      16
#define MLB_CSCR8_GIRB_MASK                      0x20000u
#define MLB_CSCR8_GIRB_SHIFT                     17
#define MLB_CSCR8_IVB_MASK                       0xC0000u
#define MLB_CSCR8_IVB_SHIFT                      18
#define MLB_CSCR8_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR8_IVB_SHIFT))&MLB_CSCR8_IVB_MASK)
#define MLB_CSCR8_BF_MASK                        0x40000000u
#define MLB_CSCR8_BF_SHIFT                       30
#define MLB_CSCR8_BM_MASK                        0x80000000u
#define MLB_CSCR8_BM_SHIFT                       31
/* CCBCR8 Bit Fields */
#define MLB_CCBCR8_BFA0_MASK                     0x3u
#define MLB_CCBCR8_BFA0_SHIFT                    0
#define MLB_CCBCR8_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR8_BFA0_SHIFT))&MLB_CCBCR8_BFA0_MASK)
#define MLB_CCBCR8_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR8_BFA1_SHIFT                    2
#define MLB_CCBCR8_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR8_BFA1_SHIFT))&MLB_CCBCR8_BFA1_MASK)
#define MLB_CCBCR8_BCA0_MASK                     0x30000u
#define MLB_CCBCR8_BCA0_SHIFT                    16
#define MLB_CCBCR8_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR8_BCA0_SHIFT))&MLB_CCBCR8_BCA0_MASK)
#define MLB_CCBCR8_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR8_BCA1_SHIFT                    18
#define MLB_CCBCR8_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR8_BCA1_SHIFT))&MLB_CCBCR8_BCA1_MASK)
/* CNBCR8 Bit Fields */
#define MLB_CNBCR8_BEA_MASK                      0xFFFFu
#define MLB_CNBCR8_BEA_SHIFT                     0
#define MLB_CNBCR8_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR8_BEA_SHIFT))&MLB_CNBCR8_BEA_MASK)
#define MLB_CNBCR8_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR8_BSA_SHIFT                     16
#define MLB_CNBCR8_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR8_BSA_SHIFT))&MLB_CNBCR8_BSA_MASK)
/* CECR9 Bit Fields */
#define MLB_CECR9_CA_MASK                        0xFFu
#define MLB_CECR9_CA_SHIFT                       0
#define MLB_CECR9_CA(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR9_CA_SHIFT))&MLB_CECR9_CA_MASK)
#define MLB_CECR9_Rsvd_FSPC_IPL_MASK             0x1F00u
#define MLB_CECR9_Rsvd_FSPC_IPL_SHIFT            8
#define MLB_CECR9_Rsvd_FSPC_IPL(x)               (((uint32_t)(((uint32_t)(x))<<MLB_CECR9_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR9_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR9_Rsvd_IPL_MASK                  0x6000u
#define MLB_CECR9_Rsvd_IPL_SHIFT                 13
#define MLB_CECR9_Rsvd_IPL(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_CECR9_Rsvd_IPL_SHIFT))&MLB_CECR9_Rsvd_IPL_MASK)
#define MLB_CECR9_Rsvd_FSCD_IPL_MASK             0x8000u
#define MLB_CECR9_Rsvd_FSCD_IPL_SHIFT            15
#define MLB_CECR9_MPE_MASK                       0x10000u
#define MLB_CECR9_MPE_SHIFT                      16
#define MLB_CECR9_MDB_MASK                       0x20000u
#define MLB_CECR9_MDB_SHIFT                      17
#define MLB_CECR9_MBD_MASK                       0x40000u
#define MLB_CECR9_MBD_SHIFT                      18
#define MLB_CECR9_MBS_MASK                       0x80000u
#define MLB_CECR9_MBS_SHIFT                      19
#define MLB_CECR9_MBE_MASK                       0x100000u
#define MLB_CECR9_MBE_SHIFT                      20
#define MLB_CECR9_MLFS_MASK                      0x400000u
#define MLB_CECR9_MLFS_SHIFT                     22
#define MLB_CECR9_MDS_MASK                       0x6000000u
#define MLB_CECR9_MDS_SHIFT                      25
#define MLB_CECR9_MDS(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR9_MDS_SHIFT))&MLB_CECR9_MDS_MASK)
#define MLB_CECR9_Rsvd_FSE_FCE_MASK              0x8000000u
#define MLB_CECR9_Rsvd_FSE_FCE_SHIFT             27
#define MLB_CECR9_CT_MASK                        0x30000000u
#define MLB_CECR9_CT_SHIFT                       28
#define MLB_CECR9_CT(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_CECR9_CT_SHIFT))&MLB_CECR9_CT_MASK)
#define MLB_CECR9_TR_MASK                        0x40000000u
#define MLB_CECR9_TR_SHIFT                       30
#define MLB_CECR9_CE_MASK                        0x80000000u
#define MLB_CECR9_CE_SHIFT                       31
/* CSCR9 Bit Fields */
#define MLB_CSCR9_CBPE_MASK                      0x1u
#define MLB_CSCR9_CBPE_SHIFT                     0
#define MLB_CSCR9_CBDB_MASK                      0x2u
#define MLB_CSCR9_CBDB_SHIFT                     1
#define MLB_CSCR9_CBD_MASK                       0x4u
#define MLB_CSCR9_CBD_SHIFT                      2
#define MLB_CSCR9_CBS_MASK                       0x8u
#define MLB_CSCR9_CBS_SHIFT                      3
#define MLB_CSCR9_BE_MASK                        0x10u
#define MLB_CSCR9_BE_SHIFT                       4
#define MLB_CSCR9_ABE_MASK                       0x20u
#define MLB_CSCR9_ABE_SHIFT                      5
#define MLB_CSCR9_LFS_MASK                       0x40u
#define MLB_CSCR9_LFS_SHIFT                      6
#define MLB_CSCR9_PBPE_MASK                      0x100u
#define MLB_CSCR9_PBPE_SHIFT                     8
#define MLB_CSCR9_PBDB_MASK                      0x200u
#define MLB_CSCR9_PBDB_SHIFT                     9
#define MLB_CSCR9_PBD_MASK                       0x400u
#define MLB_CSCR9_PBD_SHIFT                      10
#define MLB_CSCR9_PBS_MASK                       0x800u
#define MLB_CSCR9_PBS_SHIFT                      11
#define MLB_CSCR9_RDY_MASK                       0x10000u
#define MLB_CSCR9_RDY_SHIFT                      16
#define MLB_CSCR9_GIRB_MASK                      0x20000u
#define MLB_CSCR9_GIRB_SHIFT                     17
#define MLB_CSCR9_IVB_MASK                       0xC0000u
#define MLB_CSCR9_IVB_SHIFT                      18
#define MLB_CSCR9_IVB(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CSCR9_IVB_SHIFT))&MLB_CSCR9_IVB_MASK)
#define MLB_CSCR9_BF_MASK                        0x40000000u
#define MLB_CSCR9_BF_SHIFT                       30
#define MLB_CSCR9_BM_MASK                        0x80000000u
#define MLB_CSCR9_BM_SHIFT                       31
/* CCBCR9 Bit Fields */
#define MLB_CCBCR9_BFA0_MASK                     0x3u
#define MLB_CCBCR9_BFA0_SHIFT                    0
#define MLB_CCBCR9_BFA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR9_BFA0_SHIFT))&MLB_CCBCR9_BFA0_MASK)
#define MLB_CCBCR9_BFA1_MASK                     0xFFFCu
#define MLB_CCBCR9_BFA1_SHIFT                    2
#define MLB_CCBCR9_BFA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR9_BFA1_SHIFT))&MLB_CCBCR9_BFA1_MASK)
#define MLB_CCBCR9_BCA0_MASK                     0x30000u
#define MLB_CCBCR9_BCA0_SHIFT                    16
#define MLB_CCBCR9_BCA0(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR9_BCA0_SHIFT))&MLB_CCBCR9_BCA0_MASK)
#define MLB_CCBCR9_BCA1_MASK                     0xFFFC0000u
#define MLB_CCBCR9_BCA1_SHIFT                    18
#define MLB_CCBCR9_BCA1(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR9_BCA1_SHIFT))&MLB_CCBCR9_BCA1_MASK)
/* CNBCR9 Bit Fields */
#define MLB_CNBCR9_BEA_MASK                      0xFFFFu
#define MLB_CNBCR9_BEA_SHIFT                     0
#define MLB_CNBCR9_BEA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR9_BEA_SHIFT))&MLB_CNBCR9_BEA_MASK)
#define MLB_CNBCR9_BSA_MASK                      0xFFFF0000u
#define MLB_CNBCR9_BSA_SHIFT                     16
#define MLB_CNBCR9_BSA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR9_BSA_SHIFT))&MLB_CNBCR9_BSA_MASK)
/* CECR10 Bit Fields */
#define MLB_CECR10_CA_MASK                       0xFFu
#define MLB_CECR10_CA_SHIFT                      0
#define MLB_CECR10_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR10_CA_SHIFT))&MLB_CECR10_CA_MASK)
#define MLB_CECR10_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR10_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR10_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR10_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR10_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR10_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR10_Rsvd_IPL_SHIFT                13
#define MLB_CECR10_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR10_Rsvd_IPL_SHIFT))&MLB_CECR10_Rsvd_IPL_MASK)
#define MLB_CECR10_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR10_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR10_MPE_MASK                      0x10000u
#define MLB_CECR10_MPE_SHIFT                     16
#define MLB_CECR10_MDB_MASK                      0x20000u
#define MLB_CECR10_MDB_SHIFT                     17
#define MLB_CECR10_MBD_MASK                      0x40000u
#define MLB_CECR10_MBD_SHIFT                     18
#define MLB_CECR10_MBS_MASK                      0x80000u
#define MLB_CECR10_MBS_SHIFT                     19
#define MLB_CECR10_MBE_MASK                      0x100000u
#define MLB_CECR10_MBE_SHIFT                     20
#define MLB_CECR10_MLFS_MASK                     0x400000u
#define MLB_CECR10_MLFS_SHIFT                    22
#define MLB_CECR10_MDS_MASK                      0x6000000u
#define MLB_CECR10_MDS_SHIFT                     25
#define MLB_CECR10_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR10_MDS_SHIFT))&MLB_CECR10_MDS_MASK)
#define MLB_CECR10_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR10_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR10_CT_MASK                       0x30000000u
#define MLB_CECR10_CT_SHIFT                      28
#define MLB_CECR10_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR10_CT_SHIFT))&MLB_CECR10_CT_MASK)
#define MLB_CECR10_TR_MASK                       0x40000000u
#define MLB_CECR10_TR_SHIFT                      30
#define MLB_CECR10_CE_MASK                       0x80000000u
#define MLB_CECR10_CE_SHIFT                      31
/* CSCR10 Bit Fields */
#define MLB_CSCR10_CBPE_MASK                     0x1u
#define MLB_CSCR10_CBPE_SHIFT                    0
#define MLB_CSCR10_CBDB_MASK                     0x2u
#define MLB_CSCR10_CBDB_SHIFT                    1
#define MLB_CSCR10_CBD_MASK                      0x4u
#define MLB_CSCR10_CBD_SHIFT                     2
#define MLB_CSCR10_CBS_MASK                      0x8u
#define MLB_CSCR10_CBS_SHIFT                     3
#define MLB_CSCR10_BE_MASK                       0x10u
#define MLB_CSCR10_BE_SHIFT                      4
#define MLB_CSCR10_ABE_MASK                      0x20u
#define MLB_CSCR10_ABE_SHIFT                     5
#define MLB_CSCR10_LFS_MASK                      0x40u
#define MLB_CSCR10_LFS_SHIFT                     6
#define MLB_CSCR10_PBPE_MASK                     0x100u
#define MLB_CSCR10_PBPE_SHIFT                    8
#define MLB_CSCR10_PBDB_MASK                     0x200u
#define MLB_CSCR10_PBDB_SHIFT                    9
#define MLB_CSCR10_PBD_MASK                      0x400u
#define MLB_CSCR10_PBD_SHIFT                     10
#define MLB_CSCR10_PBS_MASK                      0x800u
#define MLB_CSCR10_PBS_SHIFT                     11
#define MLB_CSCR10_RDY_MASK                      0x10000u
#define MLB_CSCR10_RDY_SHIFT                     16
#define MLB_CSCR10_GIRB_MASK                     0x20000u
#define MLB_CSCR10_GIRB_SHIFT                    17
#define MLB_CSCR10_IVB_MASK                      0xC0000u
#define MLB_CSCR10_IVB_SHIFT                     18
#define MLB_CSCR10_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR10_IVB_SHIFT))&MLB_CSCR10_IVB_MASK)
#define MLB_CSCR10_BF_MASK                       0x40000000u
#define MLB_CSCR10_BF_SHIFT                      30
#define MLB_CSCR10_BM_MASK                       0x80000000u
#define MLB_CSCR10_BM_SHIFT                      31
/* CCBCR10 Bit Fields */
#define MLB_CCBCR10_BFA0_MASK                    0x3u
#define MLB_CCBCR10_BFA0_SHIFT                   0
#define MLB_CCBCR10_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR10_BFA0_SHIFT))&MLB_CCBCR10_BFA0_MASK)
#define MLB_CCBCR10_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR10_BFA1_SHIFT                   2
#define MLB_CCBCR10_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR10_BFA1_SHIFT))&MLB_CCBCR10_BFA1_MASK)
#define MLB_CCBCR10_BCA0_MASK                    0x30000u
#define MLB_CCBCR10_BCA0_SHIFT                   16
#define MLB_CCBCR10_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR10_BCA0_SHIFT))&MLB_CCBCR10_BCA0_MASK)
#define MLB_CCBCR10_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR10_BCA1_SHIFT                   18
#define MLB_CCBCR10_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR10_BCA1_SHIFT))&MLB_CCBCR10_BCA1_MASK)
/* CNBCR10 Bit Fields */
#define MLB_CNBCR10_BEA_MASK                     0xFFFFu
#define MLB_CNBCR10_BEA_SHIFT                    0
#define MLB_CNBCR10_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR10_BEA_SHIFT))&MLB_CNBCR10_BEA_MASK)
#define MLB_CNBCR10_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR10_BSA_SHIFT                    16
#define MLB_CNBCR10_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR10_BSA_SHIFT))&MLB_CNBCR10_BSA_MASK)
/* CECR11 Bit Fields */
#define MLB_CECR11_CA_MASK                       0xFFu
#define MLB_CECR11_CA_SHIFT                      0
#define MLB_CECR11_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR11_CA_SHIFT))&MLB_CECR11_CA_MASK)
#define MLB_CECR11_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR11_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR11_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR11_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR11_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR11_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR11_Rsvd_IPL_SHIFT                13
#define MLB_CECR11_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR11_Rsvd_IPL_SHIFT))&MLB_CECR11_Rsvd_IPL_MASK)
#define MLB_CECR11_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR11_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR11_MPE_MASK                      0x10000u
#define MLB_CECR11_MPE_SHIFT                     16
#define MLB_CECR11_MDB_MASK                      0x20000u
#define MLB_CECR11_MDB_SHIFT                     17
#define MLB_CECR11_MBD_MASK                      0x40000u
#define MLB_CECR11_MBD_SHIFT                     18
#define MLB_CECR11_MBS_MASK                      0x80000u
#define MLB_CECR11_MBS_SHIFT                     19
#define MLB_CECR11_MBE_MASK                      0x100000u
#define MLB_CECR11_MBE_SHIFT                     20
#define MLB_CECR11_MLFS_MASK                     0x400000u
#define MLB_CECR11_MLFS_SHIFT                    22
#define MLB_CECR11_MDS_MASK                      0x6000000u
#define MLB_CECR11_MDS_SHIFT                     25
#define MLB_CECR11_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR11_MDS_SHIFT))&MLB_CECR11_MDS_MASK)
#define MLB_CECR11_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR11_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR11_CT_MASK                       0x30000000u
#define MLB_CECR11_CT_SHIFT                      28
#define MLB_CECR11_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR11_CT_SHIFT))&MLB_CECR11_CT_MASK)
#define MLB_CECR11_TR_MASK                       0x40000000u
#define MLB_CECR11_TR_SHIFT                      30
#define MLB_CECR11_CE_MASK                       0x80000000u
#define MLB_CECR11_CE_SHIFT                      31
/* CSCR11 Bit Fields */
#define MLB_CSCR11_CBPE_MASK                     0x1u
#define MLB_CSCR11_CBPE_SHIFT                    0
#define MLB_CSCR11_CBDB_MASK                     0x2u
#define MLB_CSCR11_CBDB_SHIFT                    1
#define MLB_CSCR11_CBD_MASK                      0x4u
#define MLB_CSCR11_CBD_SHIFT                     2
#define MLB_CSCR11_CBS_MASK                      0x8u
#define MLB_CSCR11_CBS_SHIFT                     3
#define MLB_CSCR11_BE_MASK                       0x10u
#define MLB_CSCR11_BE_SHIFT                      4
#define MLB_CSCR11_ABE_MASK                      0x20u
#define MLB_CSCR11_ABE_SHIFT                     5
#define MLB_CSCR11_LFS_MASK                      0x40u
#define MLB_CSCR11_LFS_SHIFT                     6
#define MLB_CSCR11_PBPE_MASK                     0x100u
#define MLB_CSCR11_PBPE_SHIFT                    8
#define MLB_CSCR11_PBDB_MASK                     0x200u
#define MLB_CSCR11_PBDB_SHIFT                    9
#define MLB_CSCR11_PBD_MASK                      0x400u
#define MLB_CSCR11_PBD_SHIFT                     10
#define MLB_CSCR11_PBS_MASK                      0x800u
#define MLB_CSCR11_PBS_SHIFT                     11
#define MLB_CSCR11_RDY_MASK                      0x10000u
#define MLB_CSCR11_RDY_SHIFT                     16
#define MLB_CSCR11_GIRB_MASK                     0x20000u
#define MLB_CSCR11_GIRB_SHIFT                    17
#define MLB_CSCR11_IVB_MASK                      0xC0000u
#define MLB_CSCR11_IVB_SHIFT                     18
#define MLB_CSCR11_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR11_IVB_SHIFT))&MLB_CSCR11_IVB_MASK)
#define MLB_CSCR11_BF_MASK                       0x40000000u
#define MLB_CSCR11_BF_SHIFT                      30
#define MLB_CSCR11_BM_MASK                       0x80000000u
#define MLB_CSCR11_BM_SHIFT                      31
/* CCBCR11 Bit Fields */
#define MLB_CCBCR11_BFA0_MASK                    0x3u
#define MLB_CCBCR11_BFA0_SHIFT                   0
#define MLB_CCBCR11_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR11_BFA0_SHIFT))&MLB_CCBCR11_BFA0_MASK)
#define MLB_CCBCR11_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR11_BFA1_SHIFT                   2
#define MLB_CCBCR11_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR11_BFA1_SHIFT))&MLB_CCBCR11_BFA1_MASK)
#define MLB_CCBCR11_BCA0_MASK                    0x30000u
#define MLB_CCBCR11_BCA0_SHIFT                   16
#define MLB_CCBCR11_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR11_BCA0_SHIFT))&MLB_CCBCR11_BCA0_MASK)
#define MLB_CCBCR11_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR11_BCA1_SHIFT                   18
#define MLB_CCBCR11_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR11_BCA1_SHIFT))&MLB_CCBCR11_BCA1_MASK)
/* CNBCR11 Bit Fields */
#define MLB_CNBCR11_BEA_MASK                     0xFFFFu
#define MLB_CNBCR11_BEA_SHIFT                    0
#define MLB_CNBCR11_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR11_BEA_SHIFT))&MLB_CNBCR11_BEA_MASK)
#define MLB_CNBCR11_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR11_BSA_SHIFT                    16
#define MLB_CNBCR11_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR11_BSA_SHIFT))&MLB_CNBCR11_BSA_MASK)
/* CECR12 Bit Fields */
#define MLB_CECR12_CA_MASK                       0xFFu
#define MLB_CECR12_CA_SHIFT                      0
#define MLB_CECR12_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR12_CA_SHIFT))&MLB_CECR12_CA_MASK)
#define MLB_CECR12_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR12_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR12_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR12_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR12_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR12_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR12_Rsvd_IPL_SHIFT                13
#define MLB_CECR12_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR12_Rsvd_IPL_SHIFT))&MLB_CECR12_Rsvd_IPL_MASK)
#define MLB_CECR12_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR12_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR12_MPE_MASK                      0x10000u
#define MLB_CECR12_MPE_SHIFT                     16
#define MLB_CECR12_MDB_MASK                      0x20000u
#define MLB_CECR12_MDB_SHIFT                     17
#define MLB_CECR12_MBD_MASK                      0x40000u
#define MLB_CECR12_MBD_SHIFT                     18
#define MLB_CECR12_MBS_MASK                      0x80000u
#define MLB_CECR12_MBS_SHIFT                     19
#define MLB_CECR12_MBE_MASK                      0x100000u
#define MLB_CECR12_MBE_SHIFT                     20
#define MLB_CECR12_MLFS_MASK                     0x400000u
#define MLB_CECR12_MLFS_SHIFT                    22
#define MLB_CECR12_MDS_MASK                      0x6000000u
#define MLB_CECR12_MDS_SHIFT                     25
#define MLB_CECR12_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR12_MDS_SHIFT))&MLB_CECR12_MDS_MASK)
#define MLB_CECR12_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR12_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR12_CT_MASK                       0x30000000u
#define MLB_CECR12_CT_SHIFT                      28
#define MLB_CECR12_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR12_CT_SHIFT))&MLB_CECR12_CT_MASK)
#define MLB_CECR12_TR_MASK                       0x40000000u
#define MLB_CECR12_TR_SHIFT                      30
#define MLB_CECR12_CE_MASK                       0x80000000u
#define MLB_CECR12_CE_SHIFT                      31
/* CSCR12 Bit Fields */
#define MLB_CSCR12_CBPE_MASK                     0x1u
#define MLB_CSCR12_CBPE_SHIFT                    0
#define MLB_CSCR12_CBDB_MASK                     0x2u
#define MLB_CSCR12_CBDB_SHIFT                    1
#define MLB_CSCR12_CBD_MASK                      0x4u
#define MLB_CSCR12_CBD_SHIFT                     2
#define MLB_CSCR12_CBS_MASK                      0x8u
#define MLB_CSCR12_CBS_SHIFT                     3
#define MLB_CSCR12_BE_MASK                       0x10u
#define MLB_CSCR12_BE_SHIFT                      4
#define MLB_CSCR12_ABE_MASK                      0x20u
#define MLB_CSCR12_ABE_SHIFT                     5
#define MLB_CSCR12_LFS_MASK                      0x40u
#define MLB_CSCR12_LFS_SHIFT                     6
#define MLB_CSCR12_PBPE_MASK                     0x100u
#define MLB_CSCR12_PBPE_SHIFT                    8
#define MLB_CSCR12_PBDB_MASK                     0x200u
#define MLB_CSCR12_PBDB_SHIFT                    9
#define MLB_CSCR12_PBD_MASK                      0x400u
#define MLB_CSCR12_PBD_SHIFT                     10
#define MLB_CSCR12_PBS_MASK                      0x800u
#define MLB_CSCR12_PBS_SHIFT                     11
#define MLB_CSCR12_RDY_MASK                      0x10000u
#define MLB_CSCR12_RDY_SHIFT                     16
#define MLB_CSCR12_GIRB_MASK                     0x20000u
#define MLB_CSCR12_GIRB_SHIFT                    17
#define MLB_CSCR12_IVB_MASK                      0xC0000u
#define MLB_CSCR12_IVB_SHIFT                     18
#define MLB_CSCR12_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR12_IVB_SHIFT))&MLB_CSCR12_IVB_MASK)
#define MLB_CSCR12_BF_MASK                       0x40000000u
#define MLB_CSCR12_BF_SHIFT                      30
#define MLB_CSCR12_BM_MASK                       0x80000000u
#define MLB_CSCR12_BM_SHIFT                      31
/* CCBCR12 Bit Fields */
#define MLB_CCBCR12_BFA0_MASK                    0x3u
#define MLB_CCBCR12_BFA0_SHIFT                   0
#define MLB_CCBCR12_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR12_BFA0_SHIFT))&MLB_CCBCR12_BFA0_MASK)
#define MLB_CCBCR12_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR12_BFA1_SHIFT                   2
#define MLB_CCBCR12_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR12_BFA1_SHIFT))&MLB_CCBCR12_BFA1_MASK)
#define MLB_CCBCR12_BCA0_MASK                    0x30000u
#define MLB_CCBCR12_BCA0_SHIFT                   16
#define MLB_CCBCR12_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR12_BCA0_SHIFT))&MLB_CCBCR12_BCA0_MASK)
#define MLB_CCBCR12_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR12_BCA1_SHIFT                   18
#define MLB_CCBCR12_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR12_BCA1_SHIFT))&MLB_CCBCR12_BCA1_MASK)
/* CNBCR12 Bit Fields */
#define MLB_CNBCR12_BEA_MASK                     0xFFFFu
#define MLB_CNBCR12_BEA_SHIFT                    0
#define MLB_CNBCR12_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR12_BEA_SHIFT))&MLB_CNBCR12_BEA_MASK)
#define MLB_CNBCR12_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR12_BSA_SHIFT                    16
#define MLB_CNBCR12_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR12_BSA_SHIFT))&MLB_CNBCR12_BSA_MASK)
/* CECR13 Bit Fields */
#define MLB_CECR13_CA_MASK                       0xFFu
#define MLB_CECR13_CA_SHIFT                      0
#define MLB_CECR13_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR13_CA_SHIFT))&MLB_CECR13_CA_MASK)
#define MLB_CECR13_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR13_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR13_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR13_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR13_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR13_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR13_Rsvd_IPL_SHIFT                13
#define MLB_CECR13_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR13_Rsvd_IPL_SHIFT))&MLB_CECR13_Rsvd_IPL_MASK)
#define MLB_CECR13_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR13_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR13_MPE_MASK                      0x10000u
#define MLB_CECR13_MPE_SHIFT                     16
#define MLB_CECR13_MDB_MASK                      0x20000u
#define MLB_CECR13_MDB_SHIFT                     17
#define MLB_CECR13_MBD_MASK                      0x40000u
#define MLB_CECR13_MBD_SHIFT                     18
#define MLB_CECR13_MBS_MASK                      0x80000u
#define MLB_CECR13_MBS_SHIFT                     19
#define MLB_CECR13_MBE_MASK                      0x100000u
#define MLB_CECR13_MBE_SHIFT                     20
#define MLB_CECR13_MLFS_MASK                     0x400000u
#define MLB_CECR13_MLFS_SHIFT                    22
#define MLB_CECR13_MDS_MASK                      0x6000000u
#define MLB_CECR13_MDS_SHIFT                     25
#define MLB_CECR13_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR13_MDS_SHIFT))&MLB_CECR13_MDS_MASK)
#define MLB_CECR13_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR13_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR13_CT_MASK                       0x30000000u
#define MLB_CECR13_CT_SHIFT                      28
#define MLB_CECR13_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR13_CT_SHIFT))&MLB_CECR13_CT_MASK)
#define MLB_CECR13_TR_MASK                       0x40000000u
#define MLB_CECR13_TR_SHIFT                      30
#define MLB_CECR13_CE_MASK                       0x80000000u
#define MLB_CECR13_CE_SHIFT                      31
/* CSCR13 Bit Fields */
#define MLB_CSCR13_CBPE_MASK                     0x1u
#define MLB_CSCR13_CBPE_SHIFT                    0
#define MLB_CSCR13_CBDB_MASK                     0x2u
#define MLB_CSCR13_CBDB_SHIFT                    1
#define MLB_CSCR13_CBD_MASK                      0x4u
#define MLB_CSCR13_CBD_SHIFT                     2
#define MLB_CSCR13_CBS_MASK                      0x8u
#define MLB_CSCR13_CBS_SHIFT                     3
#define MLB_CSCR13_BE_MASK                       0x10u
#define MLB_CSCR13_BE_SHIFT                      4
#define MLB_CSCR13_ABE_MASK                      0x20u
#define MLB_CSCR13_ABE_SHIFT                     5
#define MLB_CSCR13_LFS_MASK                      0x40u
#define MLB_CSCR13_LFS_SHIFT                     6
#define MLB_CSCR13_PBPE_MASK                     0x100u
#define MLB_CSCR13_PBPE_SHIFT                    8
#define MLB_CSCR13_PBDB_MASK                     0x200u
#define MLB_CSCR13_PBDB_SHIFT                    9
#define MLB_CSCR13_PBD_MASK                      0x400u
#define MLB_CSCR13_PBD_SHIFT                     10
#define MLB_CSCR13_PBS_MASK                      0x800u
#define MLB_CSCR13_PBS_SHIFT                     11
#define MLB_CSCR13_RDY_MASK                      0x10000u
#define MLB_CSCR13_RDY_SHIFT                     16
#define MLB_CSCR13_GIRB_MASK                     0x20000u
#define MLB_CSCR13_GIRB_SHIFT                    17
#define MLB_CSCR13_IVB_MASK                      0xC0000u
#define MLB_CSCR13_IVB_SHIFT                     18
#define MLB_CSCR13_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR13_IVB_SHIFT))&MLB_CSCR13_IVB_MASK)
#define MLB_CSCR13_BF_MASK                       0x40000000u
#define MLB_CSCR13_BF_SHIFT                      30
#define MLB_CSCR13_BM_MASK                       0x80000000u
#define MLB_CSCR13_BM_SHIFT                      31
/* CCBCR13 Bit Fields */
#define MLB_CCBCR13_BFA0_MASK                    0x3u
#define MLB_CCBCR13_BFA0_SHIFT                   0
#define MLB_CCBCR13_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR13_BFA0_SHIFT))&MLB_CCBCR13_BFA0_MASK)
#define MLB_CCBCR13_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR13_BFA1_SHIFT                   2
#define MLB_CCBCR13_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR13_BFA1_SHIFT))&MLB_CCBCR13_BFA1_MASK)
#define MLB_CCBCR13_BCA0_MASK                    0x30000u
#define MLB_CCBCR13_BCA0_SHIFT                   16
#define MLB_CCBCR13_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR13_BCA0_SHIFT))&MLB_CCBCR13_BCA0_MASK)
#define MLB_CCBCR13_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR13_BCA1_SHIFT                   18
#define MLB_CCBCR13_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR13_BCA1_SHIFT))&MLB_CCBCR13_BCA1_MASK)
/* CNBCR13 Bit Fields */
#define MLB_CNBCR13_BEA_MASK                     0xFFFFu
#define MLB_CNBCR13_BEA_SHIFT                    0
#define MLB_CNBCR13_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR13_BEA_SHIFT))&MLB_CNBCR13_BEA_MASK)
#define MLB_CNBCR13_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR13_BSA_SHIFT                    16
#define MLB_CNBCR13_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR13_BSA_SHIFT))&MLB_CNBCR13_BSA_MASK)
/* CECR14 Bit Fields */
#define MLB_CECR14_CA_MASK                       0xFFu
#define MLB_CECR14_CA_SHIFT                      0
#define MLB_CECR14_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR14_CA_SHIFT))&MLB_CECR14_CA_MASK)
#define MLB_CECR14_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR14_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR14_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR14_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR14_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR14_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR14_Rsvd_IPL_SHIFT                13
#define MLB_CECR14_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR14_Rsvd_IPL_SHIFT))&MLB_CECR14_Rsvd_IPL_MASK)
#define MLB_CECR14_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR14_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR14_MPE_MASK                      0x10000u
#define MLB_CECR14_MPE_SHIFT                     16
#define MLB_CECR14_MDB_MASK                      0x20000u
#define MLB_CECR14_MDB_SHIFT                     17
#define MLB_CECR14_MBD_MASK                      0x40000u
#define MLB_CECR14_MBD_SHIFT                     18
#define MLB_CECR14_MBS_MASK                      0x80000u
#define MLB_CECR14_MBS_SHIFT                     19
#define MLB_CECR14_MBE_MASK                      0x100000u
#define MLB_CECR14_MBE_SHIFT                     20
#define MLB_CECR14_MLFS_MASK                     0x400000u
#define MLB_CECR14_MLFS_SHIFT                    22
#define MLB_CECR14_MDS_MASK                      0x6000000u
#define MLB_CECR14_MDS_SHIFT                     25
#define MLB_CECR14_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR14_MDS_SHIFT))&MLB_CECR14_MDS_MASK)
#define MLB_CECR14_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR14_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR14_CT_MASK                       0x30000000u
#define MLB_CECR14_CT_SHIFT                      28
#define MLB_CECR14_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR14_CT_SHIFT))&MLB_CECR14_CT_MASK)
#define MLB_CECR14_TR_MASK                       0x40000000u
#define MLB_CECR14_TR_SHIFT                      30
#define MLB_CECR14_CE_MASK                       0x80000000u
#define MLB_CECR14_CE_SHIFT                      31
/* CSCR14 Bit Fields */
#define MLB_CSCR14_CBPE_MASK                     0x1u
#define MLB_CSCR14_CBPE_SHIFT                    0
#define MLB_CSCR14_CBDB_MASK                     0x2u
#define MLB_CSCR14_CBDB_SHIFT                    1
#define MLB_CSCR14_CBD_MASK                      0x4u
#define MLB_CSCR14_CBD_SHIFT                     2
#define MLB_CSCR14_CBS_MASK                      0x8u
#define MLB_CSCR14_CBS_SHIFT                     3
#define MLB_CSCR14_BE_MASK                       0x10u
#define MLB_CSCR14_BE_SHIFT                      4
#define MLB_CSCR14_ABE_MASK                      0x20u
#define MLB_CSCR14_ABE_SHIFT                     5
#define MLB_CSCR14_LFS_MASK                      0x40u
#define MLB_CSCR14_LFS_SHIFT                     6
#define MLB_CSCR14_PBPE_MASK                     0x100u
#define MLB_CSCR14_PBPE_SHIFT                    8
#define MLB_CSCR14_PBDB_MASK                     0x200u
#define MLB_CSCR14_PBDB_SHIFT                    9
#define MLB_CSCR14_PBD_MASK                      0x400u
#define MLB_CSCR14_PBD_SHIFT                     10
#define MLB_CSCR14_PBS_MASK                      0x800u
#define MLB_CSCR14_PBS_SHIFT                     11
#define MLB_CSCR14_RDY_MASK                      0x10000u
#define MLB_CSCR14_RDY_SHIFT                     16
#define MLB_CSCR14_GIRB_MASK                     0x20000u
#define MLB_CSCR14_GIRB_SHIFT                    17
#define MLB_CSCR14_IVB_MASK                      0xC0000u
#define MLB_CSCR14_IVB_SHIFT                     18
#define MLB_CSCR14_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR14_IVB_SHIFT))&MLB_CSCR14_IVB_MASK)
#define MLB_CSCR14_BF_MASK                       0x40000000u
#define MLB_CSCR14_BF_SHIFT                      30
#define MLB_CSCR14_BM_MASK                       0x80000000u
#define MLB_CSCR14_BM_SHIFT                      31
/* CCBCR14 Bit Fields */
#define MLB_CCBCR14_BFA0_MASK                    0x3u
#define MLB_CCBCR14_BFA0_SHIFT                   0
#define MLB_CCBCR14_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR14_BFA0_SHIFT))&MLB_CCBCR14_BFA0_MASK)
#define MLB_CCBCR14_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR14_BFA1_SHIFT                   2
#define MLB_CCBCR14_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR14_BFA1_SHIFT))&MLB_CCBCR14_BFA1_MASK)
#define MLB_CCBCR14_BCA0_MASK                    0x30000u
#define MLB_CCBCR14_BCA0_SHIFT                   16
#define MLB_CCBCR14_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR14_BCA0_SHIFT))&MLB_CCBCR14_BCA0_MASK)
#define MLB_CCBCR14_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR14_BCA1_SHIFT                   18
#define MLB_CCBCR14_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR14_BCA1_SHIFT))&MLB_CCBCR14_BCA1_MASK)
/* CNBCR14 Bit Fields */
#define MLB_CNBCR14_BEA_MASK                     0xFFFFu
#define MLB_CNBCR14_BEA_SHIFT                    0
#define MLB_CNBCR14_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR14_BEA_SHIFT))&MLB_CNBCR14_BEA_MASK)
#define MLB_CNBCR14_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR14_BSA_SHIFT                    16
#define MLB_CNBCR14_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR14_BSA_SHIFT))&MLB_CNBCR14_BSA_MASK)
/* CECR15 Bit Fields */
#define MLB_CECR15_CA_MASK                       0xFFu
#define MLB_CECR15_CA_SHIFT                      0
#define MLB_CECR15_CA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR15_CA_SHIFT))&MLB_CECR15_CA_MASK)
#define MLB_CECR15_Rsvd_FSPC_IPL_MASK            0x1F00u
#define MLB_CECR15_Rsvd_FSPC_IPL_SHIFT           8
#define MLB_CECR15_Rsvd_FSPC_IPL(x)              (((uint32_t)(((uint32_t)(x))<<MLB_CECR15_Rsvd_FSPC_IPL_SHIFT))&MLB_CECR15_Rsvd_FSPC_IPL_MASK)
#define MLB_CECR15_Rsvd_IPL_MASK                 0x6000u
#define MLB_CECR15_Rsvd_IPL_SHIFT                13
#define MLB_CECR15_Rsvd_IPL(x)                   (((uint32_t)(((uint32_t)(x))<<MLB_CECR15_Rsvd_IPL_SHIFT))&MLB_CECR15_Rsvd_IPL_MASK)
#define MLB_CECR15_Rsvd_FSCD_IPL_MASK            0x8000u
#define MLB_CECR15_Rsvd_FSCD_IPL_SHIFT           15
#define MLB_CECR15_MPE_MASK                      0x10000u
#define MLB_CECR15_MPE_SHIFT                     16
#define MLB_CECR15_MDB_MASK                      0x20000u
#define MLB_CECR15_MDB_SHIFT                     17
#define MLB_CECR15_MBD_MASK                      0x40000u
#define MLB_CECR15_MBD_SHIFT                     18
#define MLB_CECR15_MBS_MASK                      0x80000u
#define MLB_CECR15_MBS_SHIFT                     19
#define MLB_CECR15_MBE_MASK                      0x100000u
#define MLB_CECR15_MBE_SHIFT                     20
#define MLB_CECR15_MLFS_MASK                     0x400000u
#define MLB_CECR15_MLFS_SHIFT                    22
#define MLB_CECR15_MDS_MASK                      0x6000000u
#define MLB_CECR15_MDS_SHIFT                     25
#define MLB_CECR15_MDS(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CECR15_MDS_SHIFT))&MLB_CECR15_MDS_MASK)
#define MLB_CECR15_Rsvd_FSE_FCE_MASK             0x8000000u
#define MLB_CECR15_Rsvd_FSE_FCE_SHIFT            27
#define MLB_CECR15_CT_MASK                       0x30000000u
#define MLB_CECR15_CT_SHIFT                      28
#define MLB_CECR15_CT(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_CECR15_CT_SHIFT))&MLB_CECR15_CT_MASK)
#define MLB_CECR15_TR_MASK                       0x40000000u
#define MLB_CECR15_TR_SHIFT                      30
#define MLB_CECR15_CE_MASK                       0x80000000u
#define MLB_CECR15_CE_SHIFT                      31
/* CSCR15 Bit Fields */
#define MLB_CSCR15_CBPE_MASK                     0x1u
#define MLB_CSCR15_CBPE_SHIFT                    0
#define MLB_CSCR15_CBDB_MASK                     0x2u
#define MLB_CSCR15_CBDB_SHIFT                    1
#define MLB_CSCR15_CBD_MASK                      0x4u
#define MLB_CSCR15_CBD_SHIFT                     2
#define MLB_CSCR15_CBS_MASK                      0x8u
#define MLB_CSCR15_CBS_SHIFT                     3
#define MLB_CSCR15_BE_MASK                       0x10u
#define MLB_CSCR15_BE_SHIFT                      4
#define MLB_CSCR15_ABE_MASK                      0x20u
#define MLB_CSCR15_ABE_SHIFT                     5
#define MLB_CSCR15_LFS_MASK                      0x40u
#define MLB_CSCR15_LFS_SHIFT                     6
#define MLB_CSCR15_PBPE_MASK                     0x100u
#define MLB_CSCR15_PBPE_SHIFT                    8
#define MLB_CSCR15_PBDB_MASK                     0x200u
#define MLB_CSCR15_PBDB_SHIFT                    9
#define MLB_CSCR15_PBD_MASK                      0x400u
#define MLB_CSCR15_PBD_SHIFT                     10
#define MLB_CSCR15_PBS_MASK                      0x800u
#define MLB_CSCR15_PBS_SHIFT                     11
#define MLB_CSCR15_RDY_MASK                      0x10000u
#define MLB_CSCR15_RDY_SHIFT                     16
#define MLB_CSCR15_GIRB_MASK                     0x20000u
#define MLB_CSCR15_GIRB_SHIFT                    17
#define MLB_CSCR15_IVB_MASK                      0xC0000u
#define MLB_CSCR15_IVB_SHIFT                     18
#define MLB_CSCR15_IVB(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_CSCR15_IVB_SHIFT))&MLB_CSCR15_IVB_MASK)
#define MLB_CSCR15_BF_MASK                       0x40000000u
#define MLB_CSCR15_BF_SHIFT                      30
#define MLB_CSCR15_BM_MASK                       0x80000000u
#define MLB_CSCR15_BM_SHIFT                      31
/* CCBCR15 Bit Fields */
#define MLB_CCBCR15_BFA0_MASK                    0x3u
#define MLB_CCBCR15_BFA0_SHIFT                   0
#define MLB_CCBCR15_BFA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR15_BFA0_SHIFT))&MLB_CCBCR15_BFA0_MASK)
#define MLB_CCBCR15_BFA1_MASK                    0xFFFCu
#define MLB_CCBCR15_BFA1_SHIFT                   2
#define MLB_CCBCR15_BFA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR15_BFA1_SHIFT))&MLB_CCBCR15_BFA1_MASK)
#define MLB_CCBCR15_BCA0_MASK                    0x30000u
#define MLB_CCBCR15_BCA0_SHIFT                   16
#define MLB_CCBCR15_BCA0(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR15_BCA0_SHIFT))&MLB_CCBCR15_BCA0_MASK)
#define MLB_CCBCR15_BCA1_MASK                    0xFFFC0000u
#define MLB_CCBCR15_BCA1_SHIFT                   18
#define MLB_CCBCR15_BCA1(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_CCBCR15_BCA1_SHIFT))&MLB_CCBCR15_BCA1_MASK)
/* CNBCR15 Bit Fields */
#define MLB_CNBCR15_BEA_MASK                     0xFFFFu
#define MLB_CNBCR15_BEA_SHIFT                    0
#define MLB_CNBCR15_BEA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR15_BEA_SHIFT))&MLB_CNBCR15_BEA_MASK)
#define MLB_CNBCR15_BSA_MASK                     0xFFFF0000u
#define MLB_CNBCR15_BSA_SHIFT                    16
#define MLB_CNBCR15_BSA(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_CNBCR15_BSA_SHIFT))&MLB_CNBCR15_BSA_MASK)
/* LCBCR0 Bit Fields */
#define MLB_LCBCR0_SA_MASK                       0x1FFu
#define MLB_LCBCR0_SA_SHIFT                      0
#define MLB_LCBCR0_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR0_SA_SHIFT))&MLB_LCBCR0_SA_MASK)
#define MLB_LCBCR0_BD_MASK                       0xFE000u
#define MLB_LCBCR0_BD_SHIFT                      13
#define MLB_LCBCR0_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR0_BD_SHIFT))&MLB_LCBCR0_BD_MASK)
#define MLB_LCBCR0_TH_MASK                       0x3FC00000u
#define MLB_LCBCR0_TH_SHIFT                      22
#define MLB_LCBCR0_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR0_TH_SHIFT))&MLB_LCBCR0_TH_MASK)
/* LCBCR1 Bit Fields */
#define MLB_LCBCR1_SA_MASK                       0x1FFu
#define MLB_LCBCR1_SA_SHIFT                      0
#define MLB_LCBCR1_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR1_SA_SHIFT))&MLB_LCBCR1_SA_MASK)
#define MLB_LCBCR1_BD_MASK                       0xFE000u
#define MLB_LCBCR1_BD_SHIFT                      13
#define MLB_LCBCR1_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR1_BD_SHIFT))&MLB_LCBCR1_BD_MASK)
#define MLB_LCBCR1_TH_MASK                       0x3FC00000u
#define MLB_LCBCR1_TH_SHIFT                      22
#define MLB_LCBCR1_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR1_TH_SHIFT))&MLB_LCBCR1_TH_MASK)
/* LCBCR2 Bit Fields */
#define MLB_LCBCR2_SA_MASK                       0x1FFu
#define MLB_LCBCR2_SA_SHIFT                      0
#define MLB_LCBCR2_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR2_SA_SHIFT))&MLB_LCBCR2_SA_MASK)
#define MLB_LCBCR2_BD_MASK                       0xFE000u
#define MLB_LCBCR2_BD_SHIFT                      13
#define MLB_LCBCR2_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR2_BD_SHIFT))&MLB_LCBCR2_BD_MASK)
#define MLB_LCBCR2_TH_MASK                       0x3FC00000u
#define MLB_LCBCR2_TH_SHIFT                      22
#define MLB_LCBCR2_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR2_TH_SHIFT))&MLB_LCBCR2_TH_MASK)
/* LCBCR3 Bit Fields */
#define MLB_LCBCR3_SA_MASK                       0x1FFu
#define MLB_LCBCR3_SA_SHIFT                      0
#define MLB_LCBCR3_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR3_SA_SHIFT))&MLB_LCBCR3_SA_MASK)
#define MLB_LCBCR3_BD_MASK                       0xFE000u
#define MLB_LCBCR3_BD_SHIFT                      13
#define MLB_LCBCR3_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR3_BD_SHIFT))&MLB_LCBCR3_BD_MASK)
#define MLB_LCBCR3_TH_MASK                       0x3FC00000u
#define MLB_LCBCR3_TH_SHIFT                      22
#define MLB_LCBCR3_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR3_TH_SHIFT))&MLB_LCBCR3_TH_MASK)
/* LCBCR4 Bit Fields */
#define MLB_LCBCR4_SA_MASK                       0x1FFu
#define MLB_LCBCR4_SA_SHIFT                      0
#define MLB_LCBCR4_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR4_SA_SHIFT))&MLB_LCBCR4_SA_MASK)
#define MLB_LCBCR4_BD_MASK                       0xFE000u
#define MLB_LCBCR4_BD_SHIFT                      13
#define MLB_LCBCR4_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR4_BD_SHIFT))&MLB_LCBCR4_BD_MASK)
#define MLB_LCBCR4_TH_MASK                       0x3FC00000u
#define MLB_LCBCR4_TH_SHIFT                      22
#define MLB_LCBCR4_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR4_TH_SHIFT))&MLB_LCBCR4_TH_MASK)
/* LCBCR5 Bit Fields */
#define MLB_LCBCR5_SA_MASK                       0x1FFu
#define MLB_LCBCR5_SA_SHIFT                      0
#define MLB_LCBCR5_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR5_SA_SHIFT))&MLB_LCBCR5_SA_MASK)
#define MLB_LCBCR5_BD_MASK                       0xFE000u
#define MLB_LCBCR5_BD_SHIFT                      13
#define MLB_LCBCR5_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR5_BD_SHIFT))&MLB_LCBCR5_BD_MASK)
#define MLB_LCBCR5_TH_MASK                       0x3FC00000u
#define MLB_LCBCR5_TH_SHIFT                      22
#define MLB_LCBCR5_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR5_TH_SHIFT))&MLB_LCBCR5_TH_MASK)
/* LCBCR6 Bit Fields */
#define MLB_LCBCR6_SA_MASK                       0x1FFu
#define MLB_LCBCR6_SA_SHIFT                      0
#define MLB_LCBCR6_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR6_SA_SHIFT))&MLB_LCBCR6_SA_MASK)
#define MLB_LCBCR6_BD_MASK                       0xFE000u
#define MLB_LCBCR6_BD_SHIFT                      13
#define MLB_LCBCR6_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR6_BD_SHIFT))&MLB_LCBCR6_BD_MASK)
#define MLB_LCBCR6_TH_MASK                       0x3FC00000u
#define MLB_LCBCR6_TH_SHIFT                      22
#define MLB_LCBCR6_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR6_TH_SHIFT))&MLB_LCBCR6_TH_MASK)
/* LCBCR7 Bit Fields */
#define MLB_LCBCR7_SA_MASK                       0x1FFu
#define MLB_LCBCR7_SA_SHIFT                      0
#define MLB_LCBCR7_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR7_SA_SHIFT))&MLB_LCBCR7_SA_MASK)
#define MLB_LCBCR7_BD_MASK                       0xFE000u
#define MLB_LCBCR7_BD_SHIFT                      13
#define MLB_LCBCR7_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR7_BD_SHIFT))&MLB_LCBCR7_BD_MASK)
#define MLB_LCBCR7_TH_MASK                       0x3FC00000u
#define MLB_LCBCR7_TH_SHIFT                      22
#define MLB_LCBCR7_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR7_TH_SHIFT))&MLB_LCBCR7_TH_MASK)
/* LCBCR8 Bit Fields */
#define MLB_LCBCR8_SA_MASK                       0x1FFu
#define MLB_LCBCR8_SA_SHIFT                      0
#define MLB_LCBCR8_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR8_SA_SHIFT))&MLB_LCBCR8_SA_MASK)
#define MLB_LCBCR8_BD_MASK                       0xFE000u
#define MLB_LCBCR8_BD_SHIFT                      13
#define MLB_LCBCR8_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR8_BD_SHIFT))&MLB_LCBCR8_BD_MASK)
#define MLB_LCBCR8_TH_MASK                       0x3FC00000u
#define MLB_LCBCR8_TH_SHIFT                      22
#define MLB_LCBCR8_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR8_TH_SHIFT))&MLB_LCBCR8_TH_MASK)
/* LCBCR9 Bit Fields */
#define MLB_LCBCR9_SA_MASK                       0x1FFu
#define MLB_LCBCR9_SA_SHIFT                      0
#define MLB_LCBCR9_SA(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR9_SA_SHIFT))&MLB_LCBCR9_SA_MASK)
#define MLB_LCBCR9_BD_MASK                       0xFE000u
#define MLB_LCBCR9_BD_SHIFT                      13
#define MLB_LCBCR9_BD(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR9_BD_SHIFT))&MLB_LCBCR9_BD_MASK)
#define MLB_LCBCR9_TH_MASK                       0x3FC00000u
#define MLB_LCBCR9_TH_SHIFT                      22
#define MLB_LCBCR9_TH(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR9_TH_SHIFT))&MLB_LCBCR9_TH_MASK)
/* LCBCR10 Bit Fields */
#define MLB_LCBCR10_SA_MASK                      0x1FFu
#define MLB_LCBCR10_SA_SHIFT                     0
#define MLB_LCBCR10_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR10_SA_SHIFT))&MLB_LCBCR10_SA_MASK)
#define MLB_LCBCR10_BD_MASK                      0xFE000u
#define MLB_LCBCR10_BD_SHIFT                     13
#define MLB_LCBCR10_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR10_BD_SHIFT))&MLB_LCBCR10_BD_MASK)
#define MLB_LCBCR10_TH_MASK                      0x3FC00000u
#define MLB_LCBCR10_TH_SHIFT                     22
#define MLB_LCBCR10_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR10_TH_SHIFT))&MLB_LCBCR10_TH_MASK)
/* LCBCR11 Bit Fields */
#define MLB_LCBCR11_SA_MASK                      0x1FFu
#define MLB_LCBCR11_SA_SHIFT                     0
#define MLB_LCBCR11_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR11_SA_SHIFT))&MLB_LCBCR11_SA_MASK)
#define MLB_LCBCR11_BD_MASK                      0xFE000u
#define MLB_LCBCR11_BD_SHIFT                     13
#define MLB_LCBCR11_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR11_BD_SHIFT))&MLB_LCBCR11_BD_MASK)
#define MLB_LCBCR11_TH_MASK                      0x3FC00000u
#define MLB_LCBCR11_TH_SHIFT                     22
#define MLB_LCBCR11_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR11_TH_SHIFT))&MLB_LCBCR11_TH_MASK)
/* LCBCR12 Bit Fields */
#define MLB_LCBCR12_SA_MASK                      0x1FFu
#define MLB_LCBCR12_SA_SHIFT                     0
#define MLB_LCBCR12_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR12_SA_SHIFT))&MLB_LCBCR12_SA_MASK)
#define MLB_LCBCR12_BD_MASK                      0xFE000u
#define MLB_LCBCR12_BD_SHIFT                     13
#define MLB_LCBCR12_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR12_BD_SHIFT))&MLB_LCBCR12_BD_MASK)
#define MLB_LCBCR12_TH_MASK                      0x3FC00000u
#define MLB_LCBCR12_TH_SHIFT                     22
#define MLB_LCBCR12_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR12_TH_SHIFT))&MLB_LCBCR12_TH_MASK)
/* LCBCR13 Bit Fields */
#define MLB_LCBCR13_SA_MASK                      0x1FFu
#define MLB_LCBCR13_SA_SHIFT                     0
#define MLB_LCBCR13_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR13_SA_SHIFT))&MLB_LCBCR13_SA_MASK)
#define MLB_LCBCR13_BD_MASK                      0xFE000u
#define MLB_LCBCR13_BD_SHIFT                     13
#define MLB_LCBCR13_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR13_BD_SHIFT))&MLB_LCBCR13_BD_MASK)
#define MLB_LCBCR13_TH_MASK                      0x3FC00000u
#define MLB_LCBCR13_TH_SHIFT                     22
#define MLB_LCBCR13_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR13_TH_SHIFT))&MLB_LCBCR13_TH_MASK)
/* LCBCR14 Bit Fields */
#define MLB_LCBCR14_SA_MASK                      0x1FFu
#define MLB_LCBCR14_SA_SHIFT                     0
#define MLB_LCBCR14_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR14_SA_SHIFT))&MLB_LCBCR14_SA_MASK)
#define MLB_LCBCR14_BD_MASK                      0xFE000u
#define MLB_LCBCR14_BD_SHIFT                     13
#define MLB_LCBCR14_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR14_BD_SHIFT))&MLB_LCBCR14_BD_MASK)
#define MLB_LCBCR14_TH_MASK                      0x3FC00000u
#define MLB_LCBCR14_TH_SHIFT                     22
#define MLB_LCBCR14_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR14_TH_SHIFT))&MLB_LCBCR14_TH_MASK)
/* LCBCR15 Bit Fields */
#define MLB_LCBCR15_SA_MASK                      0x1FFu
#define MLB_LCBCR15_SA_SHIFT                     0
#define MLB_LCBCR15_SA(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR15_SA_SHIFT))&MLB_LCBCR15_SA_MASK)
#define MLB_LCBCR15_BD_MASK                      0xFE000u
#define MLB_LCBCR15_BD_SHIFT                     13
#define MLB_LCBCR15_BD(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR15_BD_SHIFT))&MLB_LCBCR15_BD_MASK)
#define MLB_LCBCR15_TH_MASK                      0x3FC00000u
#define MLB_LCBCR15_TH_SHIFT                     22
#define MLB_LCBCR15_TH(x)                        (((uint32_t)(((uint32_t)(x))<<MLB_LCBCR15_TH_SHIFT))&MLB_LCBCR15_TH_MASK)

/**
 * @}
 */ /* end of group MLB_Register_Masks */


/* MLB - Peripheral instance base addresses */
/** Peripheral MLB base pointer */
#define MLB_BASE_PTR                             ((MLB_MemMapPtr)0x40043000u)
/** Array initializer of MLB peripheral base pointers */
#define MLB_BASE_PTRS                            { MLB_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- MLB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup MLB_Register_Accessor_Macros MLB - Register accessor macros
 * @{
 */


/* MLB - Register instance definitions */
/* MLB */
#define MLB_DCCR                                 MLB_DCCR_REG(MLB_BASE_PTR)
#define MLB_SSCR                                 MLB_SSCR_REG(MLB_BASE_PTR)
#define MLB_SDCR                                 MLB_SDCR_REG(MLB_BASE_PTR)
#define MLB_SMCR                                 MLB_SMCR_REG(MLB_BASE_PTR)
#define MLB_VCCR                                 MLB_VCCR_REG(MLB_BASE_PTR)
#define MLB_SBCR                                 MLB_SBCR_REG(MLB_BASE_PTR)
#define MLB_ABCR                                 MLB_ABCR_REG(MLB_BASE_PTR)
#define MLB_CBCR                                 MLB_CBCR_REG(MLB_BASE_PTR)
#define MLB_IBCR                                 MLB_IBCR_REG(MLB_BASE_PTR)
#define MLB_CICR                                 MLB_CICR_REG(MLB_BASE_PTR)
#define MLB_CECR0                                MLB_CECR0_REG(MLB_BASE_PTR)
#define MLB_CSCR0                                MLB_CSCR0_REG(MLB_BASE_PTR)
#define MLB_CCBCR0                               MLB_CCBCR0_REG(MLB_BASE_PTR)
#define MLB_CNBCR0                               MLB_CNBCR0_REG(MLB_BASE_PTR)
#define MLB_CECR1                                MLB_CECR1_REG(MLB_BASE_PTR)
#define MLB_CSCR1                                MLB_CSCR1_REG(MLB_BASE_PTR)
#define MLB_CCBCR1                               MLB_CCBCR1_REG(MLB_BASE_PTR)
#define MLB_CNBCR1                               MLB_CNBCR1_REG(MLB_BASE_PTR)
#define MLB_CECR2                                MLB_CECR2_REG(MLB_BASE_PTR)
#define MLB_CSCR2                                MLB_CSCR2_REG(MLB_BASE_PTR)
#define MLB_CCBCR2                               MLB_CCBCR2_REG(MLB_BASE_PTR)
#define MLB_CNBCR2                               MLB_CNBCR2_REG(MLB_BASE_PTR)
#define MLB_CECR3                                MLB_CECR3_REG(MLB_BASE_PTR)
#define MLB_CSCR3                                MLB_CSCR3_REG(MLB_BASE_PTR)
#define MLB_CCBCR3                               MLB_CCBCR3_REG(MLB_BASE_PTR)
#define MLB_CNBCR3                               MLB_CNBCR3_REG(MLB_BASE_PTR)
#define MLB_CECR4                                MLB_CECR4_REG(MLB_BASE_PTR)
#define MLB_CSCR4                                MLB_CSCR4_REG(MLB_BASE_PTR)
#define MLB_CCBCR4                               MLB_CCBCR4_REG(MLB_BASE_PTR)
#define MLB_CNBCR4                               MLB_CNBCR4_REG(MLB_BASE_PTR)
#define MLB_CECR5                                MLB_CECR5_REG(MLB_BASE_PTR)
#define MLB_CSCR5                                MLB_CSCR5_REG(MLB_BASE_PTR)
#define MLB_CCBCR5                               MLB_CCBCR5_REG(MLB_BASE_PTR)
#define MLB_CNBCR5                               MLB_CNBCR5_REG(MLB_BASE_PTR)
#define MLB_CECR6                                MLB_CECR6_REG(MLB_BASE_PTR)
#define MLB_CSCR6                                MLB_CSCR6_REG(MLB_BASE_PTR)
#define MLB_CCBCR6                               MLB_CCBCR6_REG(MLB_BASE_PTR)
#define MLB_CNBCR6                               MLB_CNBCR6_REG(MLB_BASE_PTR)
#define MLB_CECR7                                MLB_CECR7_REG(MLB_BASE_PTR)
#define MLB_CSCR7                                MLB_CSCR7_REG(MLB_BASE_PTR)
#define MLB_CCBCR7                               MLB_CCBCR7_REG(MLB_BASE_PTR)
#define MLB_CNBCR7                               MLB_CNBCR7_REG(MLB_BASE_PTR)
#define MLB_CECR8                                MLB_CECR8_REG(MLB_BASE_PTR)
#define MLB_CSCR8                                MLB_CSCR8_REG(MLB_BASE_PTR)
#define MLB_CCBCR8                               MLB_CCBCR8_REG(MLB_BASE_PTR)
#define MLB_CNBCR8                               MLB_CNBCR8_REG(MLB_BASE_PTR)
#define MLB_CECR9                                MLB_CECR9_REG(MLB_BASE_PTR)
#define MLB_CSCR9                                MLB_CSCR9_REG(MLB_BASE_PTR)
#define MLB_CCBCR9                               MLB_CCBCR9_REG(MLB_BASE_PTR)
#define MLB_CNBCR9                               MLB_CNBCR9_REG(MLB_BASE_PTR)
#define MLB_CECR10                               MLB_CECR10_REG(MLB_BASE_PTR)
#define MLB_CSCR10                               MLB_CSCR10_REG(MLB_BASE_PTR)
#define MLB_CCBCR10                              MLB_CCBCR10_REG(MLB_BASE_PTR)
#define MLB_CNBCR10                              MLB_CNBCR10_REG(MLB_BASE_PTR)
#define MLB_CECR11                               MLB_CECR11_REG(MLB_BASE_PTR)
#define MLB_CSCR11                               MLB_CSCR11_REG(MLB_BASE_PTR)
#define MLB_CCBCR11                              MLB_CCBCR11_REG(MLB_BASE_PTR)
#define MLB_CNBCR11                              MLB_CNBCR11_REG(MLB_BASE_PTR)
#define MLB_CECR12                               MLB_CECR12_REG(MLB_BASE_PTR)
#define MLB_CSCR12                               MLB_CSCR12_REG(MLB_BASE_PTR)
#define MLB_CCBCR12                              MLB_CCBCR12_REG(MLB_BASE_PTR)
#define MLB_CNBCR12                              MLB_CNBCR12_REG(MLB_BASE_PTR)
#define MLB_CECR13                               MLB_CECR13_REG(MLB_BASE_PTR)
#define MLB_CSCR13                               MLB_CSCR13_REG(MLB_BASE_PTR)
#define MLB_CCBCR13                              MLB_CCBCR13_REG(MLB_BASE_PTR)
#define MLB_CNBCR13                              MLB_CNBCR13_REG(MLB_BASE_PTR)
#define MLB_CECR14                               MLB_CECR14_REG(MLB_BASE_PTR)
#define MLB_CSCR14                               MLB_CSCR14_REG(MLB_BASE_PTR)
#define MLB_CCBCR14                              MLB_CCBCR14_REG(MLB_BASE_PTR)
#define MLB_CNBCR14                              MLB_CNBCR14_REG(MLB_BASE_PTR)
#define MLB_CECR15                               MLB_CECR15_REG(MLB_BASE_PTR)
#define MLB_CSCR15                               MLB_CSCR15_REG(MLB_BASE_PTR)
#define MLB_CCBCR15                              MLB_CCBCR15_REG(MLB_BASE_PTR)
#define MLB_CNBCR15                              MLB_CNBCR15_REG(MLB_BASE_PTR)
#define MLB_LCBCR0                               MLB_LCBCR0_REG(MLB_BASE_PTR)
#define MLB_LCBCR1                               MLB_LCBCR1_REG(MLB_BASE_PTR)
#define MLB_LCBCR2                               MLB_LCBCR2_REG(MLB_BASE_PTR)
#define MLB_LCBCR3                               MLB_LCBCR3_REG(MLB_BASE_PTR)
#define MLB_LCBCR4                               MLB_LCBCR4_REG(MLB_BASE_PTR)
#define MLB_LCBCR5                               MLB_LCBCR5_REG(MLB_BASE_PTR)
#define MLB_LCBCR6                               MLB_LCBCR6_REG(MLB_BASE_PTR)
#define MLB_LCBCR7                               MLB_LCBCR7_REG(MLB_BASE_PTR)
#define MLB_LCBCR8                               MLB_LCBCR8_REG(MLB_BASE_PTR)
#define MLB_LCBCR9                               MLB_LCBCR9_REG(MLB_BASE_PTR)
#define MLB_LCBCR10                              MLB_LCBCR10_REG(MLB_BASE_PTR)
#define MLB_LCBCR11                              MLB_LCBCR11_REG(MLB_BASE_PTR)
#define MLB_LCBCR12                              MLB_LCBCR12_REG(MLB_BASE_PTR)
#define MLB_LCBCR13                              MLB_LCBCR13_REG(MLB_BASE_PTR)
#define MLB_LCBCR14                              MLB_LCBCR14_REG(MLB_BASE_PTR)
#define MLB_LCBCR15                              MLB_LCBCR15_REG(MLB_BASE_PTR)

/**
 * @}
 */ /* end of group MLB_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group MLB_Peripheral */


/* ----------------------------------------------------------------------------
   -- NFC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NFC_Peripheral NFC
 * @{
 */

/**
 * @brief NFC SRAM buffers definitions
 *
 * Macro definition to access NFC SRAM buffers
 */
#define NFC_SRAM_B0_REG(base,index)       ((base)->RESERVED_0[index])
#define NFC_SRAM_B1_REG(base,index)       ((base)->RESERVED_0[index+0x1000u])
#define NFC_SRAM_B2_REG(base,index)       ((base)->RESERVED_0[index+0x2000u])
#define NFC_SRAM_B3_REG(base,index)       ((base)->RESERVED_0[index+0x3000u])

#define NFC_SRAM_B0(index)                 NFC_SRAM_B0_REG(NFC_BASE_PTR,index)
#define NFC_SRAM_B1(index)                 NFC_SRAM_B1_REG(NFC_BASE_PTR,index)
#define NFC_SRAM_B2(index)                 NFC_SRAM_B2_REG(NFC_BASE_PTR,index)
#define NFC_SRAM_B3(index)                 NFC_SRAM_B3_REG(NFC_BASE_PTR,index)

/** NFC - Peripheral register structure */
typedef struct NFC_MemMap {
  uint8_t RESERVED_0[16128];
  uint32_t CMD1;                                   /**< Flash command 1, offset: 0x3F00 */
  uint32_t CMD2;                                   /**< Flash command 2, offset: 0x3F04 */
  uint32_t CAR;                                    /**< Column address, offset: 0x3F08 */
  uint32_t RAR;                                    /**< Row address, offset: 0x3F0C */
  uint32_t RPT;                                    /**< Flash command repeat, offset: 0x3F10 */
  uint32_t RAI;                                    /**< Row address increment, offset: 0x3F14 */
  uint32_t SR1;                                    /**< Flash status 1, offset: 0x3F18 */
  uint32_t SR2;                                    /**< Flash status 2, offset: 0x3F1C */
  uint32_t DMA1;                                   /**< DMA channel 1 address, offset: 0x3F20 */
  uint32_t DMACFG;                                 /**< DMA configuration, offset: 0x3F24 */
  uint32_t SWAP;                                   /**< Cach swap, offset: 0x3F28 */
  uint32_t SECSZ;                                  /**< Sector size, offset: 0x3F2C */
  uint32_t CFG;                                    /**< Flash configuration, offset: 0x3F30 */
  uint32_t DMA2;                                   /**< DMA channel 2 address, offset: 0x3F34 */
  uint32_t ISR;                                    /**< Interrupt status, offset: 0x3F38 */
} volatile *NFC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- NFC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NFC_Register_Accessor_Macros NFC - Register accessor macros
 * @{
 */


/* NFC - Register accessors */
#define NFC_CMD1_REG(base)                       ((base)->CMD1)
#define NFC_CMD2_REG(base)                       ((base)->CMD2)
#define NFC_CAR_REG(base)                        ((base)->CAR)
#define NFC_RAR_REG(base)                        ((base)->RAR)
#define NFC_RPT_REG(base)                        ((base)->RPT)
#define NFC_RAI_REG(base)                        ((base)->RAI)
#define NFC_SR1_REG(base)                        ((base)->SR1)
#define NFC_SR2_REG(base)                        ((base)->SR2)
#define NFC_DMA1_REG(base)                       ((base)->DMA1)
#define NFC_DMACFG_REG(base)                     ((base)->DMACFG)
#define NFC_SWAP_REG(base)                       ((base)->SWAP)
#define NFC_SECSZ_REG(base)                      ((base)->SECSZ)
#define NFC_CFG_REG(base)                        ((base)->CFG)
#define NFC_DMA2_REG(base)                       ((base)->DMA2)
#define NFC_ISR_REG(base)                        ((base)->ISR)

/**
 * @}
 */ /* end of group NFC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- NFC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NFC_Register_Masks NFC Register Masks
 * @{
 */

/* CMD1 Bit Fields */
#define NFC_CMD1_BYTE3_MASK                      0xFF0000u
#define NFC_CMD1_BYTE3_SHIFT                     16
#define NFC_CMD1_BYTE3(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_CMD1_BYTE3_SHIFT))&NFC_CMD1_BYTE3_MASK)
#define NFC_CMD1_BYTE2_MASK                      0xFF000000u
#define NFC_CMD1_BYTE2_SHIFT                     24
#define NFC_CMD1_BYTE2(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_CMD1_BYTE2_SHIFT))&NFC_CMD1_BYTE2_MASK)
/* CMD2 Bit Fields */
#define NFC_CMD2_BUSY_START_MASK                 0x1u
#define NFC_CMD2_BUSY_START_SHIFT                0
#define NFC_CMD2_BUFNO_MASK                      0x6u
#define NFC_CMD2_BUFNO_SHIFT                     1
#define NFC_CMD2_BUFNO(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_CMD2_BUFNO_SHIFT))&NFC_CMD2_BUFNO_MASK)
#define NFC_CMD2_CODE_MASK                       0xFFFF00u
#define NFC_CMD2_CODE_SHIFT                      8
#define NFC_CMD2_CODE(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_CMD2_CODE_SHIFT))&NFC_CMD2_CODE_MASK)
#define NFC_CMD2_BYTE1_MASK                      0xFF000000u
#define NFC_CMD2_BYTE1_SHIFT                     24
#define NFC_CMD2_BYTE1(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_CMD2_BYTE1_SHIFT))&NFC_CMD2_BYTE1_MASK)
/* CAR Bit Fields */
#define NFC_CAR_BYTE1_MASK                       0xFFu
#define NFC_CAR_BYTE1_SHIFT                      0
#define NFC_CAR_BYTE1(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_CAR_BYTE1_SHIFT))&NFC_CAR_BYTE1_MASK)
#define NFC_CAR_BYTE2_MASK                       0xFF00u
#define NFC_CAR_BYTE2_SHIFT                      8
#define NFC_CAR_BYTE2(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_CAR_BYTE2_SHIFT))&NFC_CAR_BYTE2_MASK)
/* RAR Bit Fields */
#define NFC_RAR_BYTE1_MASK                       0xFFu
#define NFC_RAR_BYTE1_SHIFT                      0
#define NFC_RAR_BYTE1(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_RAR_BYTE1_SHIFT))&NFC_RAR_BYTE1_MASK)
#define NFC_RAR_BYTE2_MASK                       0xFF00u
#define NFC_RAR_BYTE2_SHIFT                      8
#define NFC_RAR_BYTE2(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_RAR_BYTE2_SHIFT))&NFC_RAR_BYTE2_MASK)
#define NFC_RAR_BYTE3_MASK                       0xFF0000u
#define NFC_RAR_BYTE3_SHIFT                      16
#define NFC_RAR_BYTE3(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_RAR_BYTE3_SHIFT))&NFC_RAR_BYTE3_MASK)
#define NFC_RAR_CS0_MASK                         0x1000000u
#define NFC_RAR_CS0_SHIFT                        24
#define NFC_RAR_CS1_MASK                         0x2000000u
#define NFC_RAR_CS1_SHIFT                        25
#define NFC_RAR_RB0_MASK                         0x10000000u
#define NFC_RAR_RB0_SHIFT                        28
/* RPT Bit Fields */
#define NFC_RPT_COUNT_MASK                       0xFFFFu
#define NFC_RPT_COUNT_SHIFT                      0
#define NFC_RPT_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_RPT_COUNT_SHIFT))&NFC_RPT_COUNT_MASK)
/* RAI Bit Fields */
#define NFC_RAI_INC1_MASK                        0xFFu
#define NFC_RAI_INC1_SHIFT                       0
#define NFC_RAI_INC1(x)                          (((uint32_t)(((uint32_t)(x))<<NFC_RAI_INC1_SHIFT))&NFC_RAI_INC1_MASK)
#define NFC_RAI_INC2_MASK                        0xFF00u
#define NFC_RAI_INC2_SHIFT                       8
#define NFC_RAI_INC2(x)                          (((uint32_t)(((uint32_t)(x))<<NFC_RAI_INC2_SHIFT))&NFC_RAI_INC2_MASK)
#define NFC_RAI_INC3_MASK                        0xFF0000u
#define NFC_RAI_INC3_SHIFT                       16
#define NFC_RAI_INC3(x)                          (((uint32_t)(((uint32_t)(x))<<NFC_RAI_INC3_SHIFT))&NFC_RAI_INC3_MASK)
/* SR1 Bit Fields */
#define NFC_SR1_ID4_MASK                         0xFFu
#define NFC_SR1_ID4_SHIFT                        0
#define NFC_SR1_ID4(x)                           (((uint32_t)(((uint32_t)(x))<<NFC_SR1_ID4_SHIFT))&NFC_SR1_ID4_MASK)
#define NFC_SR1_ID3_MASK                         0xFF00u
#define NFC_SR1_ID3_SHIFT                        8
#define NFC_SR1_ID3(x)                           (((uint32_t)(((uint32_t)(x))<<NFC_SR1_ID3_SHIFT))&NFC_SR1_ID3_MASK)
#define NFC_SR1_ID2_MASK                         0xFF0000u
#define NFC_SR1_ID2_SHIFT                        16
#define NFC_SR1_ID2(x)                           (((uint32_t)(((uint32_t)(x))<<NFC_SR1_ID2_SHIFT))&NFC_SR1_ID2_MASK)
#define NFC_SR1_ID1_MASK                         0xFF000000u
#define NFC_SR1_ID1_SHIFT                        24
#define NFC_SR1_ID1(x)                           (((uint32_t)(((uint32_t)(x))<<NFC_SR1_ID1_SHIFT))&NFC_SR1_ID1_MASK)
/* SR2 Bit Fields */
#define NFC_SR2_STATUS1_MASK                     0xFFu
#define NFC_SR2_STATUS1_SHIFT                    0
#define NFC_SR2_STATUS1(x)                       (((uint32_t)(((uint32_t)(x))<<NFC_SR2_STATUS1_SHIFT))&NFC_SR2_STATUS1_MASK)
#define NFC_SR2_ID5_MASK                         0xFF000000u
#define NFC_SR2_ID5_SHIFT                        24
#define NFC_SR2_ID5(x)                           (((uint32_t)(((uint32_t)(x))<<NFC_SR2_ID5_SHIFT))&NFC_SR2_ID5_MASK)
/* DMA1 Bit Fields */
#define NFC_DMA1_ADDRESS_MASK                    0xFFFFFFFFu
#define NFC_DMA1_ADDRESS_SHIFT                   0
#define NFC_DMA1_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<NFC_DMA1_ADDRESS_SHIFT))&NFC_DMA1_ADDRESS_MASK)
/* DMACFG Bit Fields */
#define NFC_DMACFG_ACT2_MASK                     0x1u
#define NFC_DMACFG_ACT2_SHIFT                    0
#define NFC_DMACFG_ACT1_MASK                     0x2u
#define NFC_DMACFG_ACT1_SHIFT                    1
#define NFC_DMACFG_OFFSET2_MASK                  0x1E00u
#define NFC_DMACFG_OFFSET2_SHIFT                 9
#define NFC_DMACFG_OFFSET2(x)                    (((uint32_t)(((uint32_t)(x))<<NFC_DMACFG_OFFSET2_SHIFT))&NFC_DMACFG_OFFSET2_MASK)
#define NFC_DMACFG_COUNT2_MASK                   0xFE000u
#define NFC_DMACFG_COUNT2_SHIFT                  13
#define NFC_DMACFG_COUNT2(x)                     (((uint32_t)(((uint32_t)(x))<<NFC_DMACFG_COUNT2_SHIFT))&NFC_DMACFG_COUNT2_MASK)
#define NFC_DMACFG_COUNT1_MASK                   0xFFF00000u
#define NFC_DMACFG_COUNT1_SHIFT                  20
#define NFC_DMACFG_COUNT1(x)                     (((uint32_t)(((uint32_t)(x))<<NFC_DMACFG_COUNT1_SHIFT))&NFC_DMACFG_COUNT1_MASK)
/* SWAP Bit Fields */
#define NFC_SWAP_ADDR2_MASK                      0xFFEu
#define NFC_SWAP_ADDR2_SHIFT                     1
#define NFC_SWAP_ADDR2(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_SWAP_ADDR2_SHIFT))&NFC_SWAP_ADDR2_MASK)
#define NFC_SWAP_ADDR1_MASK                      0xFFE0000u
#define NFC_SWAP_ADDR1_SHIFT                     17
#define NFC_SWAP_ADDR1(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_SWAP_ADDR1_SHIFT))&NFC_SWAP_ADDR1_MASK)
/* SECSZ Bit Fields */
#define NFC_SECSZ_SIZE_MASK                      0x1FFFu
#define NFC_SECSZ_SIZE_SHIFT                     0
#define NFC_SECSZ_SIZE(x)                        (((uint32_t)(((uint32_t)(x))<<NFC_SECSZ_SIZE_SHIFT))&NFC_SECSZ_SIZE_MASK)
/* CFG Bit Fields */
#define NFC_CFG_PAGECNT_MASK                     0xFu
#define NFC_CFG_PAGECNT_SHIFT                    0
#define NFC_CFG_PAGECNT(x)                       (((uint32_t)(((uint32_t)(x))<<NFC_CFG_PAGECNT_SHIFT))&NFC_CFG_PAGECNT_MASK)
#define NFC_CFG_AIBN_MASK                        0x10u
#define NFC_CFG_AIBN_SHIFT                       4
#define NFC_CFG_AIAD_MASK                        0x20u
#define NFC_CFG_AIAD_SHIFT                       5
#define NFC_CFG_BTMD_MASK                        0x40u
#define NFC_CFG_BTMD_SHIFT                       6
#define NFC_CFG_BITWIDTH_MASK                    0x80u
#define NFC_CFG_BITWIDTH_SHIFT                   7
#define NFC_CFG_TIMEOUT_MASK                     0x1F00u
#define NFC_CFG_TIMEOUT_SHIFT                    8
#define NFC_CFG_TIMEOUT(x)                       (((uint32_t)(((uint32_t)(x))<<NFC_CFG_TIMEOUT_SHIFT))&NFC_CFG_TIMEOUT_MASK)
#define NFC_CFG_IDCNT_MASK                       0xE000u
#define NFC_CFG_IDCNT_SHIFT                      13
#define NFC_CFG_IDCNT(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_CFG_IDCNT_SHIFT))&NFC_CFG_IDCNT_MASK)
#define NFC_CFG_FAST_MASK                        0x10000u
#define NFC_CFG_FAST_SHIFT                       16
#define NFC_CFG_ECCMODE_MASK                     0xE0000u
#define NFC_CFG_ECCMODE_SHIFT                    17
#define NFC_CFG_ECCMODE(x)                       (((uint32_t)(((uint32_t)(x))<<NFC_CFG_ECCMODE_SHIFT))&NFC_CFG_ECCMODE_MASK)
#define NFC_CFG_DMAREQ_MASK                      0x100000u
#define NFC_CFG_DMAREQ_SHIFT                     20
#define NFC_CFG_ECCSRAM_MASK                     0x200000u
#define NFC_CFG_ECCSRAM_SHIFT                    21
#define NFC_CFG_ECCAD_MASK                       0x7FC00000u
#define NFC_CFG_ECCAD_SHIFT                      22
#define NFC_CFG_ECCAD(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_CFG_ECCAD_SHIFT))&NFC_CFG_ECCAD_MASK)
#define NFC_CFG_STOPWERR_MASK                    0x80000000u
#define NFC_CFG_STOPWERR_SHIFT                   31
/* DMA2 Bit Fields */
#define NFC_DMA2_ADDRESS_MASK                    0xFFFFFFFFu
#define NFC_DMA2_ADDRESS_SHIFT                   0
#define NFC_DMA2_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<NFC_DMA2_ADDRESS_SHIFT))&NFC_DMA2_ADDRESS_MASK)
/* ISR Bit Fields */
#define NFC_ISR_DMABN_MASK                       0x3u
#define NFC_ISR_DMABN_SHIFT                      0
#define NFC_ISR_DMABN(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_ISR_DMABN_SHIFT))&NFC_ISR_DMABN_MASK)
#define NFC_ISR_ECCBN_MASK                       0xCu
#define NFC_ISR_ECCBN_SHIFT                      2
#define NFC_ISR_ECCBN(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_ISR_ECCBN_SHIFT))&NFC_ISR_ECCBN_MASK)
#define NFC_ISR_RESBN_MASK                       0x30u
#define NFC_ISR_RESBN_SHIFT                      4
#define NFC_ISR_RESBN(x)                         (((uint32_t)(((uint32_t)(x))<<NFC_ISR_RESBN_SHIFT))&NFC_ISR_RESBN_MASK)
#define NFC_ISR_IDLECLR_MASK                     0x20000u
#define NFC_ISR_IDLECLR_SHIFT                    17
#define NFC_ISR_DONECLR_MASK                     0x40000u
#define NFC_ISR_DONECLR_SHIFT                    18
#define NFC_ISR_WERRCLR_MASK                     0x80000u
#define NFC_ISR_WERRCLR_SHIFT                    19
#define NFC_ISR_IDLEEN_MASK                      0x100000u
#define NFC_ISR_IDLEEN_SHIFT                     20
#define NFC_ISR_DONEEN_MASK                      0x200000u
#define NFC_ISR_DONEEN_SHIFT                     21
#define NFC_ISR_WERREN_MASK                      0x400000u
#define NFC_ISR_WERREN_SHIFT                     22
#define NFC_ISR_DMABUSY_MASK                     0x800000u
#define NFC_ISR_DMABUSY_SHIFT                    23
#define NFC_ISR_ECCBUSY_MASK                     0x1000000u
#define NFC_ISR_ECCBUSY_SHIFT                    24
#define NFC_ISR_RESBUSY_MASK                     0x2000000u
#define NFC_ISR_RESBUSY_SHIFT                    25
#define NFC_ISR_CMDBUSY_MASK                     0x4000000u
#define NFC_ISR_CMDBUSY_SHIFT                    26
#define NFC_ISR_WERRNS_MASK                      0x8000000u
#define NFC_ISR_WERRNS_SHIFT                     27
#define NFC_ISR_IDLE_MASK                        0x20000000u
#define NFC_ISR_IDLE_SHIFT                       29
#define NFC_ISR_DONE_MASK                        0x40000000u
#define NFC_ISR_DONE_SHIFT                       30
#define NFC_ISR_WERR_MASK                        0x80000000u
#define NFC_ISR_WERR_SHIFT                       31

/**
 * @}
 */ /* end of group NFC_Register_Masks */


/* NFC - Peripheral instance base addresses */
/** Peripheral NFC base pointer */
#define NFC_BASE_PTR                             ((NFC_MemMapPtr)0x400E0000u)
/** Array initializer of NFC peripheral base pointers */
#define NFC_BASE_PTRS                            { NFC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- NFC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NFC_Register_Accessor_Macros NFC - Register accessor macros
 * @{
 */


/* NFC - Register instance definitions */
/* NFC */
#define NFC_CMD1                                 NFC_CMD1_REG(NFC_BASE_PTR)
#define NFC_CMD2                                 NFC_CMD2_REG(NFC_BASE_PTR)
#define NFC_CAR                                  NFC_CAR_REG(NFC_BASE_PTR)
#define NFC_RAR                                  NFC_RAR_REG(NFC_BASE_PTR)
#define NFC_RPT                                  NFC_RPT_REG(NFC_BASE_PTR)
#define NFC_RAI                                  NFC_RAI_REG(NFC_BASE_PTR)
#define NFC_SR1                                  NFC_SR1_REG(NFC_BASE_PTR)
#define NFC_SR2                                  NFC_SR2_REG(NFC_BASE_PTR)
#define NFC_DMA1                                 NFC_DMA1_REG(NFC_BASE_PTR)
#define NFC_DMACFG                               NFC_DMACFG_REG(NFC_BASE_PTR)
#define NFC_SWAP                                 NFC_SWAP_REG(NFC_BASE_PTR)
#define NFC_SECSZ                                NFC_SECSZ_REG(NFC_BASE_PTR)
#define NFC_CFG                                  NFC_CFG_REG(NFC_BASE_PTR)
#define NFC_DMA2                                 NFC_DMA2_REG(NFC_BASE_PTR)
#define NFC_ISR                                  NFC_ISR_REG(NFC_BASE_PTR)

/**
 * @}
 */ /* end of group NFC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group NFC_Peripheral */


/* ----------------------------------------------------------------------------
   -- NVIC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NVIC_Peripheral NVIC
 * @{
 */

/** NVIC - Peripheral register structure */
typedef struct NVIC_MemMap {
  uint32_t ISER[4];                                /**< Interrupt Set Enable Register n, array offset: 0x0, array step: 0x4 */
  uint8_t RESERVED_0[112];
  uint32_t ICER[4];                                /**< Interrupt Clear Enable Register n, array offset: 0x80, array step: 0x4 */
  uint8_t RESERVED_1[112];
  uint32_t ISPR[4];                                /**< Interrupt Set Pending Register n, array offset: 0x100, array step: 0x4 */
  uint8_t RESERVED_2[112];
  uint32_t ICPR[4];                                /**< Interrupt Clear Pending Register n, array offset: 0x180, array step: 0x4 */
  uint8_t RESERVED_3[112];
  uint32_t IABR[4];                                /**< Interrupt Active bit Register n, array offset: 0x200, array step: 0x4 */
  uint8_t RESERVED_4[240];
  uint8_t IP[112];                                 /**< Interrupt Priority Register n, array offset: 0x300, array step: 0x1 */
  uint8_t RESERVED_5[2704];
  uint32_t STIR[1];                                /**< Software Trigger Interrupt Register, array offset: 0xE00, array step: 0x4 */
} volatile *NVIC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- NVIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NVIC_Register_Accessor_Macros NVIC - Register accessor macros
 * @{
 */


/* NVIC - Register accessors */
#define NVIC_ISER_REG(base,index)                ((base)->ISER[index])
#define NVIC_ICER_REG(base,index)                ((base)->ICER[index])
#define NVIC_ISPR_REG(base,index)                ((base)->ISPR[index])
#define NVIC_ICPR_REG(base,index)                ((base)->ICPR[index])
#define NVIC_IABR_REG(base,index)                ((base)->IABR[index])
#define NVIC_IP_REG(base,index)                  ((base)->IP[index])
#define NVIC_STIR_REG(base,index)                ((base)->STIR[index])

/**
 * @}
 */ /* end of group NVIC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- NVIC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NVIC_Register_Masks NVIC Register Masks
 * @{
 */

/* ISER Bit Fields */
#define NVIC_ISER_SETENA_MASK                    0xFFFFFFFFu
#define NVIC_ISER_SETENA_SHIFT                   0
#define NVIC_ISER_SETENA(x)                      (((uint32_t)(((uint32_t)(x))<<NVIC_ISER_SETENA_SHIFT))&NVIC_ISER_SETENA_MASK)
/* ICER Bit Fields */
#define NVIC_ICER_CLRENA_MASK                    0xFFFFFFFFu
#define NVIC_ICER_CLRENA_SHIFT                   0
#define NVIC_ICER_CLRENA(x)                      (((uint32_t)(((uint32_t)(x))<<NVIC_ICER_CLRENA_SHIFT))&NVIC_ICER_CLRENA_MASK)
/* ISPR Bit Fields */
#define NVIC_ISPR_SETPEND_MASK                   0xFFFFFFFFu
#define NVIC_ISPR_SETPEND_SHIFT                  0
#define NVIC_ISPR_SETPEND(x)                     (((uint32_t)(((uint32_t)(x))<<NVIC_ISPR_SETPEND_SHIFT))&NVIC_ISPR_SETPEND_MASK)
/* ICPR Bit Fields */
#define NVIC_ICPR_CLRPEND_MASK                   0xFFFFFFFFu
#define NVIC_ICPR_CLRPEND_SHIFT                  0
#define NVIC_ICPR_CLRPEND(x)                     (((uint32_t)(((uint32_t)(x))<<NVIC_ICPR_CLRPEND_SHIFT))&NVIC_ICPR_CLRPEND_MASK)
/* IABR Bit Fields */
#define NVIC_IABR_ACTIVE_MASK                    0xFFFFFFFFu
#define NVIC_IABR_ACTIVE_SHIFT                   0
#define NVIC_IABR_ACTIVE(x)                      (((uint32_t)(((uint32_t)(x))<<NVIC_IABR_ACTIVE_SHIFT))&NVIC_IABR_ACTIVE_MASK)
/* IP Bit Fields */
#define NVIC_IP_PRI0_MASK                        0xFFu
#define NVIC_IP_PRI0_SHIFT                       0
#define NVIC_IP_PRI0(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI0_SHIFT))&NVIC_IP_PRI0_MASK)
#define NVIC_IP_PRI1_MASK                        0xFFu
#define NVIC_IP_PRI1_SHIFT                       0
#define NVIC_IP_PRI1(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI1_SHIFT))&NVIC_IP_PRI1_MASK)
#define NVIC_IP_PRI2_MASK                        0xFFu
#define NVIC_IP_PRI2_SHIFT                       0
#define NVIC_IP_PRI2(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI2_SHIFT))&NVIC_IP_PRI2_MASK)
#define NVIC_IP_PRI3_MASK                        0xFFu
#define NVIC_IP_PRI3_SHIFT                       0
#define NVIC_IP_PRI3(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI3_SHIFT))&NVIC_IP_PRI3_MASK)
#define NVIC_IP_PRI4_MASK                        0xFFu
#define NVIC_IP_PRI4_SHIFT                       0
#define NVIC_IP_PRI4(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI4_SHIFT))&NVIC_IP_PRI4_MASK)
#define NVIC_IP_PRI5_MASK                        0xFFu
#define NVIC_IP_PRI5_SHIFT                       0
#define NVIC_IP_PRI5(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI5_SHIFT))&NVIC_IP_PRI5_MASK)
#define NVIC_IP_PRI6_MASK                        0xFFu
#define NVIC_IP_PRI6_SHIFT                       0
#define NVIC_IP_PRI6(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI6_SHIFT))&NVIC_IP_PRI6_MASK)
#define NVIC_IP_PRI7_MASK                        0xFFu
#define NVIC_IP_PRI7_SHIFT                       0
#define NVIC_IP_PRI7(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI7_SHIFT))&NVIC_IP_PRI7_MASK)
#define NVIC_IP_PRI8_MASK                        0xFFu
#define NVIC_IP_PRI8_SHIFT                       0
#define NVIC_IP_PRI8(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI8_SHIFT))&NVIC_IP_PRI8_MASK)
#define NVIC_IP_PRI9_MASK                        0xFFu
#define NVIC_IP_PRI9_SHIFT                       0
#define NVIC_IP_PRI9(x)                          (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI9_SHIFT))&NVIC_IP_PRI9_MASK)
#define NVIC_IP_PRI10_MASK                       0xFFu
#define NVIC_IP_PRI10_SHIFT                      0
#define NVIC_IP_PRI10(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI10_SHIFT))&NVIC_IP_PRI10_MASK)
#define NVIC_IP_PRI11_MASK                       0xFFu
#define NVIC_IP_PRI11_SHIFT                      0
#define NVIC_IP_PRI11(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI11_SHIFT))&NVIC_IP_PRI11_MASK)
#define NVIC_IP_PRI12_MASK                       0xFFu
#define NVIC_IP_PRI12_SHIFT                      0
#define NVIC_IP_PRI12(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI12_SHIFT))&NVIC_IP_PRI12_MASK)
#define NVIC_IP_PRI13_MASK                       0xFFu
#define NVIC_IP_PRI13_SHIFT                      0
#define NVIC_IP_PRI13(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI13_SHIFT))&NVIC_IP_PRI13_MASK)
#define NVIC_IP_PRI14_MASK                       0xFFu
#define NVIC_IP_PRI14_SHIFT                      0
#define NVIC_IP_PRI14(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI14_SHIFT))&NVIC_IP_PRI14_MASK)
#define NVIC_IP_PRI15_MASK                       0xFFu
#define NVIC_IP_PRI15_SHIFT                      0
#define NVIC_IP_PRI15(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI15_SHIFT))&NVIC_IP_PRI15_MASK)
#define NVIC_IP_PRI16_MASK                       0xFFu
#define NVIC_IP_PRI16_SHIFT                      0
#define NVIC_IP_PRI16(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI16_SHIFT))&NVIC_IP_PRI16_MASK)
#define NVIC_IP_PRI17_MASK                       0xFFu
#define NVIC_IP_PRI17_SHIFT                      0
#define NVIC_IP_PRI17(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI17_SHIFT))&NVIC_IP_PRI17_MASK)
#define NVIC_IP_PRI18_MASK                       0xFFu
#define NVIC_IP_PRI18_SHIFT                      0
#define NVIC_IP_PRI18(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI18_SHIFT))&NVIC_IP_PRI18_MASK)
#define NVIC_IP_PRI19_MASK                       0xFFu
#define NVIC_IP_PRI19_SHIFT                      0
#define NVIC_IP_PRI19(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI19_SHIFT))&NVIC_IP_PRI19_MASK)
#define NVIC_IP_PRI20_MASK                       0xFFu
#define NVIC_IP_PRI20_SHIFT                      0
#define NVIC_IP_PRI20(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI20_SHIFT))&NVIC_IP_PRI20_MASK)
#define NVIC_IP_PRI21_MASK                       0xFFu
#define NVIC_IP_PRI21_SHIFT                      0
#define NVIC_IP_PRI21(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI21_SHIFT))&NVIC_IP_PRI21_MASK)
#define NVIC_IP_PRI22_MASK                       0xFFu
#define NVIC_IP_PRI22_SHIFT                      0
#define NVIC_IP_PRI22(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI22_SHIFT))&NVIC_IP_PRI22_MASK)
#define NVIC_IP_PRI23_MASK                       0xFFu
#define NVIC_IP_PRI23_SHIFT                      0
#define NVIC_IP_PRI23(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI23_SHIFT))&NVIC_IP_PRI23_MASK)
#define NVIC_IP_PRI24_MASK                       0xFFu
#define NVIC_IP_PRI24_SHIFT                      0
#define NVIC_IP_PRI24(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI24_SHIFT))&NVIC_IP_PRI24_MASK)
#define NVIC_IP_PRI25_MASK                       0xFFu
#define NVIC_IP_PRI25_SHIFT                      0
#define NVIC_IP_PRI25(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI25_SHIFT))&NVIC_IP_PRI25_MASK)
#define NVIC_IP_PRI26_MASK                       0xFFu
#define NVIC_IP_PRI26_SHIFT                      0
#define NVIC_IP_PRI26(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI26_SHIFT))&NVIC_IP_PRI26_MASK)
#define NVIC_IP_PRI27_MASK                       0xFFu
#define NVIC_IP_PRI27_SHIFT                      0
#define NVIC_IP_PRI27(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI27_SHIFT))&NVIC_IP_PRI27_MASK)
#define NVIC_IP_PRI28_MASK                       0xFFu
#define NVIC_IP_PRI28_SHIFT                      0
#define NVIC_IP_PRI28(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI28_SHIFT))&NVIC_IP_PRI28_MASK)
#define NVIC_IP_PRI29_MASK                       0xFFu
#define NVIC_IP_PRI29_SHIFT                      0
#define NVIC_IP_PRI29(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI29_SHIFT))&NVIC_IP_PRI29_MASK)
#define NVIC_IP_PRI30_MASK                       0xFFu
#define NVIC_IP_PRI30_SHIFT                      0
#define NVIC_IP_PRI30(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI30_SHIFT))&NVIC_IP_PRI30_MASK)
#define NVIC_IP_PRI31_MASK                       0xFFu
#define NVIC_IP_PRI31_SHIFT                      0
#define NVIC_IP_PRI31(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI31_SHIFT))&NVIC_IP_PRI31_MASK)
#define NVIC_IP_PRI32_MASK                       0xFFu
#define NVIC_IP_PRI32_SHIFT                      0
#define NVIC_IP_PRI32(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI32_SHIFT))&NVIC_IP_PRI32_MASK)
#define NVIC_IP_PRI33_MASK                       0xFFu
#define NVIC_IP_PRI33_SHIFT                      0
#define NVIC_IP_PRI33(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI33_SHIFT))&NVIC_IP_PRI33_MASK)
#define NVIC_IP_PRI34_MASK                       0xFFu
#define NVIC_IP_PRI34_SHIFT                      0
#define NVIC_IP_PRI34(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI34_SHIFT))&NVIC_IP_PRI34_MASK)
#define NVIC_IP_PRI35_MASK                       0xFFu
#define NVIC_IP_PRI35_SHIFT                      0
#define NVIC_IP_PRI35(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI35_SHIFT))&NVIC_IP_PRI35_MASK)
#define NVIC_IP_PRI36_MASK                       0xFFu
#define NVIC_IP_PRI36_SHIFT                      0
#define NVIC_IP_PRI36(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI36_SHIFT))&NVIC_IP_PRI36_MASK)
#define NVIC_IP_PRI37_MASK                       0xFFu
#define NVIC_IP_PRI37_SHIFT                      0
#define NVIC_IP_PRI37(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI37_SHIFT))&NVIC_IP_PRI37_MASK)
#define NVIC_IP_PRI38_MASK                       0xFFu
#define NVIC_IP_PRI38_SHIFT                      0
#define NVIC_IP_PRI38(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI38_SHIFT))&NVIC_IP_PRI38_MASK)
#define NVIC_IP_PRI39_MASK                       0xFFu
#define NVIC_IP_PRI39_SHIFT                      0
#define NVIC_IP_PRI39(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI39_SHIFT))&NVIC_IP_PRI39_MASK)
#define NVIC_IP_PRI40_MASK                       0xFFu
#define NVIC_IP_PRI40_SHIFT                      0
#define NVIC_IP_PRI40(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI40_SHIFT))&NVIC_IP_PRI40_MASK)
#define NVIC_IP_PRI41_MASK                       0xFFu
#define NVIC_IP_PRI41_SHIFT                      0
#define NVIC_IP_PRI41(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI41_SHIFT))&NVIC_IP_PRI41_MASK)
#define NVIC_IP_PRI42_MASK                       0xFFu
#define NVIC_IP_PRI42_SHIFT                      0
#define NVIC_IP_PRI42(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI42_SHIFT))&NVIC_IP_PRI42_MASK)
#define NVIC_IP_PRI43_MASK                       0xFFu
#define NVIC_IP_PRI43_SHIFT                      0
#define NVIC_IP_PRI43(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI43_SHIFT))&NVIC_IP_PRI43_MASK)
#define NVIC_IP_PRI44_MASK                       0xFFu
#define NVIC_IP_PRI44_SHIFT                      0
#define NVIC_IP_PRI44(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI44_SHIFT))&NVIC_IP_PRI44_MASK)
#define NVIC_IP_PRI45_MASK                       0xFFu
#define NVIC_IP_PRI45_SHIFT                      0
#define NVIC_IP_PRI45(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI45_SHIFT))&NVIC_IP_PRI45_MASK)
#define NVIC_IP_PRI46_MASK                       0xFFu
#define NVIC_IP_PRI46_SHIFT                      0
#define NVIC_IP_PRI46(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI46_SHIFT))&NVIC_IP_PRI46_MASK)
#define NVIC_IP_PRI47_MASK                       0xFFu
#define NVIC_IP_PRI47_SHIFT                      0
#define NVIC_IP_PRI47(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI47_SHIFT))&NVIC_IP_PRI47_MASK)
#define NVIC_IP_PRI48_MASK                       0xFFu
#define NVIC_IP_PRI48_SHIFT                      0
#define NVIC_IP_PRI48(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI48_SHIFT))&NVIC_IP_PRI48_MASK)
#define NVIC_IP_PRI49_MASK                       0xFFu
#define NVIC_IP_PRI49_SHIFT                      0
#define NVIC_IP_PRI49(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI49_SHIFT))&NVIC_IP_PRI49_MASK)
#define NVIC_IP_PRI50_MASK                       0xFFu
#define NVIC_IP_PRI50_SHIFT                      0
#define NVIC_IP_PRI50(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI50_SHIFT))&NVIC_IP_PRI50_MASK)
#define NVIC_IP_PRI51_MASK                       0xFFu
#define NVIC_IP_PRI51_SHIFT                      0
#define NVIC_IP_PRI51(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI51_SHIFT))&NVIC_IP_PRI51_MASK)
#define NVIC_IP_PRI52_MASK                       0xFFu
#define NVIC_IP_PRI52_SHIFT                      0
#define NVIC_IP_PRI52(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI52_SHIFT))&NVIC_IP_PRI52_MASK)
#define NVIC_IP_PRI53_MASK                       0xFFu
#define NVIC_IP_PRI53_SHIFT                      0
#define NVIC_IP_PRI53(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI53_SHIFT))&NVIC_IP_PRI53_MASK)
#define NVIC_IP_PRI54_MASK                       0xFFu
#define NVIC_IP_PRI54_SHIFT                      0
#define NVIC_IP_PRI54(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI54_SHIFT))&NVIC_IP_PRI54_MASK)
#define NVIC_IP_PRI55_MASK                       0xFFu
#define NVIC_IP_PRI55_SHIFT                      0
#define NVIC_IP_PRI55(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI55_SHIFT))&NVIC_IP_PRI55_MASK)
#define NVIC_IP_PRI56_MASK                       0xFFu
#define NVIC_IP_PRI56_SHIFT                      0
#define NVIC_IP_PRI56(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI56_SHIFT))&NVIC_IP_PRI56_MASK)
#define NVIC_IP_PRI57_MASK                       0xFFu
#define NVIC_IP_PRI57_SHIFT                      0
#define NVIC_IP_PRI57(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI57_SHIFT))&NVIC_IP_PRI57_MASK)
#define NVIC_IP_PRI58_MASK                       0xFFu
#define NVIC_IP_PRI58_SHIFT                      0
#define NVIC_IP_PRI58(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI58_SHIFT))&NVIC_IP_PRI58_MASK)
#define NVIC_IP_PRI59_MASK                       0xFFu
#define NVIC_IP_PRI59_SHIFT                      0
#define NVIC_IP_PRI59(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI59_SHIFT))&NVIC_IP_PRI59_MASK)
#define NVIC_IP_PRI60_MASK                       0xFFu
#define NVIC_IP_PRI60_SHIFT                      0
#define NVIC_IP_PRI60(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI60_SHIFT))&NVIC_IP_PRI60_MASK)
#define NVIC_IP_PRI61_MASK                       0xFFu
#define NVIC_IP_PRI61_SHIFT                      0
#define NVIC_IP_PRI61(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI61_SHIFT))&NVIC_IP_PRI61_MASK)
#define NVIC_IP_PRI62_MASK                       0xFFu
#define NVIC_IP_PRI62_SHIFT                      0
#define NVIC_IP_PRI62(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI62_SHIFT))&NVIC_IP_PRI62_MASK)
#define NVIC_IP_PRI63_MASK                       0xFFu
#define NVIC_IP_PRI63_SHIFT                      0
#define NVIC_IP_PRI63(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI63_SHIFT))&NVIC_IP_PRI63_MASK)
#define NVIC_IP_PRI64_MASK                       0xFFu
#define NVIC_IP_PRI64_SHIFT                      0
#define NVIC_IP_PRI64(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI64_SHIFT))&NVIC_IP_PRI64_MASK)
#define NVIC_IP_PRI65_MASK                       0xFFu
#define NVIC_IP_PRI65_SHIFT                      0
#define NVIC_IP_PRI65(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI65_SHIFT))&NVIC_IP_PRI65_MASK)
#define NVIC_IP_PRI66_MASK                       0xFFu
#define NVIC_IP_PRI66_SHIFT                      0
#define NVIC_IP_PRI66(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI66_SHIFT))&NVIC_IP_PRI66_MASK)
#define NVIC_IP_PRI67_MASK                       0xFFu
#define NVIC_IP_PRI67_SHIFT                      0
#define NVIC_IP_PRI67(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI67_SHIFT))&NVIC_IP_PRI67_MASK)
#define NVIC_IP_PRI68_MASK                       0xFFu
#define NVIC_IP_PRI68_SHIFT                      0
#define NVIC_IP_PRI68(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI68_SHIFT))&NVIC_IP_PRI68_MASK)
#define NVIC_IP_PRI69_MASK                       0xFFu
#define NVIC_IP_PRI69_SHIFT                      0
#define NVIC_IP_PRI69(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI69_SHIFT))&NVIC_IP_PRI69_MASK)
#define NVIC_IP_PRI70_MASK                       0xFFu
#define NVIC_IP_PRI70_SHIFT                      0
#define NVIC_IP_PRI70(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI70_SHIFT))&NVIC_IP_PRI70_MASK)
#define NVIC_IP_PRI71_MASK                       0xFFu
#define NVIC_IP_PRI71_SHIFT                      0
#define NVIC_IP_PRI71(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI71_SHIFT))&NVIC_IP_PRI71_MASK)
#define NVIC_IP_PRI72_MASK                       0xFFu
#define NVIC_IP_PRI72_SHIFT                      0
#define NVIC_IP_PRI72(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI72_SHIFT))&NVIC_IP_PRI72_MASK)
#define NVIC_IP_PRI73_MASK                       0xFFu
#define NVIC_IP_PRI73_SHIFT                      0
#define NVIC_IP_PRI73(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI73_SHIFT))&NVIC_IP_PRI73_MASK)
#define NVIC_IP_PRI74_MASK                       0xFFu
#define NVIC_IP_PRI74_SHIFT                      0
#define NVIC_IP_PRI74(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI74_SHIFT))&NVIC_IP_PRI74_MASK)
#define NVIC_IP_PRI75_MASK                       0xFFu
#define NVIC_IP_PRI75_SHIFT                      0
#define NVIC_IP_PRI75(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI75_SHIFT))&NVIC_IP_PRI75_MASK)
#define NVIC_IP_PRI76_MASK                       0xFFu
#define NVIC_IP_PRI76_SHIFT                      0
#define NVIC_IP_PRI76(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI76_SHIFT))&NVIC_IP_PRI76_MASK)
#define NVIC_IP_PRI77_MASK                       0xFFu
#define NVIC_IP_PRI77_SHIFT                      0
#define NVIC_IP_PRI77(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI77_SHIFT))&NVIC_IP_PRI77_MASK)
#define NVIC_IP_PRI78_MASK                       0xFFu
#define NVIC_IP_PRI78_SHIFT                      0
#define NVIC_IP_PRI78(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI78_SHIFT))&NVIC_IP_PRI78_MASK)
#define NVIC_IP_PRI79_MASK                       0xFFu
#define NVIC_IP_PRI79_SHIFT                      0
#define NVIC_IP_PRI79(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI79_SHIFT))&NVIC_IP_PRI79_MASK)
#define NVIC_IP_PRI80_MASK                       0xFFu
#define NVIC_IP_PRI80_SHIFT                      0
#define NVIC_IP_PRI80(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI80_SHIFT))&NVIC_IP_PRI80_MASK)
#define NVIC_IP_PRI81_MASK                       0xFFu
#define NVIC_IP_PRI81_SHIFT                      0
#define NVIC_IP_PRI81(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI81_SHIFT))&NVIC_IP_PRI81_MASK)
#define NVIC_IP_PRI82_MASK                       0xFFu
#define NVIC_IP_PRI82_SHIFT                      0
#define NVIC_IP_PRI82(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI82_SHIFT))&NVIC_IP_PRI82_MASK)
#define NVIC_IP_PRI83_MASK                       0xFFu
#define NVIC_IP_PRI83_SHIFT                      0
#define NVIC_IP_PRI83(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI83_SHIFT))&NVIC_IP_PRI83_MASK)
#define NVIC_IP_PRI84_MASK                       0xFFu
#define NVIC_IP_PRI84_SHIFT                      0
#define NVIC_IP_PRI84(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI84_SHIFT))&NVIC_IP_PRI84_MASK)
#define NVIC_IP_PRI85_MASK                       0xFFu
#define NVIC_IP_PRI85_SHIFT                      0
#define NVIC_IP_PRI85(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI85_SHIFT))&NVIC_IP_PRI85_MASK)
#define NVIC_IP_PRI86_MASK                       0xFFu
#define NVIC_IP_PRI86_SHIFT                      0
#define NVIC_IP_PRI86(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI86_SHIFT))&NVIC_IP_PRI86_MASK)
#define NVIC_IP_PRI87_MASK                       0xFFu
#define NVIC_IP_PRI87_SHIFT                      0
#define NVIC_IP_PRI87(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI87_SHIFT))&NVIC_IP_PRI87_MASK)
#define NVIC_IP_PRI88_MASK                       0xFFu
#define NVIC_IP_PRI88_SHIFT                      0
#define NVIC_IP_PRI88(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI88_SHIFT))&NVIC_IP_PRI88_MASK)
#define NVIC_IP_PRI89_MASK                       0xFFu
#define NVIC_IP_PRI89_SHIFT                      0
#define NVIC_IP_PRI89(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI89_SHIFT))&NVIC_IP_PRI89_MASK)
#define NVIC_IP_PRI90_MASK                       0xFFu
#define NVIC_IP_PRI90_SHIFT                      0
#define NVIC_IP_PRI90(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI90_SHIFT))&NVIC_IP_PRI90_MASK)
#define NVIC_IP_PRI91_MASK                       0xFFu
#define NVIC_IP_PRI91_SHIFT                      0
#define NVIC_IP_PRI91(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI91_SHIFT))&NVIC_IP_PRI91_MASK)
#define NVIC_IP_PRI92_MASK                       0xFFu
#define NVIC_IP_PRI92_SHIFT                      0
#define NVIC_IP_PRI92(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI92_SHIFT))&NVIC_IP_PRI92_MASK)
#define NVIC_IP_PRI93_MASK                       0xFFu
#define NVIC_IP_PRI93_SHIFT                      0
#define NVIC_IP_PRI93(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI93_SHIFT))&NVIC_IP_PRI93_MASK)
#define NVIC_IP_PRI94_MASK                       0xFFu
#define NVIC_IP_PRI94_SHIFT                      0
#define NVIC_IP_PRI94(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI94_SHIFT))&NVIC_IP_PRI94_MASK)
#define NVIC_IP_PRI95_MASK                       0xFFu
#define NVIC_IP_PRI95_SHIFT                      0
#define NVIC_IP_PRI95(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI95_SHIFT))&NVIC_IP_PRI95_MASK)
#define NVIC_IP_PRI96_MASK                       0xFFu
#define NVIC_IP_PRI96_SHIFT                      0
#define NVIC_IP_PRI96(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI96_SHIFT))&NVIC_IP_PRI96_MASK)
#define NVIC_IP_PRI97_MASK                       0xFFu
#define NVIC_IP_PRI97_SHIFT                      0
#define NVIC_IP_PRI97(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI97_SHIFT))&NVIC_IP_PRI97_MASK)
#define NVIC_IP_PRI98_MASK                       0xFFu
#define NVIC_IP_PRI98_SHIFT                      0
#define NVIC_IP_PRI98(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI98_SHIFT))&NVIC_IP_PRI98_MASK)
#define NVIC_IP_PRI99_MASK                       0xFFu
#define NVIC_IP_PRI99_SHIFT                      0
#define NVIC_IP_PRI99(x)                         (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI99_SHIFT))&NVIC_IP_PRI99_MASK)
#define NVIC_IP_PRI100_MASK                      0xFFu
#define NVIC_IP_PRI100_SHIFT                     0
#define NVIC_IP_PRI100(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI100_SHIFT))&NVIC_IP_PRI100_MASK)
#define NVIC_IP_PRI101_MASK                      0xFFu
#define NVIC_IP_PRI101_SHIFT                     0
#define NVIC_IP_PRI101(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI101_SHIFT))&NVIC_IP_PRI101_MASK)
#define NVIC_IP_PRI102_MASK                      0xFFu
#define NVIC_IP_PRI102_SHIFT                     0
#define NVIC_IP_PRI102(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI102_SHIFT))&NVIC_IP_PRI102_MASK)
#define NVIC_IP_PRI103_MASK                      0xFFu
#define NVIC_IP_PRI103_SHIFT                     0
#define NVIC_IP_PRI103(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI103_SHIFT))&NVIC_IP_PRI103_MASK)
#define NVIC_IP_PRI104_MASK                      0xFFu
#define NVIC_IP_PRI104_SHIFT                     0
#define NVIC_IP_PRI104(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI104_SHIFT))&NVIC_IP_PRI104_MASK)
#define NVIC_IP_PRI105_MASK                      0xFFu
#define NVIC_IP_PRI105_SHIFT                     0
#define NVIC_IP_PRI105(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI105_SHIFT))&NVIC_IP_PRI105_MASK)
#define NVIC_IP_PRI106_MASK                      0xFFu
#define NVIC_IP_PRI106_SHIFT                     0
#define NVIC_IP_PRI106(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI106_SHIFT))&NVIC_IP_PRI106_MASK)
#define NVIC_IP_PRI107_MASK                      0xFFu
#define NVIC_IP_PRI107_SHIFT                     0
#define NVIC_IP_PRI107(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI107_SHIFT))&NVIC_IP_PRI107_MASK)
#define NVIC_IP_PRI108_MASK                      0xFFu
#define NVIC_IP_PRI108_SHIFT                     0
#define NVIC_IP_PRI108(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI108_SHIFT))&NVIC_IP_PRI108_MASK)
#define NVIC_IP_PRI109_MASK                      0xFFu
#define NVIC_IP_PRI109_SHIFT                     0
#define NVIC_IP_PRI109(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI109_SHIFT))&NVIC_IP_PRI109_MASK)
#define NVIC_IP_PRI110_MASK                      0xFFu
#define NVIC_IP_PRI110_SHIFT                     0
#define NVIC_IP_PRI110(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI110_SHIFT))&NVIC_IP_PRI110_MASK)
#define NVIC_IP_PRI111_MASK                      0xFFu
#define NVIC_IP_PRI111_SHIFT                     0
#define NVIC_IP_PRI111(x)                        (((uint8_t)(((uint8_t)(x))<<NVIC_IP_PRI111_SHIFT))&NVIC_IP_PRI111_MASK)
/* STIR Bit Fields */
#define NVIC_STIR_INTID_MASK                     0x1FFu
#define NVIC_STIR_INTID_SHIFT                    0
#define NVIC_STIR_INTID(x)                       (((uint32_t)(((uint32_t)(x))<<NVIC_STIR_INTID_SHIFT))&NVIC_STIR_INTID_MASK)

/**
 * @}
 */ /* end of group NVIC_Register_Masks */


/* NVIC - Peripheral instance base addresses */
/** Peripheral NVIC base pointer */
#define NVIC_BASE_PTR                            ((NVIC_MemMapPtr)0xE000E100u)
/** Array initializer of NVIC peripheral base pointers */
#define NVIC_BASE_PTRS                           { NVIC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- NVIC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup NVIC_Register_Accessor_Macros NVIC - Register accessor macros
 * @{
 */


/* NVIC - Register instance definitions */
/* NVIC */
#define NVICISER0                                NVIC_ISER_REG(NVIC_BASE_PTR,0)
#define NVICISER1                                NVIC_ISER_REG(NVIC_BASE_PTR,1)
#define NVICISER2                                NVIC_ISER_REG(NVIC_BASE_PTR,2)
#define NVICISER3                                NVIC_ISER_REG(NVIC_BASE_PTR,3)
#define NVICICER0                                NVIC_ICER_REG(NVIC_BASE_PTR,0)
#define NVICICER1                                NVIC_ICER_REG(NVIC_BASE_PTR,1)
#define NVICICER2                                NVIC_ICER_REG(NVIC_BASE_PTR,2)
#define NVICICER3                                NVIC_ICER_REG(NVIC_BASE_PTR,3)
#define NVICISPR0                                NVIC_ISPR_REG(NVIC_BASE_PTR,0)
#define NVICISPR1                                NVIC_ISPR_REG(NVIC_BASE_PTR,1)
#define NVICISPR2                                NVIC_ISPR_REG(NVIC_BASE_PTR,2)
#define NVICISPR3                                NVIC_ISPR_REG(NVIC_BASE_PTR,3)
#define NVICICPR0                                NVIC_ICPR_REG(NVIC_BASE_PTR,0)
#define NVICICPR1                                NVIC_ICPR_REG(NVIC_BASE_PTR,1)
#define NVICICPR2                                NVIC_ICPR_REG(NVIC_BASE_PTR,2)
#define NVICICPR3                                NVIC_ICPR_REG(NVIC_BASE_PTR,3)
#define NVICIABR0                                NVIC_IABR_REG(NVIC_BASE_PTR,0)
#define NVICIABR1                                NVIC_IABR_REG(NVIC_BASE_PTR,1)
#define NVICIABR2                                NVIC_IABR_REG(NVIC_BASE_PTR,2)
#define NVICIABR3                                NVIC_IABR_REG(NVIC_BASE_PTR,3)
#define NVICIP0                                  NVIC_IP_REG(NVIC_BASE_PTR,0)
#define NVICIP1                                  NVIC_IP_REG(NVIC_BASE_PTR,1)
#define NVICIP2                                  NVIC_IP_REG(NVIC_BASE_PTR,2)
#define NVICIP3                                  NVIC_IP_REG(NVIC_BASE_PTR,3)
#define NVICIP4                                  NVIC_IP_REG(NVIC_BASE_PTR,4)
#define NVICIP5                                  NVIC_IP_REG(NVIC_BASE_PTR,5)
#define NVICIP6                                  NVIC_IP_REG(NVIC_BASE_PTR,6)
#define NVICIP7                                  NVIC_IP_REG(NVIC_BASE_PTR,7)
#define NVICIP8                                  NVIC_IP_REG(NVIC_BASE_PTR,8)
#define NVICIP9                                  NVIC_IP_REG(NVIC_BASE_PTR,9)
#define NVICIP10                                 NVIC_IP_REG(NVIC_BASE_PTR,10)
#define NVICIP11                                 NVIC_IP_REG(NVIC_BASE_PTR,11)
#define NVICIP12                                 NVIC_IP_REG(NVIC_BASE_PTR,12)
#define NVICIP13                                 NVIC_IP_REG(NVIC_BASE_PTR,13)
#define NVICIP14                                 NVIC_IP_REG(NVIC_BASE_PTR,14)
#define NVICIP15                                 NVIC_IP_REG(NVIC_BASE_PTR,15)
#define NVICIP16                                 NVIC_IP_REG(NVIC_BASE_PTR,16)
#define NVICIP17                                 NVIC_IP_REG(NVIC_BASE_PTR,17)
#define NVICIP18                                 NVIC_IP_REG(NVIC_BASE_PTR,18)
#define NVICIP19                                 NVIC_IP_REG(NVIC_BASE_PTR,19)
#define NVICIP20                                 NVIC_IP_REG(NVIC_BASE_PTR,20)
#define NVICIP21                                 NVIC_IP_REG(NVIC_BASE_PTR,21)
#define NVICIP22                                 NVIC_IP_REG(NVIC_BASE_PTR,22)
#define NVICIP23                                 NVIC_IP_REG(NVIC_BASE_PTR,23)
#define NVICIP24                                 NVIC_IP_REG(NVIC_BASE_PTR,24)
#define NVICIP25                                 NVIC_IP_REG(NVIC_BASE_PTR,25)
#define NVICIP26                                 NVIC_IP_REG(NVIC_BASE_PTR,26)
#define NVICIP27                                 NVIC_IP_REG(NVIC_BASE_PTR,27)
#define NVICIP28                                 NVIC_IP_REG(NVIC_BASE_PTR,28)
#define NVICIP29                                 NVIC_IP_REG(NVIC_BASE_PTR,29)
#define NVICIP30                                 NVIC_IP_REG(NVIC_BASE_PTR,30)
#define NVICIP31                                 NVIC_IP_REG(NVIC_BASE_PTR,31)
#define NVICIP32                                 NVIC_IP_REG(NVIC_BASE_PTR,32)
#define NVICIP33                                 NVIC_IP_REG(NVIC_BASE_PTR,33)
#define NVICIP34                                 NVIC_IP_REG(NVIC_BASE_PTR,34)
#define NVICIP35                                 NVIC_IP_REG(NVIC_BASE_PTR,35)
#define NVICIP36                                 NVIC_IP_REG(NVIC_BASE_PTR,36)
#define NVICIP37                                 NVIC_IP_REG(NVIC_BASE_PTR,37)
#define NVICIP38                                 NVIC_IP_REG(NVIC_BASE_PTR,38)
#define NVICIP39                                 NVIC_IP_REG(NVIC_BASE_PTR,39)
#define NVICIP40                                 NVIC_IP_REG(NVIC_BASE_PTR,40)
#define NVICIP41                                 NVIC_IP_REG(NVIC_BASE_PTR,41)
#define NVICIP42                                 NVIC_IP_REG(NVIC_BASE_PTR,42)
#define NVICIP43                                 NVIC_IP_REG(NVIC_BASE_PTR,43)
#define NVICIP44                                 NVIC_IP_REG(NVIC_BASE_PTR,44)
#define NVICIP45                                 NVIC_IP_REG(NVIC_BASE_PTR,45)
#define NVICIP46                                 NVIC_IP_REG(NVIC_BASE_PTR,46)
#define NVICIP47                                 NVIC_IP_REG(NVIC_BASE_PTR,47)
#define NVICIP48                                 NVIC_IP_REG(NVIC_BASE_PTR,48)
#define NVICIP49                                 NVIC_IP_REG(NVIC_BASE_PTR,49)
#define NVICIP50                                 NVIC_IP_REG(NVIC_BASE_PTR,50)
#define NVICIP51                                 NVIC_IP_REG(NVIC_BASE_PTR,51)
#define NVICIP52                                 NVIC_IP_REG(NVIC_BASE_PTR,52)
#define NVICIP53                                 NVIC_IP_REG(NVIC_BASE_PTR,53)
#define NVICIP54                                 NVIC_IP_REG(NVIC_BASE_PTR,54)
#define NVICIP55                                 NVIC_IP_REG(NVIC_BASE_PTR,55)
#define NVICIP56                                 NVIC_IP_REG(NVIC_BASE_PTR,56)
#define NVICIP57                                 NVIC_IP_REG(NVIC_BASE_PTR,57)
#define NVICIP58                                 NVIC_IP_REG(NVIC_BASE_PTR,58)
#define NVICIP59                                 NVIC_IP_REG(NVIC_BASE_PTR,59)
#define NVICIP60                                 NVIC_IP_REG(NVIC_BASE_PTR,60)
#define NVICIP61                                 NVIC_IP_REG(NVIC_BASE_PTR,61)
#define NVICIP62                                 NVIC_IP_REG(NVIC_BASE_PTR,62)
#define NVICIP63                                 NVIC_IP_REG(NVIC_BASE_PTR,63)
#define NVICIP64                                 NVIC_IP_REG(NVIC_BASE_PTR,64)
#define NVICIP65                                 NVIC_IP_REG(NVIC_BASE_PTR,65)
#define NVICIP66                                 NVIC_IP_REG(NVIC_BASE_PTR,66)
#define NVICIP67                                 NVIC_IP_REG(NVIC_BASE_PTR,67)
#define NVICIP68                                 NVIC_IP_REG(NVIC_BASE_PTR,68)
#define NVICIP69                                 NVIC_IP_REG(NVIC_BASE_PTR,69)
#define NVICIP70                                 NVIC_IP_REG(NVIC_BASE_PTR,70)
#define NVICIP71                                 NVIC_IP_REG(NVIC_BASE_PTR,71)
#define NVICIP72                                 NVIC_IP_REG(NVIC_BASE_PTR,72)
#define NVICIP73                                 NVIC_IP_REG(NVIC_BASE_PTR,73)
#define NVICIP74                                 NVIC_IP_REG(NVIC_BASE_PTR,74)
#define NVICIP75                                 NVIC_IP_REG(NVIC_BASE_PTR,75)
#define NVICIP76                                 NVIC_IP_REG(NVIC_BASE_PTR,76)
#define NVICIP77                                 NVIC_IP_REG(NVIC_BASE_PTR,77)
#define NVICIP78                                 NVIC_IP_REG(NVIC_BASE_PTR,78)
#define NVICIP79                                 NVIC_IP_REG(NVIC_BASE_PTR,79)
#define NVICIP80                                 NVIC_IP_REG(NVIC_BASE_PTR,80)
#define NVICIP81                                 NVIC_IP_REG(NVIC_BASE_PTR,81)
#define NVICIP82                                 NVIC_IP_REG(NVIC_BASE_PTR,82)
#define NVICIP83                                 NVIC_IP_REG(NVIC_BASE_PTR,83)
#define NVICIP84                                 NVIC_IP_REG(NVIC_BASE_PTR,84)
#define NVICIP85                                 NVIC_IP_REG(NVIC_BASE_PTR,85)
#define NVICIP86                                 NVIC_IP_REG(NVIC_BASE_PTR,86)
#define NVICIP87                                 NVIC_IP_REG(NVIC_BASE_PTR,87)
#define NVICIP88                                 NVIC_IP_REG(NVIC_BASE_PTR,88)
#define NVICIP89                                 NVIC_IP_REG(NVIC_BASE_PTR,89)
#define NVICIP90                                 NVIC_IP_REG(NVIC_BASE_PTR,90)
#define NVICIP91                                 NVIC_IP_REG(NVIC_BASE_PTR,91)
#define NVICIP92                                 NVIC_IP_REG(NVIC_BASE_PTR,92)
#define NVICIP93                                 NVIC_IP_REG(NVIC_BASE_PTR,93)
#define NVICIP94                                 NVIC_IP_REG(NVIC_BASE_PTR,94)
#define NVICIP95                                 NVIC_IP_REG(NVIC_BASE_PTR,95)
#define NVICIP96                                 NVIC_IP_REG(NVIC_BASE_PTR,96)
#define NVICIP97                                 NVIC_IP_REG(NVIC_BASE_PTR,97)
#define NVICIP98                                 NVIC_IP_REG(NVIC_BASE_PTR,98)
#define NVICIP99                                 NVIC_IP_REG(NVIC_BASE_PTR,99)
#define NVICIP100                                NVIC_IP_REG(NVIC_BASE_PTR,100)
#define NVICIP101                                NVIC_IP_REG(NVIC_BASE_PTR,101)
#define NVICIP102                                NVIC_IP_REG(NVIC_BASE_PTR,102)
#define NVICIP103                                NVIC_IP_REG(NVIC_BASE_PTR,103)
#define NVICIP104                                NVIC_IP_REG(NVIC_BASE_PTR,104)
#define NVICIP105                                NVIC_IP_REG(NVIC_BASE_PTR,105)
#define NVICIP106                                NVIC_IP_REG(NVIC_BASE_PTR,106)
#define NVICIP107                                NVIC_IP_REG(NVIC_BASE_PTR,107)
#define NVICIP108                                NVIC_IP_REG(NVIC_BASE_PTR,108)
#define NVICIP109                                NVIC_IP_REG(NVIC_BASE_PTR,109)
#define NVICIP110                                NVIC_IP_REG(NVIC_BASE_PTR,110)
#define NVICIP111                                NVIC_IP_REG(NVIC_BASE_PTR,111)
#define NVICSTIR                                 NVIC_STIR_REG(NVIC_BASE_PTR,0)

/* NVIC - Register array accessors */
#define NVIC_ISER(index)                         NVIC_ISER_REG(NVIC_BASE_PTR,index)
#define NVIC_ICER(index)                         NVIC_ICER_REG(NVIC_BASE_PTR,index)
#define NVIC_ISPR(index)                         NVIC_ISPR_REG(NVIC_BASE_PTR,index)
#define NVIC_ICPR(index)                         NVIC_ICPR_REG(NVIC_BASE_PTR,index)
#define NVIC_IABR(index)                         NVIC_IABR_REG(NVIC_BASE_PTR,index)
#define NVIC_IP(index)                           NVIC_IP_REG(NVIC_BASE_PTR,index)
#define NVIC_STIR(index)                         NVIC_STIR_REG(NVIC_BASE_PTR,index)

/**
 * @}
 */ /* end of group NVIC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group NVIC_Peripheral */


/* ----------------------------------------------------------------------------
   -- OCOTP
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup OCOTP_Peripheral OCOTP
 * @{
 */

/** OCOTP - Peripheral register structure */
typedef struct OCOTP_MemMap {
  uint32_t CTRL;                                   /**< OTP Controller Control Register, offset: 0x0 */
  uint32_t CTRL_SET;                               /**< OTP Controller Control Register, offset: 0x4 */
  uint32_t CTRL_CLR;                               /**< OTP Controller Control Register, offset: 0x8 */
  uint32_t CTRL_TOG;                               /**< OTP Controller Control Register, offset: 0xC */
  uint32_t TIMING;                                 /**< OTP Controller Timing Register, offset: 0x10 */
  uint8_t RESERVED_0[12];
  uint32_t DATA;                                   /**< OTP Controller Write Data Register, offset: 0x20 */
  uint8_t RESERVED_1[12];
  uint32_t READ_CTRL;                              /**< OTP Controller Write Data Register, offset: 0x30 */
  uint8_t RESERVED_2[12];
  uint32_t READ_FUSE_DATA;                         /**< OTP Controller Read Data Register, offset: 0x40 */
  uint8_t RESERVED_3[12];
  uint32_t SW_STICKY;                              /**< Sticky bit Register, offset: 0x50 */
  uint8_t RESERVED_4[12];
  uint32_t SCS;                                    /**< Software Controllable Signals Register, offset: 0x60 */
  uint32_t SCS_SET;                                /**< Software Controllable Signals Register, offset: 0x64 */
  uint32_t SCS_CLR;                                /**< Software Controllable Signals Register, offset: 0x68 */
  uint32_t SCS_TOG;                                /**< Software Controllable Signals Register, offset: 0x6C */
  uint32_t CRC_ADDR;                               /**< OTP Controller CRC test address, offset: 0x70 */
  uint8_t RESERVED_5[12];
  uint32_t CRC_VALUE;                              /**< OTP Controller CRC Value Register, offset: 0x80 */
  uint8_t RESERVED_6[12];
  uint32_t VERSION;                                /**< OTP Controller Version Register, offset: 0x90 */
  uint8_t RESERVED_7[876];
  uint32_t LOCK;                                   /**< Value of OTP Bank0 Word0 (Lock controls), offset: 0x400 */
  uint8_t RESERVED_8[12];
  uint32_t CFG0;                                   /**< Value of OTP Bank0 Word1 (Configuration and Manufacturing Info.), offset: 0x410 */
  uint8_t RESERVED_9[12];
  uint32_t CFG1;                                   /**< Value of OTP Bank0 Word2 (Configuration and Manufacturing Info.), offset: 0x420 */
  uint8_t RESERVED_10[44];
  uint32_t CFG4;                                   /**< Value of OTP Bank0 Word5 (Configuration and Manufacturing Info.), offset: 0x450 */
  uint8_t RESERVED_11[12];
  uint32_t CFG5;                                   /**< Value of OTP Bank0 Word6 (Configuration and Manufacturing Info.), offset: 0x460 */
  uint8_t RESERVED_12[28];
  uint32_t MEM0;                                   /**< Value of OTP Bank1 Word0 (Memory Related Info.), offset: 0x480 */
  uint8_t RESERVED_13[12];
  uint32_t MEM1;                                   /**< Value of OTP Bank1 Word1 (Memory Related Info.), offset: 0x490 */
  uint8_t RESERVED_14[12];
  uint32_t MEM2;                                   /**< Value of OTP Bank1 Word2 (Memory Related Info.), offset: 0x4A0 */
  uint8_t RESERVED_15[12];
  uint32_t MEM3;                                   /**< Value of OTP Bank1 Word3 (Memory Related Info.), offset: 0x4B0 */
  uint8_t RESERVED_16[12];
  uint32_t MEM4;                                   /**< Value of OTP Bank1 Word4 (Memory Related Info.), offset: 0x4C0 */
  uint8_t RESERVED_17[12];
  uint32_t ANA0;                                   /**< Value of OTP Bank1 Word5 (Memory Related Info.), offset: 0x4D0 */
  uint8_t RESERVED_18[12];
  uint32_t ANA1;                                   /**< Value of OTP Bank1 Word6 (General Purpose Customer Defined Info.), offset: 0x4E0 */
  uint8_t RESERVED_19[12];
  uint32_t ANA2;                                   /**< Value of OTP Bank1 Word7 (General Purpose Customer Defined Info.), offset: 0x4F0 */
  uint8_t RESERVED_20[12];
  uint32_t OTPMK0;                                 /**< Shadow Register for OTP Bank2 Word0 (OTPMK and CRYPTO Key), offset: 0x500 */
  uint8_t RESERVED_21[12];
  uint32_t OTPMK1;                                 /**< Shadow Register for OTP Bank2 Word1 (OTPMK and CRYPTO Key), offset: 0x510 */
  uint8_t RESERVED_22[12];
  uint32_t OTPMK2;                                 /**< Shadow Register for OTP Bank2 Word2 (OTPMK and CRYPTO Key), offset: 0x520 */
  uint8_t RESERVED_23[12];
  uint32_t OTPMK3;                                 /**< Shadow Register for OTP Bank2 Word3 (OTPMK and CRYPTO Key), offset: 0x530 */
  uint8_t RESERVED_24[12];
  uint32_t OTPMK4;                                 /**< Shadow Register for OTP Bank2 Word4 (OTPMK Key), offset: 0x540 */
  uint8_t RESERVED_25[12];
  uint32_t OTPMK5;                                 /**< Shadow Register for OTP Bank2 Word5 (OTPMK Key), offset: 0x550 */
  uint8_t RESERVED_26[12];
  uint32_t OTPMK6;                                 /**< Shadow Register for OTP Bank2 Word6 (OTPMK Key), offset: 0x560 */
  uint8_t RESERVED_27[12];
  uint32_t OTPMK7;                                 /**< Shadow Register for OTP Bank2 Word7 (OTPMK Key), offset: 0x570 */
  uint8_t RESERVED_28[12];
  uint32_t SRK0;                                   /**< Shadow Register for OTP Bank3 Word0 (SRK Hash), offset: 0x580 */
  uint8_t RESERVED_29[12];
  uint32_t SRK1;                                   /**< Shadow Register for OTP Bank3 Word1 (SRK Hash), offset: 0x590 */
  uint8_t RESERVED_30[12];
  uint32_t SRK2;                                   /**< Shadow Register for OTP Bank3 Word2 (SRK Hash), offset: 0x5A0 */
  uint8_t RESERVED_31[12];
  uint32_t SRK3;                                   /**< Shadow Register for OTP Bank3 Word3 (SRK Hash), offset: 0x5B0 */
  uint8_t RESERVED_32[12];
  uint32_t SRK4;                                   /**< Shadow Register for OTP Bank3 Word4 (SRK Hash), offset: 0x5C0 */
  uint8_t RESERVED_33[12];
  uint32_t SRK5;                                   /**< Shadow Register for OTP Bank3 Word5 (SRK Hash), offset: 0x5D0 */
  uint8_t RESERVED_34[12];
  uint32_t SRK6;                                   /**< Shadow Register for OTP Bank3 Word6 (SRK Hash), offset: 0x5E0 */
  uint8_t RESERVED_35[12];
  uint32_t SRK7;                                   /**< Shadow Register for OTP Bank3 Word7 (SRK Hash), offset: 0x5F0 */
  uint8_t RESERVED_36[12];
  uint32_t RESP0;                                  /**< Value of OTP Bank4 Word0 (Secure JTAG Response Field), offset: 0x600 */
  uint8_t RESERVED_37[12];
  uint32_t HSJC_RESP1;                             /**< Value of OTP Bank4 Word1 (Secure JTAG Response Field), offset: 0x610 */
  uint8_t RESERVED_38[12];
  uint32_t MAC0;                                   /**< Value of OTP Bank4 Word2 (MAC Address), offset: 0x620 */
  uint8_t RESERVED_39[12];
  uint32_t MAC1;                                   /**< Value of OTP Bank4 Word3 (MAC Address), offset: 0x630 */
  uint8_t RESERVED_40[12];
  uint32_t MAC2;                                   /**< Value of OTP Bank4 Word4 (MAC Address), offset: 0x640 */
  uint8_t RESERVED_41[12];
  uint32_t MAC3;                                   /**< Value of OTP Bank4 Word5 (MAC Address), offset: 0x650 */
  uint8_t RESERVED_42[12];
  uint32_t GP1;                                    /**< Value of OTP Bank4 Word6 (HW Capabilities), offset: 0x660 */
  uint8_t RESERVED_43[12];
  uint32_t GP2;                                    /**< Value of OTP Bank4 Word7 (HW Capabilities), offset: 0x670 */
  uint8_t RESERVED_44[12];
  uint32_t CSU;                                    /**< Value of OTP Bank5 Word0, offset: 0x680 */
  uint8_t RESERVED_45[108];
  uint32_t SRK_REVOKE;                             /**< Value of OTP Bank5 Word7 (HW Capabilities), offset: 0x6F0 */
  uint8_t RESERVED_46[396];
  uint32_t TFUSE0;                                 /**< Value of OTP Bank7 Word0 (Configuration and Manufacturing Info.), offset: 0x880 */
  uint8_t RESERVED_47[12];
  uint32_t TFUSE1;                                 /**< Value of OTP Bank7 Word1 (Configuration and Manufacturing Info.), offset: 0x890 */
  uint8_t RESERVED_48[12];
  uint32_t VDD_TRIM;                               /**< Value of OTP Bank7 Word2 (Configuration and Manufacturing Info.), offset: 0x8A0 */
  uint8_t RESERVED_49[12];
  uint32_t PMUR;                                   /**< Value of OTP Bank7 Word3 (Configuration and Manufacturing Info.), offset: 0x8B0 */
  uint8_t RESERVED_50[12];
  uint32_t PMU;                                    /**< Value of OTP Bank7 Word4 (Configuration and Manufacturing Info.), offset: 0x8C0 */
  uint8_t RESERVED_51[12];
  uint32_t RNG;                                    /**< Value of OTP Bank7 Word5 (Memory Related Info.), offset: 0x8D0 */
  uint8_t RESERVED_52[12];
  uint32_t VTD_TRIM;                               /**< Value of OTP Bank7 Word6 (Memory Related Info.), offset: 0x8E0 */
  uint8_t RESERVED_53[12];
  uint32_t VTMON;                                  /**< Value of OTP Bank7 Word7 (Memory Related Info.), offset: 0x8F0 */
  uint8_t RESERVED_54[908];
  uint32_t CRC0;                                   /**< Value of OTP Bank15 Word0, offset: 0xC80 */
  uint8_t RESERVED_55[12];
  uint32_t CRC1;                                   /**< Value of OTP Bank15 Word1, offset: 0xC90 */
  uint8_t RESERVED_56[12];
  uint32_t CRC2;                                   /**< Value of OTP Bank15 Word2, offset: 0xCA0 */
  uint8_t RESERVED_57[12];
  uint32_t CRC3;                                   /**< Value of OTP Bank15 Word3, offset: 0xCB0 */
  uint8_t RESERVED_58[12];
  uint32_t CRC4;                                   /**< Value of OTP Bank15 Word4, offset: 0xCC0 */
  uint8_t RESERVED_59[12];
  uint32_t CRC5;                                   /**< Value of OTP Bank15 Word5, offset: 0xCD0 */
  uint8_t RESERVED_60[12];
  uint32_t CRC6;                                   /**< Value of OTP Bank15 Word6, offset: 0xCE0 */
  uint8_t RESERVED_61[12];
  uint32_t CRC7;                                   /**< Value of OTP Bank15 Word7, offset: 0xCF0 */
} volatile *OCOTP_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- OCOTP - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup OCOTP_Register_Accessor_Macros OCOTP - Register accessor macros
 * @{
 */


/* OCOTP - Register accessors */
#define OCOTP_CTRL_REG(base)                     ((base)->CTRL)
#define OCOTP_CTRL_SET_REG(base)                 ((base)->CTRL_SET)
#define OCOTP_CTRL_CLR_REG(base)                 ((base)->CTRL_CLR)
#define OCOTP_CTRL_TOG_REG(base)                 ((base)->CTRL_TOG)
#define OCOTP_TIMING_REG(base)                   ((base)->TIMING)
#define OCOTP_DATA_REG(base)                     ((base)->DATA)
#define OCOTP_READ_CTRL_REG(base)                ((base)->READ_CTRL)
#define OCOTP_READ_FUSE_DATA_REG(base)           ((base)->READ_FUSE_DATA)
#define OCOTP_SW_STICKY_REG(base)                ((base)->SW_STICKY)
#define OCOTP_SCS_REG(base)                      ((base)->SCS)
#define OCOTP_SCS_SET_REG(base)                  ((base)->SCS_SET)
#define OCOTP_SCS_CLR_REG(base)                  ((base)->SCS_CLR)
#define OCOTP_SCS_TOG_REG(base)                  ((base)->SCS_TOG)
#define OCOTP_CRC_ADDR_REG(base)                 ((base)->CRC_ADDR)
#define OCOTP_CRC_VALUE_REG(base)                ((base)->CRC_VALUE)
#define OCOTP_VERSION_REG(base)                  ((base)->VERSION)
#define OCOTP_LOCK_REG(base)                     ((base)->LOCK)
#define OCOTP_CFG0_REG(base)                     ((base)->CFG0)
#define OCOTP_CFG1_REG(base)                     ((base)->CFG1)
#define OCOTP_CFG4_REG(base)                     ((base)->CFG4)
#define OCOTP_CFG5_REG(base)                     ((base)->CFG5)
#define OCOTP_MEM0_REG(base)                     ((base)->MEM0)
#define OCOTP_MEM1_REG(base)                     ((base)->MEM1)
#define OCOTP_MEM2_REG(base)                     ((base)->MEM2)
#define OCOTP_MEM3_REG(base)                     ((base)->MEM3)
#define OCOTP_MEM4_REG(base)                     ((base)->MEM4)
#define OCOTP_ANA0_REG(base)                     ((base)->ANA0)
#define OCOTP_ANA1_REG(base)                     ((base)->ANA1)
#define OCOTP_ANA2_REG(base)                     ((base)->ANA2)
#define OCOTP_OTPMK0_REG(base)                   ((base)->OTPMK0)
#define OCOTP_OTPMK1_REG(base)                   ((base)->OTPMK1)
#define OCOTP_OTPMK2_REG(base)                   ((base)->OTPMK2)
#define OCOTP_OTPMK3_REG(base)                   ((base)->OTPMK3)
#define OCOTP_OTPMK4_REG(base)                   ((base)->OTPMK4)
#define OCOTP_OTPMK5_REG(base)                   ((base)->OTPMK5)
#define OCOTP_OTPMK6_REG(base)                   ((base)->OTPMK6)
#define OCOTP_OTPMK7_REG(base)                   ((base)->OTPMK7)
#define OCOTP_SRK0_REG(base)                     ((base)->SRK0)
#define OCOTP_SRK1_REG(base)                     ((base)->SRK1)
#define OCOTP_SRK2_REG(base)                     ((base)->SRK2)
#define OCOTP_SRK3_REG(base)                     ((base)->SRK3)
#define OCOTP_SRK4_REG(base)                     ((base)->SRK4)
#define OCOTP_SRK5_REG(base)                     ((base)->SRK5)
#define OCOTP_SRK6_REG(base)                     ((base)->SRK6)
#define OCOTP_SRK7_REG(base)                     ((base)->SRK7)
#define OCOTP_RESP0_REG(base)                    ((base)->RESP0)
#define OCOTP_HSJC_RESP1_REG(base)               ((base)->HSJC_RESP1)
#define OCOTP_MAC0_REG(base)                     ((base)->MAC0)
#define OCOTP_MAC1_REG(base)                     ((base)->MAC1)
#define OCOTP_MAC2_REG(base)                     ((base)->MAC2)
#define OCOTP_MAC3_REG(base)                     ((base)->MAC3)
#define OCOTP_GP1_REG(base)                      ((base)->GP1)
#define OCOTP_GP2_REG(base)                      ((base)->GP2)
#define OCOTP_CSU_REG(base)                      ((base)->CSU)
#define OCOTP_SRK_REVOKE_REG(base)               ((base)->SRK_REVOKE)
#define OCOTP_TFUSE0_REG(base)                   ((base)->TFUSE0)
#define OCOTP_TFUSE1_REG(base)                   ((base)->TFUSE1)
#define OCOTP_VDD_TRIM_REG(base)                 ((base)->VDD_TRIM)
#define OCOTP_PMUR_REG(base)                     ((base)->PMUR)
#define OCOTP_PMU_REG(base)                      ((base)->PMU)
#define OCOTP_RNG_REG(base)                      ((base)->RNG)
#define OCOTP_VTD_TRIM_REG(base)                 ((base)->VTD_TRIM)
#define OCOTP_VTMON_REG(base)                    ((base)->VTMON)
#define OCOTP_CRC0_REG(base)                     ((base)->CRC0)
#define OCOTP_CRC1_REG(base)                     ((base)->CRC1)
#define OCOTP_CRC2_REG(base)                     ((base)->CRC2)
#define OCOTP_CRC3_REG(base)                     ((base)->CRC3)
#define OCOTP_CRC4_REG(base)                     ((base)->CRC4)
#define OCOTP_CRC5_REG(base)                     ((base)->CRC5)
#define OCOTP_CRC6_REG(base)                     ((base)->CRC6)
#define OCOTP_CRC7_REG(base)                     ((base)->CRC7)

/**
 * @}
 */ /* end of group OCOTP_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- OCOTP Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup OCOTP_Register_Masks OCOTP Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define OCOTP_CTRL_ADDR_MASK                     0x7Fu
#define OCOTP_CTRL_ADDR_SHIFT                    0
#define OCOTP_CTRL_ADDR(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_ADDR_SHIFT))&OCOTP_CTRL_ADDR_MASK)
#define OCOTP_CTRL_BUSY_MASK                     0x100u
#define OCOTP_CTRL_BUSY_SHIFT                    8
#define OCOTP_CTRL_ERROR_MASK                    0x200u
#define OCOTP_CTRL_ERROR_SHIFT                   9
#define OCOTP_CTRL_RELOAD_SHADOWS_MASK           0x400u
#define OCOTP_CTRL_RELOAD_SHADOWS_SHIFT          10
#define OCOTP_CTRL_CRC_TEST_MASK                 0x800u
#define OCOTP_CTRL_CRC_TEST_SHIFT                11
#define OCOTP_CTRL_CRC_FAIL_MASK                 0x1000u
#define OCOTP_CTRL_CRC_FAIL_SHIFT                12
#define OCOTP_CTRL_WR_UNLOCK_MASK                0xFFFF0000u
#define OCOTP_CTRL_WR_UNLOCK_SHIFT               16
#define OCOTP_CTRL_WR_UNLOCK(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_WR_UNLOCK_SHIFT))&OCOTP_CTRL_WR_UNLOCK_MASK)
/* CTRL_SET Bit Fields */
#define OCOTP_CTRL_SET_ADDR_MASK                 0x7Fu
#define OCOTP_CTRL_SET_ADDR_SHIFT                0
#define OCOTP_CTRL_SET_ADDR(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_SET_ADDR_SHIFT))&OCOTP_CTRL_SET_ADDR_MASK)
#define OCOTP_CTRL_SET_BUSY_MASK                 0x100u
#define OCOTP_CTRL_SET_BUSY_SHIFT                8
#define OCOTP_CTRL_SET_ERROR_MASK                0x200u
#define OCOTP_CTRL_SET_ERROR_SHIFT               9
#define OCOTP_CTRL_SET_RELOAD_SHADOWS_MASK       0x400u
#define OCOTP_CTRL_SET_RELOAD_SHADOWS_SHIFT      10
#define OCOTP_CTRL_SET_CRC_TEST_MASK             0x800u
#define OCOTP_CTRL_SET_CRC_TEST_SHIFT            11
#define OCOTP_CTRL_SET_CRC_FAIL_MASK             0x1000u
#define OCOTP_CTRL_SET_CRC_FAIL_SHIFT            12
#define OCOTP_CTRL_SET_WR_UNLOCK_MASK            0xFFFF0000u
#define OCOTP_CTRL_SET_WR_UNLOCK_SHIFT           16
#define OCOTP_CTRL_SET_WR_UNLOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_SET_WR_UNLOCK_SHIFT))&OCOTP_CTRL_SET_WR_UNLOCK_MASK)
/* CTRL_CLR Bit Fields */
#define OCOTP_CTRL_CLR_ADDR_MASK                 0x7Fu
#define OCOTP_CTRL_CLR_ADDR_SHIFT                0
#define OCOTP_CTRL_CLR_ADDR(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_CLR_ADDR_SHIFT))&OCOTP_CTRL_CLR_ADDR_MASK)
#define OCOTP_CTRL_CLR_BUSY_MASK                 0x100u
#define OCOTP_CTRL_CLR_BUSY_SHIFT                8
#define OCOTP_CTRL_CLR_ERROR_MASK                0x200u
#define OCOTP_CTRL_CLR_ERROR_SHIFT               9
#define OCOTP_CTRL_CLR_RELOAD_SHADOWS_MASK       0x400u
#define OCOTP_CTRL_CLR_RELOAD_SHADOWS_SHIFT      10
#define OCOTP_CTRL_CLR_CRC_TEST_MASK             0x800u
#define OCOTP_CTRL_CLR_CRC_TEST_SHIFT            11
#define OCOTP_CTRL_CLR_CRC_FAIL_MASK             0x1000u
#define OCOTP_CTRL_CLR_CRC_FAIL_SHIFT            12
#define OCOTP_CTRL_CLR_WR_UNLOCK_MASK            0xFFFF0000u
#define OCOTP_CTRL_CLR_WR_UNLOCK_SHIFT           16
#define OCOTP_CTRL_CLR_WR_UNLOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_CLR_WR_UNLOCK_SHIFT))&OCOTP_CTRL_CLR_WR_UNLOCK_MASK)
/* CTRL_TOG Bit Fields */
#define OCOTP_CTRL_TOG_ADDR_MASK                 0x7Fu
#define OCOTP_CTRL_TOG_ADDR_SHIFT                0
#define OCOTP_CTRL_TOG_ADDR(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_TOG_ADDR_SHIFT))&OCOTP_CTRL_TOG_ADDR_MASK)
#define OCOTP_CTRL_TOG_BUSY_MASK                 0x100u
#define OCOTP_CTRL_TOG_BUSY_SHIFT                8
#define OCOTP_CTRL_TOG_ERROR_MASK                0x200u
#define OCOTP_CTRL_TOG_ERROR_SHIFT               9
#define OCOTP_CTRL_TOG_RELOAD_SHADOWS_MASK       0x400u
#define OCOTP_CTRL_TOG_RELOAD_SHADOWS_SHIFT      10
#define OCOTP_CTRL_TOG_CRC_TEST_MASK             0x800u
#define OCOTP_CTRL_TOG_CRC_TEST_SHIFT            11
#define OCOTP_CTRL_TOG_CRC_FAIL_MASK             0x1000u
#define OCOTP_CTRL_TOG_CRC_FAIL_SHIFT            12
#define OCOTP_CTRL_TOG_WR_UNLOCK_MASK            0xFFFF0000u
#define OCOTP_CTRL_TOG_WR_UNLOCK_SHIFT           16
#define OCOTP_CTRL_TOG_WR_UNLOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_CTRL_TOG_WR_UNLOCK_SHIFT))&OCOTP_CTRL_TOG_WR_UNLOCK_MASK)
/* TIMING Bit Fields */
#define OCOTP_TIMING_STROBE_PROG_MASK            0xFFFu
#define OCOTP_TIMING_STROBE_PROG_SHIFT           0
#define OCOTP_TIMING_STROBE_PROG(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_TIMING_STROBE_PROG_SHIFT))&OCOTP_TIMING_STROBE_PROG_MASK)
#define OCOTP_TIMING_RELAX_MASK                  0xF000u
#define OCOTP_TIMING_RELAX_SHIFT                 12
#define OCOTP_TIMING_RELAX(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_TIMING_RELAX_SHIFT))&OCOTP_TIMING_RELAX_MASK)
#define OCOTP_TIMING_STROBE_READ_MASK            0x3F0000u
#define OCOTP_TIMING_STROBE_READ_SHIFT           16
#define OCOTP_TIMING_STROBE_READ(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_TIMING_STROBE_READ_SHIFT))&OCOTP_TIMING_STROBE_READ_MASK)
#define OCOTP_TIMING_WAIT_MASK                   0xFC00000u
#define OCOTP_TIMING_WAIT_SHIFT                  22
#define OCOTP_TIMING_WAIT(x)                     (((uint32_t)(((uint32_t)(x))<<OCOTP_TIMING_WAIT_SHIFT))&OCOTP_TIMING_WAIT_MASK)
/* DATA Bit Fields */
#define OCOTP_DATA_DATA_MASK                     0xFFFFFFFFu
#define OCOTP_DATA_DATA_SHIFT                    0
#define OCOTP_DATA_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_DATA_DATA_SHIFT))&OCOTP_DATA_DATA_MASK)
/* READ_CTRL Bit Fields */
#define OCOTP_READ_CTRL_READ_FUSE_MASK           0x1u
#define OCOTP_READ_CTRL_READ_FUSE_SHIFT          0
/* READ_FUSE_DATA Bit Fields */
#define OCOTP_READ_FUSE_DATA_DATA_MASK           0xFFFFFFFFu
#define OCOTP_READ_FUSE_DATA_DATA_SHIFT          0
#define OCOTP_READ_FUSE_DATA_DATA(x)             (((uint32_t)(((uint32_t)(x))<<OCOTP_READ_FUSE_DATA_DATA_SHIFT))&OCOTP_READ_FUSE_DATA_DATA_MASK)
/* SW_STICKY Bit Fields */
#define OCOTP_SW_STICKY_SRK_REVOKE_LOCK_MASK     0x2u
#define OCOTP_SW_STICKY_SRK_REVOKE_LOCK_SHIFT    1
#define OCOTP_SW_STICKY_FIELD_RETURN_LOCK_MASK   0x4u
#define OCOTP_SW_STICKY_FIELD_RETURN_LOCK_SHIFT  2
#define OCOTP_SW_STICKY_BLOCK_ROM_PART_MASK      0x8u
#define OCOTP_SW_STICKY_BLOCK_ROM_PART_SHIFT     3
#define OCOTP_SW_STICKY_JTAG_BLOCK_RELEASE_MASK  0x10u
#define OCOTP_SW_STICKY_JTAG_BLOCK_RELEASE_SHIFT 4
/* SCS Bit Fields */
#define OCOTP_SCS_HAB_JDE_MASK                   0x1u
#define OCOTP_SCS_HAB_JDE_SHIFT                  0
#define OCOTP_SCS_SPARE_MASK                     0x7FFFFFFEu
#define OCOTP_SCS_SPARE_SHIFT                    1
#define OCOTP_SCS_SPARE(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SCS_SPARE_SHIFT))&OCOTP_SCS_SPARE_MASK)
#define OCOTP_SCS_LOCK_MASK                      0x80000000u
#define OCOTP_SCS_LOCK_SHIFT                     31
/* SCS_SET Bit Fields */
#define OCOTP_SCS_SET_HAB_JDE_MASK               0x1u
#define OCOTP_SCS_SET_HAB_JDE_SHIFT              0
#define OCOTP_SCS_SET_SPARE_MASK                 0x7FFFFFFEu
#define OCOTP_SCS_SET_SPARE_SHIFT                1
#define OCOTP_SCS_SET_SPARE(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_SCS_SET_SPARE_SHIFT))&OCOTP_SCS_SET_SPARE_MASK)
#define OCOTP_SCS_SET_LOCK_MASK                  0x80000000u
#define OCOTP_SCS_SET_LOCK_SHIFT                 31
/* SCS_CLR Bit Fields */
#define OCOTP_SCS_CLR_HAB_JDE_MASK               0x1u
#define OCOTP_SCS_CLR_HAB_JDE_SHIFT              0
#define OCOTP_SCS_CLR_SPARE_MASK                 0x7FFFFFFEu
#define OCOTP_SCS_CLR_SPARE_SHIFT                1
#define OCOTP_SCS_CLR_SPARE(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_SCS_CLR_SPARE_SHIFT))&OCOTP_SCS_CLR_SPARE_MASK)
#define OCOTP_SCS_CLR_LOCK_MASK                  0x80000000u
#define OCOTP_SCS_CLR_LOCK_SHIFT                 31
/* SCS_TOG Bit Fields */
#define OCOTP_SCS_TOG_HAB_JDE_MASK               0x1u
#define OCOTP_SCS_TOG_HAB_JDE_SHIFT              0
#define OCOTP_SCS_TOG_SPARE_MASK                 0x7FFFFFFEu
#define OCOTP_SCS_TOG_SPARE_SHIFT                1
#define OCOTP_SCS_TOG_SPARE(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_SCS_TOG_SPARE_SHIFT))&OCOTP_SCS_TOG_SPARE_MASK)
#define OCOTP_SCS_TOG_LOCK_MASK                  0x80000000u
#define OCOTP_SCS_TOG_LOCK_SHIFT                 31
/* CRC_ADDR Bit Fields */
#define OCOTP_CRC_ADDR_DATA_START_ADDR_MASK      0xFFu
#define OCOTP_CRC_ADDR_DATA_START_ADDR_SHIFT     0
#define OCOTP_CRC_ADDR_DATA_START_ADDR(x)        (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC_ADDR_DATA_START_ADDR_SHIFT))&OCOTP_CRC_ADDR_DATA_START_ADDR_MASK)
#define OCOTP_CRC_ADDR_DATA_END_ADDR_MASK        0xFF00u
#define OCOTP_CRC_ADDR_DATA_END_ADDR_SHIFT       8
#define OCOTP_CRC_ADDR_DATA_END_ADDR(x)          (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC_ADDR_DATA_END_ADDR_SHIFT))&OCOTP_CRC_ADDR_DATA_END_ADDR_MASK)
#define OCOTP_CRC_ADDR_CRC_ADDR_MASK             0x70000u
#define OCOTP_CRC_ADDR_CRC_ADDR_SHIFT            16
#define OCOTP_CRC_ADDR_CRC_ADDR(x)               (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC_ADDR_CRC_ADDR_SHIFT))&OCOTP_CRC_ADDR_CRC_ADDR_MASK)
/* CRC_VALUE Bit Fields */
#define OCOTP_CRC_VALUE_DATA_MASK                0xFFFFFFFFu
#define OCOTP_CRC_VALUE_DATA_SHIFT               0
#define OCOTP_CRC_VALUE_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC_VALUE_DATA_SHIFT))&OCOTP_CRC_VALUE_DATA_MASK)
/* VERSION Bit Fields */
#define OCOTP_VERSION_STEP_MASK                  0xFFFFu
#define OCOTP_VERSION_STEP_SHIFT                 0
#define OCOTP_VERSION_STEP(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_VERSION_STEP_SHIFT))&OCOTP_VERSION_STEP_MASK)
#define OCOTP_VERSION_MINOR_MASK                 0xFF0000u
#define OCOTP_VERSION_MINOR_SHIFT                16
#define OCOTP_VERSION_MINOR(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_VERSION_MINOR_SHIFT))&OCOTP_VERSION_MINOR_MASK)
#define OCOTP_VERSION_MAJOR_MASK                 0xFF000000u
#define OCOTP_VERSION_MAJOR_SHIFT                24
#define OCOTP_VERSION_MAJOR(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_VERSION_MAJOR_SHIFT))&OCOTP_VERSION_MAJOR_MASK)
/* LOCK Bit Fields */
#define OCOTP_LOCK_TESTER_LOCK_MASK              0x3u
#define OCOTP_LOCK_TESTER_LOCK_SHIFT             0
#define OCOTP_LOCK_TESTER_LOCK(x)                (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_TESTER_LOCK_SHIFT))&OCOTP_LOCK_TESTER_LOCK_MASK)
#define OCOTP_LOCK_BOOT_CFG_LOCK_MASK            0xCu
#define OCOTP_LOCK_BOOT_CFG_LOCK_SHIFT           2
#define OCOTP_LOCK_BOOT_CFG_LOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_BOOT_CFG_LOCK_SHIFT))&OCOTP_LOCK_BOOT_CFG_LOCK_MASK)
#define OCOTP_LOCK_MEM_TRIM_LOCK_MASK            0x30u
#define OCOTP_LOCK_MEM_TRIM_LOCK_SHIFT           4
#define OCOTP_LOCK_MEM_TRIM_LOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_MEM_TRIM_LOCK_SHIFT))&OCOTP_LOCK_MEM_TRIM_LOCK_MASK)
#define OCOTP_LOCK_SJC_RESP_LOCK_MASK            0x40u
#define OCOTP_LOCK_SJC_RESP_LOCK_SHIFT           6
#define OCOTP_LOCK_MAC_ADDR_LOCK_MASK            0x300u
#define OCOTP_LOCK_MAC_ADDR_LOCK_SHIFT           8
#define OCOTP_LOCK_MAC_ADDR_LOCK(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_MAC_ADDR_LOCK_SHIFT))&OCOTP_LOCK_MAC_ADDR_LOCK_MASK)
#define OCOTP_LOCK_GP1_LOCK_MASK                 0xC00u
#define OCOTP_LOCK_GP1_LOCK_SHIFT                10
#define OCOTP_LOCK_GP1_LOCK(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_GP1_LOCK_SHIFT))&OCOTP_LOCK_GP1_LOCK_MASK)
#define OCOTP_LOCK_GP2_LOCK_MASK                 0x3000u
#define OCOTP_LOCK_GP2_LOCK_SHIFT                12
#define OCOTP_LOCK_GP2_LOCK(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_GP2_LOCK_SHIFT))&OCOTP_LOCK_GP2_LOCK_MASK)
#define OCOTP_LOCK_SRK_LOCK_MASK                 0x4000u
#define OCOTP_LOCK_SRK_LOCK_SHIFT                14
#define OCOTP_LOCK_OTPMK_LOCK_MASK               0x20000u
#define OCOTP_LOCK_OTPMK_LOCK_SHIFT              17
#define OCOTP_LOCK_ANALOG_LOCK_MASK              0xC0000u
#define OCOTP_LOCK_ANALOG_LOCK_SHIFT             18
#define OCOTP_LOCK_ANALOG_LOCK(x)                (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_ANALOG_LOCK_SHIFT))&OCOTP_LOCK_ANALOG_LOCK_MASK)
#define OCOTP_LOCK_PMU_LOCK_MASK                 0x300000u
#define OCOTP_LOCK_PMU_LOCK_SHIFT                20
#define OCOTP_LOCK_PMU_LOCK(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_PMU_LOCK_SHIFT))&OCOTP_LOCK_PMU_LOCK_MASK)
#define OCOTP_LOCK_MISC_CONF_LOCK_MASK           0x400000u
#define OCOTP_LOCK_MISC_CONF_LOCK_SHIFT          22
#define OCOTP_LOCK_CRC_GP_LO_LOCK_MASK           0xC000000u
#define OCOTP_LOCK_CRC_GP_LO_LOCK_SHIFT          26
#define OCOTP_LOCK_CRC_GP_LO_LOCK(x)             (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_CRC_GP_LO_LOCK_SHIFT))&OCOTP_LOCK_CRC_GP_LO_LOCK_MASK)
#define OCOTP_LOCK_CRC_GP_HI_LOCK_MASK           0x30000000u
#define OCOTP_LOCK_CRC_GP_HI_LOCK_SHIFT          28
#define OCOTP_LOCK_CRC_GP_HI_LOCK(x)             (((uint32_t)(((uint32_t)(x))<<OCOTP_LOCK_CRC_GP_HI_LOCK_SHIFT))&OCOTP_LOCK_CRC_GP_HI_LOCK_MASK)
/* CFG0 Bit Fields */
#define OCOTP_CFG0_SJC_CHALL_MASK                0xFFFFFFFFu
#define OCOTP_CFG0_SJC_CHALL_SHIFT               0
#define OCOTP_CFG0_SJC_CHALL(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG0_SJC_CHALL_SHIFT))&OCOTP_CFG0_SJC_CHALL_MASK)
/* CFG1 Bit Fields */
#define OCOTP_CFG1_SJC_CHALL_MASK                0xFFFFFFFFu
#define OCOTP_CFG1_SJC_CHALL_SHIFT               0
#define OCOTP_CFG1_SJC_CHALL(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG1_SJC_CHALL_SHIFT))&OCOTP_CFG1_SJC_CHALL_MASK)
/* CFG4 Bit Fields */
#define OCOTP_CFG4_BOOT_CFG1_MASK                0xFFu
#define OCOTP_CFG4_BOOT_CFG1_SHIFT               0
#define OCOTP_CFG4_BOOT_CFG1(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG4_BOOT_CFG1_SHIFT))&OCOTP_CFG4_BOOT_CFG1_MASK)
#define OCOTP_CFG4_BOOT_CFG2_MASK                0xFF00u
#define OCOTP_CFG4_BOOT_CFG2_SHIFT               8
#define OCOTP_CFG4_BOOT_CFG2(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG4_BOOT_CFG2_SHIFT))&OCOTP_CFG4_BOOT_CFG2_MASK)
#define OCOTP_CFG4_BOOT_CFG3_MASK                0xFF0000u
#define OCOTP_CFG4_BOOT_CFG3_SHIFT               16
#define OCOTP_CFG4_BOOT_CFG3(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG4_BOOT_CFG3_SHIFT))&OCOTP_CFG4_BOOT_CFG3_MASK)
#define OCOTP_CFG4_BOOT_CFG4_MASK                0xFF000000u
#define OCOTP_CFG4_BOOT_CFG4_SHIFT               24
#define OCOTP_CFG4_BOOT_CFG4(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG4_BOOT_CFG4_SHIFT))&OCOTP_CFG4_BOOT_CFG4_MASK)
/* CFG5 Bit Fields */
#define OCOTP_CFG5_SEC_CONFIG_MASK               0x2u
#define OCOTP_CFG5_SEC_CONFIG_SHIFT              1
#define OCOTP_CFG5_DIR_BT_DIS_MASK               0x8u
#define OCOTP_CFG5_DIR_BT_DIS_SHIFT              3
#define OCOTP_CFG5_BT_FUSE_SEL_MASK              0x10u
#define OCOTP_CFG5_BT_FUSE_SEL_SHIFT             4
#define OCOTP_CFG5_CSU_ALARM_DISABLE_MASK        0x80000u
#define OCOTP_CFG5_CSU_ALARM_DISABLE_SHIFT       19
#define OCOTP_CFG5_SJC_DISABLE_MASK              0x100000u
#define OCOTP_CFG5_SJC_DISABLE_SHIFT             20
#define OCOTP_CFG5_WDOG_ENABLE_MASK              0x200000u
#define OCOTP_CFG5_WDOG_ENABLE_SHIFT             21
#define OCOTP_CFG5_JTAG_SMODE_MASK               0xC00000u
#define OCOTP_CFG5_JTAG_SMODE_SHIFT              22
#define OCOTP_CFG5_JTAG_SMODE(x)                 (((uint32_t)(((uint32_t)(x))<<OCOTP_CFG5_JTAG_SMODE_SHIFT))&OCOTP_CFG5_JTAG_SMODE_MASK)
#define OCOTP_CFG5_KTE_MASK                      0x4000000u
#define OCOTP_CFG5_KTE_SHIFT                     26
#define OCOTP_CFG5_JTAG_HEO_MASK                 0x8000000u
#define OCOTP_CFG5_JTAG_HEO_SHIFT                27
/* MEM0 Bit Fields */
#define OCOTP_MEM0_IRC_128K_TRIM_MASK            0xFFFFu
#define OCOTP_MEM0_IRC_128K_TRIM_SHIFT           0
#define OCOTP_MEM0_IRC_128K_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM0_IRC_128K_TRIM_SHIFT))&OCOTP_MEM0_IRC_128K_TRIM_MASK)
#define OCOTP_MEM0_IRC_24M_TRIM_MASK             0xFFFF0000u
#define OCOTP_MEM0_IRC_24M_TRIM_SHIFT            16
#define OCOTP_MEM0_IRC_24M_TRIM(x)               (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM0_IRC_24M_TRIM_SHIFT))&OCOTP_MEM0_IRC_24M_TRIM_MASK)
/* MEM1 Bit Fields */
#define OCOTP_MEM1_PTC_VER_MASK                  0x7u
#define OCOTP_MEM1_PTC_VER_SHIFT                 0
#define OCOTP_MEM1_PTC_VER(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_PTC_VER_SHIFT))&OCOTP_MEM1_PTC_VER_MASK)
#define OCOTP_MEM1_LVDS_BG_V_MASK                0x38u
#define OCOTP_MEM1_LVDS_BG_V_SHIFT               3
#define OCOTP_MEM1_LVDS_BG_V(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_LVDS_BG_V_SHIFT))&OCOTP_MEM1_LVDS_BG_V_MASK)
#define OCOTP_MEM1_DVFS_DELAY_ADJUST_MASK        0xFF00u
#define OCOTP_MEM1_DVFS_DELAY_ADJUST_SHIFT       8
#define OCOTP_MEM1_DVFS_DELAY_ADJUST(x)          (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_DVFS_DELAY_ADJUST_SHIFT))&OCOTP_MEM1_DVFS_DELAY_ADJUST_MASK)
#define OCOTP_MEM1_L1I_TCS1_MASK                 0x70000u
#define OCOTP_MEM1_L1I_TCS1_SHIFT                16
#define OCOTP_MEM1_L1I_TCS1(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_L1I_TCS1_SHIFT))&OCOTP_MEM1_L1I_TCS1_MASK)
#define OCOTP_MEM1_L1D_TCH_MASK                  0x380000u
#define OCOTP_MEM1_L1D_TCH_SHIFT                 19
#define OCOTP_MEM1_L1D_TCH(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_L1D_TCH_SHIFT))&OCOTP_MEM1_L1D_TCH_MASK)
#define OCOTP_MEM1_L1I_TCS2_MASK                 0x7000000u
#define OCOTP_MEM1_L1I_TCS2_SHIFT                24
#define OCOTP_MEM1_L1I_TCS2(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_L1I_TCS2_SHIFT))&OCOTP_MEM1_L1I_TCS2_MASK)
#define OCOTP_MEM1_L1I_TCH_MASK                  0x38000000u
#define OCOTP_MEM1_L1I_TCH_SHIFT                 27
#define OCOTP_MEM1_L1I_TCH(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_L1I_TCH_SHIFT))&OCOTP_MEM1_L1I_TCH_MASK)
#define OCOTP_MEM1_TLB_TC_MASK                   0xC0000000u
#define OCOTP_MEM1_TLB_TC_SHIFT                  30
#define OCOTP_MEM1_TLB_TC(x)                     (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM1_TLB_TC_SHIFT))&OCOTP_MEM1_TLB_TC_MASK)
/* MEM2 Bit Fields */
#define OCOTP_MEM2_MANU2_MASK                    0xFFu
#define OCOTP_MEM2_MANU2_SHIFT                   0
#define OCOTP_MEM2_MANU2(x)                      (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM2_MANU2_SHIFT))&OCOTP_MEM2_MANU2_MASK)
#define OCOTP_MEM2_SMS_MASK                      0xFFFFFF00u
#define OCOTP_MEM2_SMS_SHIFT                     8
#define OCOTP_MEM2_SMS(x)                        (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM2_SMS_SHIFT))&OCOTP_MEM2_SMS_MASK)
/* MEM3 Bit Fields */
#define OCOTP_MEM3_SMS_MASK                      0xFFFFFFFFu
#define OCOTP_MEM3_SMS_SHIFT                     0
#define OCOTP_MEM3_SMS(x)                        (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM3_SMS_SHIFT))&OCOTP_MEM3_SMS_MASK)
/* MEM4 Bit Fields */
#define OCOTP_MEM4_SMS_MASK                      0xFFFFFFFFu
#define OCOTP_MEM4_SMS_SHIFT                     0
#define OCOTP_MEM4_SMS(x)                        (((uint32_t)(((uint32_t)(x))<<OCOTP_MEM4_SMS_SHIFT))&OCOTP_MEM4_SMS_MASK)
/* ANA0 Bit Fields */
#define OCOTP_ANA0_REFTOP_VBGADJ_MASK            0x7u
#define OCOTP_ANA0_REFTOP_VBGADJ_SHIFT           0
#define OCOTP_ANA0_REFTOP_VBGADJ(x)              (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA0_REFTOP_VBGADJ_SHIFT))&OCOTP_ANA0_REFTOP_VBGADJ_MASK)
#define OCOTP_ANA0_REFTOP_BIAS_TST_MASK          0x18u
#define OCOTP_ANA0_REFTOP_BIAS_TST_SHIFT         3
#define OCOTP_ANA0_REFTOP_BIAS_TST(x)            (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA0_REFTOP_BIAS_TST_SHIFT))&OCOTP_ANA0_REFTOP_BIAS_TST_MASK)
#define OCOTP_ANA0_1P1_REG_OUT_TRG_MASK          0x1F00u
#define OCOTP_ANA0_1P1_REG_OUT_TRG_SHIFT         8
#define OCOTP_ANA0_1P1_REG_OUT_TRG(x)            (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA0_1P1_REG_OUT_TRG_SHIFT))&OCOTP_ANA0_1P1_REG_OUT_TRG_MASK)
#define OCOTP_ANA0_2P5_REG_OUT_TRG_MASK          0x1F0000u
#define OCOTP_ANA0_2P5_REG_OUT_TRG_SHIFT         16
#define OCOTP_ANA0_2P5_REG_OUT_TRG(x)            (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA0_2P5_REG_OUT_TRG_SHIFT))&OCOTP_ANA0_2P5_REG_OUT_TRG_MASK)
#define OCOTP_ANA0_3P_REG_OUT_TRG_MASK           0x1F000000u
#define OCOTP_ANA0_3P_REG_OUT_TRG_SHIFT          24
#define OCOTP_ANA0_3P_REG_OUT_TRG(x)             (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA0_3P_REG_OUT_TRG_SHIFT))&OCOTP_ANA0_3P_REG_OUT_TRG_MASK)
/* ANA1 Bit Fields */
#define OCOTP_ANA1_ANALOG_TEMP_SENSE_MASK        0xFFFFFFFFu
#define OCOTP_ANA1_ANALOG_TEMP_SENSE_SHIFT       0
#define OCOTP_ANA1_ANALOG_TEMP_SENSE(x)          (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA1_ANALOG_TEMP_SENSE_SHIFT))&OCOTP_ANA1_ANALOG_TEMP_SENSE_MASK)
/* ANA2 Bit Fields */
#define OCOTP_ANA2_USB_VID_MASK                  0xFFFFu
#define OCOTP_ANA2_USB_VID_SHIFT                 0
#define OCOTP_ANA2_USB_VID(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA2_USB_VID_SHIFT))&OCOTP_ANA2_USB_VID_MASK)
#define OCOTP_ANA2_USB0_PID_MASK                 0xFFFF0000u
#define OCOTP_ANA2_USB0_PID_SHIFT                16
#define OCOTP_ANA2_USB0_PID(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_ANA2_USB0_PID_SHIFT))&OCOTP_ANA2_USB0_PID_MASK)
/* OTPMK0 Bit Fields */
#define OCOTP_OTPMK0_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK0_OTPMK_SHIFT                 0
#define OCOTP_OTPMK0_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK0_OTPMK_SHIFT))&OCOTP_OTPMK0_OTPMK_MASK)
/* OTPMK1 Bit Fields */
#define OCOTP_OTPMK1_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK1_OTPMK_SHIFT                 0
#define OCOTP_OTPMK1_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK1_OTPMK_SHIFT))&OCOTP_OTPMK1_OTPMK_MASK)
/* OTPMK2 Bit Fields */
#define OCOTP_OTPMK2_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK2_OTPMK_SHIFT                 0
#define OCOTP_OTPMK2_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK2_OTPMK_SHIFT))&OCOTP_OTPMK2_OTPMK_MASK)
/* OTPMK3 Bit Fields */
#define OCOTP_OTPMK3_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK3_OTPMK_SHIFT                 0
#define OCOTP_OTPMK3_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK3_OTPMK_SHIFT))&OCOTP_OTPMK3_OTPMK_MASK)
/* OTPMK4 Bit Fields */
#define OCOTP_OTPMK4_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK4_OTPMK_SHIFT                 0
#define OCOTP_OTPMK4_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK4_OTPMK_SHIFT))&OCOTP_OTPMK4_OTPMK_MASK)
/* OTPMK5 Bit Fields */
#define OCOTP_OTPMK5_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK5_OTPMK_SHIFT                 0
#define OCOTP_OTPMK5_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK5_OTPMK_SHIFT))&OCOTP_OTPMK5_OTPMK_MASK)
/* OTPMK6 Bit Fields */
#define OCOTP_OTPMK6_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK6_OTPMK_SHIFT                 0
#define OCOTP_OTPMK6_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK6_OTPMK_SHIFT))&OCOTP_OTPMK6_OTPMK_MASK)
/* OTPMK7 Bit Fields */
#define OCOTP_OTPMK7_OTPMK_MASK                  0xFFFFFFFFu
#define OCOTP_OTPMK7_OTPMK_SHIFT                 0
#define OCOTP_OTPMK7_OTPMK(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_OTPMK7_OTPMK_SHIFT))&OCOTP_OTPMK7_OTPMK_MASK)
/* SRK0 Bit Fields */
#define OCOTP_SRK0_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK0_BITS_SHIFT                    0
#define OCOTP_SRK0_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK0_BITS_SHIFT))&OCOTP_SRK0_BITS_MASK)
/* SRK1 Bit Fields */
#define OCOTP_SRK1_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK1_BITS_SHIFT                    0
#define OCOTP_SRK1_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK1_BITS_SHIFT))&OCOTP_SRK1_BITS_MASK)
/* SRK2 Bit Fields */
#define OCOTP_SRK2_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK2_BITS_SHIFT                    0
#define OCOTP_SRK2_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK2_BITS_SHIFT))&OCOTP_SRK2_BITS_MASK)
/* SRK3 Bit Fields */
#define OCOTP_SRK3_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK3_BITS_SHIFT                    0
#define OCOTP_SRK3_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK3_BITS_SHIFT))&OCOTP_SRK3_BITS_MASK)
/* SRK4 Bit Fields */
#define OCOTP_SRK4_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK4_BITS_SHIFT                    0
#define OCOTP_SRK4_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK4_BITS_SHIFT))&OCOTP_SRK4_BITS_MASK)
/* SRK5 Bit Fields */
#define OCOTP_SRK5_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK5_BITS_SHIFT                    0
#define OCOTP_SRK5_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK5_BITS_SHIFT))&OCOTP_SRK5_BITS_MASK)
/* SRK6 Bit Fields */
#define OCOTP_SRK6_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK6_BITS_SHIFT                    0
#define OCOTP_SRK6_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK6_BITS_SHIFT))&OCOTP_SRK6_BITS_MASK)
/* SRK7 Bit Fields */
#define OCOTP_SRK7_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_SRK7_BITS_SHIFT                    0
#define OCOTP_SRK7_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK7_BITS_SHIFT))&OCOTP_SRK7_BITS_MASK)
/* RESP0 Bit Fields */
#define OCOTP_RESP0_BITS_MASK                    0xFFFFFFFFu
#define OCOTP_RESP0_BITS_SHIFT                   0
#define OCOTP_RESP0_BITS(x)                      (((uint32_t)(((uint32_t)(x))<<OCOTP_RESP0_BITS_SHIFT))&OCOTP_RESP0_BITS_MASK)
/* HSJC_RESP1 Bit Fields */
#define OCOTP_HSJC_RESP1_BITS_MASK               0xFFFFFFFFu
#define OCOTP_HSJC_RESP1_BITS_SHIFT              0
#define OCOTP_HSJC_RESP1_BITS(x)                 (((uint32_t)(((uint32_t)(x))<<OCOTP_HSJC_RESP1_BITS_SHIFT))&OCOTP_HSJC_RESP1_BITS_MASK)
/* MAC0 Bit Fields */
#define OCOTP_MAC0_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_MAC0_BITS_SHIFT                    0
#define OCOTP_MAC0_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_MAC0_BITS_SHIFT))&OCOTP_MAC0_BITS_MASK)
/* MAC1 Bit Fields */
#define OCOTP_MAC1_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_MAC1_BITS_SHIFT                    0
#define OCOTP_MAC1_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_MAC1_BITS_SHIFT))&OCOTP_MAC1_BITS_MASK)
/* MAC2 Bit Fields */
#define OCOTP_MAC2_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_MAC2_BITS_SHIFT                    0
#define OCOTP_MAC2_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_MAC2_BITS_SHIFT))&OCOTP_MAC2_BITS_MASK)
/* MAC3 Bit Fields */
#define OCOTP_MAC3_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_MAC3_BITS_SHIFT                    0
#define OCOTP_MAC3_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_MAC3_BITS_SHIFT))&OCOTP_MAC3_BITS_MASK)
/* GP1 Bit Fields */
#define OCOTP_GP1_BITS_MASK                      0xFFFFFFFFu
#define OCOTP_GP1_BITS_SHIFT                     0
#define OCOTP_GP1_BITS(x)                        (((uint32_t)(((uint32_t)(x))<<OCOTP_GP1_BITS_SHIFT))&OCOTP_GP1_BITS_MASK)
/* GP2 Bit Fields */
#define OCOTP_GP2_BITS_MASK                      0xFFFFFFFFu
#define OCOTP_GP2_BITS_SHIFT                     0
#define OCOTP_GP2_BITS(x)                        (((uint32_t)(((uint32_t)(x))<<OCOTP_GP2_BITS_SHIFT))&OCOTP_GP2_BITS_MASK)
/* CSU Bit Fields */
#define OCOTP_CSU_ALARM_DIS_MASK                 0x3u
#define OCOTP_CSU_ALARM_DIS_SHIFT                0
#define OCOTP_CSU_ALARM_DIS(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_CSU_ALARM_DIS_SHIFT))&OCOTP_CSU_ALARM_DIS_MASK)
#define OCOTP_CSU_ALARM_OUT_MASK                 0xCu
#define OCOTP_CSU_ALARM_OUT_SHIFT                2
#define OCOTP_CSU_ALARM_OUT(x)                   (((uint32_t)(((uint32_t)(x))<<OCOTP_CSU_ALARM_OUT_SHIFT))&OCOTP_CSU_ALARM_OUT_MASK)
#define OCOTP_CSU_COUNTER_ALARM_MASK             0x10u
#define OCOTP_CSU_COUNTER_ALARM_SHIFT            4
/* SRK_REVOKE Bit Fields */
#define OCOTP_SRK_REVOKE_MC_ERA_MASK             0xFF00u
#define OCOTP_SRK_REVOKE_MC_ERA_SHIFT            8
#define OCOTP_SRK_REVOKE_MC_ERA(x)               (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK_REVOKE_MC_ERA_SHIFT))&OCOTP_SRK_REVOKE_MC_ERA_MASK)
#define OCOTP_SRK_REVOKE_AP_BI_VER_MASK          0xFFFF0000u
#define OCOTP_SRK_REVOKE_AP_BI_VER_SHIFT         16
#define OCOTP_SRK_REVOKE_AP_BI_VER(x)            (((uint32_t)(((uint32_t)(x))<<OCOTP_SRK_REVOKE_AP_BI_VER_SHIFT))&OCOTP_SRK_REVOKE_AP_BI_VER_MASK)
/* RNG Bit Fields */
#define OCOTP_RNG_VADC_BANDGAP_MASK              0xFu
#define OCOTP_RNG_VADC_BANDGAP_SHIFT             0
#define OCOTP_RNG_VADC_BANDGAP(x)                (((uint32_t)(((uint32_t)(x))<<OCOTP_RNG_VADC_BANDGAP_SHIFT))&OCOTP_RNG_VADC_BANDGAP_MASK)
#define OCOTP_RNG_ADC0_CAL_MASK                  0xF00u
#define OCOTP_RNG_ADC0_CAL_SHIFT                 8
#define OCOTP_RNG_ADC0_CAL(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_RNG_ADC0_CAL_SHIFT))&OCOTP_RNG_ADC0_CAL_MASK)
#define OCOTP_RNG_ADC1_CAL_MASK                  0xF000u
#define OCOTP_RNG_ADC1_CAL_SHIFT                 12
#define OCOTP_RNG_ADC1_CAL(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_RNG_ADC1_CAL_SHIFT))&OCOTP_RNG_ADC1_CAL_MASK)
#define OCOTP_RNG_RNG_TRIM_MASK                  0xFF000000u
#define OCOTP_RNG_RNG_TRIM_SHIFT                 24
#define OCOTP_RNG_RNG_TRIM(x)                    (((uint32_t)(((uint32_t)(x))<<OCOTP_RNG_RNG_TRIM_SHIFT))&OCOTP_RNG_RNG_TRIM_MASK)
/* VTD_TRIM Bit Fields */
#define OCOTP_VTD_TRIM_VOLTAGE_MON_TRIM_MASK     0x3FFu
#define OCOTP_VTD_TRIM_VOLTAGE_MON_TRIM_SHIFT    0
#define OCOTP_VTD_TRIM_VOLTAGE_MON_TRIM(x)       (((uint32_t)(((uint32_t)(x))<<OCOTP_VTD_TRIM_VOLTAGE_MON_TRIM_SHIFT))&OCOTP_VTD_TRIM_VOLTAGE_MON_TRIM_MASK)
#define OCOTP_VTD_TRIM_TEMP_MON_TRIM_MASK        0xFFC00u
#define OCOTP_VTD_TRIM_TEMP_MON_TRIM_SHIFT       10
#define OCOTP_VTD_TRIM_TEMP_MON_TRIM(x)          (((uint32_t)(((uint32_t)(x))<<OCOTP_VTD_TRIM_TEMP_MON_TRIM_SHIFT))&OCOTP_VTD_TRIM_TEMP_MON_TRIM_MASK)
#define OCOTP_VTD_TRIM_DRYICE_BGR_TRIM_MASK      0x3F000000u
#define OCOTP_VTD_TRIM_DRYICE_BGR_TRIM_SHIFT     24
#define OCOTP_VTD_TRIM_DRYICE_BGR_TRIM(x)        (((uint32_t)(((uint32_t)(x))<<OCOTP_VTD_TRIM_DRYICE_BGR_TRIM_SHIFT))&OCOTP_VTD_TRIM_DRYICE_BGR_TRIM_MASK)
#define OCOTP_VTD_TRIM_VOLT_MON_DIS_MASK         0x40000000u
#define OCOTP_VTD_TRIM_VOLT_MON_DIS_SHIFT        30
#define OCOTP_VTD_TRIM_TEMP_MON_DIS_MASK         0x80000000u
#define OCOTP_VTD_TRIM_TEMP_MON_DIS_SHIFT        31
/* VTMON Bit Fields */
#define OCOTP_VTMON_DRYICE_PROG_MASK             0x3Fu
#define OCOTP_VTMON_DRYICE_PROG_SHIFT            0
#define OCOTP_VTMON_DRYICE_PROG(x)               (((uint32_t)(((uint32_t)(x))<<OCOTP_VTMON_DRYICE_PROG_SHIFT))&OCOTP_VTMON_DRYICE_PROG_MASK)
#define OCOTP_VTMON_USB1_PID_MASK                0xFFFF0000u
#define OCOTP_VTMON_USB1_PID_SHIFT               16
#define OCOTP_VTMON_USB1_PID(x)                  (((uint32_t)(((uint32_t)(x))<<OCOTP_VTMON_USB1_PID_SHIFT))&OCOTP_VTMON_USB1_PID_MASK)
/* CRC0 Bit Fields */
#define OCOTP_CRC0_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC0_BITS_SHIFT                    0
#define OCOTP_CRC0_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC0_BITS_SHIFT))&OCOTP_CRC0_BITS_MASK)
/* CRC1 Bit Fields */
#define OCOTP_CRC1_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC1_BITS_SHIFT                    0
#define OCOTP_CRC1_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC1_BITS_SHIFT))&OCOTP_CRC1_BITS_MASK)
/* CRC2 Bit Fields */
#define OCOTP_CRC2_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC2_BITS_SHIFT                    0
#define OCOTP_CRC2_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC2_BITS_SHIFT))&OCOTP_CRC2_BITS_MASK)
/* CRC3 Bit Fields */
#define OCOTP_CRC3_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC3_BITS_SHIFT                    0
#define OCOTP_CRC3_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC3_BITS_SHIFT))&OCOTP_CRC3_BITS_MASK)
/* CRC4 Bit Fields */
#define OCOTP_CRC4_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC4_BITS_SHIFT                    0
#define OCOTP_CRC4_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC4_BITS_SHIFT))&OCOTP_CRC4_BITS_MASK)
/* CRC5 Bit Fields */
#define OCOTP_CRC5_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC5_BITS_SHIFT                    0
#define OCOTP_CRC5_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC5_BITS_SHIFT))&OCOTP_CRC5_BITS_MASK)
/* CRC6 Bit Fields */
#define OCOTP_CRC6_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC6_BITS_SHIFT                    0
#define OCOTP_CRC6_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC6_BITS_SHIFT))&OCOTP_CRC6_BITS_MASK)
/* CRC7 Bit Fields */
#define OCOTP_CRC7_BITS_MASK                     0xFFFFFFFFu
#define OCOTP_CRC7_BITS_SHIFT                    0
#define OCOTP_CRC7_BITS(x)                       (((uint32_t)(((uint32_t)(x))<<OCOTP_CRC7_BITS_SHIFT))&OCOTP_CRC7_BITS_MASK)

/**
 * @}
 */ /* end of group OCOTP_Register_Masks */


/* OCOTP - Peripheral instance base addresses */
/** Peripheral OCOTP base pointer */
#define OCOTP_BASE_PTR                           ((OCOTP_MemMapPtr)0x400A5000u)
/** Array initializer of OCOTP peripheral base pointers */
#define OCOTP_BASE_PTRS                          { OCOTP_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- OCOTP - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup OCOTP_Register_Accessor_Macros OCOTP - Register accessor macros
 * @{
 */


/* OCOTP - Register instance definitions */
/* OCOTP */
#define OCOTP_CTRL                               OCOTP_CTRL_REG(OCOTP_BASE_PTR)
#define OCOTP_CTRL_SET                           OCOTP_CTRL_SET_REG(OCOTP_BASE_PTR)
#define OCOTP_CTRL_CLR                           OCOTP_CTRL_CLR_REG(OCOTP_BASE_PTR)
#define OCOTP_CTRL_TOG                           OCOTP_CTRL_TOG_REG(OCOTP_BASE_PTR)
#define OCOTP_TIMING                             OCOTP_TIMING_REG(OCOTP_BASE_PTR)
#define OCOTP_DATA                               OCOTP_DATA_REG(OCOTP_BASE_PTR)
#define OCOTP_READ_CTRL                          OCOTP_READ_CTRL_REG(OCOTP_BASE_PTR)
#define OCOTP_READ_FUSE_DATA                     OCOTP_READ_FUSE_DATA_REG(OCOTP_BASE_PTR)
#define OCOTP_SW_STICKY                          OCOTP_SW_STICKY_REG(OCOTP_BASE_PTR)
#define OCOTP_SCS                                OCOTP_SCS_REG(OCOTP_BASE_PTR)
#define OCOTP_SCS_SET                            OCOTP_SCS_SET_REG(OCOTP_BASE_PTR)
#define OCOTP_SCS_CLR                            OCOTP_SCS_CLR_REG(OCOTP_BASE_PTR)
#define OCOTP_SCS_TOG                            OCOTP_SCS_TOG_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC_ADDR                           OCOTP_CRC_ADDR_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC_VALUE                          OCOTP_CRC_VALUE_REG(OCOTP_BASE_PTR)
#define OCOTP_VERSION                            OCOTP_VERSION_REG(OCOTP_BASE_PTR)
#define OCOTP_LOCK                               OCOTP_LOCK_REG(OCOTP_BASE_PTR)
#define OCOTP_CFG0                               OCOTP_CFG0_REG(OCOTP_BASE_PTR)
#define OCOTP_CFG1                               OCOTP_CFG1_REG(OCOTP_BASE_PTR)
#define OCOTP_CFG4                               OCOTP_CFG4_REG(OCOTP_BASE_PTR)
#define OCOTP_CFG5                               OCOTP_CFG5_REG(OCOTP_BASE_PTR)
#define OCOTP_MEM0                               OCOTP_MEM0_REG(OCOTP_BASE_PTR)
#define OCOTP_MEM1                               OCOTP_MEM1_REG(OCOTP_BASE_PTR)
#define OCOTP_MEM2                               OCOTP_MEM2_REG(OCOTP_BASE_PTR)
#define OCOTP_MEM3                               OCOTP_MEM3_REG(OCOTP_BASE_PTR)
#define OCOTP_MEM4                               OCOTP_MEM4_REG(OCOTP_BASE_PTR)
#define OCOTP_ANA0                               OCOTP_ANA0_REG(OCOTP_BASE_PTR)
#define OCOTP_ANA1                               OCOTP_ANA1_REG(OCOTP_BASE_PTR)
#define OCOTP_ANA2                               OCOTP_ANA2_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK0                             OCOTP_OTPMK0_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK1                             OCOTP_OTPMK1_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK2                             OCOTP_OTPMK2_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK3                             OCOTP_OTPMK3_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK4                             OCOTP_OTPMK4_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK5                             OCOTP_OTPMK5_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK6                             OCOTP_OTPMK6_REG(OCOTP_BASE_PTR)
#define OCOTP_OTPMK7                             OCOTP_OTPMK7_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK0                               OCOTP_SRK0_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK1                               OCOTP_SRK1_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK2                               OCOTP_SRK2_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK3                               OCOTP_SRK3_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK4                               OCOTP_SRK4_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK5                               OCOTP_SRK5_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK6                               OCOTP_SRK6_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK7                               OCOTP_SRK7_REG(OCOTP_BASE_PTR)
#define OCOTP_RESP0                              OCOTP_RESP0_REG(OCOTP_BASE_PTR)
#define OCOTP_HSJC_RESP1                         OCOTP_HSJC_RESP1_REG(OCOTP_BASE_PTR)
#define OCOTP_MAC0                               OCOTP_MAC0_REG(OCOTP_BASE_PTR)
#define OCOTP_MAC1                               OCOTP_MAC1_REG(OCOTP_BASE_PTR)
#define OCOTP_MAC2                               OCOTP_MAC2_REG(OCOTP_BASE_PTR)
#define OCOTP_MAC3                               OCOTP_MAC3_REG(OCOTP_BASE_PTR)
#define OCOTP_GP1                                OCOTP_GP1_REG(OCOTP_BASE_PTR)
#define OCOTP_GP2                                OCOTP_GP2_REG(OCOTP_BASE_PTR)
#define OCOTP_CSU                                OCOTP_CSU_REG(OCOTP_BASE_PTR)
#define OCOTP_SRK_REVOKE                         OCOTP_SRK_REVOKE_REG(OCOTP_BASE_PTR)
#define OCOTP_TFUSE0                             OCOTP_TFUSE0_REG(OCOTP_BASE_PTR)
#define OCOTP_TFUSE1                             OCOTP_TFUSE1_REG(OCOTP_BASE_PTR)
#define OCOTP_VDD_TRIM                           OCOTP_VDD_TRIM_REG(OCOTP_BASE_PTR)
#define OCOTP_PMUR                               OCOTP_PMUR_REG(OCOTP_BASE_PTR)
#define OCOTP_PMU                                OCOTP_PMU_REG(OCOTP_BASE_PTR)
#define OCOTP_RNG                                OCOTP_RNG_REG(OCOTP_BASE_PTR)
#define OCOTP_VTD_TRIM                           OCOTP_VTD_TRIM_REG(OCOTP_BASE_PTR)
#define OCOTP_VTMON                              OCOTP_VTMON_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC0                               OCOTP_CRC0_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC1                               OCOTP_CRC1_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC2                               OCOTP_CRC2_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC3                               OCOTP_CRC3_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC4                               OCOTP_CRC4_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC5                               OCOTP_CRC5_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC6                               OCOTP_CRC6_REG(OCOTP_BASE_PTR)
#define OCOTP_CRC7                               OCOTP_CRC7_REG(OCOTP_BASE_PTR)

/**
 * @}
 */ /* end of group OCOTP_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group OCOTP_Peripheral */


/* ----------------------------------------------------------------------------
   -- PDB
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PDB_Peripheral PDB
 * @{
 */

/** PDB - Peripheral register structure */
typedef struct PDB_MemMap {
  uint32_t SC;                                     /**< Status and Control Register, offset: 0x0 */
  uint32_t MOD;                                    /**< Modulus Register, offset: 0x4 */
  uint32_t CNT;                                    /**< Counter Register, offset: 0x8 */
  uint32_t IDLY;                                   /**< Interrupt Delay Register, offset: 0xC */
  struct {                                         /* offset: 0x10, array step: 0x28 */
    uint32_t C1;                                     /**< Channel n Control Register 1, array offset: 0x10, array step: 0x28 */
    uint32_t S;                                      /**< Channel n Status Register, array offset: 0x14, array step: 0x28 */
    uint32_t DLY[2];                                 /**< Channel n Delay 0 Register..Channel n Delay 1 Register, array offset: 0x18, array step: index*0x28, index2*0x4 */
    uint8_t RESERVED_0[24];
  } CH[2];
  uint8_t RESERVED_0[240];
  uint32_t DACINTC[1];                             /**< DAC Interval Trigger n Control Register, array offset: 0x150, array step: 0x4 */
  uint32_t DACINT[1];                              /**< DAC Interval n Register, array offset: 0x154, array step: 0x4 */
} volatile *PDB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PDB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PDB_Register_Accessor_Macros PDB - Register accessor macros
 * @{
 */


/* PDB - Register accessors */
#define PDB_SC_REG(base)                         ((base)->SC)
#define PDB_MOD_REG(base)                        ((base)->MOD)
#define PDB_CNT_REG(base)                        ((base)->CNT)
#define PDB_IDLY_REG(base)                       ((base)->IDLY)
#define PDB_C1_REG(base,index)                   ((base)->CH[index].C1)
#define PDB_S_REG(base,index)                    ((base)->CH[index].S)
#define PDB_DLY_REG(base,index,index2)           ((base)->CH[index].DLY[index2])
#define PDB_DACINTC_REG(base,index)              ((base)->DACINTC[index])
#define PDB_DACINT_REG(base,index)               ((base)->DACINT[index])

/**
 * @}
 */ /* end of group PDB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PDB Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PDB_Register_Masks PDB Register Masks
 * @{
 */

/* SC Bit Fields */
#define PDB_SC_LDOK_MASK                         0x1u
#define PDB_SC_LDOK_SHIFT                        0
#define PDB_SC_CONT_MASK                         0x2u
#define PDB_SC_CONT_SHIFT                        1
#define PDB_SC_MULT_MASK                         0xCu
#define PDB_SC_MULT_SHIFT                        2
#define PDB_SC_MULT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_MULT_SHIFT))&PDB_SC_MULT_MASK)
#define PDB_SC_PDBIE_MASK                        0x20u
#define PDB_SC_PDBIE_SHIFT                       5
#define PDB_SC_PDBIF_MASK                        0x40u
#define PDB_SC_PDBIF_SHIFT                       6
#define PDB_SC_PDBEN_MASK                        0x80u
#define PDB_SC_PDBEN_SHIFT                       7
#define PDB_SC_TRGSEL_MASK                       0xF00u
#define PDB_SC_TRGSEL_SHIFT                      8
#define PDB_SC_TRGSEL(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_TRGSEL_SHIFT))&PDB_SC_TRGSEL_MASK)
#define PDB_SC_PRESCALER_MASK                    0x7000u
#define PDB_SC_PRESCALER_SHIFT                   12
#define PDB_SC_PRESCALER(x)                      (((uint32_t)(((uint32_t)(x))<<PDB_SC_PRESCALER_SHIFT))&PDB_SC_PRESCALER_MASK)
#define PDB_SC_DMAEN_MASK                        0x8000u
#define PDB_SC_DMAEN_SHIFT                       15
#define PDB_SC_SWTRIG_MASK                       0x10000u
#define PDB_SC_SWTRIG_SHIFT                      16
#define PDB_SC_PDBEIE_MASK                       0x20000u
#define PDB_SC_PDBEIE_SHIFT                      17
#define PDB_SC_LDMOD_MASK                        0xC0000u
#define PDB_SC_LDMOD_SHIFT                       18
#define PDB_SC_LDMOD(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDMOD_SHIFT))&PDB_SC_LDMOD_MASK)
/* MOD Bit Fields */
#define PDB_MOD_MOD_MASK                         0xFFFFu
#define PDB_MOD_MOD_SHIFT                        0
#define PDB_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_MOD_MOD_SHIFT))&PDB_MOD_MOD_MASK)
/* CNT Bit Fields */
#define PDB_CNT_CNT_MASK                         0xFFFFu
#define PDB_CNT_CNT_SHIFT                        0
#define PDB_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_CNT_CNT_SHIFT))&PDB_CNT_CNT_MASK)
/* IDLY Bit Fields */
#define PDB_IDLY_IDLY_MASK                       0xFFFFu
#define PDB_IDLY_IDLY_SHIFT                      0
#define PDB_IDLY_IDLY(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_IDLY_IDLY_SHIFT))&PDB_IDLY_IDLY_MASK)
/* C1 Bit Fields */
#define PDB_C1_EN_MASK                           0xFFu
#define PDB_C1_EN_SHIFT                          0
#define PDB_C1_EN(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_EN_SHIFT))&PDB_C1_EN_MASK)
#define PDB_C1_TOS_MASK                          0xFF00u
#define PDB_C1_TOS_SHIFT                         8
#define PDB_C1_TOS(x)                            (((uint32_t)(((uint32_t)(x))<<PDB_C1_TOS_SHIFT))&PDB_C1_TOS_MASK)
#define PDB_C1_BB_MASK                           0xFF0000u
#define PDB_C1_BB_SHIFT                          16
#define PDB_C1_BB(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_BB_SHIFT))&PDB_C1_BB_MASK)
/* S Bit Fields */
#define PDB_S_ERR_MASK                           0xFFu
#define PDB_S_ERR_SHIFT                          0
#define PDB_S_ERR(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_S_ERR_SHIFT))&PDB_S_ERR_MASK)
#define PDB_S_CF_MASK                            0xFF0000u
#define PDB_S_CF_SHIFT                           16
#define PDB_S_CF(x)                              (((uint32_t)(((uint32_t)(x))<<PDB_S_CF_SHIFT))&PDB_S_CF_MASK)
/* DLY Bit Fields */
#define PDB_DLY_DLY_MASK                         0xFFFFu
#define PDB_DLY_DLY_SHIFT                        0
#define PDB_DLY_DLY(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_DLY_DLY_SHIFT))&PDB_DLY_DLY_MASK)
/* DACINTC Bit Fields */
#define PDB_DACINTC_TOE_MASK                     0x1u
#define PDB_DACINTC_TOE_SHIFT                    0
#define PDB_DACINTC_EXT_MASK                     0x2u
#define PDB_DACINTC_EXT_SHIFT                    1
/* DACINT Bit Fields */
#define PDB_DACINT_INT_MASK                      0xFFFFu
#define PDB_DACINT_INT_SHIFT                     0
#define PDB_DACINT_INT(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_DACINT_INT_SHIFT))&PDB_DACINT_INT_MASK)

/**
 * @}
 */ /* end of group PDB_Register_Masks */


/* PDB - Peripheral instance base addresses */
/** Peripheral PDB base pointer */
#define PDB_BASE_PTR                             ((PDB_MemMapPtr)0x40036000u)
/** Array initializer of PDB peripheral base pointers */
#define PDB_BASE_PTRS                            { PDB_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- PDB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PDB_Register_Accessor_Macros PDB - Register accessor macros
 * @{
 */


/* PDB - Register instance definitions */
/* PDB */
#define PDB_SC                                   PDB_SC_REG(PDB_BASE_PTR)
#define PDB_MOD                                  PDB_MOD_REG(PDB_BASE_PTR)
#define PDB_CNT                                  PDB_CNT_REG(PDB_BASE_PTR)
#define PDB_IDLY                                 PDB_IDLY_REG(PDB_BASE_PTR)
#define PDB_CH0C1                                PDB_C1_REG(PDB_BASE_PTR,0)
#define PDB_CH0S                                 PDB_S_REG(PDB_BASE_PTR,0)
#define PDB_CH0DLY0                              PDB_DLY_REG(PDB_BASE_PTR,0,0)
#define PDB_CH0DLY1                              PDB_DLY_REG(PDB_BASE_PTR,0,1)
#define PDB_CH1C1                                PDB_C1_REG(PDB_BASE_PTR,1)
#define PDB_CH1S                                 PDB_S_REG(PDB_BASE_PTR,1)
#define PDB_CH1DLY0                              PDB_DLY_REG(PDB_BASE_PTR,1,0)
#define PDB_CH1DLY1                              PDB_DLY_REG(PDB_BASE_PTR,1,1)
#define PDB_DACINTC0                             PDB_DACINTC_REG(PDB_BASE_PTR,0)
#define PDB_DACINT0                              PDB_DACINT_REG(PDB_BASE_PTR,0)

/* PDB - Register array accessors */
#define PDB_C1(index)                            PDB_C1_REG(PDB_BASE_PTR,index)
#define PDB_S(index)                             PDB_S_REG(PDB_BASE_PTR,index)
#define PDB_DLY(index,index2)                    PDB_DLY_REG(PDB_BASE_PTR,index,index2)
#define PDB_DACINTC(index)                       PDB_DACINTC_REG(PDB_BASE_PTR,index)
#define PDB_DACINT(index)                        PDB_DACINT_REG(PDB_BASE_PTR,index)

/**
 * @}
 */ /* end of group PDB_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group PDB_Peripheral */


/* ----------------------------------------------------------------------------
   -- PIT
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PIT_Peripheral PIT
 * @{
 */

/** PIT - Peripheral register structure */
typedef struct PIT_MemMap {
  uint32_t MCR;                                    /**< PIT Module Control Register, offset: 0x0 */
  uint8_t RESERVED_0[220];
  uint32_t LTMR64H;                                /**< PIT Upper Lifetime Timer Register, offset: 0xE0 */
  uint32_t LTMR64L;                                /**< PIT Lower Lifetime Timer Register, offset: 0xE4 */
  uint8_t RESERVED_1[24];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    uint32_t LDVAL;                                  /**< Timer Load Value Register, array offset: 0x100, array step: 0x10 */
    uint32_t CVAL;                                   /**< Current Timer Value Register, array offset: 0x104, array step: 0x10 */
    uint32_t TCTRL;                                  /**< Timer Control Register, array offset: 0x108, array step: 0x10 */
    uint32_t TFLG;                                   /**< Timer Flag Register, array offset: 0x10C, array step: 0x10 */
  } CHANNEL[8];
} volatile *PIT_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PIT - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PIT_Register_Accessor_Macros PIT - Register accessor macros
 * @{
 */


/* PIT - Register accessors */
#define PIT_MCR_REG(base)                        ((base)->MCR)
#define PIT_LTMR64H_REG(base)                    ((base)->LTMR64H)
#define PIT_LTMR64L_REG(base)                    ((base)->LTMR64L)
#define PIT_LDVAL_REG(base,index)                ((base)->CHANNEL[index].LDVAL)
#define PIT_CVAL_REG(base,index)                 ((base)->CHANNEL[index].CVAL)
#define PIT_TCTRL_REG(base,index)                ((base)->CHANNEL[index].TCTRL)
#define PIT_TFLG_REG(base,index)                 ((base)->CHANNEL[index].TFLG)

/**
 * @}
 */ /* end of group PIT_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PIT Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PIT_Register_Masks PIT Register Masks
 * @{
 */

/* MCR Bit Fields */
#define PIT_MCR_FRZ_MASK                         0x1u
#define PIT_MCR_FRZ_SHIFT                        0
#define PIT_MCR_MDIS_MASK                        0x2u
#define PIT_MCR_MDIS_SHIFT                       1
/* LTMR64H Bit Fields */
#define PIT_LTMR64H_LTH_MASK                     0xFFFFFFFFu
#define PIT_LTMR64H_LTH_SHIFT                    0
#define PIT_LTMR64H_LTH(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64H_LTH_SHIFT))&PIT_LTMR64H_LTH_MASK)
/* LTMR64L Bit Fields */
#define PIT_LTMR64L_LTL_MASK                     0xFFFFFFFFu
#define PIT_LTMR64L_LTL_SHIFT                    0
#define PIT_LTMR64L_LTL(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64L_LTL_SHIFT))&PIT_LTMR64L_LTL_MASK)
/* LDVAL Bit Fields */
#define PIT_LDVAL_TSV_MASK                       0xFFFFFFFFu
#define PIT_LDVAL_TSV_SHIFT                      0
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_LDVAL_TSV_SHIFT))&PIT_LDVAL_TSV_MASK)
/* CVAL Bit Fields */
#define PIT_CVAL_TVL_MASK                        0xFFFFFFFFu
#define PIT_CVAL_TVL_SHIFT                       0
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_CVAL_TVL_SHIFT))&PIT_CVAL_TVL_MASK)
/* TCTRL Bit Fields */
#define PIT_TCTRL_TEN_MASK                       0x1u
#define PIT_TCTRL_TEN_SHIFT                      0
#define PIT_TCTRL_TIE_MASK                       0x2u
#define PIT_TCTRL_TIE_SHIFT                      1
#define PIT_TCTRL_CHN_MASK                       0x4u
#define PIT_TCTRL_CHN_SHIFT                      2
/* TFLG Bit Fields */
#define PIT_TFLG_TIF_MASK                        0x1u
#define PIT_TFLG_TIF_SHIFT                       0

/**
 * @}
 */ /* end of group PIT_Register_Masks */


/* PIT - Peripheral instance base addresses */
/** Peripheral PIT base pointer */
#define PIT_BASE_PTR                             ((PIT_MemMapPtr)0x40037000u)
/** Array initializer of PIT peripheral base pointers */
#define PIT_BASE_PTRS                            { PIT_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- PIT - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PIT_Register_Accessor_Macros PIT - Register accessor macros
 * @{
 */


/* PIT - Register instance definitions */
/* PIT */
#define PIT_MCR                                  PIT_MCR_REG(PIT_BASE_PTR)
#define PIT_LTMR64H                              PIT_LTMR64H_REG(PIT_BASE_PTR)
#define PIT_LTMR64L                              PIT_LTMR64L_REG(PIT_BASE_PTR)
#define PIT_LDVAL0                               PIT_LDVAL_REG(PIT_BASE_PTR,0)
#define PIT_CVAL0                                PIT_CVAL_REG(PIT_BASE_PTR,0)
#define PIT_TCTRL0                               PIT_TCTRL_REG(PIT_BASE_PTR,0)
#define PIT_TFLG0                                PIT_TFLG_REG(PIT_BASE_PTR,0)
#define PIT_LDVAL1                               PIT_LDVAL_REG(PIT_BASE_PTR,1)
#define PIT_CVAL1                                PIT_CVAL_REG(PIT_BASE_PTR,1)
#define PIT_TCTRL1                               PIT_TCTRL_REG(PIT_BASE_PTR,1)
#define PIT_TFLG1                                PIT_TFLG_REG(PIT_BASE_PTR,1)
#define PIT_LDVAL2                               PIT_LDVAL_REG(PIT_BASE_PTR,2)
#define PIT_CVAL2                                PIT_CVAL_REG(PIT_BASE_PTR,2)
#define PIT_TCTRL2                               PIT_TCTRL_REG(PIT_BASE_PTR,2)
#define PIT_TFLG2                                PIT_TFLG_REG(PIT_BASE_PTR,2)
#define PIT_LDVAL3                               PIT_LDVAL_REG(PIT_BASE_PTR,3)
#define PIT_CVAL3                                PIT_CVAL_REG(PIT_BASE_PTR,3)
#define PIT_TCTRL3                               PIT_TCTRL_REG(PIT_BASE_PTR,3)
#define PIT_TFLG3                                PIT_TFLG_REG(PIT_BASE_PTR,3)
#define PIT_LDVAL4                               PIT_LDVAL_REG(PIT_BASE_PTR,4)
#define PIT_CVAL4                                PIT_CVAL_REG(PIT_BASE_PTR,4)
#define PIT_TCTRL4                               PIT_TCTRL_REG(PIT_BASE_PTR,4)
#define PIT_TFLG4                                PIT_TFLG_REG(PIT_BASE_PTR,4)
#define PIT_LDVAL5                               PIT_LDVAL_REG(PIT_BASE_PTR,5)
#define PIT_CVAL5                                PIT_CVAL_REG(PIT_BASE_PTR,5)
#define PIT_TCTRL5                               PIT_TCTRL_REG(PIT_BASE_PTR,5)
#define PIT_TFLG5                                PIT_TFLG_REG(PIT_BASE_PTR,5)
#define PIT_LDVAL6                               PIT_LDVAL_REG(PIT_BASE_PTR,6)
#define PIT_CVAL6                                PIT_CVAL_REG(PIT_BASE_PTR,6)
#define PIT_TCTRL6                               PIT_TCTRL_REG(PIT_BASE_PTR,6)
#define PIT_TFLG6                                PIT_TFLG_REG(PIT_BASE_PTR,6)
#define PIT_LDVAL7                               PIT_LDVAL_REG(PIT_BASE_PTR,7)
#define PIT_CVAL7                                PIT_CVAL_REG(PIT_BASE_PTR,7)
#define PIT_TCTRL7                               PIT_TCTRL_REG(PIT_BASE_PTR,7)
#define PIT_TFLG7                                PIT_TFLG_REG(PIT_BASE_PTR,7)

/* PIT - Register array accessors */
#define PIT_LDVAL(index)                         PIT_LDVAL_REG(PIT_BASE_PTR,index)
#define PIT_CVAL(index)                          PIT_CVAL_REG(PIT_BASE_PTR,index)
#define PIT_TCTRL(index)                         PIT_TCTRL_REG(PIT_BASE_PTR,index)
#define PIT_TFLG(index)                          PIT_TFLG_REG(PIT_BASE_PTR,index)

/**
 * @}
 */ /* end of group PIT_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group PIT_Peripheral */


/* ----------------------------------------------------------------------------
   -- PORT
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PORT_Peripheral PORT
 * @{
 */

/** PORT - Peripheral register structure */
typedef struct PORT_MemMap {
  uint32_t PCR[32];                                /**< Pin Control Register n, array offset: 0x0, array step: 0x4 */
  uint8_t RESERVED_0[32];
  uint32_t ISFR;                                   /**< Interrupt Status Flag Register, offset: 0xA0 */
  uint8_t RESERVED_1[28];
  uint32_t DFER;                                   /**< Digital Filter Enable Register, offset: 0xC0 */
  uint32_t DFCR;                                   /**< Digital Filter Clock Register, offset: 0xC4 */
  uint32_t DFWR;                                   /**< Digital Filter Width Register, offset: 0xC8 */
} volatile *PORT_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PORT - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PORT_Register_Accessor_Macros PORT - Register accessor macros
 * @{
 */


/* PORT - Register accessors */
#define PORT_PCR_REG(base,index)                 ((base)->PCR[index])
#define PORT_ISFR_REG(base)                      ((base)->ISFR)
#define PORT_DFER_REG(base)                      ((base)->DFER)
#define PORT_DFCR_REG(base)                      ((base)->DFCR)
#define PORT_DFWR_REG(base)                      ((base)->DFWR)

/**
 * @}
 */ /* end of group PORT_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PORT Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PORT_Register_Masks PORT Register Masks
 * @{
 */

/* PCR Bit Fields */
#define PORT_PCR_IRQC_MASK                       0xF0000u
#define PORT_PCR_IRQC_SHIFT                      16
#define PORT_PCR_IRQC(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_PCR_IRQC_SHIFT))&PORT_PCR_IRQC_MASK)
#define PORT_PCR_ISF_MASK                        0x1000000u
#define PORT_PCR_ISF_SHIFT                       24
/* ISFR Bit Fields */
#define PORT_ISFR_ISF_MASK                       0xFFFFFFFFu
#define PORT_ISFR_ISF_SHIFT                      0
#define PORT_ISFR_ISF(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_ISFR_ISF_SHIFT))&PORT_ISFR_ISF_MASK)
/* DFER Bit Fields */
#define PORT_DFER_DFE_MASK                       0xFFFFFFFFu
#define PORT_DFER_DFE_SHIFT                      0
#define PORT_DFER_DFE(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_DFER_DFE_SHIFT))&PORT_DFER_DFE_MASK)
/* DFCR Bit Fields */
#define PORT_DFCR_CS_MASK                        0x1u
#define PORT_DFCR_CS_SHIFT                       0
/* DFWR Bit Fields */
#define PORT_DFWR_FILT_MASK                      0x1Fu
#define PORT_DFWR_FILT_SHIFT                     0
#define PORT_DFWR_FILT(x)                        (((uint32_t)(((uint32_t)(x))<<PORT_DFWR_FILT_SHIFT))&PORT_DFWR_FILT_MASK)

/**
 * @}
 */ /* end of group PORT_Register_Masks */


/* PORT - Peripheral instance base addresses */
/** Peripheral PORT0 base pointer */
#define PORT0_BASE_PTR                           ((PORT_MemMapPtr)0x40049000u)
/** Peripheral PORT1 base pointer */
#define PORT1_BASE_PTR                           ((PORT_MemMapPtr)0x4004A000u)
/** Peripheral PORT2 base pointer */
#define PORT2_BASE_PTR                           ((PORT_MemMapPtr)0x4004B000u)
/** Peripheral PORT3 base pointer */
#define PORT3_BASE_PTR                           ((PORT_MemMapPtr)0x4004C000u)
/** Peripheral PORT4 base pointer */
#define PORT4_BASE_PTR                           ((PORT_MemMapPtr)0x4004D000u)
/** Array initializer of PORT peripheral base pointers */
#define PORT_BASE_PTRS                           { PORT0_BASE_PTR, PORT1_BASE_PTR, PORT2_BASE_PTR, PORT3_BASE_PTR, PORT4_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- PORT - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PORT_Register_Accessor_Macros PORT - Register accessor macros
 * @{
 */


/* PORT - Register instance definitions */
/* PORT0 */
#define PORT0_PCR0                               PORT_PCR_REG(PORT0_BASE_PTR,0)
#define PORT0_PCR1                               PORT_PCR_REG(PORT0_BASE_PTR,1)
#define PORT0_PCR2                               PORT_PCR_REG(PORT0_BASE_PTR,2)
#define PORT0_PCR3                               PORT_PCR_REG(PORT0_BASE_PTR,3)
#define PORT0_PCR4                               PORT_PCR_REG(PORT0_BASE_PTR,4)
#define PORT0_PCR5                               PORT_PCR_REG(PORT0_BASE_PTR,5)
#define PORT0_PCR6                               PORT_PCR_REG(PORT0_BASE_PTR,6)
#define PORT0_PCR7                               PORT_PCR_REG(PORT0_BASE_PTR,7)
#define PORT0_PCR8                               PORT_PCR_REG(PORT0_BASE_PTR,8)
#define PORT0_PCR9                               PORT_PCR_REG(PORT0_BASE_PTR,9)
#define PORT0_PCR10                              PORT_PCR_REG(PORT0_BASE_PTR,10)
#define PORT0_PCR11                              PORT_PCR_REG(PORT0_BASE_PTR,11)
#define PORT0_PCR12                              PORT_PCR_REG(PORT0_BASE_PTR,12)
#define PORT0_PCR13                              PORT_PCR_REG(PORT0_BASE_PTR,13)
#define PORT0_PCR14                              PORT_PCR_REG(PORT0_BASE_PTR,14)
#define PORT0_PCR15                              PORT_PCR_REG(PORT0_BASE_PTR,15)
#define PORT0_PCR16                              PORT_PCR_REG(PORT0_BASE_PTR,16)
#define PORT0_PCR17                              PORT_PCR_REG(PORT0_BASE_PTR,17)
#define PORT0_PCR18                              PORT_PCR_REG(PORT0_BASE_PTR,18)
#define PORT0_PCR19                              PORT_PCR_REG(PORT0_BASE_PTR,19)
#define PORT0_PCR20                              PORT_PCR_REG(PORT0_BASE_PTR,20)
#define PORT0_PCR21                              PORT_PCR_REG(PORT0_BASE_PTR,21)
#define PORT0_PCR22                              PORT_PCR_REG(PORT0_BASE_PTR,22)
#define PORT0_PCR23                              PORT_PCR_REG(PORT0_BASE_PTR,23)
#define PORT0_PCR24                              PORT_PCR_REG(PORT0_BASE_PTR,24)
#define PORT0_PCR25                              PORT_PCR_REG(PORT0_BASE_PTR,25)
#define PORT0_PCR26                              PORT_PCR_REG(PORT0_BASE_PTR,26)
#define PORT0_PCR27                              PORT_PCR_REG(PORT0_BASE_PTR,27)
#define PORT0_PCR28                              PORT_PCR_REG(PORT0_BASE_PTR,28)
#define PORT0_PCR29                              PORT_PCR_REG(PORT0_BASE_PTR,29)
#define PORT0_PCR30                              PORT_PCR_REG(PORT0_BASE_PTR,30)
#define PORT0_PCR31                              PORT_PCR_REG(PORT0_BASE_PTR,31)
#define PORT0_ISFR                               PORT_ISFR_REG(PORT0_BASE_PTR)
#define PORT0_DFER                               PORT_DFER_REG(PORT0_BASE_PTR)
#define PORT0_DFCR                               PORT_DFCR_REG(PORT0_BASE_PTR)
#define PORT0_DFWR                               PORT_DFWR_REG(PORT0_BASE_PTR)
/* PORT1 */
#define PORT1_PCR0                               PORT_PCR_REG(PORT1_BASE_PTR,0)
#define PORT1_PCR1                               PORT_PCR_REG(PORT1_BASE_PTR,1)
#define PORT1_PCR2                               PORT_PCR_REG(PORT1_BASE_PTR,2)
#define PORT1_PCR3                               PORT_PCR_REG(PORT1_BASE_PTR,3)
#define PORT1_PCR4                               PORT_PCR_REG(PORT1_BASE_PTR,4)
#define PORT1_PCR5                               PORT_PCR_REG(PORT1_BASE_PTR,5)
#define PORT1_PCR6                               PORT_PCR_REG(PORT1_BASE_PTR,6)
#define PORT1_PCR7                               PORT_PCR_REG(PORT1_BASE_PTR,7)
#define PORT1_PCR8                               PORT_PCR_REG(PORT1_BASE_PTR,8)
#define PORT1_PCR9                               PORT_PCR_REG(PORT1_BASE_PTR,9)
#define PORT1_PCR10                              PORT_PCR_REG(PORT1_BASE_PTR,10)
#define PORT1_PCR11                              PORT_PCR_REG(PORT1_BASE_PTR,11)
#define PORT1_PCR12                              PORT_PCR_REG(PORT1_BASE_PTR,12)
#define PORT1_PCR13                              PORT_PCR_REG(PORT1_BASE_PTR,13)
#define PORT1_PCR14                              PORT_PCR_REG(PORT1_BASE_PTR,14)
#define PORT1_PCR15                              PORT_PCR_REG(PORT1_BASE_PTR,15)
#define PORT1_PCR16                              PORT_PCR_REG(PORT1_BASE_PTR,16)
#define PORT1_PCR17                              PORT_PCR_REG(PORT1_BASE_PTR,17)
#define PORT1_PCR18                              PORT_PCR_REG(PORT1_BASE_PTR,18)
#define PORT1_PCR19                              PORT_PCR_REG(PORT1_BASE_PTR,19)
#define PORT1_PCR20                              PORT_PCR_REG(PORT1_BASE_PTR,20)
#define PORT1_PCR21                              PORT_PCR_REG(PORT1_BASE_PTR,21)
#define PORT1_PCR22                              PORT_PCR_REG(PORT1_BASE_PTR,22)
#define PORT1_PCR23                              PORT_PCR_REG(PORT1_BASE_PTR,23)
#define PORT1_PCR24                              PORT_PCR_REG(PORT1_BASE_PTR,24)
#define PORT1_PCR25                              PORT_PCR_REG(PORT1_BASE_PTR,25)
#define PORT1_PCR26                              PORT_PCR_REG(PORT1_BASE_PTR,26)
#define PORT1_PCR27                              PORT_PCR_REG(PORT1_BASE_PTR,27)
#define PORT1_PCR28                              PORT_PCR_REG(PORT1_BASE_PTR,28)
#define PORT1_PCR29                              PORT_PCR_REG(PORT1_BASE_PTR,29)
#define PORT1_PCR30                              PORT_PCR_REG(PORT1_BASE_PTR,30)
#define PORT1_PCR31                              PORT_PCR_REG(PORT1_BASE_PTR,31)
#define PORT1_ISFR                               PORT_ISFR_REG(PORT1_BASE_PTR)
#define PORT1_DFER                               PORT_DFER_REG(PORT1_BASE_PTR)
#define PORT1_DFCR                               PORT_DFCR_REG(PORT1_BASE_PTR)
#define PORT1_DFWR                               PORT_DFWR_REG(PORT1_BASE_PTR)
/* PORT2 */
#define PORT2_PCR0                               PORT_PCR_REG(PORT2_BASE_PTR,0)
#define PORT2_PCR1                               PORT_PCR_REG(PORT2_BASE_PTR,1)
#define PORT2_PCR2                               PORT_PCR_REG(PORT2_BASE_PTR,2)
#define PORT2_PCR3                               PORT_PCR_REG(PORT2_BASE_PTR,3)
#define PORT2_PCR4                               PORT_PCR_REG(PORT2_BASE_PTR,4)
#define PORT2_PCR5                               PORT_PCR_REG(PORT2_BASE_PTR,5)
#define PORT2_PCR6                               PORT_PCR_REG(PORT2_BASE_PTR,6)
#define PORT2_PCR7                               PORT_PCR_REG(PORT2_BASE_PTR,7)
#define PORT2_PCR8                               PORT_PCR_REG(PORT2_BASE_PTR,8)
#define PORT2_PCR9                               PORT_PCR_REG(PORT2_BASE_PTR,9)
#define PORT2_PCR10                              PORT_PCR_REG(PORT2_BASE_PTR,10)
#define PORT2_PCR11                              PORT_PCR_REG(PORT2_BASE_PTR,11)
#define PORT2_PCR12                              PORT_PCR_REG(PORT2_BASE_PTR,12)
#define PORT2_PCR13                              PORT_PCR_REG(PORT2_BASE_PTR,13)
#define PORT2_PCR14                              PORT_PCR_REG(PORT2_BASE_PTR,14)
#define PORT2_PCR15                              PORT_PCR_REG(PORT2_BASE_PTR,15)
#define PORT2_PCR16                              PORT_PCR_REG(PORT2_BASE_PTR,16)
#define PORT2_PCR17                              PORT_PCR_REG(PORT2_BASE_PTR,17)
#define PORT2_PCR18                              PORT_PCR_REG(PORT2_BASE_PTR,18)
#define PORT2_PCR19                              PORT_PCR_REG(PORT2_BASE_PTR,19)
#define PORT2_PCR20                              PORT_PCR_REG(PORT2_BASE_PTR,20)
#define PORT2_PCR21                              PORT_PCR_REG(PORT2_BASE_PTR,21)
#define PORT2_PCR22                              PORT_PCR_REG(PORT2_BASE_PTR,22)
#define PORT2_PCR23                              PORT_PCR_REG(PORT2_BASE_PTR,23)
#define PORT2_PCR24                              PORT_PCR_REG(PORT2_BASE_PTR,24)
#define PORT2_PCR25                              PORT_PCR_REG(PORT2_BASE_PTR,25)
#define PORT2_PCR26                              PORT_PCR_REG(PORT2_BASE_PTR,26)
#define PORT2_PCR27                              PORT_PCR_REG(PORT2_BASE_PTR,27)
#define PORT2_PCR28                              PORT_PCR_REG(PORT2_BASE_PTR,28)
#define PORT2_PCR29                              PORT_PCR_REG(PORT2_BASE_PTR,29)
#define PORT2_PCR30                              PORT_PCR_REG(PORT2_BASE_PTR,30)
#define PORT2_PCR31                              PORT_PCR_REG(PORT2_BASE_PTR,31)
#define PORT2_ISFR                               PORT_ISFR_REG(PORT2_BASE_PTR)
#define PORT2_DFER                               PORT_DFER_REG(PORT2_BASE_PTR)
#define PORT2_DFCR                               PORT_DFCR_REG(PORT2_BASE_PTR)
#define PORT2_DFWR                               PORT_DFWR_REG(PORT2_BASE_PTR)
/* PORT3 */
#define PORT3_PCR0                               PORT_PCR_REG(PORT3_BASE_PTR,0)
#define PORT3_PCR1                               PORT_PCR_REG(PORT3_BASE_PTR,1)
#define PORT3_PCR2                               PORT_PCR_REG(PORT3_BASE_PTR,2)
#define PORT3_PCR3                               PORT_PCR_REG(PORT3_BASE_PTR,3)
#define PORT3_PCR4                               PORT_PCR_REG(PORT3_BASE_PTR,4)
#define PORT3_PCR5                               PORT_PCR_REG(PORT3_BASE_PTR,5)
#define PORT3_PCR6                               PORT_PCR_REG(PORT3_BASE_PTR,6)
#define PORT3_PCR7                               PORT_PCR_REG(PORT3_BASE_PTR,7)
#define PORT3_PCR8                               PORT_PCR_REG(PORT3_BASE_PTR,8)
#define PORT3_PCR9                               PORT_PCR_REG(PORT3_BASE_PTR,9)
#define PORT3_PCR10                              PORT_PCR_REG(PORT3_BASE_PTR,10)
#define PORT3_PCR11                              PORT_PCR_REG(PORT3_BASE_PTR,11)
#define PORT3_PCR12                              PORT_PCR_REG(PORT3_BASE_PTR,12)
#define PORT3_PCR13                              PORT_PCR_REG(PORT3_BASE_PTR,13)
#define PORT3_PCR14                              PORT_PCR_REG(PORT3_BASE_PTR,14)
#define PORT3_PCR15                              PORT_PCR_REG(PORT3_BASE_PTR,15)
#define PORT3_PCR16                              PORT_PCR_REG(PORT3_BASE_PTR,16)
#define PORT3_PCR17                              PORT_PCR_REG(PORT3_BASE_PTR,17)
#define PORT3_PCR18                              PORT_PCR_REG(PORT3_BASE_PTR,18)
#define PORT3_PCR19                              PORT_PCR_REG(PORT3_BASE_PTR,19)
#define PORT3_PCR20                              PORT_PCR_REG(PORT3_BASE_PTR,20)
#define PORT3_PCR21                              PORT_PCR_REG(PORT3_BASE_PTR,21)
#define PORT3_PCR22                              PORT_PCR_REG(PORT3_BASE_PTR,22)
#define PORT3_PCR23                              PORT_PCR_REG(PORT3_BASE_PTR,23)
#define PORT3_PCR24                              PORT_PCR_REG(PORT3_BASE_PTR,24)
#define PORT3_PCR25                              PORT_PCR_REG(PORT3_BASE_PTR,25)
#define PORT3_PCR26                              PORT_PCR_REG(PORT3_BASE_PTR,26)
#define PORT3_PCR27                              PORT_PCR_REG(PORT3_BASE_PTR,27)
#define PORT3_PCR28                              PORT_PCR_REG(PORT3_BASE_PTR,28)
#define PORT3_PCR29                              PORT_PCR_REG(PORT3_BASE_PTR,29)
#define PORT3_PCR30                              PORT_PCR_REG(PORT3_BASE_PTR,30)
#define PORT3_PCR31                              PORT_PCR_REG(PORT3_BASE_PTR,31)
#define PORT3_ISFR                               PORT_ISFR_REG(PORT3_BASE_PTR)
#define PORT3_DFER                               PORT_DFER_REG(PORT3_BASE_PTR)
#define PORT3_DFCR                               PORT_DFCR_REG(PORT3_BASE_PTR)
#define PORT3_DFWR                               PORT_DFWR_REG(PORT3_BASE_PTR)
/* PORT4 */
#define PORT4_PCR0                               PORT_PCR_REG(PORT4_BASE_PTR,0)
#define PORT4_PCR1                               PORT_PCR_REG(PORT4_BASE_PTR,1)
#define PORT4_PCR2                               PORT_PCR_REG(PORT4_BASE_PTR,2)
#define PORT4_PCR3                               PORT_PCR_REG(PORT4_BASE_PTR,3)
#define PORT4_PCR4                               PORT_PCR_REG(PORT4_BASE_PTR,4)
#define PORT4_PCR5                               PORT_PCR_REG(PORT4_BASE_PTR,5)
#define PORT4_PCR6                               PORT_PCR_REG(PORT4_BASE_PTR,6)
#define PORT4_PCR7                               PORT_PCR_REG(PORT4_BASE_PTR,7)
#define PORT4_PCR8                               PORT_PCR_REG(PORT4_BASE_PTR,8)
#define PORT4_PCR9                               PORT_PCR_REG(PORT4_BASE_PTR,9)
#define PORT4_PCR10                              PORT_PCR_REG(PORT4_BASE_PTR,10)
#define PORT4_PCR11                              PORT_PCR_REG(PORT4_BASE_PTR,11)
#define PORT4_PCR12                              PORT_PCR_REG(PORT4_BASE_PTR,12)
#define PORT4_PCR13                              PORT_PCR_REG(PORT4_BASE_PTR,13)
#define PORT4_PCR14                              PORT_PCR_REG(PORT4_BASE_PTR,14)
#define PORT4_PCR15                              PORT_PCR_REG(PORT4_BASE_PTR,15)
#define PORT4_PCR16                              PORT_PCR_REG(PORT4_BASE_PTR,16)
#define PORT4_PCR17                              PORT_PCR_REG(PORT4_BASE_PTR,17)
#define PORT4_PCR18                              PORT_PCR_REG(PORT4_BASE_PTR,18)
#define PORT4_PCR19                              PORT_PCR_REG(PORT4_BASE_PTR,19)
#define PORT4_PCR20                              PORT_PCR_REG(PORT4_BASE_PTR,20)
#define PORT4_PCR21                              PORT_PCR_REG(PORT4_BASE_PTR,21)
#define PORT4_PCR22                              PORT_PCR_REG(PORT4_BASE_PTR,22)
#define PORT4_PCR23                              PORT_PCR_REG(PORT4_BASE_PTR,23)
#define PORT4_PCR24                              PORT_PCR_REG(PORT4_BASE_PTR,24)
#define PORT4_PCR25                              PORT_PCR_REG(PORT4_BASE_PTR,25)
#define PORT4_PCR26                              PORT_PCR_REG(PORT4_BASE_PTR,26)
#define PORT4_PCR27                              PORT_PCR_REG(PORT4_BASE_PTR,27)
#define PORT4_PCR28                              PORT_PCR_REG(PORT4_BASE_PTR,28)
#define PORT4_PCR29                              PORT_PCR_REG(PORT4_BASE_PTR,29)
#define PORT4_PCR30                              PORT_PCR_REG(PORT4_BASE_PTR,30)
#define PORT4_PCR31                              PORT_PCR_REG(PORT4_BASE_PTR,31)
#define PORT4_ISFR                               PORT_ISFR_REG(PORT4_BASE_PTR)
#define PORT4_DFER                               PORT_DFER_REG(PORT4_BASE_PTR)
#define PORT4_DFCR                               PORT_DFCR_REG(PORT4_BASE_PTR)
#define PORT4_DFWR                               PORT_DFWR_REG(PORT4_BASE_PTR)

/* PORT - Register array accessors */
#define PORT0_PCR(index)                         PORT_PCR_REG(PORT0_BASE_PTR,index)
#define PORT1_PCR(index)                         PORT_PCR_REG(PORT1_BASE_PTR,index)
#define PORT2_PCR(index)                         PORT_PCR_REG(PORT2_BASE_PTR,index)
#define PORT3_PCR(index)                         PORT_PCR_REG(PORT3_BASE_PTR,index)
#define PORT4_PCR(index)                         PORT_PCR_REG(PORT4_BASE_PTR,index)

/**
 * @}
 */ /* end of group PORT_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group PORT_Peripheral */


/* ----------------------------------------------------------------------------
   -- PTIM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PTIM_Peripheral PTIM
 * @{
 */

/** PTIM - Peripheral register structure */
typedef struct PTIM_MemMap {
  uint8_t RESERVED_0[1536];
  uint32_t LOAD[1];                                /**< Timer Load Register, array offset: 0x600, array step: 0x4 */
  uint32_t CNT[1];                                 /**< Timer Counter Register, array offset: 0x604, array step: 0x4 */
  uint32_t CTRL[1];                                /**< Timer Control Register, array offset: 0x608, array step: 0x4 */
  uint32_t ISTAT[1];                               /**< Timer Interrupt Status Register, array offset: 0x60C, array step: 0x4 */
} volatile *PTIM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PTIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PTIM_Register_Accessor_Macros PTIM - Register accessor macros
 * @{
 */


/* PTIM - Register accessors */
#define PTIM_LOAD_REG(base,index)                ((base)->LOAD[index])
#define PTIM_CNT_REG(base,index)                 ((base)->CNT[index])
#define PTIM_CTRL_REG(base,index)                ((base)->CTRL[index])
#define PTIM_ISTAT_REG(base,index)               ((base)->ISTAT[index])

/**
 * @}
 */ /* end of group PTIM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PTIM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PTIM_Register_Masks PTIM Register Masks
 * @{
 */

/* LOAD Bit Fields */
#define PTIM_LOAD_LOAD_MASK                      0xFFFFFFFFu
#define PTIM_LOAD_LOAD_SHIFT                     0
#define PTIM_LOAD_LOAD(x)                        (((uint32_t)(((uint32_t)(x))<<PTIM_LOAD_LOAD_SHIFT))&PTIM_LOAD_LOAD_MASK)
/* CNT Bit Fields */
#define PTIM_CNT_CNT_MASK                        0xFFFFFFFFu
#define PTIM_CNT_CNT_SHIFT                       0
#define PTIM_CNT_CNT(x)                          (((uint32_t)(((uint32_t)(x))<<PTIM_CNT_CNT_SHIFT))&PTIM_CNT_CNT_MASK)
/* CTRL Bit Fields */
#define PTIM_CTRL_ENA_MASK                       0x1u
#define PTIM_CTRL_ENA_SHIFT                      0
#define PTIM_CTRL_RELOAD_MASK                    0x2u
#define PTIM_CTRL_RELOAD_SHIFT                   1
#define PTIM_CTRL_INT_MASK                       0x4u
#define PTIM_CTRL_INT_SHIFT                      2
#define PTIM_CTRL_PRESC_MASK                     0x7F80u
#define PTIM_CTRL_PRESC_SHIFT                    7
#define PTIM_CTRL_PRESC(x)                       (((uint32_t)(((uint32_t)(x))<<PTIM_CTRL_PRESC_SHIFT))&PTIM_CTRL_PRESC_MASK)
/* ISTAT Bit Fields */
#define PTIM_ISTAT_FLG_MASK                      0x1u
#define PTIM_ISTAT_FLG_SHIFT                     0

/**
 * @}
 */ /* end of group PTIM_Register_Masks */


/* PTIM - Peripheral instance base addresses */
/** Peripheral PTIM base pointer */
#define PTIM_BASE_PTR                            ((PTIM_MemMapPtr)0x40002000u)
/** Array initializer of PTIM peripheral base pointers */
#define PTIM_BASE_PTRS                           { PTIM_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- PTIM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PTIM_Register_Accessor_Macros PTIM - Register accessor macros
 * @{
 */


/* PTIM - Register instance definitions */
/* PTIM */
#define PTIMLOAD                                 PTIM_LOAD_REG(PTIM_BASE_PTR,0)
#define PTIMCNT                                  PTIM_CNT_REG(PTIM_BASE_PTR,0)
#define PTIMCTRL                                 PTIM_CTRL_REG(PTIM_BASE_PTR,0)
#define PTIMISTAT                                PTIM_ISTAT_REG(PTIM_BASE_PTR,0)

/* PTIM - Register array accessors */
#define PTIM_LOAD(index)                         PTIM_LOAD_REG(PTIM_BASE_PTR,index)
#define PTIM_CNT(index)                          PTIM_CNT_REG(PTIM_BASE_PTR,index)
#define PTIM_CTRL(index)                         PTIM_CTRL_REG(PTIM_BASE_PTR,index)
#define PTIM_ISTAT(index)                        PTIM_ISTAT_REG(PTIM_BASE_PTR,index)

/**
 * @}
 */ /* end of group PTIM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group PTIM_Peripheral */


/* ----------------------------------------------------------------------------
   -- PWDOG
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PWDOG_Peripheral PWDOG
 * @{
 */

/** PWDOG - Peripheral register structure */
typedef struct PWDOG_MemMap {
  uint8_t RESERVED_0[1568];
  uint32_t LOAD[1];                                /**< Watchdog Load Register, array offset: 0x620, array step: 0x4 */
  uint32_t CNT[1];                                 /**< Watchdog Counter Register, array offset: 0x624, array step: 0x4 */
  uint32_t CTRL[1];                                /**< Watchdog Control Register, array offset: 0x628, array step: 0x4 */
  uint32_t ISTAT[1];                               /**< Watchdog Interrupt Status Register, array offset: 0x62C, array step: 0x4 */
  uint32_t RSTAT[1];                               /**< Watchdog Reset Status Register, array offset: 0x630, array step: 0x4 */
  uint32_t DIS[1];                                 /**< Watchdog Disable Register, array offset: 0x634, array step: 0x4 */
} volatile *PWDOG_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- PWDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PWDOG_Register_Accessor_Macros PWDOG - Register accessor macros
 * @{
 */


/* PWDOG - Register accessors */
#define PWDOG_LOAD_REG(base,index)               ((base)->LOAD[index])
#define PWDOG_CNT_REG(base,index)                ((base)->CNT[index])
#define PWDOG_CTRL_REG(base,index)               ((base)->CTRL[index])
#define PWDOG_ISTAT_REG(base,index)              ((base)->ISTAT[index])
#define PWDOG_RSTAT_REG(base,index)              ((base)->RSTAT[index])
#define PWDOG_DIS_REG(base,index)                ((base)->DIS[index])

/**
 * @}
 */ /* end of group PWDOG_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- PWDOG Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PWDOG_Register_Masks PWDOG Register Masks
 * @{
 */

/* LOAD Bit Fields */
#define PWDOG_LOAD_LOAD_MASK                     0xFFFFFFFFu
#define PWDOG_LOAD_LOAD_SHIFT                    0
#define PWDOG_LOAD_LOAD(x)                       (((uint32_t)(((uint32_t)(x))<<PWDOG_LOAD_LOAD_SHIFT))&PWDOG_LOAD_LOAD_MASK)
/* CNT Bit Fields */
#define PWDOG_CNT_CNT_MASK                       0xFFFFFFFFu
#define PWDOG_CNT_CNT_SHIFT                      0
#define PWDOG_CNT_CNT(x)                         (((uint32_t)(((uint32_t)(x))<<PWDOG_CNT_CNT_SHIFT))&PWDOG_CNT_CNT_MASK)
/* CTRL Bit Fields */
#define PWDOG_CTRL_ENA_MASK                      0x1u
#define PWDOG_CTRL_ENA_SHIFT                     0
#define PWDOG_CTRL_RELOAD_MASK                   0x2u
#define PWDOG_CTRL_RELOAD_SHIFT                  1
#define PWDOG_CTRL_IT_MASK                       0x4u
#define PWDOG_CTRL_IT_SHIFT                      2
#define PWDOG_CTRL_MODE_MASK                     0x8u
#define PWDOG_CTRL_MODE_SHIFT                    3
#define PWDOG_CTRL_PRESC_MASK                    0xFF00u
#define PWDOG_CTRL_PRESC_SHIFT                   8
#define PWDOG_CTRL_PRESC(x)                      (((uint32_t)(((uint32_t)(x))<<PWDOG_CTRL_PRESC_SHIFT))&PWDOG_CTRL_PRESC_MASK)
/* ISTAT Bit Fields */
#define PWDOG_ISTAT_FLG_MASK                     0x1u
#define PWDOG_ISTAT_FLG_SHIFT                    0
/* RSTAT Bit Fields */
#define PWDOG_RSTAT_FLG_MASK                     0x1u
#define PWDOG_RSTAT_FLG_SHIFT                    0
/* DIS Bit Fields */
#define PWDOG_DIS_DIS_MASK                       0xFFFFFFFFu
#define PWDOG_DIS_DIS_SHIFT                      0
#define PWDOG_DIS_DIS(x)                         (((uint32_t)(((uint32_t)(x))<<PWDOG_DIS_DIS_SHIFT))&PWDOG_DIS_DIS_MASK)

/**
 * @}
 */ /* end of group PWDOG_Register_Masks */


/* PWDOG - Peripheral instance base addresses */
/** Peripheral PWDOG base pointer */
#define PWDOG_BASE_PTR                           ((PWDOG_MemMapPtr)0x40002000u)
/** Array initializer of PWDOG peripheral base pointers */
#define PWDOG_BASE_PTRS                          { PWDOG_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- PWDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup PWDOG_Register_Accessor_Macros PWDOG - Register accessor macros
 * @{
 */


/* PWDOG - Register instance definitions */
/* PWDOG */
#define PWDOGLOAD                                PWDOG_LOAD_REG(PWDOG_BASE_PTR,0)
#define PWDOGCNT                                 PWDOG_CNT_REG(PWDOG_BASE_PTR,0)
#define PWDOGCTRL                                PWDOG_CTRL_REG(PWDOG_BASE_PTR,0)
#define PWDOGISTAT                               PWDOG_ISTAT_REG(PWDOG_BASE_PTR,0)
#define PWDOGRSTAT                               PWDOG_RSTAT_REG(PWDOG_BASE_PTR,0)
#define PWDOGDIS                                 PWDOG_DIS_REG(PWDOG_BASE_PTR,0)

/* PWDOG - Register array accessors */
#define PWDOG_LOAD(index)                        PWDOG_LOAD_REG(PWDOG_BASE_PTR,index)
#define PWDOG_CNT(index)                         PWDOG_CNT_REG(PWDOG_BASE_PTR,index)
#define PWDOG_CTRL(index)                        PWDOG_CTRL_REG(PWDOG_BASE_PTR,index)
#define PWDOG_ISTAT(index)                       PWDOG_ISTAT_REG(PWDOG_BASE_PTR,index)
#define PWDOG_RSTAT(index)                       PWDOG_RSTAT_REG(PWDOG_BASE_PTR,index)
#define PWDOG_DIS(index)                         PWDOG_DIS_REG(PWDOG_BASE_PTR,index)

/**
 * @}
 */ /* end of group PWDOG_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group PWDOG_Peripheral */


/* ----------------------------------------------------------------------------
   -- QuadSPI
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup QuadSPI_Peripheral QuadSPI
 * @{
 */

/** QuadSPI - Peripheral register structure */
typedef struct QuadSPI_MemMap {
  uint32_t MCR;                                    /**< Module Configuration Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  uint32_t IPCR;                                   /**< IP Configuration Register, offset: 0x8 */
  uint32_t FLSHCR;                                 /**< Flash Configuration Register, offset: 0xC */
  uint32_t BUF0CR;                                 /**< Buffer0 Configuration Register, offset: 0x10 */
  uint32_t BUF1CR;                                 /**< Buffer1 Configuration Register, offset: 0x14 */
  uint32_t BUF2CR;                                 /**< Buffer2 Configuration Register, offset: 0x18 */
  uint32_t BUF3CR;                                 /**< Buffer3 Configuration Register, offset: 0x1C */
  uint32_t BFGENCR;                                /**< Buffer Generic Configuration Register, offset: 0x20 */
  uint32_t SOCCR;                                  /**< SOC Configuration Register, offset: 0x24 */
  uint8_t RESERVED_1[8];
  uint32_t BUF0IND;                                /**< Buffer0 Top Index Register, offset: 0x30 */
  uint32_t BUF1IND;                                /**< Buffer1 Top Index Register, offset: 0x34 */
  uint32_t BUF2IND;                                /**< Buffer2 Top Index Register, offset: 0x38 */
  uint8_t RESERVED_2[196];
  uint32_t SFAR;                                   /**< Serial Flash Address Register, offset: 0x100 */
  uint8_t RESERVED_3[4];
  uint32_t SMPR;                                   /**< Sampling Register, offset: 0x108 */
  uint32_t RBSR;                                   /**< RX Buffer Status Register, offset: 0x10C */
  uint32_t RBCT;                                   /**< RX Buffer Control Register, offset: 0x110 */
  uint8_t RESERVED_4[60];
  uint32_t TBSR;                                   /**< TX Buffer Status Register, offset: 0x150 */
  uint32_t TBDR;                                   /**< TX Buffer Data Register, offset: 0x154 */
  uint8_t RESERVED_5[4];
  uint32_t SR;                                     /**< Status Register, offset: 0x15C */
  uint32_t FR;                                     /**< Flag Register, offset: 0x160 */
  uint32_t RSER;                                   /**< Interrupt and DMA Request Select and Enable Register, offset: 0x164 */
  uint32_t SPNDST;                                 /**< Sequence Suspend Status Register, offset: 0x168 */
  uint32_t SPTRCLR;                                /**< Sequence Pointer Clear Register, offset: 0x16C */
  uint8_t RESERVED_6[16];
  uint32_t SFA1AD;                                 /**< Serial Flash A1 Top Address, offset: 0x180 */
  uint32_t SFA2AD;                                 /**< Serial Flash A2 Top Address, offset: 0x184 */
  uint32_t SFB1AD;                                 /**< Serial Flash B1Top Address, offset: 0x188 */
  uint32_t SFB2AD;                                 /**< Serial Flash B2Top Address, offset: 0x18C */
  uint8_t RESERVED_7[112];
  uint32_t RBDR;                                   /**< RX Buffer Data Register, offset: 0x200 */
  uint8_t RESERVED_8[252];
  uint32_t LUTKEY;                                 /**< LUT Key Register, offset: 0x300 */
  uint32_t LCKCR;                                  /**< LUT Lock Configuration Register, offset: 0x304 */
  uint8_t RESERVED_9[8];
  uint32_t LUT[64];                                /**< Look-up Table register, array offset: 0x310, array step: 0x4 */
} volatile *QuadSPI_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- QuadSPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup QuadSPI_Register_Accessor_Macros QuadSPI - Register accessor macros
 * @{
 */


/* QuadSPI - Register accessors */
#define QuadSPI_MCR_REG(base)                    ((base)->MCR)
#define QuadSPI_IPCR_REG(base)                   ((base)->IPCR)
#define QuadSPI_FLSHCR_REG(base)                 ((base)->FLSHCR)
#define QuadSPI_BUF0CR_REG(base)                 ((base)->BUF0CR)
#define QuadSPI_BUF1CR_REG(base)                 ((base)->BUF1CR)
#define QuadSPI_BUF2CR_REG(base)                 ((base)->BUF2CR)
#define QuadSPI_BUF3CR_REG(base)                 ((base)->BUF3CR)
#define QuadSPI_BFGENCR_REG(base)                ((base)->BFGENCR)
#define QuadSPI_SOCCR_REG(base)                  ((base)->SOCCR)
#define QuadSPI_BUF0IND_REG(base)                ((base)->BUF0IND)
#define QuadSPI_BUF1IND_REG(base)                ((base)->BUF1IND)
#define QuadSPI_BUF2IND_REG(base)                ((base)->BUF2IND)
#define QuadSPI_SFAR_REG(base)                   ((base)->SFAR)
#define QuadSPI_SMPR_REG(base)                   ((base)->SMPR)
#define QuadSPI_RBSR_REG(base)                   ((base)->RBSR)
#define QuadSPI_RBCT_REG(base)                   ((base)->RBCT)
#define QuadSPI_TBSR_REG(base)                   ((base)->TBSR)
#define QuadSPI_TBDR_REG(base)                   ((base)->TBDR)
#define QuadSPI_SR_REG(base)                     ((base)->SR)
#define QuadSPI_FR_REG(base)                     ((base)->FR)
#define QuadSPI_RSER_REG(base)                   ((base)->RSER)
#define QuadSPI_SPNDST_REG(base)                 ((base)->SPNDST)
#define QuadSPI_SPTRCLR_REG(base)                ((base)->SPTRCLR)
#define QuadSPI_SFA1AD_REG(base)                 ((base)->SFA1AD)
#define QuadSPI_SFA2AD_REG(base)                 ((base)->SFA2AD)
#define QuadSPI_SFB1AD_REG(base)                 ((base)->SFB1AD)
#define QuadSPI_SFB2AD_REG(base)                 ((base)->SFB2AD)
#define QuadSPI_RBDR_REG(base)                   ((base)->RBDR)
#define QuadSPI_LUTKEY_REG(base)                 ((base)->LUTKEY)
#define QuadSPI_LCKCR_REG(base)                  ((base)->LCKCR)
#define QuadSPI_LUT_REG(base,index)              ((base)->LUT[index])

/**
 * @}
 */ /* end of group QuadSPI_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- QuadSPI Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup QuadSPI_Register_Masks QuadSPI Register Masks
 * @{
 */

/* MCR Bit Fields */
#define QuadSPI_MCR_SWRSTSD_MASK                 0x1u
#define QuadSPI_MCR_SWRSTSD_SHIFT                0
#define QuadSPI_MCR_SWRSTHD_MASK                 0x2u
#define QuadSPI_MCR_SWRSTHD_SHIFT                1
#define QuadSPI_MCR_DQS_EN_MASK                  0x40u
#define QuadSPI_MCR_DQS_EN_SHIFT                 6
#define QuadSPI_MCR_DDR_EN_MASK                  0x80u
#define QuadSPI_MCR_DDR_EN_SHIFT                 7
#define QuadSPI_MCR_CLR_RXF_MASK                 0x400u
#define QuadSPI_MCR_CLR_RXF_SHIFT                10
#define QuadSPI_MCR_CLR_TXF_MASK                 0x800u
#define QuadSPI_MCR_CLR_TXF_SHIFT                11
#define QuadSPI_MCR_MDIS_MASK                    0x4000u
#define QuadSPI_MCR_MDIS_SHIFT                   14
#define QuadSPI_MCR_DOZE_MASK                    0x8000u
#define QuadSPI_MCR_DOZE_SHIFT                   15
/* IPCR Bit Fields */
#define QuadSPI_IPCR_IDATSZ_MASK                 0xFFFFu
#define QuadSPI_IPCR_IDATSZ_SHIFT                0
#define QuadSPI_IPCR_IDATSZ(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_IPCR_IDATSZ_SHIFT))&QuadSPI_IPCR_IDATSZ_MASK)
#define QuadSPI_IPCR_PAR_EN_MASK                 0x10000u
#define QuadSPI_IPCR_PAR_EN_SHIFT                16
#define QuadSPI_IPCR_SEQID_MASK                  0xF000000u
#define QuadSPI_IPCR_SEQID_SHIFT                 24
#define QuadSPI_IPCR_SEQID(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_IPCR_SEQID_SHIFT))&QuadSPI_IPCR_SEQID_MASK)
/* FLSHCR Bit Fields */
#define QuadSPI_FLSHCR_TCSS_MASK                 0xFu
#define QuadSPI_FLSHCR_TCSS_SHIFT                0
#define QuadSPI_FLSHCR_TCSS(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_FLSHCR_TCSS_SHIFT))&QuadSPI_FLSHCR_TCSS_MASK)
#define QuadSPI_FLSHCR_TCSH_MASK                 0xF00u
#define QuadSPI_FLSHCR_TCSH_SHIFT                8
#define QuadSPI_FLSHCR_TCSH(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_FLSHCR_TCSH_SHIFT))&QuadSPI_FLSHCR_TCSH_MASK)
/* BUF0CR Bit Fields */
#define QuadSPI_BUF0CR_MSTRID_MASK               0xFu
#define QuadSPI_BUF0CR_MSTRID_SHIFT              0
#define QuadSPI_BUF0CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF0CR_MSTRID_SHIFT))&QuadSPI_BUF0CR_MSTRID_MASK)
#define QuadSPI_BUF0CR_ADATSZ_MASK               0xFF00u
#define QuadSPI_BUF0CR_ADATSZ_SHIFT              8
#define QuadSPI_BUF0CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF0CR_ADATSZ_SHIFT))&QuadSPI_BUF0CR_ADATSZ_MASK)
#define QuadSPI_BUF0CR_HP_EN_MASK                0x80000000u
#define QuadSPI_BUF0CR_HP_EN_SHIFT               31
/* BUF1CR Bit Fields */
#define QuadSPI_BUF1CR_MSTRID_MASK               0xFu
#define QuadSPI_BUF1CR_MSTRID_SHIFT              0
#define QuadSPI_BUF1CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF1CR_MSTRID_SHIFT))&QuadSPI_BUF1CR_MSTRID_MASK)
#define QuadSPI_BUF1CR_ADATSZ_MASK               0xFF00u
#define QuadSPI_BUF1CR_ADATSZ_SHIFT              8
#define QuadSPI_BUF1CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF1CR_ADATSZ_SHIFT))&QuadSPI_BUF1CR_ADATSZ_MASK)
/* BUF2CR Bit Fields */
#define QuadSPI_BUF2CR_MSTRID_MASK               0xFu
#define QuadSPI_BUF2CR_MSTRID_SHIFT              0
#define QuadSPI_BUF2CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF2CR_MSTRID_SHIFT))&QuadSPI_BUF2CR_MSTRID_MASK)
#define QuadSPI_BUF2CR_ADATSZ_MASK               0xFF00u
#define QuadSPI_BUF2CR_ADATSZ_SHIFT              8
#define QuadSPI_BUF2CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF2CR_ADATSZ_SHIFT))&QuadSPI_BUF2CR_ADATSZ_MASK)
/* BUF3CR Bit Fields */
#define QuadSPI_BUF3CR_MSTRID_MASK               0xFu
#define QuadSPI_BUF3CR_MSTRID_SHIFT              0
#define QuadSPI_BUF3CR_MSTRID(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF3CR_MSTRID_SHIFT))&QuadSPI_BUF3CR_MSTRID_MASK)
#define QuadSPI_BUF3CR_ADATSZ_MASK               0xFF00u
#define QuadSPI_BUF3CR_ADATSZ_SHIFT              8
#define QuadSPI_BUF3CR_ADATSZ(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF3CR_ADATSZ_SHIFT))&QuadSPI_BUF3CR_ADATSZ_MASK)
#define QuadSPI_BUF3CR_ALLMST_MASK               0x80000000u
#define QuadSPI_BUF3CR_ALLMST_SHIFT              31
/* BFGENCR Bit Fields */
#define QuadSPI_BFGENCR_SEQID_MASK               0xF000u
#define QuadSPI_BFGENCR_SEQID_SHIFT              12
#define QuadSPI_BFGENCR_SEQID(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_BFGENCR_SEQID_SHIFT))&QuadSPI_BFGENCR_SEQID_MASK)
#define QuadSPI_BFGENCR_PAR_EN_MASK              0x10000u
#define QuadSPI_BFGENCR_PAR_EN_SHIFT             16
/* SOCCR Bit Fields */
#define QuadSPI_SOCCR_SOCCFG_MASK                0xFFu
#define QuadSPI_SOCCR_SOCCFG_SHIFT               0
#define QuadSPI_SOCCR_SOCCFG(x)                  (((uint32_t)(((uint32_t)(x))<<QuadSPI_SOCCR_SOCCFG_SHIFT))&QuadSPI_SOCCR_SOCCFG_MASK)
/* BUF0IND Bit Fields */
#define QuadSPI_BUF0IND_TPINDX0_MASK             0xFFFFFFF8u
#define QuadSPI_BUF0IND_TPINDX0_SHIFT            3
#define QuadSPI_BUF0IND_TPINDX0(x)               (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF0IND_TPINDX0_SHIFT))&QuadSPI_BUF0IND_TPINDX0_MASK)
/* BUF1IND Bit Fields */
#define QuadSPI_BUF1IND_TPINDX1_MASK             0xFFFFFFF8u
#define QuadSPI_BUF1IND_TPINDX1_SHIFT            3
#define QuadSPI_BUF1IND_TPINDX1(x)               (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF1IND_TPINDX1_SHIFT))&QuadSPI_BUF1IND_TPINDX1_MASK)
/* BUF2IND Bit Fields */
#define QuadSPI_BUF2IND_TPINDX2_MASK             0xFFFFFFF8u
#define QuadSPI_BUF2IND_TPINDX2_SHIFT            3
#define QuadSPI_BUF2IND_TPINDX2(x)               (((uint32_t)(((uint32_t)(x))<<QuadSPI_BUF2IND_TPINDX2_SHIFT))&QuadSPI_BUF2IND_TPINDX2_MASK)
/* SFAR Bit Fields */
#define QuadSPI_SFAR_SFADR_MASK                  0xFFFFFFFFu
#define QuadSPI_SFAR_SFADR_SHIFT                 0
#define QuadSPI_SFAR_SFADR(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_SFAR_SFADR_SHIFT))&QuadSPI_SFAR_SFADR_MASK)
/* SMPR Bit Fields */
#define QuadSPI_SMPR_HSENA_MASK                  0x1u
#define QuadSPI_SMPR_HSENA_SHIFT                 0
#define QuadSPI_SMPR_HSPHS_MASK                  0x2u
#define QuadSPI_SMPR_HSPHS_SHIFT                 1
#define QuadSPI_SMPR_HSDLY_MASK                  0x4u
#define QuadSPI_SMPR_HSDLY_SHIFT                 2
#define QuadSPI_SMPR_FSPHS_MASK                  0x20u
#define QuadSPI_SMPR_FSPHS_SHIFT                 5
#define QuadSPI_SMPR_FSDLY_MASK                  0x40u
#define QuadSPI_SMPR_FSDLY_SHIFT                 6
#define QuadSPI_SMPR_DDRSMP_MASK                 0x70000u
#define QuadSPI_SMPR_DDRSMP_SHIFT                16
#define QuadSPI_SMPR_DDRSMP(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_SMPR_DDRSMP_SHIFT))&QuadSPI_SMPR_DDRSMP_MASK)
/* RBSR Bit Fields */
#define QuadSPI_RBSR_RDBFL_MASK                  0x3F00u
#define QuadSPI_RBSR_RDBFL_SHIFT                 8
#define QuadSPI_RBSR_RDBFL(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_RBSR_RDBFL_SHIFT))&QuadSPI_RBSR_RDBFL_MASK)
#define QuadSPI_RBSR_RDCTR_MASK                  0xFFFF0000u
#define QuadSPI_RBSR_RDCTR_SHIFT                 16
#define QuadSPI_RBSR_RDCTR(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_RBSR_RDCTR_SHIFT))&QuadSPI_RBSR_RDCTR_MASK)
/* RBCT Bit Fields */
#define QuadSPI_RBCT_WMRK_MASK                   0x1Fu
#define QuadSPI_RBCT_WMRK_SHIFT                  0
#define QuadSPI_RBCT_WMRK(x)                     (((uint32_t)(((uint32_t)(x))<<QuadSPI_RBCT_WMRK_SHIFT))&QuadSPI_RBCT_WMRK_MASK)
#define QuadSPI_RBCT_RXBRD_MASK                  0x100u
#define QuadSPI_RBCT_RXBRD_SHIFT                 8
/* TBSR Bit Fields */
#define QuadSPI_TBSR_TRBFL_MASK                  0x1F00u
#define QuadSPI_TBSR_TRBFL_SHIFT                 8
#define QuadSPI_TBSR_TRBFL(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_TBSR_TRBFL_SHIFT))&QuadSPI_TBSR_TRBFL_MASK)
#define QuadSPI_TBSR_TRCTR_MASK                  0xFFFF0000u
#define QuadSPI_TBSR_TRCTR_SHIFT                 16
#define QuadSPI_TBSR_TRCTR(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_TBSR_TRCTR_SHIFT))&QuadSPI_TBSR_TRCTR_MASK)
/* TBDR Bit Fields */
#define QuadSPI_TBDR_TXDATA_MASK                 0xFFFFFFFFu
#define QuadSPI_TBDR_TXDATA_SHIFT                0
#define QuadSPI_TBDR_TXDATA(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_TBDR_TXDATA_SHIFT))&QuadSPI_TBDR_TXDATA_MASK)
/* SR Bit Fields */
#define QuadSPI_SR_BUSY_MASK                     0x1u
#define QuadSPI_SR_BUSY_SHIFT                    0
#define QuadSPI_SR_IP_ACC_MASK                   0x2u
#define QuadSPI_SR_IP_ACC_SHIFT                  1
#define QuadSPI_SR_AHB_ACC_MASK                  0x4u
#define QuadSPI_SR_AHB_ACC_SHIFT                 2
#define QuadSPI_SR_AHBGNT_MASK                   0x20u
#define QuadSPI_SR_AHBGNT_SHIFT                  5
#define QuadSPI_SR_AHBTRN_MASK                   0x40u
#define QuadSPI_SR_AHBTRN_SHIFT                  6
#define QuadSPI_SR_AHB0NE_MASK                   0x80u
#define QuadSPI_SR_AHB0NE_SHIFT                  7
#define QuadSPI_SR_AHB1NE_MASK                   0x100u
#define QuadSPI_SR_AHB1NE_SHIFT                  8
#define QuadSPI_SR_AHB2NE_MASK                   0x200u
#define QuadSPI_SR_AHB2NE_SHIFT                  9
#define QuadSPI_SR_AHB3NE_MASK                   0x400u
#define QuadSPI_SR_AHB3NE_SHIFT                  10
#define QuadSPI_SR_AHB0FUL_MASK                  0x800u
#define QuadSPI_SR_AHB0FUL_SHIFT                 11
#define QuadSPI_SR_AHB1FUL_MASK                  0x1000u
#define QuadSPI_SR_AHB1FUL_SHIFT                 12
#define QuadSPI_SR_AHB2FUL_MASK                  0x2000u
#define QuadSPI_SR_AHB2FUL_SHIFT                 13
#define QuadSPI_SR_AHB3FUL_MASK                  0x4000u
#define QuadSPI_SR_AHB3FUL_SHIFT                 14
#define QuadSPI_SR_RXWE_MASK                     0x8000u
#define QuadSPI_SR_RXWE_SHIFT                    15
#define QuadSPI_SR_RXFULL_MASK                   0x80000u
#define QuadSPI_SR_RXFULL_SHIFT                  19
#define QuadSPI_SR_RXDMA_MASK                    0x800000u
#define QuadSPI_SR_RXDMA_SHIFT                   23
#define QuadSPI_SR_TXNE_MASK                     0x1000000u
#define QuadSPI_SR_TXNE_SHIFT                    24
#define QuadSPI_SR_TXFULL_MASK                   0x8000000u
#define QuadSPI_SR_TXFULL_SHIFT                  27
#define QuadSPI_SR_DLPSMP_MASK                   0xE0000000u
#define QuadSPI_SR_DLPSMP_SHIFT                  29
#define QuadSPI_SR_DLPSMP(x)                     (((uint32_t)(((uint32_t)(x))<<QuadSPI_SR_DLPSMP_SHIFT))&QuadSPI_SR_DLPSMP_MASK)
/* FR Bit Fields */
#define QuadSPI_FR_TFF_MASK                      0x1u
#define QuadSPI_FR_TFF_SHIFT                     0
#define QuadSPI_FR_IPGEF_MASK                    0x10u
#define QuadSPI_FR_IPGEF_SHIFT                   4
#define QuadSPI_FR_IPIEF_MASK                    0x40u
#define QuadSPI_FR_IPIEF_SHIFT                   6
#define QuadSPI_FR_IPAEF_MASK                    0x80u
#define QuadSPI_FR_IPAEF_SHIFT                   7
#define QuadSPI_FR_IUEF_MASK                     0x800u
#define QuadSPI_FR_IUEF_SHIFT                    11
#define QuadSPI_FR_ABOF_MASK                     0x1000u
#define QuadSPI_FR_ABOF_SHIFT                    12
#define QuadSPI_FR_ABSEF_MASK                    0x8000u
#define QuadSPI_FR_ABSEF_SHIFT                   15
#define QuadSPI_FR_RBDF_MASK                     0x10000u
#define QuadSPI_FR_RBDF_SHIFT                    16
#define QuadSPI_FR_RBOF_MASK                     0x20000u
#define QuadSPI_FR_RBOF_SHIFT                    17
#define QuadSPI_FR_ILLINE_MASK                   0x800000u
#define QuadSPI_FR_ILLINE_SHIFT                  23
#define QuadSPI_FR_TBUF_MASK                     0x4000000u
#define QuadSPI_FR_TBUF_SHIFT                    26
#define QuadSPI_FR_TBFF_MASK                     0x8000000u
#define QuadSPI_FR_TBFF_SHIFT                    27
#define QuadSPI_FR_DLPFF_MASK                    0x80000000u
#define QuadSPI_FR_DLPFF_SHIFT                   31
/* RSER Bit Fields */
#define QuadSPI_RSER_TFIE_MASK                   0x1u
#define QuadSPI_RSER_TFIE_SHIFT                  0
#define QuadSPI_RSER_IPGEIE_MASK                 0x10u
#define QuadSPI_RSER_IPGEIE_SHIFT                4
#define QuadSPI_RSER_IPIEIE_MASK                 0x40u
#define QuadSPI_RSER_IPIEIE_SHIFT                6
#define QuadSPI_RSER_IPAEIE_MASK                 0x80u
#define QuadSPI_RSER_IPAEIE_SHIFT                7
#define QuadSPI_RSER_IUEIE_MASK                  0x800u
#define QuadSPI_RSER_IUEIE_SHIFT                 11
#define QuadSPI_RSER_ABOIE_MASK                  0x1000u
#define QuadSPI_RSER_ABOIE_SHIFT                 12
#define QuadSPI_RSER_ABSEIE_MASK                 0x8000u
#define QuadSPI_RSER_ABSEIE_SHIFT                15
#define QuadSPI_RSER_RBDIE_MASK                  0x10000u
#define QuadSPI_RSER_RBDIE_SHIFT                 16
#define QuadSPI_RSER_RBOIE_MASK                  0x20000u
#define QuadSPI_RSER_RBOIE_SHIFT                 17
#define QuadSPI_RSER_RBDDE_MASK                  0x200000u
#define QuadSPI_RSER_RBDDE_SHIFT                 21
#define QuadSPI_RSER_ILLINIE_MASK                0x800000u
#define QuadSPI_RSER_ILLINIE_SHIFT               23
#define QuadSPI_RSER_TBUIE_MASK                  0x4000000u
#define QuadSPI_RSER_TBUIE_SHIFT                 26
#define QuadSPI_RSER_TBFIE_MASK                  0x8000000u
#define QuadSPI_RSER_TBFIE_SHIFT                 27
#define QuadSPI_RSER_DLPFIE_MASK                 0x80000000u
#define QuadSPI_RSER_DLPFIE_SHIFT                31
/* SPNDST Bit Fields */
#define QuadSPI_SPNDST_SUSPND_MASK               0x1u
#define QuadSPI_SPNDST_SUSPND_SHIFT              0
#define QuadSPI_SPNDST_SPDBUF_MASK               0xC0u
#define QuadSPI_SPNDST_SPDBUF_SHIFT              6
#define QuadSPI_SPNDST_SPDBUF(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SPNDST_SPDBUF_SHIFT))&QuadSPI_SPNDST_SPDBUF_MASK)
#define QuadSPI_SPNDST_DATLFT_MASK               0xFE00u
#define QuadSPI_SPNDST_DATLFT_SHIFT              9
#define QuadSPI_SPNDST_DATLFT(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SPNDST_DATLFT_SHIFT))&QuadSPI_SPNDST_DATLFT_MASK)
/* SPTRCLR Bit Fields */
#define QuadSPI_SPTRCLR_BFPTRC_MASK              0x1u
#define QuadSPI_SPTRCLR_BFPTRC_SHIFT             0
#define QuadSPI_SPTRCLR_IPPTRC_MASK              0x100u
#define QuadSPI_SPTRCLR_IPPTRC_SHIFT             8
/* SFA1AD Bit Fields */
#define QuadSPI_SFA1AD_TPADA1_MASK               0xFFFFFC00u
#define QuadSPI_SFA1AD_TPADA1_SHIFT              10
#define QuadSPI_SFA1AD_TPADA1(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SFA1AD_TPADA1_SHIFT))&QuadSPI_SFA1AD_TPADA1_MASK)
/* SFA2AD Bit Fields */
#define QuadSPI_SFA2AD_TPADA2_MASK               0xFFFFFC00u
#define QuadSPI_SFA2AD_TPADA2_SHIFT              10
#define QuadSPI_SFA2AD_TPADA2(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SFA2AD_TPADA2_SHIFT))&QuadSPI_SFA2AD_TPADA2_MASK)
/* SFB1AD Bit Fields */
#define QuadSPI_SFB1AD_TPADB1_MASK               0xFFFFFC00u
#define QuadSPI_SFB1AD_TPADB1_SHIFT              10
#define QuadSPI_SFB1AD_TPADB1(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SFB1AD_TPADB1_SHIFT))&QuadSPI_SFB1AD_TPADB1_MASK)
/* SFB2AD Bit Fields */
#define QuadSPI_SFB2AD_TPADB2_MASK               0xFFFFFC00u
#define QuadSPI_SFB2AD_TPADB2_SHIFT              10
#define QuadSPI_SFB2AD_TPADB2(x)                 (((uint32_t)(((uint32_t)(x))<<QuadSPI_SFB2AD_TPADB2_SHIFT))&QuadSPI_SFB2AD_TPADB2_MASK)
/* RBDR Bit Fields */
#define QuadSPI_RBDR_RXDATA_MASK                 0xFFFFFFFFu
#define QuadSPI_RBDR_RXDATA_SHIFT                0
#define QuadSPI_RBDR_RXDATA(x)                   (((uint32_t)(((uint32_t)(x))<<QuadSPI_RBDR_RXDATA_SHIFT))&QuadSPI_RBDR_RXDATA_MASK)
/* LUTKEY Bit Fields */
#define QuadSPI_LUTKEY_KEY_MASK                  0xFFFFFFFFu
#define QuadSPI_LUTKEY_KEY_SHIFT                 0
#define QuadSPI_LUTKEY_KEY(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUTKEY_KEY_SHIFT))&QuadSPI_LUTKEY_KEY_MASK)
/* LCKCR Bit Fields */
#define QuadSPI_LCKCR_LOCK_MASK                  0x1u
#define QuadSPI_LCKCR_LOCK_SHIFT                 0
#define QuadSPI_LCKCR_UNLOCK_MASK                0x2u
#define QuadSPI_LCKCR_UNLOCK_SHIFT               1
/* LUT Bit Fields */
#define QuadSPI_LUT_OPRND0_MASK                  0xFFu
#define QuadSPI_LUT_OPRND0_SHIFT                 0
#define QuadSPI_LUT_OPRND0(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_OPRND0_SHIFT))&QuadSPI_LUT_OPRND0_MASK)
#define QuadSPI_LUT_PAD0_MASK                    0x300u
#define QuadSPI_LUT_PAD0_SHIFT                   8
#define QuadSPI_LUT_PAD0(x)                      (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_PAD0_SHIFT))&QuadSPI_LUT_PAD0_MASK)
#define QuadSPI_LUT_INSTR0_MASK                  0xFC00u
#define QuadSPI_LUT_INSTR0_SHIFT                 10
#define QuadSPI_LUT_INSTR0(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_INSTR0_SHIFT))&QuadSPI_LUT_INSTR0_MASK)
#define QuadSPI_LUT_OPRND1_MASK                  0xFF0000u
#define QuadSPI_LUT_OPRND1_SHIFT                 16
#define QuadSPI_LUT_OPRND1(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_OPRND1_SHIFT))&QuadSPI_LUT_OPRND1_MASK)
#define QuadSPI_LUT_PAD1_MASK                    0x3000000u
#define QuadSPI_LUT_PAD1_SHIFT                   24
#define QuadSPI_LUT_PAD1(x)                      (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_PAD1_SHIFT))&QuadSPI_LUT_PAD1_MASK)
#define QuadSPI_LUT_INSTR1_MASK                  0xFC000000u
#define QuadSPI_LUT_INSTR1_SHIFT                 26
#define QuadSPI_LUT_INSTR1(x)                    (((uint32_t)(((uint32_t)(x))<<QuadSPI_LUT_INSTR1_SHIFT))&QuadSPI_LUT_INSTR1_MASK)

/**
 * @}
 */ /* end of group QuadSPI_Register_Masks */


/* QuadSPI - Peripheral instance base addresses */
/** Peripheral QuadSPI0 base pointer */
#define QuadSPI0_BASE_PTR                        ((QuadSPI_MemMapPtr)0x40044000u)
/** Peripheral QuadSPI1 base pointer */
#define QuadSPI1_BASE_PTR                        ((QuadSPI_MemMapPtr)0x400C4000u)
/** Array initializer of QuadSPI peripheral base pointers */
#define QuadSPI_BASE_PTRS                        { QuadSPI0_BASE_PTR, QuadSPI1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- QuadSPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup QuadSPI_Register_Accessor_Macros QuadSPI - Register accessor macros
 * @{
 */


/* QuadSPI - Register instance definitions */
/* QuadSPI0 */
#define QuadSPI0_MCR                             QuadSPI_MCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_IPCR                            QuadSPI_IPCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_FLSHCR                          QuadSPI_FLSHCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF0CR                          QuadSPI_BUF0CR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF1CR                          QuadSPI_BUF1CR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF2CR                          QuadSPI_BUF2CR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF3CR                          QuadSPI_BUF3CR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BFGENCR                         QuadSPI_BFGENCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SOCCR                           QuadSPI_SOCCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF0IND                         QuadSPI_BUF0IND_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF1IND                         QuadSPI_BUF1IND_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_BUF2IND                         QuadSPI_BUF2IND_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SFAR                            QuadSPI_SFAR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SMPR                            QuadSPI_SMPR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_RBSR                            QuadSPI_RBSR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_RBCT                            QuadSPI_RBCT_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_TBSR                            QuadSPI_TBSR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_TBDR                            QuadSPI_TBDR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SR                              QuadSPI_SR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_FR                              QuadSPI_FR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_RSER                            QuadSPI_RSER_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SPNDST                          QuadSPI_SPNDST_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SPTRCLR                         QuadSPI_SPTRCLR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SFA1AD                          QuadSPI_SFA1AD_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SFA2AD                          QuadSPI_SFA2AD_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SFB1AD                          QuadSPI_SFB1AD_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_SFB2AD                          QuadSPI_SFB2AD_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_RBDR                            QuadSPI_RBDR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_LUTKEY                          QuadSPI_LUTKEY_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_LCKCR                           QuadSPI_LCKCR_REG(QuadSPI0_BASE_PTR)
#define QuadSPI0_LUT0                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,0)
#define QuadSPI0_LUT1                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,1)
#define QuadSPI0_LUT2                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,2)
#define QuadSPI0_LUT3                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,3)
#define QuadSPI0_LUT4                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,4)
#define QuadSPI0_LUT5                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,5)
#define QuadSPI0_LUT6                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,6)
#define QuadSPI0_LUT7                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,7)
#define QuadSPI0_LUT8                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,8)
#define QuadSPI0_LUT9                            QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,9)
#define QuadSPI0_LUT10                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,10)
#define QuadSPI0_LUT11                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,11)
#define QuadSPI0_LUT12                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,12)
#define QuadSPI0_LUT13                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,13)
#define QuadSPI0_LUT14                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,14)
#define QuadSPI0_LUT15                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,15)
#define QuadSPI0_LUT16                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,16)
#define QuadSPI0_LUT17                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,17)
#define QuadSPI0_LUT18                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,18)
#define QuadSPI0_LUT19                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,19)
#define QuadSPI0_LUT20                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,20)
#define QuadSPI0_LUT21                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,21)
#define QuadSPI0_LUT22                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,22)
#define QuadSPI0_LUT23                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,23)
#define QuadSPI0_LUT24                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,24)
#define QuadSPI0_LUT25                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,25)
#define QuadSPI0_LUT26                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,26)
#define QuadSPI0_LUT27                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,27)
#define QuadSPI0_LUT28                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,28)
#define QuadSPI0_LUT29                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,29)
#define QuadSPI0_LUT30                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,30)
#define QuadSPI0_LUT31                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,31)
#define QuadSPI0_LUT32                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,32)
#define QuadSPI0_LUT33                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,33)
#define QuadSPI0_LUT34                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,34)
#define QuadSPI0_LUT35                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,35)
#define QuadSPI0_LUT36                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,36)
#define QuadSPI0_LUT37                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,37)
#define QuadSPI0_LUT38                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,38)
#define QuadSPI0_LUT39                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,39)
#define QuadSPI0_LUT40                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,40)
#define QuadSPI0_LUT41                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,41)
#define QuadSPI0_LUT42                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,42)
#define QuadSPI0_LUT43                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,43)
#define QuadSPI0_LUT44                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,44)
#define QuadSPI0_LUT45                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,45)
#define QuadSPI0_LUT46                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,46)
#define QuadSPI0_LUT47                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,47)
#define QuadSPI0_LUT48                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,48)
#define QuadSPI0_LUT49                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,49)
#define QuadSPI0_LUT50                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,50)
#define QuadSPI0_LUT51                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,51)
#define QuadSPI0_LUT52                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,52)
#define QuadSPI0_LUT53                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,53)
#define QuadSPI0_LUT54                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,54)
#define QuadSPI0_LUT55                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,55)
#define QuadSPI0_LUT56                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,56)
#define QuadSPI0_LUT57                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,57)
#define QuadSPI0_LUT58                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,58)
#define QuadSPI0_LUT59                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,59)
#define QuadSPI0_LUT60                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,60)
#define QuadSPI0_LUT61                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,61)
#define QuadSPI0_LUT62                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,62)
#define QuadSPI0_LUT63                           QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,63)
/* QuadSPI1 */
#define QuadSPI1_MCR                             QuadSPI_MCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_IPCR                            QuadSPI_IPCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_FLSHCR                          QuadSPI_FLSHCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF0CR                          QuadSPI_BUF0CR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF1CR                          QuadSPI_BUF1CR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF2CR                          QuadSPI_BUF2CR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF3CR                          QuadSPI_BUF3CR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BFGENCR                         QuadSPI_BFGENCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SOCCR                           QuadSPI_SOCCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF0IND                         QuadSPI_BUF0IND_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF1IND                         QuadSPI_BUF1IND_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_BUF2IND                         QuadSPI_BUF2IND_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SFAR                            QuadSPI_SFAR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SMPR                            QuadSPI_SMPR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_RBSR                            QuadSPI_RBSR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_RBCT                            QuadSPI_RBCT_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_TBSR                            QuadSPI_TBSR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_TBDR                            QuadSPI_TBDR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SR                              QuadSPI_SR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_FR                              QuadSPI_FR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_RSER                            QuadSPI_RSER_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SPNDST                          QuadSPI_SPNDST_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SPTRCLR                         QuadSPI_SPTRCLR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SFA1AD                          QuadSPI_SFA1AD_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SFA2AD                          QuadSPI_SFA2AD_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SFB1AD                          QuadSPI_SFB1AD_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_SFB2AD                          QuadSPI_SFB2AD_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_RBDR                            QuadSPI_RBDR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_LUTKEY                          QuadSPI_LUTKEY_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_LCKCR                           QuadSPI_LCKCR_REG(QuadSPI1_BASE_PTR)
#define QuadSPI1_LUT0                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,0)
#define QuadSPI1_LUT1                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,1)
#define QuadSPI1_LUT2                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,2)
#define QuadSPI1_LUT3                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,3)
#define QuadSPI1_LUT4                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,4)
#define QuadSPI1_LUT5                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,5)
#define QuadSPI1_LUT6                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,6)
#define QuadSPI1_LUT7                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,7)
#define QuadSPI1_LUT8                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,8)
#define QuadSPI1_LUT9                            QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,9)
#define QuadSPI1_LUT10                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,10)
#define QuadSPI1_LUT11                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,11)
#define QuadSPI1_LUT12                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,12)
#define QuadSPI1_LUT13                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,13)
#define QuadSPI1_LUT14                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,14)
#define QuadSPI1_LUT15                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,15)
#define QuadSPI1_LUT16                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,16)
#define QuadSPI1_LUT17                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,17)
#define QuadSPI1_LUT18                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,18)
#define QuadSPI1_LUT19                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,19)
#define QuadSPI1_LUT20                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,20)
#define QuadSPI1_LUT21                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,21)
#define QuadSPI1_LUT22                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,22)
#define QuadSPI1_LUT23                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,23)
#define QuadSPI1_LUT24                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,24)
#define QuadSPI1_LUT25                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,25)
#define QuadSPI1_LUT26                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,26)
#define QuadSPI1_LUT27                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,27)
#define QuadSPI1_LUT28                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,28)
#define QuadSPI1_LUT29                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,29)
#define QuadSPI1_LUT30                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,30)
#define QuadSPI1_LUT31                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,31)
#define QuadSPI1_LUT32                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,32)
#define QuadSPI1_LUT33                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,33)
#define QuadSPI1_LUT34                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,34)
#define QuadSPI1_LUT35                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,35)
#define QuadSPI1_LUT36                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,36)
#define QuadSPI1_LUT37                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,37)
#define QuadSPI1_LUT38                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,38)
#define QuadSPI1_LUT39                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,39)
#define QuadSPI1_LUT40                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,40)
#define QuadSPI1_LUT41                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,41)
#define QuadSPI1_LUT42                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,42)
#define QuadSPI1_LUT43                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,43)
#define QuadSPI1_LUT44                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,44)
#define QuadSPI1_LUT45                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,45)
#define QuadSPI1_LUT46                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,46)
#define QuadSPI1_LUT47                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,47)
#define QuadSPI1_LUT48                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,48)
#define QuadSPI1_LUT49                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,49)
#define QuadSPI1_LUT50                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,50)
#define QuadSPI1_LUT51                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,51)
#define QuadSPI1_LUT52                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,52)
#define QuadSPI1_LUT53                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,53)
#define QuadSPI1_LUT54                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,54)
#define QuadSPI1_LUT55                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,55)
#define QuadSPI1_LUT56                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,56)
#define QuadSPI1_LUT57                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,57)
#define QuadSPI1_LUT58                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,58)
#define QuadSPI1_LUT59                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,59)
#define QuadSPI1_LUT60                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,60)
#define QuadSPI1_LUT61                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,61)
#define QuadSPI1_LUT62                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,62)
#define QuadSPI1_LUT63                           QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,63)

/* QuadSPI - Register array accessors */
#define QuadSPI0_LUT(index)                      QuadSPI_LUT_REG(QuadSPI0_BASE_PTR,index)
#define QuadSPI1_LUT(index)                      QuadSPI_LUT_REG(QuadSPI1_BASE_PTR,index)

/**
 * @}
 */ /* end of group QuadSPI_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group QuadSPI_Peripheral */


/* ----------------------------------------------------------------------------
   -- RLE_DEC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup RLE_DEC_Peripheral RLE_DEC
 * @{
 */

/** RLE_DEC - Peripheral register structure */
typedef struct RLE_DEC_MemMap {
  uint32_t MCR;                                    /**< Module Configuration Register, offset: 0x0 */
  uint32_t ICR;                                    /**< Image Configuration Register, offset: 0x4 */
  uint32_t CISR;                                   /**< Compressed Image Size Register, offset: 0x8 */
  uint32_t DICR;                                   /**< Decompressed Image Co-ordinates register, offset: 0xC */
  uint32_t SR;                                     /**< Status Register, offset: 0x10 */
  uint32_t ISR;                                    /**< Interrupt Request Status Register, offset: 0x14 */
  uint32_t RIER;                                   /**< Interrupt Request Enable Register, offset: 0x18 */
  uint32_t SPCR;                                   /**< Start Pixel Co-ordinate Register of Image, offset: 0x1C */
  uint32_t EPCR;                                   /**< End Pixel Co-ordinate Register of Image, offset: 0x20 */
} volatile *RLE_DEC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- RLE_DEC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup RLE_DEC_Register_Accessor_Macros RLE_DEC - Register accessor macros
 * @{
 */


/* RLE_DEC - Register accessors */
#define RLE_DEC_MCR_REG(base)                    ((base)->MCR)
#define RLE_DEC_ICR_REG(base)                    ((base)->ICR)
#define RLE_DEC_CISR_REG(base)                   ((base)->CISR)
#define RLE_DEC_DICR_REG(base)                   ((base)->DICR)
#define RLE_DEC_SR_REG(base)                     ((base)->SR)
#define RLE_DEC_ISR_REG(base)                    ((base)->ISR)
#define RLE_DEC_RIER_REG(base)                   ((base)->RIER)
#define RLE_DEC_SPCR_REG(base)                   ((base)->SPCR)
#define RLE_DEC_EPCR_REG(base)                   ((base)->EPCR)

/**
 * @}
 */ /* end of group RLE_DEC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- RLE_DEC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup RLE_DEC_Register_Masks RLE_DEC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define RLE_DEC_MCR_MDIS_MASK                    0x1u
#define RLE_DEC_MCR_MDIS_SHIFT                   0
#define RLE_DEC_MCR_TXFFEN_MASK                  0x4u
#define RLE_DEC_MCR_TXFFEN_SHIFT                 2
#define RLE_DEC_MCR_GRLE_EN_MASK                 0x8u
#define RLE_DEC_MCR_GRLE_EN_SHIFT                3
#define RLE_DEC_MCR_TX_FIFO_THRESHOLD_MASK       0xFF0000u
#define RLE_DEC_MCR_TX_FIFO_THRESHOLD_SHIFT      16
#define RLE_DEC_MCR_TX_FIFO_THRESHOLD(x)         (((uint32_t)(((uint32_t)(x))<<RLE_DEC_MCR_TX_FIFO_THRESHOLD_SHIFT))&RLE_DEC_MCR_TX_FIFO_THRESHOLD_MASK)
#define RLE_DEC_MCR_RX_FIFO_THRESHOLD_MASK       0xFF000000u
#define RLE_DEC_MCR_RX_FIFO_THRESHOLD_SHIFT      24
#define RLE_DEC_MCR_RX_FIFO_THRESHOLD(x)         (((uint32_t)(((uint32_t)(x))<<RLE_DEC_MCR_RX_FIFO_THRESHOLD_SHIFT))&RLE_DEC_MCR_RX_FIFO_THRESHOLD_MASK)
/* ICR Bit Fields */
#define RLE_DEC_ICR_WIDTH_MASK                   0x3u
#define RLE_DEC_ICR_WIDTH_SHIFT                  0
#define RLE_DEC_ICR_WIDTH(x)                     (((uint32_t)(((uint32_t)(x))<<RLE_DEC_ICR_WIDTH_SHIFT))&RLE_DEC_ICR_WIDTH_MASK)
/* CISR Bit Fields */
#define RLE_DEC_CISR_SIZE_MASK                   0xFFFFFFFFu
#define RLE_DEC_CISR_SIZE_SHIFT                  0
#define RLE_DEC_CISR_SIZE(x)                     (((uint32_t)(((uint32_t)(x))<<RLE_DEC_CISR_SIZE_SHIFT))&RLE_DEC_CISR_SIZE_MASK)
/* DICR Bit Fields */
#define RLE_DEC_DICR_Y_MASK                      0xFFFFu
#define RLE_DEC_DICR_Y_SHIFT                     0
#define RLE_DEC_DICR_Y(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_DICR_Y_SHIFT))&RLE_DEC_DICR_Y_MASK)
#define RLE_DEC_DICR_X_MASK                      0xFFFF0000u
#define RLE_DEC_DICR_X_SHIFT                     16
#define RLE_DEC_DICR_X(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_DICR_X_SHIFT))&RLE_DEC_DICR_X_MASK)
/* SR Bit Fields */
#define RLE_DEC_SR_TXFILL_MASK                   0xFFu
#define RLE_DEC_SR_TXFILL_SHIFT                  0
#define RLE_DEC_SR_TXFILL(x)                     (((uint32_t)(((uint32_t)(x))<<RLE_DEC_SR_TXFILL_SHIFT))&RLE_DEC_SR_TXFILL_MASK)
#define RLE_DEC_SR_RXFREE_MASK                   0xFF00u
#define RLE_DEC_SR_RXFREE_SHIFT                  8
#define RLE_DEC_SR_RXFREE(x)                     (((uint32_t)(((uint32_t)(x))<<RLE_DEC_SR_RXFREE_SHIFT))&RLE_DEC_SR_RXFREE_MASK)
/* ISR Bit Fields */
#define RLE_DEC_ISR_TXEIF_MASK                   0x1u
#define RLE_DEC_ISR_TXEIF_SHIFT                  0
#define RLE_DEC_ISR_RXEIF_MASK                   0x2u
#define RLE_DEC_ISR_RXEIF_SHIFT                  1
#define RLE_DEC_ISR_TXFIF_MASK                   0x4u
#define RLE_DEC_ISR_TXFIF_SHIFT                  2
#define RLE_DEC_ISR_RXFIF_MASK                   0x8u
#define RLE_DEC_ISR_RXFIF_SHIFT                  3
#define RLE_DEC_ISR_TXUIF_MASK                   0x10u
#define RLE_DEC_ISR_TXUIF_SHIFT                  4
#define RLE_DEC_ISR_RXUIF_MASK                   0x20u
#define RLE_DEC_ISR_RXUIF_SHIFT                  5
#define RLE_DEC_ISR_TXDIF_MASK                   0x40u
#define RLE_DEC_ISR_TXDIF_SHIFT                  6
#define RLE_DEC_ISR_RXDIF_MASK                   0x80u
#define RLE_DEC_ISR_RXDIF_SHIFT                  7
/* RIER Bit Fields */
#define RLE_DEC_RIER_TXEIE_MASK                  0x1u
#define RLE_DEC_RIER_TXEIE_SHIFT                 0
#define RLE_DEC_RIER_RXEIE_MASK                  0x2u
#define RLE_DEC_RIER_RXEIE_SHIFT                 1
#define RLE_DEC_RIER_TXFIE_MASK                  0x4u
#define RLE_DEC_RIER_TXFIE_SHIFT                 2
#define RLE_DEC_RIER_RXFIE_MASK                  0x8u
#define RLE_DEC_RIER_RXFIE_SHIFT                 3
#define RLE_DEC_RIER_TXUIE_MASK                  0x10u
#define RLE_DEC_RIER_TXUIE_SHIFT                 4
#define RLE_DEC_RIER_RXUIE_MASK                  0x20u
#define RLE_DEC_RIER_RXUIE_SHIFT                 5
#define RLE_DEC_RIER_TXDIE_MASK                  0x40u
#define RLE_DEC_RIER_TXDIE_SHIFT                 6
#define RLE_DEC_RIER_RXDIE_MASK                  0x80u
#define RLE_DEC_RIER_RXDIE_SHIFT                 7
/* SPCR Bit Fields */
#define RLE_DEC_SPCR_Y_MASK                      0xFFFFu
#define RLE_DEC_SPCR_Y_SHIFT                     0
#define RLE_DEC_SPCR_Y(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_SPCR_Y_SHIFT))&RLE_DEC_SPCR_Y_MASK)
#define RLE_DEC_SPCR_X_MASK                      0xFFFF0000u
#define RLE_DEC_SPCR_X_SHIFT                     16
#define RLE_DEC_SPCR_X(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_SPCR_X_SHIFT))&RLE_DEC_SPCR_X_MASK)
/* EPCR Bit Fields */
#define RLE_DEC_EPCR_Y_MASK                      0xFFFFu
#define RLE_DEC_EPCR_Y_SHIFT                     0
#define RLE_DEC_EPCR_Y(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_EPCR_Y_SHIFT))&RLE_DEC_EPCR_Y_MASK)
#define RLE_DEC_EPCR_X_MASK                      0xFFFF0000u
#define RLE_DEC_EPCR_X_SHIFT                     16
#define RLE_DEC_EPCR_X(x)                        (((uint32_t)(((uint32_t)(x))<<RLE_DEC_EPCR_X_SHIFT))&RLE_DEC_EPCR_X_MASK)

/**
 * @}
 */ /* end of group RLE_DEC_Register_Masks */


/* RLE_DEC - Peripheral instance base addresses */
/** Peripheral RLE_DEC base pointer */
#define RLE_DEC_BASE_PTR                         ((RLE_DEC_MemMapPtr)0x40042000u)
/** Array initializer of RLE_DEC peripheral base pointers */
#define RLE_DEC_BASE_PTRS                        { RLE_DEC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- RLE_DEC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup RLE_DEC_Register_Accessor_Macros RLE_DEC - Register accessor macros
 * @{
 */


/* RLE_DEC - Register instance definitions */
/* RLE_DEC */
#define RLE_DEC_MCR                              RLE_DEC_MCR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_ICR                              RLE_DEC_ICR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_CISR                             RLE_DEC_CISR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_DICR                             RLE_DEC_DICR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_SR                               RLE_DEC_SR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_ISR                              RLE_DEC_ISR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_RIER                             RLE_DEC_RIER_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_SPCR                             RLE_DEC_SPCR_REG(RLE_DEC_BASE_PTR)
#define RLE_DEC_EPCR                             RLE_DEC_EPCR_REG(RLE_DEC_BASE_PTR)

/**
 * @}
 */ /* end of group RLE_DEC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group RLE_DEC_Peripheral */


/* ----------------------------------------------------------------------------
   -- SCB
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCB_Peripheral SCB
 * @{
 */

/** SCB - Peripheral register structure */
typedef struct SCB_MemMap {
  uint8_t RESERVED_0[8];
  uint32_t ACTLR;                                  /**< Auxiliary Control Register,, offset: 0x8 */
  uint8_t RESERVED_1[3316];
  uint32_t CPUID;                                  /**< CPUID Base Register, offset: 0xD00 */
  uint32_t ICSR;                                   /**< Interrupt Control and State Register, offset: 0xD04 */
  uint32_t VTOR;                                   /**< Vector Table Offset Register, offset: 0xD08 */
  uint32_t AIRCR;                                  /**< Application Interrupt and Reset Control Register, offset: 0xD0C */
  uint32_t SCR;                                    /**< System Control Register, offset: 0xD10 */
  uint32_t CCR;                                    /**< Configuration and Control Register, offset: 0xD14 */
  uint32_t SHPR1;                                  /**< System Handler Priority Register 1, offset: 0xD18 */
  uint32_t SHPR2;                                  /**< System Handler Priority Register 2, offset: 0xD1C */
  uint32_t SHPR3;                                  /**< System Handler Priority Register 3, offset: 0xD20 */
  uint32_t SHCSR;                                  /**< System Handler Control and State Register, offset: 0xD24 */
  uint32_t CFSR;                                   /**< Configurable Fault Status Registers, offset: 0xD28 */
  uint32_t HFSR;                                   /**< HardFault Status register, offset: 0xD2C */
  uint32_t DFSR;                                   /**< Debug Fault Status Register, offset: 0xD30 */
  uint32_t MMFAR;                                  /**< MemManage Address Register, offset: 0xD34 */
  uint32_t BFAR;                                   /**< BusFault Address Register, offset: 0xD38 */
  uint32_t AFSR;                                   /**< Auxiliary Fault Status Register, offset: 0xD3C */
} volatile *SCB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SCB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCB_Register_Accessor_Macros SCB - Register accessor macros
 * @{
 */


/* SCB - Register accessors */
#define SCB_ACTLR_REG(base)                      ((base)->ACTLR)
#define SCB_CPUID_REG(base)                      ((base)->CPUID)
#define SCB_ICSR_REG(base)                       ((base)->ICSR)
#define SCB_VTOR_REG(base)                       ((base)->VTOR)
#define SCB_AIRCR_REG(base)                      ((base)->AIRCR)
#define SCB_SCR_REG(base)                        ((base)->SCR)
#define SCB_CCR_REG(base)                        ((base)->CCR)
#define SCB_SHPR1_REG(base)                      ((base)->SHPR1)
#define SCB_SHPR2_REG(base)                      ((base)->SHPR2)
#define SCB_SHPR3_REG(base)                      ((base)->SHPR3)
#define SCB_SHCSR_REG(base)                      ((base)->SHCSR)
#define SCB_CFSR_REG(base)                       ((base)->CFSR)
#define SCB_HFSR_REG(base)                       ((base)->HFSR)
#define SCB_DFSR_REG(base)                       ((base)->DFSR)
#define SCB_MMFAR_REG(base)                      ((base)->MMFAR)
#define SCB_BFAR_REG(base)                       ((base)->BFAR)
#define SCB_AFSR_REG(base)                       ((base)->AFSR)

/**
 * @}
 */ /* end of group SCB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SCB Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCB_Register_Masks SCB Register Masks
 * @{
 */

/* ACTLR Bit Fields */
#define SCB_ACTLR_DISMCYCINT_MASK                0x1u
#define SCB_ACTLR_DISMCYCINT_SHIFT               0
#define SCB_ACTLR_DISDEFWBUF_MASK                0x2u
#define SCB_ACTLR_DISDEFWBUF_SHIFT               1
#define SCB_ACTLR_DISFOLD_MASK                   0x4u
#define SCB_ACTLR_DISFOLD_SHIFT                  2
/* CPUID Bit Fields */
#define SCB_CPUID_REVISION_MASK                  0xFu
#define SCB_CPUID_REVISION_SHIFT                 0
#define SCB_CPUID_REVISION(x)                    (((uint32_t)(((uint32_t)(x))<<SCB_CPUID_REVISION_SHIFT))&SCB_CPUID_REVISION_MASK)
#define SCB_CPUID_PARTNO_MASK                    0xFFF0u
#define SCB_CPUID_PARTNO_SHIFT                   4
#define SCB_CPUID_PARTNO(x)                      (((uint32_t)(((uint32_t)(x))<<SCB_CPUID_PARTNO_SHIFT))&SCB_CPUID_PARTNO_MASK)
#define SCB_CPUID_VARIANT_MASK                   0xF00000u
#define SCB_CPUID_VARIANT_SHIFT                  20
#define SCB_CPUID_VARIANT(x)                     (((uint32_t)(((uint32_t)(x))<<SCB_CPUID_VARIANT_SHIFT))&SCB_CPUID_VARIANT_MASK)
#define SCB_CPUID_IMPLEMENTER_MASK               0xFF000000u
#define SCB_CPUID_IMPLEMENTER_SHIFT              24
#define SCB_CPUID_IMPLEMENTER(x)                 (((uint32_t)(((uint32_t)(x))<<SCB_CPUID_IMPLEMENTER_SHIFT))&SCB_CPUID_IMPLEMENTER_MASK)
/* ICSR Bit Fields */
#define SCB_ICSR_VECTACTIVE_MASK                 0x1FFu
#define SCB_ICSR_VECTACTIVE_SHIFT                0
#define SCB_ICSR_VECTACTIVE(x)                   (((uint32_t)(((uint32_t)(x))<<SCB_ICSR_VECTACTIVE_SHIFT))&SCB_ICSR_VECTACTIVE_MASK)
#define SCB_ICSR_RETTOBASE_MASK                  0x800u
#define SCB_ICSR_RETTOBASE_SHIFT                 11
#define SCB_ICSR_VECTPENDING_MASK                0x3F000u
#define SCB_ICSR_VECTPENDING_SHIFT               12
#define SCB_ICSR_VECTPENDING(x)                  (((uint32_t)(((uint32_t)(x))<<SCB_ICSR_VECTPENDING_SHIFT))&SCB_ICSR_VECTPENDING_MASK)
#define SCB_ICSR_ISRPENDING_MASK                 0x400000u
#define SCB_ICSR_ISRPENDING_SHIFT                22
#define SCB_ICSR_ISRPREEMPT_MASK                 0x800000u
#define SCB_ICSR_ISRPREEMPT_SHIFT                23
#define SCB_ICSR_PENDSTCLR_MASK                  0x2000000u
#define SCB_ICSR_PENDSTCLR_SHIFT                 25
#define SCB_ICSR_PENDSTSET_MASK                  0x4000000u
#define SCB_ICSR_PENDSTSET_SHIFT                 26
#define SCB_ICSR_PENDSVCLR_MASK                  0x8000000u
#define SCB_ICSR_PENDSVCLR_SHIFT                 27
#define SCB_ICSR_PENDSVSET_MASK                  0x10000000u
#define SCB_ICSR_PENDSVSET_SHIFT                 28
#define SCB_ICSR_NMIPENDSET_MASK                 0x80000000u
#define SCB_ICSR_NMIPENDSET_SHIFT                31
/* VTOR Bit Fields */
#define SCB_VTOR_TBLOFF_MASK                     0xFFFFFF80u
#define SCB_VTOR_TBLOFF_SHIFT                    7
#define SCB_VTOR_TBLOFF(x)                       (((uint32_t)(((uint32_t)(x))<<SCB_VTOR_TBLOFF_SHIFT))&SCB_VTOR_TBLOFF_MASK)
/* AIRCR Bit Fields */
#define SCB_AIRCR_VECTRESET_MASK                 0x1u
#define SCB_AIRCR_VECTRESET_SHIFT                0
#define SCB_AIRCR_VECTCLRACTIVE_MASK             0x2u
#define SCB_AIRCR_VECTCLRACTIVE_SHIFT            1
#define SCB_AIRCR_SYSRESETREQ_MASK               0x4u
#define SCB_AIRCR_SYSRESETREQ_SHIFT              2
#define SCB_AIRCR_PRIGROUP_MASK                  0x700u
#define SCB_AIRCR_PRIGROUP_SHIFT                 8
#define SCB_AIRCR_PRIGROUP(x)                    (((uint32_t)(((uint32_t)(x))<<SCB_AIRCR_PRIGROUP_SHIFT))&SCB_AIRCR_PRIGROUP_MASK)
#define SCB_AIRCR_ENDIANNESS_MASK                0x8000u
#define SCB_AIRCR_ENDIANNESS_SHIFT               15
#define SCB_AIRCR_VECTKEY_MASK                   0xFFFF0000u
#define SCB_AIRCR_VECTKEY_SHIFT                  16
#define SCB_AIRCR_VECTKEY(x)                     (((uint32_t)(((uint32_t)(x))<<SCB_AIRCR_VECTKEY_SHIFT))&SCB_AIRCR_VECTKEY_MASK)
/* SCR Bit Fields */
#define SCB_SCR_SLEEPONEXIT_MASK                 0x2u
#define SCB_SCR_SLEEPONEXIT_SHIFT                1
#define SCB_SCR_SLEEPDEEP_MASK                   0x4u
#define SCB_SCR_SLEEPDEEP_SHIFT                  2
#define SCB_SCR_SEVONPEND_MASK                   0x10u
#define SCB_SCR_SEVONPEND_SHIFT                  4
/* CCR Bit Fields */
#define SCB_CCR_NONBASETHRDENA_MASK              0x1u
#define SCB_CCR_NONBASETHRDENA_SHIFT             0
#define SCB_CCR_USERSETMPEND_MASK                0x2u
#define SCB_CCR_USERSETMPEND_SHIFT               1
#define SCB_CCR_UNALIGN_TRP_MASK                 0x8u
#define SCB_CCR_UNALIGN_TRP_SHIFT                3
#define SCB_CCR_DIV_0_TRP_MASK                   0x10u
#define SCB_CCR_DIV_0_TRP_SHIFT                  4
#define SCB_CCR_BFHFNMIGN_MASK                   0x100u
#define SCB_CCR_BFHFNMIGN_SHIFT                  8
#define SCB_CCR_STKALIGN_MASK                    0x200u
#define SCB_CCR_STKALIGN_SHIFT                   9
/* SHPR1 Bit Fields */
#define SCB_SHPR1_PRI_4_MASK                     0xFFu
#define SCB_SHPR1_PRI_4_SHIFT                    0
#define SCB_SHPR1_PRI_4(x)                       (((uint32_t)(((uint32_t)(x))<<SCB_SHPR1_PRI_4_SHIFT))&SCB_SHPR1_PRI_4_MASK)
#define SCB_SHPR1_PRI_5_MASK                     0xFF00u
#define SCB_SHPR1_PRI_5_SHIFT                    8
#define SCB_SHPR1_PRI_5(x)                       (((uint32_t)(((uint32_t)(x))<<SCB_SHPR1_PRI_5_SHIFT))&SCB_SHPR1_PRI_5_MASK)
#define SCB_SHPR1_PRI_6_MASK                     0xFF0000u
#define SCB_SHPR1_PRI_6_SHIFT                    16
#define SCB_SHPR1_PRI_6(x)                       (((uint32_t)(((uint32_t)(x))<<SCB_SHPR1_PRI_6_SHIFT))&SCB_SHPR1_PRI_6_MASK)
/* SHPR2 Bit Fields */
#define SCB_SHPR2_PRI_11_MASK                    0xFF000000u
#define SCB_SHPR2_PRI_11_SHIFT                   24
#define SCB_SHPR2_PRI_11(x)                      (((uint32_t)(((uint32_t)(x))<<SCB_SHPR2_PRI_11_SHIFT))&SCB_SHPR2_PRI_11_MASK)
/* SHPR3 Bit Fields */
#define SCB_SHPR3_PRI_14_MASK                    0xFF0000u
#define SCB_SHPR3_PRI_14_SHIFT                   16
#define SCB_SHPR3_PRI_14(x)                      (((uint32_t)(((uint32_t)(x))<<SCB_SHPR3_PRI_14_SHIFT))&SCB_SHPR3_PRI_14_MASK)
#define SCB_SHPR3_PRI_15_MASK                    0xFF000000u
#define SCB_SHPR3_PRI_15_SHIFT                   24
#define SCB_SHPR3_PRI_15(x)                      (((uint32_t)(((uint32_t)(x))<<SCB_SHPR3_PRI_15_SHIFT))&SCB_SHPR3_PRI_15_MASK)
/* SHCSR Bit Fields */
#define SCB_SHCSR_MEMFAULTACT_MASK               0x1u
#define SCB_SHCSR_MEMFAULTACT_SHIFT              0
#define SCB_SHCSR_BUSFAULTACT_MASK               0x2u
#define SCB_SHCSR_BUSFAULTACT_SHIFT              1
#define SCB_SHCSR_USGFAULTACT_MASK               0x8u
#define SCB_SHCSR_USGFAULTACT_SHIFT              3
#define SCB_SHCSR_SVCALLACT_MASK                 0x80u
#define SCB_SHCSR_SVCALLACT_SHIFT                7
#define SCB_SHCSR_MONITORACT_MASK                0x100u
#define SCB_SHCSR_MONITORACT_SHIFT               8
#define SCB_SHCSR_PENDSVACT_MASK                 0x400u
#define SCB_SHCSR_PENDSVACT_SHIFT                10
#define SCB_SHCSR_SYSTICKACT_MASK                0x800u
#define SCB_SHCSR_SYSTICKACT_SHIFT               11
#define SCB_SHCSR_USGFAULTPENDED_MASK            0x1000u
#define SCB_SHCSR_USGFAULTPENDED_SHIFT           12
#define SCB_SHCSR_MEMFAULTPENDED_MASK            0x2000u
#define SCB_SHCSR_MEMFAULTPENDED_SHIFT           13
#define SCB_SHCSR_BUSFAULTPENDED_MASK            0x4000u
#define SCB_SHCSR_BUSFAULTPENDED_SHIFT           14
#define SCB_SHCSR_SVCALLPENDED_MASK              0x8000u
#define SCB_SHCSR_SVCALLPENDED_SHIFT             15
#define SCB_SHCSR_MEMFAULTENA_MASK               0x10000u
#define SCB_SHCSR_MEMFAULTENA_SHIFT              16
#define SCB_SHCSR_BUSFAULTENA_MASK               0x20000u
#define SCB_SHCSR_BUSFAULTENA_SHIFT              17
#define SCB_SHCSR_USGFAULTENA_MASK               0x40000u
#define SCB_SHCSR_USGFAULTENA_SHIFT              18
/* CFSR Bit Fields */
#define SCB_CFSR_IACCVIOL_MASK                   0x1u
#define SCB_CFSR_IACCVIOL_SHIFT                  0
#define SCB_CFSR_DACCVIOL_MASK                   0x2u
#define SCB_CFSR_DACCVIOL_SHIFT                  1
#define SCB_CFSR_MUNSTKERR_MASK                  0x8u
#define SCB_CFSR_MUNSTKERR_SHIFT                 3
#define SCB_CFSR_MSTKERR_MASK                    0x10u
#define SCB_CFSR_MSTKERR_SHIFT                   4
#define SCB_CFSR_MLSPERR_MASK                    0x20u
#define SCB_CFSR_MLSPERR_SHIFT                   5
#define SCB_CFSR_MMARVALID_MASK                  0x80u
#define SCB_CFSR_MMARVALID_SHIFT                 7
#define SCB_CFSR_IBUSERR_MASK                    0x100u
#define SCB_CFSR_IBUSERR_SHIFT                   8
#define SCB_CFSR_PRECISERR_MASK                  0x200u
#define SCB_CFSR_PRECISERR_SHIFT                 9
#define SCB_CFSR_IMPRECISERR_MASK                0x400u
#define SCB_CFSR_IMPRECISERR_SHIFT               10
#define SCB_CFSR_UNSTKERR_MASK                   0x800u
#define SCB_CFSR_UNSTKERR_SHIFT                  11
#define SCB_CFSR_STKERR_MASK                     0x1000u
#define SCB_CFSR_STKERR_SHIFT                    12
#define SCB_CFSR_LSPERR_MASK                     0x2000u
#define SCB_CFSR_LSPERR_SHIFT                    13
#define SCB_CFSR_BFARVALID_MASK                  0x8000u
#define SCB_CFSR_BFARVALID_SHIFT                 15
#define SCB_CFSR_UNDEFINSTR_MASK                 0x10000u
#define SCB_CFSR_UNDEFINSTR_SHIFT                16
#define SCB_CFSR_INVSTATE_MASK                   0x20000u
#define SCB_CFSR_INVSTATE_SHIFT                  17
#define SCB_CFSR_INVPC_MASK                      0x40000u
#define SCB_CFSR_INVPC_SHIFT                     18
#define SCB_CFSR_NOCP_MASK                       0x80000u
#define SCB_CFSR_NOCP_SHIFT                      19
#define SCB_CFSR_UNALIGNED_MASK                  0x1000000u
#define SCB_CFSR_UNALIGNED_SHIFT                 24
#define SCB_CFSR_DIVBYZERO_MASK                  0x2000000u
#define SCB_CFSR_DIVBYZERO_SHIFT                 25
/* HFSR Bit Fields */
#define SCB_HFSR_VECTTBL_MASK                    0x2u
#define SCB_HFSR_VECTTBL_SHIFT                   1
#define SCB_HFSR_FORCED_MASK                     0x40000000u
#define SCB_HFSR_FORCED_SHIFT                    30
#define SCB_HFSR_DEBUGEVT_MASK                   0x80000000u
#define SCB_HFSR_DEBUGEVT_SHIFT                  31
/* DFSR Bit Fields */
#define SCB_DFSR_HALTED_MASK                     0x1u
#define SCB_DFSR_HALTED_SHIFT                    0
#define SCB_DFSR_BKPT_MASK                       0x2u
#define SCB_DFSR_BKPT_SHIFT                      1
#define SCB_DFSR_DWTTRAP_MASK                    0x4u
#define SCB_DFSR_DWTTRAP_SHIFT                   2
#define SCB_DFSR_VCATCH_MASK                     0x8u
#define SCB_DFSR_VCATCH_SHIFT                    3
#define SCB_DFSR_EXTERNAL_MASK                   0x10u
#define SCB_DFSR_EXTERNAL_SHIFT                  4
/* MMFAR Bit Fields */
#define SCB_MMFAR_ADDRESS_MASK                   0xFFFFFFFFu
#define SCB_MMFAR_ADDRESS_SHIFT                  0
#define SCB_MMFAR_ADDRESS(x)                     (((uint32_t)(((uint32_t)(x))<<SCB_MMFAR_ADDRESS_SHIFT))&SCB_MMFAR_ADDRESS_MASK)
/* BFAR Bit Fields */
#define SCB_BFAR_ADDRESS_MASK                    0xFFFFFFFFu
#define SCB_BFAR_ADDRESS_SHIFT                   0
#define SCB_BFAR_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<SCB_BFAR_ADDRESS_SHIFT))&SCB_BFAR_ADDRESS_MASK)
/* AFSR Bit Fields */
#define SCB_AFSR_AUXFAULT_MASK                   0xFFFFFFFFu
#define SCB_AFSR_AUXFAULT_SHIFT                  0
#define SCB_AFSR_AUXFAULT(x)                     (((uint32_t)(((uint32_t)(x))<<SCB_AFSR_AUXFAULT_SHIFT))&SCB_AFSR_AUXFAULT_MASK)

/**
 * @}
 */ /* end of group SCB_Register_Masks */


/* SCB - Peripheral instance base addresses */
/** Peripheral SystemControl base pointer */
#define SystemControl_BASE_PTR                   ((SCB_MemMapPtr)0xE000E000u)
/** Array initializer of SCB peripheral base pointers */
#define SCB_BASE_PTRS                            { SystemControl_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SCB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCB_Register_Accessor_Macros SCB - Register accessor macros
 * @{
 */


/* SCB - Register instance definitions */
/* SystemControl */
#define SCB_ACTLR                                SCB_ACTLR_REG(SystemControl_BASE_PTR)
#define SCB_CPUID                                SCB_CPUID_REG(SystemControl_BASE_PTR)
#define SCB_ICSR                                 SCB_ICSR_REG(SystemControl_BASE_PTR)
#define SCB_VTOR                                 SCB_VTOR_REG(SystemControl_BASE_PTR)
#define SCB_AIRCR                                SCB_AIRCR_REG(SystemControl_BASE_PTR)
#define SCB_SCR                                  SCB_SCR_REG(SystemControl_BASE_PTR)
#define SCB_CCR                                  SCB_CCR_REG(SystemControl_BASE_PTR)
#define SCB_SHPR1                                SCB_SHPR1_REG(SystemControl_BASE_PTR)
#define SCB_SHPR2                                SCB_SHPR2_REG(SystemControl_BASE_PTR)
#define SCB_SHPR3                                SCB_SHPR3_REG(SystemControl_BASE_PTR)
#define SCB_SHCSR                                SCB_SHCSR_REG(SystemControl_BASE_PTR)
#define SCB_CFSR                                 SCB_CFSR_REG(SystemControl_BASE_PTR)
#define SCB_HFSR                                 SCB_HFSR_REG(SystemControl_BASE_PTR)
#define SCB_DFSR                                 SCB_DFSR_REG(SystemControl_BASE_PTR)
#define SCB_MMFAR                                SCB_MMFAR_REG(SystemControl_BASE_PTR)
#define SCB_BFAR                                 SCB_BFAR_REG(SystemControl_BASE_PTR)
#define SCB_AFSR                                 SCB_AFSR_REG(SystemControl_BASE_PTR)

/**
 * @}
 */ /* end of group SCB_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SCB_Peripheral */


/* ----------------------------------------------------------------------------
   -- SCSC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCSC_Peripheral SCSC
 * @{
 */

/** SCSC - Peripheral register structure */
typedef struct SCSC_MemMap {
  uint32_t SIRC_CTR;                               /**< SIRC Control Register, offset: 0x0 */
  uint32_t SOSC_CTR;                               /**< SOSC Control, offset: 0x4 */
} volatile *SCSC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SCSC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCSC_Register_Accessor_Macros SCSC - Register accessor macros
 * @{
 */


/* SCSC - Register accessors */
#define SCSC_SIRC_CTR_REG(base)                  ((base)->SIRC_CTR)
#define SCSC_SOSC_CTR_REG(base)                  ((base)->SOSC_CTR)

/**
 * @}
 */ /* end of group SCSC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SCSC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCSC_Register_Masks SCSC Register Masks
 * @{
 */

/* SIRC_CTR Bit Fields */
#define SCSC_SIRC_CTR_SIRC_EN_MASK               0x1u
#define SCSC_SIRC_CTR_SIRC_EN_SHIFT              0
#define SCSC_SIRC_CTR_SIRC_EN_ON_FAIL_MASK       0x10u
#define SCSC_SIRC_CTR_SIRC_EN_ON_FAIL_SHIFT      4
#define SCSC_SIRC_CTR_SIRC_DIV_MASK              0x7F00u
#define SCSC_SIRC_CTR_SIRC_DIV_SHIFT             8
#define SCSC_SIRC_CTR_SIRC_DIV(x)                (((uint32_t)(((uint32_t)(x))<<SCSC_SIRC_CTR_SIRC_DIV_SHIFT))&SCSC_SIRC_CTR_SIRC_DIV_MASK)
#define SCSC_SIRC_CTR_Reseved_MASK               0xFFFF8000u
#define SCSC_SIRC_CTR_Reseved_SHIFT              15
#define SCSC_SIRC_CTR_Reseved(x)                 (((uint32_t)(((uint32_t)(x))<<SCSC_SIRC_CTR_Reseved_SHIFT))&SCSC_SIRC_CTR_Reseved_MASK)
/* SOSC_CTR Bit Fields */
#define SCSC_SOSC_CTR_SOSC_EN_MASK               0x1u
#define SCSC_SOSC_CTR_SOSC_EN_SHIFT              0
#define SCSC_SOSC_CTR_SOSC_BYPASS_MASK           0x10u
#define SCSC_SOSC_CTR_SOSC_BYPASS_SHIFT          4

/**
 * @}
 */ /* end of group SCSC_Register_Masks */


/* SCSC - Peripheral instance base addresses */
/** Peripheral SCSC base pointer */
#define SCSC_BASE_PTR                            ((SCSC_MemMapPtr)0x40052000u)
/** Array initializer of SCSC peripheral base pointers */
#define SCSC_BASE_PTRS                           { SCSC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SCSC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCSC_Register_Accessor_Macros SCSC - Register accessor macros
 * @{
 */


/* SCSC - Register instance definitions */
/* SCSC */
#define SCSC_SIRC_CTR                            SCSC_SIRC_CTR_REG(SCSC_BASE_PTR)
#define SCSC_SOSC_CTR                            SCSC_SOSC_CTR_REG(SCSC_BASE_PTR)

/**
 * @}
 */ /* end of group SCSC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SCSC_Peripheral */


/* ----------------------------------------------------------------------------
   -- SCU
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCU_Peripheral SCU
 * @{
 */

/** SCU - Peripheral register structure */
typedef struct SCU_MemMap {
  uint32_t CTRL[1];                                /**< SCU Control Register, array offset: 0x0, array step: 0x4 */
  uint32_t CNF[1];                                 /**< SCU Configuration Register, array offset: 0x4, array step: 0x4 */
  uint32_t PWRS[1];                                /**< SCU CPU Power Status Register, array offset: 0x8, array step: 0x4 */
  uint32_t INVLDT[1];                              /**< SCU Invalidate All in Secure State Register, array offset: 0xC, array step: 0x4 */
  uint8_t RESERVED_0[48];
  uint32_t FLTSADR[1];                             /**< SCU Filtering Start Address Register, array offset: 0x40, array step: 0x4 */
  uint32_t FLTEADR[1];                             /**< SCU Filtering End Address Register, array offset: 0x44, array step: 0x4 */
  uint8_t RESERVED_1[8];
  uint32_t AC[1];                                  /**< SCU Access Control Register, array offset: 0x50, array step: 0x4 */
  uint32_t SAC[1];                                 /**< SCU Secure Access Control Register, array offset: 0x54, array step: 0x4 */
} volatile *SCU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SCU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCU_Register_Accessor_Macros SCU - Register accessor macros
 * @{
 */


/* SCU - Register accessors */
#define SCU_CTRL_REG(base,index)                 ((base)->CTRL[index])
#define SCU_CNF_REG(base,index)                  ((base)->CNF[index])
#define SCU_PWRS_REG(base,index)                 ((base)->PWRS[index])
#define SCU_INVLDT_REG(base,index)               ((base)->INVLDT[index])
#define SCU_FLTSADR_REG(base,index)              ((base)->FLTSADR[index])
#define SCU_FLTEADR_REG(base,index)              ((base)->FLTEADR[index])
#define SCU_AC_REG(base,index)                   ((base)->AC[index])
#define SCU_SAC_REG(base,index)                  ((base)->SAC[index])

/**
 * @}
 */ /* end of group SCU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SCU Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCU_Register_Masks SCU Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define SCU_CTRL_SENA_MASK                       0x1u
#define SCU_CTRL_SENA_SHIFT                      0
#define SCU_CTRL_FLTENA_MASK                     0x2u
#define SCU_CTRL_FLTENA_SHIFT                    1
#define SCU_CTRL_SDCLKGENA_MASK                  0x20u
#define SCU_CTRL_SDCLKGENA_SHIFT                 5
#define SCU_CTRL_ICDCLKGENA_MASK                 0x40u
#define SCU_CTRL_ICDCLKGENA_SHIFT                6
/* CNF Bit Fields */
#define SCU_CNF_CPUSNUM_MASK                     0x3u
#define SCU_CNF_CPUSNUM_SHIFT                    0
#define SCU_CNF_CPUSNUM(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPUSNUM_SHIFT))&SCU_CNF_CPUSNUM_MASK)
#define SCU_CNF_CPUSSMP_MASK                     0xF0u
#define SCU_CNF_CPUSSMP_SHIFT                    4
#define SCU_CNF_CPUSSMP(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPUSSMP_SHIFT))&SCU_CNF_CPUSSMP_MASK)
#define SCU_CNF_CPU0DCS_MASK                     0x300u
#define SCU_CNF_CPU0DCS_SHIFT                    8
#define SCU_CNF_CPU0DCS(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPU0DCS_SHIFT))&SCU_CNF_CPU0DCS_MASK)
#define SCU_CNF_CPU1DCS_MASK                     0xC00u
#define SCU_CNF_CPU1DCS_SHIFT                    10
#define SCU_CNF_CPU1DCS(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPU1DCS_SHIFT))&SCU_CNF_CPU1DCS_MASK)
#define SCU_CNF_CPU2DCS_MASK                     0x3000u
#define SCU_CNF_CPU2DCS_SHIFT                    12
#define SCU_CNF_CPU2DCS(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPU2DCS_SHIFT))&SCU_CNF_CPU2DCS_MASK)
#define SCU_CNF_CPU3DCS_MASK                     0xC000u
#define SCU_CNF_CPU3DCS_SHIFT                    14
#define SCU_CNF_CPU3DCS(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_CNF_CPU3DCS_SHIFT))&SCU_CNF_CPU3DCS_MASK)
#define SCU_CNF_ACP_MASK                         0x40000000u
#define SCU_CNF_ACP_SHIFT                        30
#define SCU_CNF_L2C_MASK                         0x80000000u
#define SCU_CNF_L2C_SHIFT                        31
/* PWRS Bit Fields */
#define SCU_PWRS_CPU0_MASK                       0x3u
#define SCU_PWRS_CPU0_SHIFT                      0
#define SCU_PWRS_CPU0(x)                         (((uint32_t)(((uint32_t)(x))<<SCU_PWRS_CPU0_SHIFT))&SCU_PWRS_CPU0_MASK)
#define SCU_PWRS_CPU1_MASK                       0x300u
#define SCU_PWRS_CPU1_SHIFT                      8
#define SCU_PWRS_CPU1(x)                         (((uint32_t)(((uint32_t)(x))<<SCU_PWRS_CPU1_SHIFT))&SCU_PWRS_CPU1_MASK)
#define SCU_PWRS_CPU2_MASK                       0x30000u
#define SCU_PWRS_CPU2_SHIFT                      16
#define SCU_PWRS_CPU2(x)                         (((uint32_t)(((uint32_t)(x))<<SCU_PWRS_CPU2_SHIFT))&SCU_PWRS_CPU2_MASK)
#define SCU_PWRS_CPU3_MASK                       0x3000000u
#define SCU_PWRS_CPU3_SHIFT                      24
#define SCU_PWRS_CPU3(x)                         (((uint32_t)(((uint32_t)(x))<<SCU_PWRS_CPU3_SHIFT))&SCU_PWRS_CPU3_MASK)
/* INVLDT Bit Fields */
#define SCU_INVLDT_CPU0_MASK                     0xEu
#define SCU_INVLDT_CPU0_SHIFT                    1
#define SCU_INVLDT_CPU0(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_INVLDT_CPU0_SHIFT))&SCU_INVLDT_CPU0_MASK)
#define SCU_INVLDT_CPU1_MASK                     0x70u
#define SCU_INVLDT_CPU1_SHIFT                    4
#define SCU_INVLDT_CPU1(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_INVLDT_CPU1_SHIFT))&SCU_INVLDT_CPU1_MASK)
#define SCU_INVLDT_CPU2_MASK                     0x380u
#define SCU_INVLDT_CPU2_SHIFT                    7
#define SCU_INVLDT_CPU2(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_INVLDT_CPU2_SHIFT))&SCU_INVLDT_CPU2_MASK)
#define SCU_INVLDT_CPU3_MASK                     0x1C00u
#define SCU_INVLDT_CPU3_SHIFT                    10
#define SCU_INVLDT_CPU3(x)                       (((uint32_t)(((uint32_t)(x))<<SCU_INVLDT_CPU3_SHIFT))&SCU_INVLDT_CPU3_MASK)
/* FLTSADR Bit Fields */
#define SCU_FLTSADR_FLTS_MASK                    0xFFF00000u
#define SCU_FLTSADR_FLTS_SHIFT                   20
#define SCU_FLTSADR_FLTS(x)                      (((uint32_t)(((uint32_t)(x))<<SCU_FLTSADR_FLTS_SHIFT))&SCU_FLTSADR_FLTS_MASK)
/* FLTEADR Bit Fields */
#define SCU_FLTEADR_FLTE_MASK                    0xFFF00000u
#define SCU_FLTEADR_FLTE_SHIFT                   20
#define SCU_FLTEADR_FLTE(x)                      (((uint32_t)(((uint32_t)(x))<<SCU_FLTEADR_FLTE_SHIFT))&SCU_FLTEADR_FLTE_MASK)
/* AC Bit Fields */
#define SCU_AC_CPU0_MASK                         0x1u
#define SCU_AC_CPU0_SHIFT                        0
#define SCU_AC_CPU1_MASK                         0x2u
#define SCU_AC_CPU1_SHIFT                        1
#define SCU_AC_CPU2_MASK                         0x4u
#define SCU_AC_CPU2_SHIFT                        2
#define SCU_AC_CPU3_MASK                         0x8u
#define SCU_AC_CPU3_SHIFT                        3
/* SAC Bit Fields */
#define SCU_SAC_CPU0RA_MASK                      0x1u
#define SCU_SAC_CPU0RA_SHIFT                     0
#define SCU_SAC_CPU1RA_MASK                      0x2u
#define SCU_SAC_CPU1RA_SHIFT                     1
#define SCU_SAC_CPU2RA_MASK                      0x4u
#define SCU_SAC_CPU2RA_SHIFT                     2
#define SCU_SAC_CPU3RA_MASK                      0x8u
#define SCU_SAC_CPU3RA_SHIFT                     3
#define SCU_SAC_CPU0PT_MASK                      0x10u
#define SCU_SAC_CPU0PT_SHIFT                     4
#define SCU_SAC_CPU1PT_MASK                      0x20u
#define SCU_SAC_CPU1PT_SHIFT                     5
#define SCU_SAC_CPU2PT_MASK                      0x40u
#define SCU_SAC_CPU2PT_SHIFT                     6
#define SCU_SAC_CPU3PT_MASK                      0x80u
#define SCU_SAC_CPU3PT_SHIFT                     7
#define SCU_SAC_CPU0GT_MASK                      0x100u
#define SCU_SAC_CPU0GT_SHIFT                     8
#define SCU_SAC_CPU1GT_MASK                      0x200u
#define SCU_SAC_CPU1GT_SHIFT                     9
#define SCU_SAC_CPU2GT_MASK                      0x400u
#define SCU_SAC_CPU2GT_SHIFT                     10
#define SCU_SAC_CPU3GT_MASK                      0x800u
#define SCU_SAC_CPU3GT_SHIFT                     11

/**
 * @}
 */ /* end of group SCU_Register_Masks */


/* SCU - Peripheral instance base addresses */
/** Peripheral SCU base pointer */
#define SCU_BASE_PTR                             ((SCU_MemMapPtr)0x40002000u)
/** Array initializer of SCU peripheral base pointers */
#define SCU_BASE_PTRS                            { SCU_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SCU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SCU_Register_Accessor_Macros SCU - Register accessor macros
 * @{
 */


/* SCU - Register instance definitions */
/* SCU */
#define SCTRL                                    SCU_CTRL_REG(SCU_BASE_PTR,0)
#define SCNF                                     SCU_CNF_REG(SCU_BASE_PTR,0)
#define SPWRS                                    SCU_PWRS_REG(SCU_BASE_PTR,0)
#define SINVLDT                                  SCU_INVLDT_REG(SCU_BASE_PTR,0)
#define SFLTSADR                                 SCU_FLTSADR_REG(SCU_BASE_PTR,0)
#define SFLTEADR                                 SCU_FLTEADR_REG(SCU_BASE_PTR,0)
#define SAC                                      SCU_AC_REG(SCU_BASE_PTR,0)
#define SSAC                                     SCU_SAC_REG(SCU_BASE_PTR,0)

/* SCU - Register array accessors */
#define SCU_CTRL(index)                          SCU_CTRL_REG(SCU_BASE_PTR,index)
#define SCU_CNF(index)                           SCU_CNF_REG(SCU_BASE_PTR,index)
#define SCU_PWRS(index)                          SCU_PWRS_REG(SCU_BASE_PTR,index)
#define SCU_INVLDT(index)                        SCU_INVLDT_REG(SCU_BASE_PTR,index)
#define SCU_FLTSADR(index)                       SCU_FLTSADR_REG(SCU_BASE_PTR,index)
#define SCU_FLTEADR(index)                       SCU_FLTEADR_REG(SCU_BASE_PTR,index)
#define SCU_AC(index)                            SCU_AC_REG(SCU_BASE_PTR,index)
#define SCU_SAC(index)                           SCU_SAC_REG(SCU_BASE_PTR,index)

/**
 * @}
 */ /* end of group SCU_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SCU_Peripheral */


/* ----------------------------------------------------------------------------
   -- SDHC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SDHC_Peripheral SDHC
 * @{
 */

/** SDHC - Peripheral register structure */
typedef struct SDHC_MemMap {
  uint32_t DSADDR;                                 /**< DMA System Address register, offset: 0x0 */
  uint32_t BLKATTR;                                /**< Block Attributes register, offset: 0x4 */
  uint32_t CMDARG;                                 /**< Command Argument register, offset: 0x8 */
  uint32_t XFERTYP;                                /**< Transfer Type register, offset: 0xC */
  uint32_t CMDRSP[4];                              /**< Command Response 0..Command Response 3, array offset: 0x10, array step: 0x4 */
  uint32_t DATPORT;                                /**< Buffer Data Port register, offset: 0x20 */
  uint32_t PRSSTAT;                                /**< Present State register, offset: 0x24 */
  uint32_t PROCTL;                                 /**< Protocol Control register, offset: 0x28 */
  uint32_t SYSCTL;                                 /**< System Control register, offset: 0x2C */
  uint32_t IRQSTAT;                                /**< Interrupt Status register, offset: 0x30 */
  uint32_t IRQSTATEN;                              /**< Interrupt Status Enable register, offset: 0x34 */
  uint32_t IRQSIGEN;                               /**< Interrupt Signal Enable register, offset: 0x38 */
  uint32_t AC12ERR;                                /**< Auto CMD12 Error Status Register, offset: 0x3C */
  uint32_t HTCAPBLT;                               /**< Host Controller Capabilities, offset: 0x40 */
  uint32_t WML;                                    /**< Watermark Level register, offset: 0x44 */
  uint8_t RESERVED_0[8];
  uint32_t FEVT;                                   /**< Force Event register, offset: 0x50 */
  uint32_t ADMAES;                                 /**< ADMA Error Status register, offset: 0x54 */
  uint32_t ADSADDR;                                /**< ADMA System Addressregister, offset: 0x58 */
  uint8_t RESERVED_1[100];
  uint32_t VENDOR;                                 /**< Vendor Specific register, offset: 0xC0 */
  uint32_t MMCBOOT;                                /**< MMC Boot register, offset: 0xC4 */
  uint8_t RESERVED_2[52];
  uint32_t HOSTVER;                                /**< Host Controller Version, offset: 0xFC */
} volatile *SDHC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SDHC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SDHC_Register_Accessor_Macros SDHC - Register accessor macros
 * @{
 */


/* SDHC - Register accessors */
#define SDHC_DSADDR_REG(base)                    ((base)->DSADDR)
#define SDHC_BLKATTR_REG(base)                   ((base)->BLKATTR)
#define SDHC_CMDARG_REG(base)                    ((base)->CMDARG)
#define SDHC_XFERTYP_REG(base)                   ((base)->XFERTYP)
#define SDHC_CMDRSP_REG(base,index)              ((base)->CMDRSP[index])
#define SDHC_DATPORT_REG(base)                   ((base)->DATPORT)
#define SDHC_PRSSTAT_REG(base)                   ((base)->PRSSTAT)
#define SDHC_PROCTL_REG(base)                    ((base)->PROCTL)
#define SDHC_SYSCTL_REG(base)                    ((base)->SYSCTL)
#define SDHC_IRQSTAT_REG(base)                   ((base)->IRQSTAT)
#define SDHC_IRQSTATEN_REG(base)                 ((base)->IRQSTATEN)
#define SDHC_IRQSIGEN_REG(base)                  ((base)->IRQSIGEN)
#define SDHC_AC12ERR_REG(base)                   ((base)->AC12ERR)
#define SDHC_HTCAPBLT_REG(base)                  ((base)->HTCAPBLT)
#define SDHC_WML_REG(base)                       ((base)->WML)
#define SDHC_FEVT_REG(base)                      ((base)->FEVT)
#define SDHC_ADMAES_REG(base)                    ((base)->ADMAES)
#define SDHC_ADSADDR_REG(base)                   ((base)->ADSADDR)
#define SDHC_VENDOR_REG(base)                    ((base)->VENDOR)
#define SDHC_MMCBOOT_REG(base)                   ((base)->MMCBOOT)
#define SDHC_HOSTVER_REG(base)                   ((base)->HOSTVER)

/**
 * @}
 */ /* end of group SDHC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SDHC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SDHC_Register_Masks SDHC Register Masks
 * @{
 */

/* DSADDR Bit Fields */
#define SDHC_DSADDR_DSADDR_MASK                  0xFFFFFFFCu
#define SDHC_DSADDR_DSADDR_SHIFT                 2
#define SDHC_DSADDR_DSADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_DSADDR_DSADDR_SHIFT))&SDHC_DSADDR_DSADDR_MASK)
/* BLKATTR Bit Fields */
#define SDHC_BLKATTR_BLKSIZE_MASK                0x1FFFu
#define SDHC_BLKATTR_BLKSIZE_SHIFT               0
#define SDHC_BLKATTR_BLKSIZE(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_BLKATTR_BLKSIZE_SHIFT))&SDHC_BLKATTR_BLKSIZE_MASK)
#define SDHC_BLKATTR_BLKCNT_MASK                 0xFFFF0000u
#define SDHC_BLKATTR_BLKCNT_SHIFT                16
#define SDHC_BLKATTR_BLKCNT(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_BLKATTR_BLKCNT_SHIFT))&SDHC_BLKATTR_BLKCNT_MASK)
/* CMDARG Bit Fields */
#define SDHC_CMDARG_CMDARG_MASK                  0xFFFFFFFFu
#define SDHC_CMDARG_CMDARG_SHIFT                 0
#define SDHC_CMDARG_CMDARG(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_CMDARG_CMDARG_SHIFT))&SDHC_CMDARG_CMDARG_MASK)
/* XFERTYP Bit Fields */
#define SDHC_XFERTYP_DMAEN_MASK                  0x1u
#define SDHC_XFERTYP_DMAEN_SHIFT                 0
#define SDHC_XFERTYP_BCEN_MASK                   0x2u
#define SDHC_XFERTYP_BCEN_SHIFT                  1
#define SDHC_XFERTYP_AC12EN_MASK                 0x4u
#define SDHC_XFERTYP_AC12EN_SHIFT                2
#define SDHC_XFERTYP_DTDSEL_MASK                 0x10u
#define SDHC_XFERTYP_DTDSEL_SHIFT                4
#define SDHC_XFERTYP_MSBSEL_MASK                 0x20u
#define SDHC_XFERTYP_MSBSEL_SHIFT                5
#define SDHC_XFERTYP_RSPTYP_MASK                 0x30000u
#define SDHC_XFERTYP_RSPTYP_SHIFT                16
#define SDHC_XFERTYP_RSPTYP(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_RSPTYP_SHIFT))&SDHC_XFERTYP_RSPTYP_MASK)
#define SDHC_XFERTYP_CCCEN_MASK                  0x80000u
#define SDHC_XFERTYP_CCCEN_SHIFT                 19
#define SDHC_XFERTYP_CICEN_MASK                  0x100000u
#define SDHC_XFERTYP_CICEN_SHIFT                 20
#define SDHC_XFERTYP_DPSEL_MASK                  0x200000u
#define SDHC_XFERTYP_DPSEL_SHIFT                 21
#define SDHC_XFERTYP_CMDTYP_MASK                 0xC00000u
#define SDHC_XFERTYP_CMDTYP_SHIFT                22
#define SDHC_XFERTYP_CMDTYP(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CMDTYP_SHIFT))&SDHC_XFERTYP_CMDTYP_MASK)
#define SDHC_XFERTYP_CMDINX_MASK                 0x3F000000u
#define SDHC_XFERTYP_CMDINX_SHIFT                24
#define SDHC_XFERTYP_CMDINX(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CMDINX_SHIFT))&SDHC_XFERTYP_CMDINX_MASK)
/* CMDRSP Bit Fields */
#define SDHC_CMDRSP_CMDRSP0_MASK                 0xFFFFFFFFu
#define SDHC_CMDRSP_CMDRSP0_SHIFT                0
#define SDHC_CMDRSP_CMDRSP0(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_CMDRSP_CMDRSP0_SHIFT))&SDHC_CMDRSP_CMDRSP0_MASK)
#define SDHC_CMDRSP_CMDRSP1_MASK                 0xFFFFFFFFu
#define SDHC_CMDRSP_CMDRSP1_SHIFT                0
#define SDHC_CMDRSP_CMDRSP1(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_CMDRSP_CMDRSP1_SHIFT))&SDHC_CMDRSP_CMDRSP1_MASK)
#define SDHC_CMDRSP_CMDRSP2_MASK                 0xFFFFFFFFu
#define SDHC_CMDRSP_CMDRSP2_SHIFT                0
#define SDHC_CMDRSP_CMDRSP2(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_CMDRSP_CMDRSP2_SHIFT))&SDHC_CMDRSP_CMDRSP2_MASK)
#define SDHC_CMDRSP_CMDRSP3_MASK                 0xFFFFFFFFu
#define SDHC_CMDRSP_CMDRSP3_SHIFT                0
#define SDHC_CMDRSP_CMDRSP3(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_CMDRSP_CMDRSP3_SHIFT))&SDHC_CMDRSP_CMDRSP3_MASK)
/* DATPORT Bit Fields */
#define SDHC_DATPORT_DATCONT_MASK                0xFFFFFFFFu
#define SDHC_DATPORT_DATCONT_SHIFT               0
#define SDHC_DATPORT_DATCONT(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_DATPORT_DATCONT_SHIFT))&SDHC_DATPORT_DATCONT_MASK)
/* PRSSTAT Bit Fields */
#define SDHC_PRSSTAT_CIHB_MASK                   0x1u
#define SDHC_PRSSTAT_CIHB_SHIFT                  0
#define SDHC_PRSSTAT_CDIHB_MASK                  0x2u
#define SDHC_PRSSTAT_CDIHB_SHIFT                 1
#define SDHC_PRSSTAT_DLA_MASK                    0x4u
#define SDHC_PRSSTAT_DLA_SHIFT                   2
#define SDHC_PRSSTAT_SDSTB_MASK                  0x8u
#define SDHC_PRSSTAT_SDSTB_SHIFT                 3
#define SDHC_PRSSTAT_IPGOFF_MASK                 0x10u
#define SDHC_PRSSTAT_IPGOFF_SHIFT                4
#define SDHC_PRSSTAT_HCKOFF_MASK                 0x20u
#define SDHC_PRSSTAT_HCKOFF_SHIFT                5
#define SDHC_PRSSTAT_PEROFF_MASK                 0x40u
#define SDHC_PRSSTAT_PEROFF_SHIFT                6
#define SDHC_PRSSTAT_SDOFF_MASK                  0x80u
#define SDHC_PRSSTAT_SDOFF_SHIFT                 7
#define SDHC_PRSSTAT_WTA_MASK                    0x100u
#define SDHC_PRSSTAT_WTA_SHIFT                   8
#define SDHC_PRSSTAT_RTA_MASK                    0x200u
#define SDHC_PRSSTAT_RTA_SHIFT                   9
#define SDHC_PRSSTAT_BWEN_MASK                   0x400u
#define SDHC_PRSSTAT_BWEN_SHIFT                  10
#define SDHC_PRSSTAT_BREN_MASK                   0x800u
#define SDHC_PRSSTAT_BREN_SHIFT                  11
#define SDHC_PRSSTAT_CINS_MASK                   0x10000u
#define SDHC_PRSSTAT_CINS_SHIFT                  16
#define SDHC_PRSSTAT_CDPL_MASK                   0x40000u
#define SDHC_PRSSTAT_CDPL_SHIFT                  18
#define SDHC_PRSSTAT_WPSPL_MASK                  0x80000u
#define SDHC_PRSSTAT_WPSPL_SHIFT                 19
#define SDHC_PRSSTAT_CLSL_MASK                   0x800000u
#define SDHC_PRSSTAT_CLSL_SHIFT                  23
#define SDHC_PRSSTAT_DLSL_MASK                   0xFF000000u
#define SDHC_PRSSTAT_DLSL_SHIFT                  24
#define SDHC_PRSSTAT_DLSL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_DLSL_SHIFT))&SDHC_PRSSTAT_DLSL_MASK)
/* PROCTL Bit Fields */
#define SDHC_PROCTL_LCTL_MASK                    0x1u
#define SDHC_PROCTL_LCTL_SHIFT                   0
#define SDHC_PROCTL_DTW_MASK                     0x6u
#define SDHC_PROCTL_DTW_SHIFT                    1
#define SDHC_PROCTL_DTW(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_DTW_SHIFT))&SDHC_PROCTL_DTW_MASK)
#define SDHC_PROCTL_D3CD_MASK                    0x8u
#define SDHC_PROCTL_D3CD_SHIFT                   3
#define SDHC_PROCTL_EMODE_MASK                   0x30u
#define SDHC_PROCTL_EMODE_SHIFT                  4
#define SDHC_PROCTL_EMODE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_EMODE_SHIFT))&SDHC_PROCTL_EMODE_MASK)
#define SDHC_PROCTL_CDTL_MASK                    0x40u
#define SDHC_PROCTL_CDTL_SHIFT                   6
#define SDHC_PROCTL_CDSS_MASK                    0x80u
#define SDHC_PROCTL_CDSS_SHIFT                   7
#define SDHC_PROCTL_DMAS_MASK                    0x300u
#define SDHC_PROCTL_DMAS_SHIFT                   8
#define SDHC_PROCTL_DMAS(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_DMAS_SHIFT))&SDHC_PROCTL_DMAS_MASK)
#define SDHC_PROCTL_SABGREQ_MASK                 0x10000u
#define SDHC_PROCTL_SABGREQ_SHIFT                16
#define SDHC_PROCTL_CREQ_MASK                    0x20000u
#define SDHC_PROCTL_CREQ_SHIFT                   17
#define SDHC_PROCTL_RWCTL_MASK                   0x40000u
#define SDHC_PROCTL_RWCTL_SHIFT                  18
#define SDHC_PROCTL_IABG_MASK                    0x80000u
#define SDHC_PROCTL_IABG_SHIFT                   19
#define SDHC_PROCTL_WECINT_MASK                  0x1000000u
#define SDHC_PROCTL_WECINT_SHIFT                 24
#define SDHC_PROCTL_WECINS_MASK                  0x2000000u
#define SDHC_PROCTL_WECINS_SHIFT                 25
#define SDHC_PROCTL_WECRM_MASK                   0x4000000u
#define SDHC_PROCTL_WECRM_SHIFT                  26
/* SYSCTL Bit Fields */
#define SDHC_SYSCTL_IPGEN_MASK                   0x1u
#define SDHC_SYSCTL_IPGEN_SHIFT                  0
#define SDHC_SYSCTL_HCKEN_MASK                   0x2u
#define SDHC_SYSCTL_HCKEN_SHIFT                  1
#define SDHC_SYSCTL_PEREN_MASK                   0x4u
#define SDHC_SYSCTL_PEREN_SHIFT                  2
#define SDHC_SYSCTL_SDCLKEN_MASK                 0x8u
#define SDHC_SYSCTL_SDCLKEN_SHIFT                3
#define SDHC_SYSCTL_DVS_MASK                     0xF0u
#define SDHC_SYSCTL_DVS_SHIFT                    4
#define SDHC_SYSCTL_DVS(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_DVS_SHIFT))&SDHC_SYSCTL_DVS_MASK)
#define SDHC_SYSCTL_SDCLKFS_MASK                 0xFF00u
#define SDHC_SYSCTL_SDCLKFS_SHIFT                8
#define SDHC_SYSCTL_SDCLKFS(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_SDCLKFS_SHIFT))&SDHC_SYSCTL_SDCLKFS_MASK)
#define SDHC_SYSCTL_DTOCV_MASK                   0xF0000u
#define SDHC_SYSCTL_DTOCV_SHIFT                  16
#define SDHC_SYSCTL_DTOCV(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_DTOCV_SHIFT))&SDHC_SYSCTL_DTOCV_MASK)
#define SDHC_SYSCTL_RSTA_MASK                    0x1000000u
#define SDHC_SYSCTL_RSTA_SHIFT                   24
#define SDHC_SYSCTL_RSTC_MASK                    0x2000000u
#define SDHC_SYSCTL_RSTC_SHIFT                   25
#define SDHC_SYSCTL_RSTD_MASK                    0x4000000u
#define SDHC_SYSCTL_RSTD_SHIFT                   26
#define SDHC_SYSCTL_INITA_MASK                   0x8000000u
#define SDHC_SYSCTL_INITA_SHIFT                  27
/* IRQSTAT Bit Fields */
#define SDHC_IRQSTAT_CC_MASK                     0x1u
#define SDHC_IRQSTAT_CC_SHIFT                    0
#define SDHC_IRQSTAT_TC_MASK                     0x2u
#define SDHC_IRQSTAT_TC_SHIFT                    1
#define SDHC_IRQSTAT_BGE_MASK                    0x4u
#define SDHC_IRQSTAT_BGE_SHIFT                   2
#define SDHC_IRQSTAT_DINT_MASK                   0x8u
#define SDHC_IRQSTAT_DINT_SHIFT                  3
#define SDHC_IRQSTAT_BWR_MASK                    0x10u
#define SDHC_IRQSTAT_BWR_SHIFT                   4
#define SDHC_IRQSTAT_BRR_MASK                    0x20u
#define SDHC_IRQSTAT_BRR_SHIFT                   5
#define SDHC_IRQSTAT_CINS_MASK                   0x40u
#define SDHC_IRQSTAT_CINS_SHIFT                  6
#define SDHC_IRQSTAT_CRM_MASK                    0x80u
#define SDHC_IRQSTAT_CRM_SHIFT                   7
#define SDHC_IRQSTAT_CINT_MASK                   0x100u
#define SDHC_IRQSTAT_CINT_SHIFT                  8
#define SDHC_IRQSTAT_CTOE_MASK                   0x10000u
#define SDHC_IRQSTAT_CTOE_SHIFT                  16
#define SDHC_IRQSTAT_CCE_MASK                    0x20000u
#define SDHC_IRQSTAT_CCE_SHIFT                   17
#define SDHC_IRQSTAT_CEBE_MASK                   0x40000u
#define SDHC_IRQSTAT_CEBE_SHIFT                  18
#define SDHC_IRQSTAT_CIE_MASK                    0x80000u
#define SDHC_IRQSTAT_CIE_SHIFT                   19
#define SDHC_IRQSTAT_DTOE_MASK                   0x100000u
#define SDHC_IRQSTAT_DTOE_SHIFT                  20
#define SDHC_IRQSTAT_DCE_MASK                    0x200000u
#define SDHC_IRQSTAT_DCE_SHIFT                   21
#define SDHC_IRQSTAT_DEBE_MASK                   0x400000u
#define SDHC_IRQSTAT_DEBE_SHIFT                  22
#define SDHC_IRQSTAT_AC12E_MASK                  0x1000000u
#define SDHC_IRQSTAT_AC12E_SHIFT                 24
#define SDHC_IRQSTAT_DMAE_MASK                   0x10000000u
#define SDHC_IRQSTAT_DMAE_SHIFT                  28
/* IRQSTATEN Bit Fields */
#define SDHC_IRQSTATEN_CCSEN_MASK                0x1u
#define SDHC_IRQSTATEN_CCSEN_SHIFT               0
#define SDHC_IRQSTATEN_TCSEN_MASK                0x2u
#define SDHC_IRQSTATEN_TCSEN_SHIFT               1
#define SDHC_IRQSTATEN_BGESEN_MASK               0x4u
#define SDHC_IRQSTATEN_BGESEN_SHIFT              2
#define SDHC_IRQSTATEN_DINTSEN_MASK              0x8u
#define SDHC_IRQSTATEN_DINTSEN_SHIFT             3
#define SDHC_IRQSTATEN_BWRSEN_MASK               0x10u
#define SDHC_IRQSTATEN_BWRSEN_SHIFT              4
#define SDHC_IRQSTATEN_BRRSEN_MASK               0x20u
#define SDHC_IRQSTATEN_BRRSEN_SHIFT              5
#define SDHC_IRQSTATEN_CINSEN_MASK               0x40u
#define SDHC_IRQSTATEN_CINSEN_SHIFT              6
#define SDHC_IRQSTATEN_CRMSEN_MASK               0x80u
#define SDHC_IRQSTATEN_CRMSEN_SHIFT              7
#define SDHC_IRQSTATEN_CINTSEN_MASK              0x100u
#define SDHC_IRQSTATEN_CINTSEN_SHIFT             8
#define SDHC_IRQSTATEN_CTOESEN_MASK              0x10000u
#define SDHC_IRQSTATEN_CTOESEN_SHIFT             16
#define SDHC_IRQSTATEN_CCESEN_MASK               0x20000u
#define SDHC_IRQSTATEN_CCESEN_SHIFT              17
#define SDHC_IRQSTATEN_CEBESEN_MASK              0x40000u
#define SDHC_IRQSTATEN_CEBESEN_SHIFT             18
#define SDHC_IRQSTATEN_CIESEN_MASK               0x80000u
#define SDHC_IRQSTATEN_CIESEN_SHIFT              19
#define SDHC_IRQSTATEN_DTOESEN_MASK              0x100000u
#define SDHC_IRQSTATEN_DTOESEN_SHIFT             20
#define SDHC_IRQSTATEN_DCESEN_MASK               0x200000u
#define SDHC_IRQSTATEN_DCESEN_SHIFT              21
#define SDHC_IRQSTATEN_DEBESEN_MASK              0x400000u
#define SDHC_IRQSTATEN_DEBESEN_SHIFT             22
#define SDHC_IRQSTATEN_AC12ESEN_MASK             0x1000000u
#define SDHC_IRQSTATEN_AC12ESEN_SHIFT            24
#define SDHC_IRQSTATEN_DMAESEN_MASK              0x10000000u
#define SDHC_IRQSTATEN_DMAESEN_SHIFT             28
/* IRQSIGEN Bit Fields */
#define SDHC_IRQSIGEN_CCIEN_MASK                 0x1u
#define SDHC_IRQSIGEN_CCIEN_SHIFT                0
#define SDHC_IRQSIGEN_TCIEN_MASK                 0x2u
#define SDHC_IRQSIGEN_TCIEN_SHIFT                1
#define SDHC_IRQSIGEN_BGEIEN_MASK                0x4u
#define SDHC_IRQSIGEN_BGEIEN_SHIFT               2
#define SDHC_IRQSIGEN_DINTIEN_MASK               0x8u
#define SDHC_IRQSIGEN_DINTIEN_SHIFT              3
#define SDHC_IRQSIGEN_BWRIEN_MASK                0x10u
#define SDHC_IRQSIGEN_BWRIEN_SHIFT               4
#define SDHC_IRQSIGEN_BRRIEN_MASK                0x20u
#define SDHC_IRQSIGEN_BRRIEN_SHIFT               5
#define SDHC_IRQSIGEN_CINSIEN_MASK               0x40u
#define SDHC_IRQSIGEN_CINSIEN_SHIFT              6
#define SDHC_IRQSIGEN_CRMIEN_MASK                0x80u
#define SDHC_IRQSIGEN_CRMIEN_SHIFT               7
#define SDHC_IRQSIGEN_CINTIEN_MASK               0x100u
#define SDHC_IRQSIGEN_CINTIEN_SHIFT              8
#define SDHC_IRQSIGEN_CTOEIEN_MASK               0x10000u
#define SDHC_IRQSIGEN_CTOEIEN_SHIFT              16
#define SDHC_IRQSIGEN_CCEIEN_MASK                0x20000u
#define SDHC_IRQSIGEN_CCEIEN_SHIFT               17
#define SDHC_IRQSIGEN_CEBEIEN_MASK               0x40000u
#define SDHC_IRQSIGEN_CEBEIEN_SHIFT              18
#define SDHC_IRQSIGEN_CIEIEN_MASK                0x80000u
#define SDHC_IRQSIGEN_CIEIEN_SHIFT               19
#define SDHC_IRQSIGEN_DTOEIEN_MASK               0x100000u
#define SDHC_IRQSIGEN_DTOEIEN_SHIFT              20
#define SDHC_IRQSIGEN_DCEIEN_MASK                0x200000u
#define SDHC_IRQSIGEN_DCEIEN_SHIFT               21
#define SDHC_IRQSIGEN_DEBEIEN_MASK               0x400000u
#define SDHC_IRQSIGEN_DEBEIEN_SHIFT              22
#define SDHC_IRQSIGEN_AC12EIEN_MASK              0x1000000u
#define SDHC_IRQSIGEN_AC12EIEN_SHIFT             24
#define SDHC_IRQSIGEN_DMAEIEN_MASK               0x10000000u
#define SDHC_IRQSIGEN_DMAEIEN_SHIFT              28
/* AC12ERR Bit Fields */
#define SDHC_AC12ERR_AC12NE_MASK                 0x1u
#define SDHC_AC12ERR_AC12NE_SHIFT                0
#define SDHC_AC12ERR_AC12TOE_MASK                0x2u
#define SDHC_AC12ERR_AC12TOE_SHIFT               1
#define SDHC_AC12ERR_AC12EBE_MASK                0x4u
#define SDHC_AC12ERR_AC12EBE_SHIFT               2
#define SDHC_AC12ERR_AC12CE_MASK                 0x8u
#define SDHC_AC12ERR_AC12CE_SHIFT                3
#define SDHC_AC12ERR_AC12IE_MASK                 0x10u
#define SDHC_AC12ERR_AC12IE_SHIFT                4
#define SDHC_AC12ERR_CNIBAC12E_MASK              0x80u
#define SDHC_AC12ERR_CNIBAC12E_SHIFT             7
/* HTCAPBLT Bit Fields */
#define SDHC_HTCAPBLT_MBL_MASK                   0x70000u
#define SDHC_HTCAPBLT_MBL_SHIFT                  16
#define SDHC_HTCAPBLT_MBL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_MBL_SHIFT))&SDHC_HTCAPBLT_MBL_MASK)
#define SDHC_HTCAPBLT_ADMAS_MASK                 0x100000u
#define SDHC_HTCAPBLT_ADMAS_SHIFT                20
#define SDHC_HTCAPBLT_HSS_MASK                   0x200000u
#define SDHC_HTCAPBLT_HSS_SHIFT                  21
#define SDHC_HTCAPBLT_DMAS_MASK                  0x400000u
#define SDHC_HTCAPBLT_DMAS_SHIFT                 22
#define SDHC_HTCAPBLT_SRS_MASK                   0x800000u
#define SDHC_HTCAPBLT_SRS_SHIFT                  23
#define SDHC_HTCAPBLT_VS33_MASK                  0x1000000u
#define SDHC_HTCAPBLT_VS33_SHIFT                 24
/* WML Bit Fields */
#define SDHC_WML_RDWML_MASK                      0xFFu
#define SDHC_WML_RDWML_SHIFT                     0
#define SDHC_WML_RDWML(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_WML_RDWML_SHIFT))&SDHC_WML_RDWML_MASK)
#define SDHC_WML_RDBRSTLEN_MASK                  0x1F00u
#define SDHC_WML_RDBRSTLEN_SHIFT                 8
#define SDHC_WML_RDBRSTLEN(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_WML_RDBRSTLEN_SHIFT))&SDHC_WML_RDBRSTLEN_MASK)
#define SDHC_WML_WRWML_MASK                      0xFF0000u
#define SDHC_WML_WRWML_SHIFT                     16
#define SDHC_WML_WRWML(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_WML_WRWML_SHIFT))&SDHC_WML_WRWML_MASK)
#define SDHC_WML_WRBRSTLEN_MASK                  0x1F000000u
#define SDHC_WML_WRBRSTLEN_SHIFT                 24
#define SDHC_WML_WRBRSTLEN(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_WML_WRBRSTLEN_SHIFT))&SDHC_WML_WRBRSTLEN_MASK)
/* FEVT Bit Fields */
#define SDHC_FEVT_AC12NE_MASK                    0x1u
#define SDHC_FEVT_AC12NE_SHIFT                   0
#define SDHC_FEVT_AC12TOE_MASK                   0x2u
#define SDHC_FEVT_AC12TOE_SHIFT                  1
#define SDHC_FEVT_AC12CE_MASK                    0x4u
#define SDHC_FEVT_AC12CE_SHIFT                   2
#define SDHC_FEVT_AC12EBE_MASK                   0x8u
#define SDHC_FEVT_AC12EBE_SHIFT                  3
#define SDHC_FEVT_AC12IE_MASK                    0x10u
#define SDHC_FEVT_AC12IE_SHIFT                   4
#define SDHC_FEVT_CNIBAC12E_MASK                 0x80u
#define SDHC_FEVT_CNIBAC12E_SHIFT                7
#define SDHC_FEVT_CTOE_MASK                      0x10000u
#define SDHC_FEVT_CTOE_SHIFT                     16
#define SDHC_FEVT_CCE_MASK                       0x20000u
#define SDHC_FEVT_CCE_SHIFT                      17
#define SDHC_FEVT_CEBE_MASK                      0x40000u
#define SDHC_FEVT_CEBE_SHIFT                     18
#define SDHC_FEVT_CIE_MASK                       0x80000u
#define SDHC_FEVT_CIE_SHIFT                      19
#define SDHC_FEVT_DTOE_MASK                      0x100000u
#define SDHC_FEVT_DTOE_SHIFT                     20
#define SDHC_FEVT_DCE_MASK                       0x200000u
#define SDHC_FEVT_DCE_SHIFT                      21
#define SDHC_FEVT_DEBE_MASK                      0x400000u
#define SDHC_FEVT_DEBE_SHIFT                     22
#define SDHC_FEVT_AC12E_MASK                     0x1000000u
#define SDHC_FEVT_AC12E_SHIFT                    24
#define SDHC_FEVT_DMAE_MASK                      0x10000000u
#define SDHC_FEVT_DMAE_SHIFT                     28
#define SDHC_FEVT_CINT_MASK                      0x80000000u
#define SDHC_FEVT_CINT_SHIFT                     31
/* ADMAES Bit Fields */
#define SDHC_ADMAES_ADMAES_MASK                  0x3u
#define SDHC_ADMAES_ADMAES_SHIFT                 0
#define SDHC_ADMAES_ADMAES(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_ADMAES_ADMAES_SHIFT))&SDHC_ADMAES_ADMAES_MASK)
#define SDHC_ADMAES_ADMALME_MASK                 0x4u
#define SDHC_ADMAES_ADMALME_SHIFT                2
#define SDHC_ADMAES_ADMADCE_MASK                 0x8u
#define SDHC_ADMAES_ADMADCE_SHIFT                3
/* ADSADDR Bit Fields */
#define SDHC_ADSADDR_ADSADDR_MASK                0xFFFFFFFCu
#define SDHC_ADSADDR_ADSADDR_SHIFT               2
#define SDHC_ADSADDR_ADSADDR(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_ADSADDR_ADSADDR_SHIFT))&SDHC_ADSADDR_ADSADDR_MASK)
/* VENDOR Bit Fields */
#define SDHC_VENDOR_EXBLKNU_MASK                 0x2u
#define SDHC_VENDOR_EXBLKNU_SHIFT                1
#define SDHC_VENDOR_INTSTVAL_MASK                0xFF0000u
#define SDHC_VENDOR_INTSTVAL_SHIFT               16
#define SDHC_VENDOR_INTSTVAL(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_VENDOR_INTSTVAL_SHIFT))&SDHC_VENDOR_INTSTVAL_MASK)
/* MMCBOOT Bit Fields */
#define SDHC_MMCBOOT_DTOCVACK_MASK               0xFu
#define SDHC_MMCBOOT_DTOCVACK_SHIFT              0
#define SDHC_MMCBOOT_DTOCVACK(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_DTOCVACK_SHIFT))&SDHC_MMCBOOT_DTOCVACK_MASK)
#define SDHC_MMCBOOT_BOOTACK_MASK                0x10u
#define SDHC_MMCBOOT_BOOTACK_SHIFT               4
#define SDHC_MMCBOOT_BOOTMODE_MASK               0x20u
#define SDHC_MMCBOOT_BOOTMODE_SHIFT              5
#define SDHC_MMCBOOT_BOOTEN_MASK                 0x40u
#define SDHC_MMCBOOT_BOOTEN_SHIFT                6
#define SDHC_MMCBOOT_AUTOSABGEN_MASK             0x80u
#define SDHC_MMCBOOT_AUTOSABGEN_SHIFT            7
#define SDHC_MMCBOOT_BOOTBLKCNT_MASK             0xFFFF0000u
#define SDHC_MMCBOOT_BOOTBLKCNT_SHIFT            16
#define SDHC_MMCBOOT_BOOTBLKCNT(x)               (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_BOOTBLKCNT_SHIFT))&SDHC_MMCBOOT_BOOTBLKCNT_MASK)
/* HOSTVER Bit Fields */
#define SDHC_HOSTVER_SVN_MASK                    0xFFu
#define SDHC_HOSTVER_SVN_SHIFT                   0
#define SDHC_HOSTVER_SVN(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_HOSTVER_SVN_SHIFT))&SDHC_HOSTVER_SVN_MASK)
#define SDHC_HOSTVER_VVN_MASK                    0xFF00u
#define SDHC_HOSTVER_VVN_SHIFT                   8
#define SDHC_HOSTVER_VVN(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_HOSTVER_VVN_SHIFT))&SDHC_HOSTVER_VVN_MASK)

/**
 * @}
 */ /* end of group SDHC_Register_Masks */


/* SDHC - Peripheral instance base addresses */
/** Peripheral SDHC0 base pointer */
#define SDHC0_BASE_PTR                           ((SDHC_MemMapPtr)0x400B1000u)
/** Peripheral SDHC1 base pointer */
#define SDHC1_BASE_PTR                           ((SDHC_MemMapPtr)0x400B2000u)
/** Array initializer of SDHC peripheral base pointers */
#define SDHC_BASE_PTRS                           { SDHC0_BASE_PTR, SDHC1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SDHC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SDHC_Register_Accessor_Macros SDHC - Register accessor macros
 * @{
 */


/* SDHC - Register instance definitions */
/* SDHC0 */
#define SDHC0_DSADDR                             SDHC_DSADDR_REG(SDHC0_BASE_PTR)
#define SDHC0_BLKATTR                            SDHC_BLKATTR_REG(SDHC0_BASE_PTR)
#define SDHC0_CMDARG                             SDHC_CMDARG_REG(SDHC0_BASE_PTR)
#define SDHC0_XFERTYP                            SDHC_XFERTYP_REG(SDHC0_BASE_PTR)
#define SDHC0_CMDRSP0                            SDHC_CMDRSP_REG(SDHC0_BASE_PTR,0)
#define SDHC0_CMDRSP1                            SDHC_CMDRSP_REG(SDHC0_BASE_PTR,1)
#define SDHC0_CMDRSP2                            SDHC_CMDRSP_REG(SDHC0_BASE_PTR,2)
#define SDHC0_CMDRSP3                            SDHC_CMDRSP_REG(SDHC0_BASE_PTR,3)
#define SDHC0_DATPORT                            SDHC_DATPORT_REG(SDHC0_BASE_PTR)
#define SDHC0_PRSSTAT                            SDHC_PRSSTAT_REG(SDHC0_BASE_PTR)
#define SDHC0_PROCTL                             SDHC_PROCTL_REG(SDHC0_BASE_PTR)
#define SDHC0_SYSCTL                             SDHC_SYSCTL_REG(SDHC0_BASE_PTR)
#define SDHC0_IRQSTAT                            SDHC_IRQSTAT_REG(SDHC0_BASE_PTR)
#define SDHC0_IRQSTATEN                          SDHC_IRQSTATEN_REG(SDHC0_BASE_PTR)
#define SDHC0_IRQSIGEN                           SDHC_IRQSIGEN_REG(SDHC0_BASE_PTR)
#define SDHC0_AC12ERR                            SDHC_AC12ERR_REG(SDHC0_BASE_PTR)
#define SDHC0_HTCAPBLT                           SDHC_HTCAPBLT_REG(SDHC0_BASE_PTR)
#define SDHC0_WML                                SDHC_WML_REG(SDHC0_BASE_PTR)
#define SDHC0_FEVT                               SDHC_FEVT_REG(SDHC0_BASE_PTR)
#define SDHC0_ADMAES                             SDHC_ADMAES_REG(SDHC0_BASE_PTR)
#define SDHC0_ADSADDR                            SDHC_ADSADDR_REG(SDHC0_BASE_PTR)
#define SDHC0_VENDOR                             SDHC_VENDOR_REG(SDHC0_BASE_PTR)
#define SDHC0_MMCBOOT                            SDHC_MMCBOOT_REG(SDHC0_BASE_PTR)
#define SDHC0_HOSTVER                            SDHC_HOSTVER_REG(SDHC0_BASE_PTR)
/* SDHC1 */
#define SDHC1_DSADDR                             SDHC_DSADDR_REG(SDHC1_BASE_PTR)
#define SDHC1_BLKATTR                            SDHC_BLKATTR_REG(SDHC1_BASE_PTR)
#define SDHC1_CMDARG                             SDHC_CMDARG_REG(SDHC1_BASE_PTR)
#define SDHC1_XFERTYP                            SDHC_XFERTYP_REG(SDHC1_BASE_PTR)
#define SDHC1_CMDRSP0                            SDHC_CMDRSP_REG(SDHC1_BASE_PTR,0)
#define SDHC1_CMDRSP1                            SDHC_CMDRSP_REG(SDHC1_BASE_PTR,1)
#define SDHC1_CMDRSP2                            SDHC_CMDRSP_REG(SDHC1_BASE_PTR,2)
#define SDHC1_CMDRSP3                            SDHC_CMDRSP_REG(SDHC1_BASE_PTR,3)
#define SDHC1_DATPORT                            SDHC_DATPORT_REG(SDHC1_BASE_PTR)
#define SDHC1_PRSSTAT                            SDHC_PRSSTAT_REG(SDHC1_BASE_PTR)
#define SDHC1_PROCTL                             SDHC_PROCTL_REG(SDHC1_BASE_PTR)
#define SDHC1_SYSCTL                             SDHC_SYSCTL_REG(SDHC1_BASE_PTR)
#define SDHC1_IRQSTAT                            SDHC_IRQSTAT_REG(SDHC1_BASE_PTR)
#define SDHC1_IRQSTATEN                          SDHC_IRQSTATEN_REG(SDHC1_BASE_PTR)
#define SDHC1_IRQSIGEN                           SDHC_IRQSIGEN_REG(SDHC1_BASE_PTR)
#define SDHC1_AC12ERR                            SDHC_AC12ERR_REG(SDHC1_BASE_PTR)
#define SDHC1_HTCAPBLT                           SDHC_HTCAPBLT_REG(SDHC1_BASE_PTR)
#define SDHC1_WML                                SDHC_WML_REG(SDHC1_BASE_PTR)
#define SDHC1_FEVT                               SDHC_FEVT_REG(SDHC1_BASE_PTR)
#define SDHC1_ADMAES                             SDHC_ADMAES_REG(SDHC1_BASE_PTR)
#define SDHC1_ADSADDR                            SDHC_ADSADDR_REG(SDHC1_BASE_PTR)
#define SDHC1_VENDOR                             SDHC_VENDOR_REG(SDHC1_BASE_PTR)
#define SDHC1_MMCBOOT                            SDHC_MMCBOOT_REG(SDHC1_BASE_PTR)
#define SDHC1_HOSTVER                            SDHC_HOSTVER_REG(SDHC1_BASE_PTR)

/* SDHC - Register array accessors */
#define SDHC0_CMDRSP(index)                      SDHC_CMDRSP_REG(SDHC0_BASE_PTR,index)
#define SDHC1_CMDRSP(index)                      SDHC_CMDRSP_REG(SDHC1_BASE_PTR,index)

/**
 * @}
 */ /* end of group SDHC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SDHC_Peripheral */


/* ----------------------------------------------------------------------------
   -- SEMA4
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SEMA4_Peripheral SEMA4
 * @{
 */

/** SEMA4 - Peripheral register structure */
typedef struct SEMA4_MemMap {
  uint8_t GATE[16];
#if 0
  uint8_t Gate00;                                  /**< Semaphores Gate 0 Register, offset: 0x0 */
  uint8_t Gate01;                                  /**< Semaphores Gate 1 Register, offset: 0x1 */
  uint8_t Gate02;                                  /**< Semaphores Gate 2 Register, offset: 0x2 */
  uint8_t Gate03;                                  /**< Semaphores Gate 3 Register, offset: 0x3 */
  uint8_t Gate04;                                  /**< Semaphores Gate 4 Register, offset: 0x4 */
  uint8_t Gate05;                                  /**< Semaphores Gate 5 Register, offset: 0x5 */
  uint8_t Gate06;                                  /**< Semaphores Gate 6 Register, offset: 0x6 */
  uint8_t Gate07;                                  /**< Semaphores Gate 7 Register, offset: 0x7 */
  uint8_t Gate08;                                  /**< Semaphores Gate 8 Register, offset: 0x8 */
  uint8_t Gate09;                                  /**< Semaphores Gate 9 Register, offset: 0x9 */
  uint8_t Gate10;                                  /**< Semaphores Gate 10 Register, offset: 0xA */
  uint8_t Gate11;                                  /**< Semaphores Gate 11 Register, offset: 0xB */
  uint8_t Gate12;                                  /**< Semaphores Gate 12 Register, offset: 0xC */
  uint8_t Gate13;                                  /**< Semaphores Gate 13 Register, offset: 0xD */
  uint8_t Gate14;                                  /**< Semaphores Gate 14 Register, offset: 0xE */
  uint8_t Gate15;                                  /**< Semaphores Gate 15 Register, offset: 0xF */
#endif
  uint8_t RESERVED_0[50/*48*/];
  uint16_t CP0INE;                                 /**< Semaphores Processor n IRQ Notification Enable, offset: 0x40 */
  uint8_t RESERVED_1[6];
  uint16_t CP1INE;                                 /**< Semaphores Processor n IRQ Notification Enable, offset: 0x48 */
  uint8_t RESERVED_2[54];
  uint16_t CP0NTF;                                 /**< Semaphores Processor n IRQ Notification, offset: 0x80 */
  uint8_t RESERVED_3[6];
  uint16_t CP1NTF;                                 /**< Semaphores Processor n IRQ Notification, offset: 0x88 */
  uint8_t RESERVED_4[118];
  uint16_t RSTGT;                                  /**< Semaphores (Secure) Reset Gate n, offset: 0x100 */
  uint8_t RESERVED_5[2];
  uint16_t RSTNTF;                                 /**< Semaphores (Secure) Reset IRQ Notification, offset: 0x104 */
} volatile *SEMA4_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SEMA4 - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SEMA4_Register_Accessor_Macros SEMA4 - Register accessor macros
 * @{
 */


/* SEMA4 - Register accessors */
#define SEMA4_Gate00_REG(base)                   ((base)->Gate00)
#define SEMA4_Gate01_REG(base)                   ((base)->Gate01)
#define SEMA4_Gate02_REG(base)                   ((base)->Gate02)
#define SEMA4_Gate03_REG(base)                   ((base)->Gate03)
#define SEMA4_Gate04_REG(base)                   ((base)->Gate04)
#define SEMA4_Gate05_REG(base)                   ((base)->Gate05)
#define SEMA4_Gate06_REG(base)                   ((base)->Gate06)
#define SEMA4_Gate07_REG(base)                   ((base)->Gate07)
#define SEMA4_Gate08_REG(base)                   ((base)->Gate08)
#define SEMA4_Gate09_REG(base)                   ((base)->Gate09)
#define SEMA4_Gate10_REG(base)                   ((base)->Gate10)
#define SEMA4_Gate11_REG(base)                   ((base)->Gate11)
#define SEMA4_Gate12_REG(base)                   ((base)->Gate12)
#define SEMA4_Gate13_REG(base)                   ((base)->Gate13)
#define SEMA4_Gate14_REG(base)                   ((base)->Gate14)
#define SEMA4_Gate15_REG(base)                   ((base)->Gate15)
#define SEMA4_CP0INE_REG(base)                   ((base)->CP0INE)
#define SEMA4_CP1INE_REG(base)                   ((base)->CP1INE)
#define SEMA4_CP0NTF_REG(base)                   ((base)->CP0NTF)
#define SEMA4_CP1NTF_REG(base)                   ((base)->CP1NTF)
#define SEMA4_RSTGT_REG(base)                    ((base)->RSTGT)
#define SEMA4_RSTNTF_REG(base)                   ((base)->RSTNTF)

/**
 * @}
 */ /* end of group SEMA4_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SEMA4 Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SEMA4_Register_Masks SEMA4 Register Masks
 * @{
 */

/* Gate00 Bit Fields */
#define SEMA4_Gate00_GTFSM_MASK                  0x3u
#define SEMA4_Gate00_GTFSM_SHIFT                 0
#define SEMA4_Gate00_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate00_GTFSM_SHIFT))&SEMA4_Gate00_GTFSM_MASK)
/* Gate01 Bit Fields */
#define SEMA4_Gate01_GTFSM_MASK                  0x3u
#define SEMA4_Gate01_GTFSM_SHIFT                 0
#define SEMA4_Gate01_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate01_GTFSM_SHIFT))&SEMA4_Gate01_GTFSM_MASK)
/* Gate02 Bit Fields */
#define SEMA4_Gate02_GTFSM_MASK                  0x3u
#define SEMA4_Gate02_GTFSM_SHIFT                 0
#define SEMA4_Gate02_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate02_GTFSM_SHIFT))&SEMA4_Gate02_GTFSM_MASK)
/* Gate03 Bit Fields */
#define SEMA4_Gate03_GTFSM_MASK                  0x3u
#define SEMA4_Gate03_GTFSM_SHIFT                 0
#define SEMA4_Gate03_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate03_GTFSM_SHIFT))&SEMA4_Gate03_GTFSM_MASK)
/* Gate04 Bit Fields */
#define SEMA4_Gate04_GTFSM_MASK                  0x3u
#define SEMA4_Gate04_GTFSM_SHIFT                 0
#define SEMA4_Gate04_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate04_GTFSM_SHIFT))&SEMA4_Gate04_GTFSM_MASK)
/* Gate05 Bit Fields */
#define SEMA4_Gate05_GTFSM_MASK                  0x3u
#define SEMA4_Gate05_GTFSM_SHIFT                 0
#define SEMA4_Gate05_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate05_GTFSM_SHIFT))&SEMA4_Gate05_GTFSM_MASK)
/* Gate06 Bit Fields */
#define SEMA4_Gate06_GTFSM_MASK                  0x3u
#define SEMA4_Gate06_GTFSM_SHIFT                 0
#define SEMA4_Gate06_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate06_GTFSM_SHIFT))&SEMA4_Gate06_GTFSM_MASK)
/* Gate07 Bit Fields */
#define SEMA4_Gate07_GTFSM_MASK                  0x3u
#define SEMA4_Gate07_GTFSM_SHIFT                 0
#define SEMA4_Gate07_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate07_GTFSM_SHIFT))&SEMA4_Gate07_GTFSM_MASK)
/* Gate08 Bit Fields */
#define SEMA4_Gate08_GTFSM_MASK                  0x3u
#define SEMA4_Gate08_GTFSM_SHIFT                 0
#define SEMA4_Gate08_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate08_GTFSM_SHIFT))&SEMA4_Gate08_GTFSM_MASK)
/* Gate09 Bit Fields */
#define SEMA4_Gate09_GTFSM_MASK                  0x3u
#define SEMA4_Gate09_GTFSM_SHIFT                 0
#define SEMA4_Gate09_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate09_GTFSM_SHIFT))&SEMA4_Gate09_GTFSM_MASK)
/* Gate10 Bit Fields */
#define SEMA4_Gate10_GTFSM_MASK                  0x3u
#define SEMA4_Gate10_GTFSM_SHIFT                 0
#define SEMA4_Gate10_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate10_GTFSM_SHIFT))&SEMA4_Gate10_GTFSM_MASK)
/* Gate11 Bit Fields */
#define SEMA4_Gate11_GTFSM_MASK                  0x3u
#define SEMA4_Gate11_GTFSM_SHIFT                 0
#define SEMA4_Gate11_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate11_GTFSM_SHIFT))&SEMA4_Gate11_GTFSM_MASK)
/* Gate12 Bit Fields */
#define SEMA4_Gate12_GTFSM_MASK                  0x3u
#define SEMA4_Gate12_GTFSM_SHIFT                 0
#define SEMA4_Gate12_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate12_GTFSM_SHIFT))&SEMA4_Gate12_GTFSM_MASK)
/* Gate13 Bit Fields */
#define SEMA4_Gate13_GTFSM_MASK                  0x3u
#define SEMA4_Gate13_GTFSM_SHIFT                 0
#define SEMA4_Gate13_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate13_GTFSM_SHIFT))&SEMA4_Gate13_GTFSM_MASK)
/* Gate14 Bit Fields */
#define SEMA4_Gate14_GTFSM_MASK                  0x3u
#define SEMA4_Gate14_GTFSM_SHIFT                 0
#define SEMA4_Gate14_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate14_GTFSM_SHIFT))&SEMA4_Gate14_GTFSM_MASK)
/* Gate15 Bit Fields */
#define SEMA4_Gate15_GTFSM_MASK                  0x3u
#define SEMA4_Gate15_GTFSM_SHIFT                 0
#define SEMA4_Gate15_GTFSM(x)                    (((uint8_t)(((uint8_t)(x))<<SEMA4_Gate15_GTFSM_SHIFT))&SEMA4_Gate15_GTFSM_MASK)
/* CP0INE Bit Fields */
#define SEMA4_CP0INE_INE15_MASK                  0x1u
#define SEMA4_CP0INE_INE15_SHIFT                 0
#define SEMA4_CP0INE_INE14_MASK                  0x2u
#define SEMA4_CP0INE_INE14_SHIFT                 1
#define SEMA4_CP0INE_INE13_MASK                  0x4u
#define SEMA4_CP0INE_INE13_SHIFT                 2
#define SEMA4_CP0INE_INE12_MASK                  0x8u
#define SEMA4_CP0INE_INE12_SHIFT                 3
#define SEMA4_CP0INE_INE11_MASK                  0x10u
#define SEMA4_CP0INE_INE11_SHIFT                 4
#define SEMA4_CP0INE_INE10_MASK                  0x20u
#define SEMA4_CP0INE_INE10_SHIFT                 5
#define SEMA4_CP0INE_INE9_MASK                   0x40u
#define SEMA4_CP0INE_INE9_SHIFT                  6
#define SEMA4_CP0INE_INE8_MASK                   0x80u
#define SEMA4_CP0INE_INE8_SHIFT                  7
#define SEMA4_CP0INE_INE7_MASK                   0x100u
#define SEMA4_CP0INE_INE7_SHIFT                  8
#define SEMA4_CP0INE_INE6_MASK                   0x200u
#define SEMA4_CP0INE_INE6_SHIFT                  9
#define SEMA4_CP0INE_INE5_MASK                   0x400u
#define SEMA4_CP0INE_INE5_SHIFT                  10
#define SEMA4_CP0INE_INE4_MASK                   0x800u
#define SEMA4_CP0INE_INE4_SHIFT                  11
#define SEMA4_CP0INE_INE3_MASK                   0x1000u
#define SEMA4_CP0INE_INE3_SHIFT                  12
#define SEMA4_CP0INE_INE2_MASK                   0x2000u
#define SEMA4_CP0INE_INE2_SHIFT                  13
#define SEMA4_CP0INE_INE1_MASK                   0x4000u
#define SEMA4_CP0INE_INE1_SHIFT                  14
#define SEMA4_CP0INE_INE0_MASK                   0x8000u
#define SEMA4_CP0INE_INE0_SHIFT                  15
/* CP1INE Bit Fields */
#define SEMA4_CP1INE_INE15_MASK                  0x1u
#define SEMA4_CP1INE_INE15_SHIFT                 0
#define SEMA4_CP1INE_INE14_MASK                  0x2u
#define SEMA4_CP1INE_INE14_SHIFT                 1
#define SEMA4_CP1INE_INE13_MASK                  0x4u
#define SEMA4_CP1INE_INE13_SHIFT                 2
#define SEMA4_CP1INE_INE12_MASK                  0x8u
#define SEMA4_CP1INE_INE12_SHIFT                 3
#define SEMA4_CP1INE_INE11_MASK                  0x10u
#define SEMA4_CP1INE_INE11_SHIFT                 4
#define SEMA4_CP1INE_INE10_MASK                  0x20u
#define SEMA4_CP1INE_INE10_SHIFT                 5
#define SEMA4_CP1INE_INE9_MASK                   0x40u
#define SEMA4_CP1INE_INE9_SHIFT                  6
#define SEMA4_CP1INE_INE8_MASK                   0x80u
#define SEMA4_CP1INE_INE8_SHIFT                  7
#define SEMA4_CP1INE_INE7_MASK                   0x100u
#define SEMA4_CP1INE_INE7_SHIFT                  8
#define SEMA4_CP1INE_INE6_MASK                   0x200u
#define SEMA4_CP1INE_INE6_SHIFT                  9
#define SEMA4_CP1INE_INE5_MASK                   0x400u
#define SEMA4_CP1INE_INE5_SHIFT                  10
#define SEMA4_CP1INE_INE4_MASK                   0x800u
#define SEMA4_CP1INE_INE4_SHIFT                  11
#define SEMA4_CP1INE_INE3_MASK                   0x1000u
#define SEMA4_CP1INE_INE3_SHIFT                  12
#define SEMA4_CP1INE_INE2_MASK                   0x2000u
#define SEMA4_CP1INE_INE2_SHIFT                  13
#define SEMA4_CP1INE_INE1_MASK                   0x4000u
#define SEMA4_CP1INE_INE1_SHIFT                  14
#define SEMA4_CP1INE_INE0_MASK                   0x8000u
#define SEMA4_CP1INE_INE0_SHIFT                  15
/* CP0NTF Bit Fields */
#define SEMA4_CP0NTF_GNn_MASK                    0xFFFFu
#define SEMA4_CP0NTF_GNn_SHIFT                   0
#define SEMA4_CP0NTF_GNn(x)                      (((uint16_t)(((uint16_t)(x))<<SEMA4_CP0NTF_GNn_SHIFT))&SEMA4_CP0NTF_GNn_MASK)
/* CP1NTF Bit Fields */
#define SEMA4_CP1NTF_GNn_MASK                    0xFFFFu
#define SEMA4_CP1NTF_GNn_SHIFT                   0
#define SEMA4_CP1NTF_GNn(x)                      (((uint16_t)(((uint16_t)(x))<<SEMA4_CP1NTF_GNn_SHIFT))&SEMA4_CP1NTF_GNn_MASK)
/* RSTGT Bit Fields */
#define SEMA4_RSTGT_RSTGTN_MASK                  0xFFu
#define SEMA4_RSTGT_RSTGTN_SHIFT                 0
#define SEMA4_RSTGT_RSTGTN(x)                    (((uint16_t)(((uint16_t)(x))<<SEMA4_RSTGT_RSTGTN_SHIFT))&SEMA4_RSTGT_RSTGTN_MASK)
#define SEMA4_RSTGT_RSTGSM_RSTGMS_RSTGDP_MASK    0xFF00u
#define SEMA4_RSTGT_RSTGSM_RSTGMS_RSTGDP_SHIFT   8
#define SEMA4_RSTGT_RSTGSM_RSTGMS_RSTGDP(x)      (((uint16_t)(((uint16_t)(x))<<SEMA4_RSTGT_RSTGSM_RSTGMS_RSTGDP_SHIFT))&SEMA4_RSTGT_RSTGSM_RSTGMS_RSTGDP_MASK)
/* RSTNTF Bit Fields */
#define SEMA4_RSTNTF_RSTNTN_MASK                 0xFFu
#define SEMA4_RSTNTF_RSTNTN_SHIFT                0
#define SEMA4_RSTNTF_RSTNTN(x)                   (((uint16_t)(((uint16_t)(x))<<SEMA4_RSTNTF_RSTNTN_SHIFT))&SEMA4_RSTNTF_RSTNTN_MASK)
#define SEMA4_RSTNTF_RSTNSM_RSTNMS_RSTNDP_MASK   0xFF00u
#define SEMA4_RSTNTF_RSTNSM_RSTNMS_RSTNDP_SHIFT  8
#define SEMA4_RSTNTF_RSTNSM_RSTNMS_RSTNDP(x)     (((uint16_t)(((uint16_t)(x))<<SEMA4_RSTNTF_RSTNSM_RSTNMS_RSTNDP_SHIFT))&SEMA4_RSTNTF_RSTNSM_RSTNMS_RSTNDP_MASK)

/**
 * @}
 */ /* end of group SEMA4_Register_Masks */


/* SEMA4 - Peripheral instance base addresses */
/** Peripheral SEMA4 base pointer */
#define SEMA4_BASE_PTR                           ((SEMA4_MemMapPtr)0x4001D000u)
/** Array initializer of SEMA4 peripheral base pointers */
#define SEMA4_BASE_PTRS                          { SEMA4_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SEMA4 - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SEMA4_Register_Accessor_Macros SEMA4 - Register accessor macros
 * @{
 */


/* SEMA4 - Register instance definitions */
/* SEMA4 */
#define SEMA4_Gate00                             SEMA4_Gate00_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate01                             SEMA4_Gate01_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate02                             SEMA4_Gate02_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate03                             SEMA4_Gate03_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate04                             SEMA4_Gate04_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate05                             SEMA4_Gate05_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate06                             SEMA4_Gate06_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate07                             SEMA4_Gate07_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate08                             SEMA4_Gate08_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate09                             SEMA4_Gate09_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate10                             SEMA4_Gate10_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate11                             SEMA4_Gate11_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate12                             SEMA4_Gate12_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate13                             SEMA4_Gate13_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate14                             SEMA4_Gate14_REG(SEMA4_BASE_PTR)
#define SEMA4_Gate15                             SEMA4_Gate15_REG(SEMA4_BASE_PTR)
#define SEMA4_CP0INE                             SEMA4_CP0INE_REG(SEMA4_BASE_PTR)
#define SEMA4_CP1INE                             SEMA4_CP1INE_REG(SEMA4_BASE_PTR)
#define SEMA4_CP0NTF                             SEMA4_CP0NTF_REG(SEMA4_BASE_PTR)
#define SEMA4_CP1NTF                             SEMA4_CP1NTF_REG(SEMA4_BASE_PTR)
#define SEMA4_RSTGT                              SEMA4_RSTGT_REG(SEMA4_BASE_PTR)
#define SEMA4_RSTNTF                             SEMA4_RSTNTF_REG(SEMA4_BASE_PTR)

/**
 * @}
 */ /* end of group SEMA4_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SEMA4_Peripheral */


/* ----------------------------------------------------------------------------
   -- SNVS
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SNVS_Peripheral SNVS
 * @{
 */

/** SNVS - Peripheral register structure */
typedef struct SNVS_MemMap {
  uint32_t HPLR;                                   /**< SNVS_HP Lock Register, offset: 0x0 */
  uint32_t HPCOMR;                                 /**< SNVS_HP Command Register, offset: 0x4 */
  uint32_t HPCR;                                   /**< SNVS_HP Control Register, offset: 0x8 */
  uint32_t HPSICR;                                 /**< SNVS_HP Security Interrupt Control Register, offset: 0xC */
  uint32_t HPSVCR;                                 /**< SNVS_HP Security Violation Control Register, offset: 0x10 */
  uint32_t HPSR;                                   /**< SNVS_HP Status Register, offset: 0x14 */
  uint32_t HPSVSR;                                 /**< SNVS_HP Security Violation Status Register, offset: 0x18 */
  uint32_t HPHACIVR;                               /**< SNVS_HP High Assurance Counter IV Register, offset: 0x1C */
  uint32_t HPHACR;                                 /**< SNVS_HP High Assurance Counter Register, offset: 0x20 */
  uint32_t HPRTCMR;                                /**< SNVS_HP Real Time Counter MSB Register, offset: 0x24 */
  uint32_t HPRTCLR;                                /**< SNVS_HP Real Time Counter LSB Register, offset: 0x28 */
  uint32_t HPTAMR;                                 /**< SNVS_HP Time Alarm MSB Register, offset: 0x2C */
  uint32_t HPTALR;                                 /**< SNVS_HP Time Alarm LSB Register, offset: 0x30 */
  uint32_t LPLR;                                   /**< SNVS_LP Lock Register, offset: 0x34 */
  uint32_t LPCR;                                   /**< SNVS_LP Control Register, offset: 0x38 */
  uint32_t LPMKCR;                                 /**< SNVS_LP Master Key Control Register, offset: 0x3C */
  uint32_t LPSVCR;                                 /**< SNVS_LP Security Violation Control Register, offset: 0x40 */
  uint32_t LPTGFCR;                                /**< SNVS_LP Tamper Glitch Filters Configuration Register, offset: 0x44 */
  uint32_t LPTDCR;                                 /**< SNVS_LP Tamper Detectors Configuration Register, offset: 0x48 */
  uint32_t LPSR;                                   /**< SNVS_LP Status Register, offset: 0x4C */
  uint32_t LPSRTCMR;                               /**< SNVS_LP Secure Real Time Counter MSB Register, offset: 0x50 */
  uint32_t LPSRTCLR;                               /**< SNVS_LP Secure Real Time Counter LSB Register, offset: 0x54 */
  uint32_t LPTAR;                                  /**< SNVS_LP Time Alarm Register, offset: 0x58 */
  uint32_t LPSMCMR;                                /**< SNVS_LP Secure Monotonic Counter MSB Register, offset: 0x5C */
  uint32_t LPSMCLR;                                /**< SNVS_LP Secure Monotonic Counter LSB Register, offset: 0x60 */
  uint32_t LPPGDR;                                 /**< SNVS_LP Power Glitch Detector Register, offset: 0x64 */
  uint32_t LPGPR;                                  /**< SNVS_LP General Purpose Register, offset: 0x68 */
  uint32_t LPZMKR[8];                              /**< SNVS_LP Zeroizable Master Key Register n, array offset: 0x6C, array step: 0x4 */
  uint8_t RESERVED_0[2924];
  uint32_t HPVIDR1;                                /**< SNVS_HP Version ID Register 1, offset: 0xBF8 */
  uint32_t HPVIDR2;                                /**< SNVS_HP Version ID Register 2, offset: 0xBFC */
} volatile *SNVS_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SNVS - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SNVS_Register_Accessor_Macros SNVS - Register accessor macros
 * @{
 */


/* SNVS - Register accessors */
#define SNVS_HPLR_REG(base)                      ((base)->HPLR)
#define SNVS_HPCOMR_REG(base)                    ((base)->HPCOMR)
#define SNVS_HPCR_REG(base)                      ((base)->HPCR)
#define SNVS_HPSICR_REG(base)                    ((base)->HPSICR)
#define SNVS_HPSVCR_REG(base)                    ((base)->HPSVCR)
#define SNVS_HPSR_REG(base)                      ((base)->HPSR)
#define SNVS_HPSVSR_REG(base)                    ((base)->HPSVSR)
#define SNVS_HPHACIVR_REG(base)                  ((base)->HPHACIVR)
#define SNVS_HPHACR_REG(base)                    ((base)->HPHACR)
#define SNVS_HPRTCMR_REG(base)                   ((base)->HPRTCMR)
#define SNVS_HPRTCLR_REG(base)                   ((base)->HPRTCLR)
#define SNVS_HPTAMR_REG(base)                    ((base)->HPTAMR)
#define SNVS_HPTALR_REG(base)                    ((base)->HPTALR)
#define SNVS_LPLR_REG(base)                      ((base)->LPLR)
#define SNVS_LPCR_REG(base)                      ((base)->LPCR)
#define SNVS_LPMKCR_REG(base)                    ((base)->LPMKCR)
#define SNVS_LPSVCR_REG(base)                    ((base)->LPSVCR)
#define SNVS_LPTGFCR_REG(base)                   ((base)->LPTGFCR)
#define SNVS_LPTDCR_REG(base)                    ((base)->LPTDCR)
#define SNVS_LPSR_REG(base)                      ((base)->LPSR)
#define SNVS_LPSRTCMR_REG(base)                  ((base)->LPSRTCMR)
#define SNVS_LPSRTCLR_REG(base)                  ((base)->LPSRTCLR)
#define SNVS_LPTAR_REG(base)                     ((base)->LPTAR)
#define SNVS_LPSMCMR_REG(base)                   ((base)->LPSMCMR)
#define SNVS_LPSMCLR_REG(base)                   ((base)->LPSMCLR)
#define SNVS_LPPGDR_REG(base)                    ((base)->LPPGDR)
#define SNVS_LPGPR_REG(base)                     ((base)->LPGPR)
#define SNVS_LPZMKR_REG(base,index)              ((base)->LPZMKR[index])
#define SNVS_HPVIDR1_REG(base)                   ((base)->HPVIDR1)
#define SNVS_HPVIDR2_REG(base)                   ((base)->HPVIDR2)

/**
 * @}
 */ /* end of group SNVS_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SNVS Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SNVS_Register_Masks SNVS Register Masks
 * @{
 */

/* HPLR Bit Fields */
#define SNVS_HPLR_ZMK_WSL_MASK                   0x1u
#define SNVS_HPLR_ZMK_WSL_SHIFT                  0
#define SNVS_HPLR_ZMK_RSL_MASK                   0x2u
#define SNVS_HPLR_ZMK_RSL_SHIFT                  1
#define SNVS_HPLR_SRTC_SL_MASK                   0x4u
#define SNVS_HPLR_SRTC_SL_SHIFT                  2
#define SNVS_HPLR_LPCALB_SL_MASK                 0x8u
#define SNVS_HPLR_LPCALB_SL_SHIFT                3
#define SNVS_HPLR_MC_SL_MASK                     0x10u
#define SNVS_HPLR_MC_SL_SHIFT                    4
#define SNVS_HPLR_GPR_SL_MASK                    0x20u
#define SNVS_HPLR_GPR_SL_SHIFT                   5
#define SNVS_HPLR_LPSVCR_SL_MASK                 0x40u
#define SNVS_HPLR_LPSVCR_SL_SHIFT                6
#define SNVS_HPLR_LPTGFCR_SL_MASK                0x80u
#define SNVS_HPLR_LPTGFCR_SL_SHIFT               7
#define SNVS_HPLR_LPTDCR_SL_MASK                 0x100u
#define SNVS_HPLR_LPTDCR_SL_SHIFT                8
#define SNVS_HPLR_MKS_SL_MASK                    0x200u
#define SNVS_HPLR_MKS_SL_SHIFT                   9
#define SNVS_HPLR_HPSVCR_L_MASK                  0x10000u
#define SNVS_HPLR_HPSVCR_L_SHIFT                 16
#define SNVS_HPLR_HPSICR_L_MASK                  0x20000u
#define SNVS_HPLR_HPSICR_L_SHIFT                 17
#define SNVS_HPLR_HAC_L_MASK                     0x40000u
#define SNVS_HPLR_HAC_L_SHIFT                    18
/* HPCOMR Bit Fields */
#define SNVS_HPCOMR_SSM_ST_MASK                  0x1u
#define SNVS_HPCOMR_SSM_ST_SHIFT                 0
#define SNVS_HPCOMR_SSM_ST_DIS_MASK              0x2u
#define SNVS_HPCOMR_SSM_ST_DIS_SHIFT             1
#define SNVS_HPCOMR_SSM_SFNS_DIS_MASK            0x4u
#define SNVS_HPCOMR_SSM_SFNS_DIS_SHIFT           2
#define SNVS_HPCOMR_LP_SWR_MASK                  0x10u
#define SNVS_HPCOMR_LP_SWR_SHIFT                 4
#define SNVS_HPCOMR_LP_SWR_DIS_MASK              0x20u
#define SNVS_HPCOMR_LP_SWR_DIS_SHIFT             5
#define SNVS_HPCOMR_SW_SV_MASK                   0x100u
#define SNVS_HPCOMR_SW_SV_SHIFT                  8
#define SNVS_HPCOMR_SW_FSV_MASK                  0x200u
#define SNVS_HPCOMR_SW_FSV_SHIFT                 9
#define SNVS_HPCOMR_SW_LPSV_MASK                 0x400u
#define SNVS_HPCOMR_SW_LPSV_SHIFT                10
#define SNVS_HPCOMR_PROG_ZMK_MASK                0x1000u
#define SNVS_HPCOMR_PROG_ZMK_SHIFT               12
#define SNVS_HPCOMR_MKS_EN_MASK                  0x2000u
#define SNVS_HPCOMR_MKS_EN_SHIFT                 13
#define SNVS_HPCOMR_HAC_EN_MASK                  0x10000u
#define SNVS_HPCOMR_HAC_EN_SHIFT                 16
#define SNVS_HPCOMR_HAC_LOAD_MASK                0x20000u
#define SNVS_HPCOMR_HAC_LOAD_SHIFT               17
#define SNVS_HPCOMR_HAC_CLEAR_MASK               0x40000u
#define SNVS_HPCOMR_HAC_CLEAR_SHIFT              18
#define SNVS_HPCOMR_HAC_STOP_MASK                0x80000u
#define SNVS_HPCOMR_HAC_STOP_SHIFT               19
#define SNVS_HPCOMR_NPSWA_EN_MASK                0x80000000u
#define SNVS_HPCOMR_NPSWA_EN_SHIFT               31
/* HPCR Bit Fields */
#define SNVS_HPCR_RTC_EN_MASK                    0x1u
#define SNVS_HPCR_RTC_EN_SHIFT                   0
#define SNVS_HPCR_HPTA_EN_MASK                   0x2u
#define SNVS_HPCR_HPTA_EN_SHIFT                  1
#define SNVS_HPCR_PI_EN_MASK                     0x8u
#define SNVS_HPCR_PI_EN_SHIFT                    3
#define SNVS_HPCR_PI_FREQ_MASK                   0xF0u
#define SNVS_HPCR_PI_FREQ_SHIFT                  4
#define SNVS_HPCR_PI_FREQ(x)                     (((uint32_t)(((uint32_t)(x))<<SNVS_HPCR_PI_FREQ_SHIFT))&SNVS_HPCR_PI_FREQ_MASK)
#define SNVS_HPCR_HPCALB_EN_MASK                 0x100u
#define SNVS_HPCR_HPCALB_EN_SHIFT                8
#define SNVS_HPCR_HPCALB_VAL_MASK                0x7C00u
#define SNVS_HPCR_HPCALB_VAL_SHIFT               10
#define SNVS_HPCR_HPCALB_VAL(x)                  (((uint32_t)(((uint32_t)(x))<<SNVS_HPCR_HPCALB_VAL_SHIFT))&SNVS_HPCR_HPCALB_VAL_MASK)
#define SNVS_HPCR_HP_TS_MASK                     0x10000u
#define SNVS_HPCR_HP_TS_SHIFT                    16
/* HPSICR Bit Fields */
#define SNVS_HPSICR_SVI_EN0_MASK                 0x1u
#define SNVS_HPSICR_SVI_EN0_SHIFT                0
#define SNVS_HPSICR_SVI_EN1_MASK                 0x2u
#define SNVS_HPSICR_SVI_EN1_SHIFT                1
#define SNVS_HPSICR_SVI_EN2_MASK                 0x4u
#define SNVS_HPSICR_SVI_EN2_SHIFT                2
#define SNVS_HPSICR_SVI_EN3_MASK                 0x8u
#define SNVS_HPSICR_SVI_EN3_SHIFT                3
#define SNVS_HPSICR_SVI_EN4_MASK                 0x10u
#define SNVS_HPSICR_SVI_EN4_SHIFT                4
#define SNVS_HPSICR_SVI_EN5_MASK                 0x20u
#define SNVS_HPSICR_SVI_EN5_SHIFT                5
#define SNVS_HPSICR_LPSVI_EN_MASK                0x80000000u
#define SNVS_HPSICR_LPSVI_EN_SHIFT               31
/* HPSVCR Bit Fields */
#define SNVS_HPSVCR_SV_CFG0_MASK                 0x1u
#define SNVS_HPSVCR_SV_CFG0_SHIFT                0
#define SNVS_HPSVCR_SV_CFG1_MASK                 0x2u
#define SNVS_HPSVCR_SV_CFG1_SHIFT                1
#define SNVS_HPSVCR_SV_CFG2_MASK                 0x4u
#define SNVS_HPSVCR_SV_CFG2_SHIFT                2
#define SNVS_HPSVCR_SV_CFG3_MASK                 0x8u
#define SNVS_HPSVCR_SV_CFG3_SHIFT                3
#define SNVS_HPSVCR_SV_CFG4_MASK                 0x10u
#define SNVS_HPSVCR_SV_CFG4_SHIFT                4
#define SNVS_HPSVCR_SV_CFG5_MASK                 0x60u
#define SNVS_HPSVCR_SV_CFG5_SHIFT                5
#define SNVS_HPSVCR_SV_CFG5(x)                   (((uint32_t)(((uint32_t)(x))<<SNVS_HPSVCR_SV_CFG5_SHIFT))&SNVS_HPSVCR_SV_CFG5_MASK)
#define SNVS_HPSVCR_LPSV_CFG_MASK                0xC0000000u
#define SNVS_HPSVCR_LPSV_CFG_SHIFT               30
#define SNVS_HPSVCR_LPSV_CFG(x)                  (((uint32_t)(((uint32_t)(x))<<SNVS_HPSVCR_LPSV_CFG_SHIFT))&SNVS_HPSVCR_LPSV_CFG_MASK)
/* HPSR Bit Fields */
#define SNVS_HPSR_HPTA_MASK                      0x1u
#define SNVS_HPSR_HPTA_SHIFT                     0
#define SNVS_HPSR_PI_MASK                        0x2u
#define SNVS_HPSR_PI_SHIFT                       1
#define SNVS_HPSR_LPDIS_MASK                     0x10u
#define SNVS_HPSR_LPDIS_SHIFT                    4
#define SNVS_HPSR_SSM_ST_MASK                    0xF00u
#define SNVS_HPSR_SSM_ST_SHIFT                   8
#define SNVS_HPSR_SSM_ST(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_HPSR_SSM_ST_SHIFT))&SNVS_HPSR_SSM_ST_MASK)
#define SNVS_HPSR_SYS_SECURITY_CFG_MASK          0x7000u
#define SNVS_HPSR_SYS_SECURITY_CFG_SHIFT         12
#define SNVS_HPSR_SYS_SECURITY_CFG(x)            (((uint32_t)(((uint32_t)(x))<<SNVS_HPSR_SYS_SECURITY_CFG_SHIFT))&SNVS_HPSR_SYS_SECURITY_CFG_MASK)
#define SNVS_HPSR_SYS_SECURE_BOOT_MASK           0x8000u
#define SNVS_HPSR_SYS_SECURE_BOOT_SHIFT          15
#define SNVS_HPSR_OTPMK_SYNDROME_MASK            0x1FF0000u
#define SNVS_HPSR_OTPMK_SYNDROME_SHIFT           16
#define SNVS_HPSR_OTPMK_SYNDROME(x)              (((uint32_t)(((uint32_t)(x))<<SNVS_HPSR_OTPMK_SYNDROME_SHIFT))&SNVS_HPSR_OTPMK_SYNDROME_MASK)
#define SNVS_HPSR_OTPMK_ZERO_MASK                0x8000000u
#define SNVS_HPSR_OTPMK_ZERO_SHIFT               27
#define SNVS_HPSR_ZMK_ZERO_MASK                  0x80000000u
#define SNVS_HPSR_ZMK_ZERO_SHIFT                 31
/* HPSVSR Bit Fields */
#define SNVS_HPSVSR_SEC_VIO0_MASK                0x1u
#define SNVS_HPSVSR_SEC_VIO0_SHIFT               0
#define SNVS_HPSVSR_SEC_VIO1_MASK                0x2u
#define SNVS_HPSVSR_SEC_VIO1_SHIFT               1
#define SNVS_HPSVSR_SEC_VIO2_MASK                0x4u
#define SNVS_HPSVSR_SEC_VIO2_SHIFT               2
#define SNVS_HPSVSR_SEC_VIO3_MASK                0x8u
#define SNVS_HPSVSR_SEC_VIO3_SHIFT               3
#define SNVS_HPSVSR_SEC_VIO4_MASK                0x10u
#define SNVS_HPSVSR_SEC_VIO4_SHIFT               4
#define SNVS_HPSVSR_SEC_VIO5_MASK                0x20u
#define SNVS_HPSVSR_SEC_VIO5_SHIFT               5
#define SNVS_HPSVSR_ZMK_SYNDROME_MASK            0x1FF0000u
#define SNVS_HPSVSR_ZMK_SYNDROME_SHIFT           16
#define SNVS_HPSVSR_ZMK_SYNDROME(x)              (((uint32_t)(((uint32_t)(x))<<SNVS_HPSVSR_ZMK_SYNDROME_SHIFT))&SNVS_HPSVSR_ZMK_SYNDROME_MASK)
#define SNVS_HPSVSR_ZMK_ECC_FAIL_MASK            0x8000000u
#define SNVS_HPSVSR_ZMK_ECC_FAIL_SHIFT           27
/* HPHACIVR Bit Fields */
#define SNVS_HPHACIVR_HAC_COUNTER_IV_MASK        0xFFFFFFFFu
#define SNVS_HPHACIVR_HAC_COUNTER_IV_SHIFT       0
#define SNVS_HPHACIVR_HAC_COUNTER_IV(x)          (((uint32_t)(((uint32_t)(x))<<SNVS_HPHACIVR_HAC_COUNTER_IV_SHIFT))&SNVS_HPHACIVR_HAC_COUNTER_IV_MASK)
/* HPHACR Bit Fields */
#define SNVS_HPHACR_HAC_COUNTER_MASK             0xFFFFFFFFu
#define SNVS_HPHACR_HAC_COUNTER_SHIFT            0
#define SNVS_HPHACR_HAC_COUNTER(x)               (((uint32_t)(((uint32_t)(x))<<SNVS_HPHACR_HAC_COUNTER_SHIFT))&SNVS_HPHACR_HAC_COUNTER_MASK)
/* HPRTCMR Bit Fields */
#define SNVS_HPRTCMR_RTC_MASK                    0x7FFFu
#define SNVS_HPRTCMR_RTC_SHIFT                   0
#define SNVS_HPRTCMR_RTC(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_HPRTCMR_RTC_SHIFT))&SNVS_HPRTCMR_RTC_MASK)
/* HPRTCLR Bit Fields */
#define SNVS_HPRTCLR_RTC_MASK                    0xFFFFFFFFu
#define SNVS_HPRTCLR_RTC_SHIFT                   0
#define SNVS_HPRTCLR_RTC(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_HPRTCLR_RTC_SHIFT))&SNVS_HPRTCLR_RTC_MASK)
/* HPTAMR Bit Fields */
#define SNVS_HPTAMR_HPTA_MASK                    0x7FFFu
#define SNVS_HPTAMR_HPTA_SHIFT                   0
#define SNVS_HPTAMR_HPTA(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_HPTAMR_HPTA_SHIFT))&SNVS_HPTAMR_HPTA_MASK)
/* HPTALR Bit Fields */
#define SNVS_HPTALR_HPTA_MASK                    0xFFFFFFFFu
#define SNVS_HPTALR_HPTA_SHIFT                   0
#define SNVS_HPTALR_HPTA(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_HPTALR_HPTA_SHIFT))&SNVS_HPTALR_HPTA_MASK)
/* LPLR Bit Fields */
#define SNVS_LPLR_ZMK_WHL_MASK                   0x1u
#define SNVS_LPLR_ZMK_WHL_SHIFT                  0
#define SNVS_LPLR_ZMK_RHL_MASK                   0x2u
#define SNVS_LPLR_ZMK_RHL_SHIFT                  1
#define SNVS_LPLR_SRTC_HL_MASK                   0x4u
#define SNVS_LPLR_SRTC_HL_SHIFT                  2
#define SNVS_LPLR_LPCALB_HL_MASK                 0x8u
#define SNVS_LPLR_LPCALB_HL_SHIFT                3
#define SNVS_LPLR_MC_HL_MASK                     0x10u
#define SNVS_LPLR_MC_HL_SHIFT                    4
#define SNVS_LPLR_GPR_HL_MASK                    0x20u
#define SNVS_LPLR_GPR_HL_SHIFT                   5
#define SNVS_LPLR_LPSVCR_HL_MASK                 0x40u
#define SNVS_LPLR_LPSVCR_HL_SHIFT                6
#define SNVS_LPLR_LPTGFCR_HL_MASK                0x80u
#define SNVS_LPLR_LPTGFCR_HL_SHIFT               7
#define SNVS_LPLR_LPTDCR_HL_MASK                 0x100u
#define SNVS_LPLR_LPTDCR_HL_SHIFT                8
#define SNVS_LPLR_MKS_HL_MASK                    0x200u
#define SNVS_LPLR_MKS_HL_SHIFT                   9
/* LPCR Bit Fields */
#define SNVS_LPCR_SRTC_ENV_MASK                  0x1u
#define SNVS_LPCR_SRTC_ENV_SHIFT                 0
#define SNVS_LPCR_LPTA_EN_MASK                   0x2u
#define SNVS_LPCR_LPTA_EN_SHIFT                  1
#define SNVS_LPCR_MC_ENV_MASK                    0x4u
#define SNVS_LPCR_MC_ENV_SHIFT                   2
#define SNVS_LPCR_LPWUI_EN_MASK                  0x8u
#define SNVS_LPCR_LPWUI_EN_SHIFT                 3
#define SNVS_LPCR_SRTC_INV_EN_MASK               0x10u
#define SNVS_LPCR_SRTC_INV_EN_SHIFT              4
#define SNVS_LPCR_DP_EN_MASK                     0x20u
#define SNVS_LPCR_DP_EN_SHIFT                    5
#define SNVS_LPCR_TOP_MASK                       0x40u
#define SNVS_LPCR_TOP_SHIFT                      6
#define SNVS_LPCR_LPCALB_EN_MASK                 0x100u
#define SNVS_LPCR_LPCALB_EN_SHIFT                8
#define SNVS_LPCR_LPCALB_VAL_MASK                0x7C00u
#define SNVS_LPCR_LPCALB_VAL_SHIFT               10
#define SNVS_LPCR_LPCALB_VAL(x)                  (((uint32_t)(((uint32_t)(x))<<SNVS_LPCR_LPCALB_VAL_SHIFT))&SNVS_LPCR_LPCALB_VAL_MASK)
/* LPMKCR Bit Fields */
#define SNVS_LPMKCR_MASTER_KEY_SEL_MASK          0x3u
#define SNVS_LPMKCR_MASTER_KEY_SEL_SHIFT         0
#define SNVS_LPMKCR_MASTER_KEY_SEL(x)            (((uint32_t)(((uint32_t)(x))<<SNVS_LPMKCR_MASTER_KEY_SEL_SHIFT))&SNVS_LPMKCR_MASTER_KEY_SEL_MASK)
#define SNVS_LPMKCR_ZMK_HWP_MASK                 0x4u
#define SNVS_LPMKCR_ZMK_HWP_SHIFT                2
#define SNVS_LPMKCR_ZMK_VAL_MASK                 0x8u
#define SNVS_LPMKCR_ZMK_VAL_SHIFT                3
#define SNVS_LPMKCR_ZMK_ECC_EN_MASK              0x10u
#define SNVS_LPMKCR_ZMK_ECC_EN_SHIFT             4
#define SNVS_LPMKCR_ZMK_ECC_VALUE_MASK           0xFF80u
#define SNVS_LPMKCR_ZMK_ECC_VALUE_SHIFT          7
#define SNVS_LPMKCR_ZMK_ECC_VALUE(x)             (((uint32_t)(((uint32_t)(x))<<SNVS_LPMKCR_ZMK_ECC_VALUE_SHIFT))&SNVS_LPMKCR_ZMK_ECC_VALUE_MASK)
/* LPSVCR Bit Fields */
#define SNVS_LPSVCR_SV_EN0_MASK                  0x1u
#define SNVS_LPSVCR_SV_EN0_SHIFT                 0
#define SNVS_LPSVCR_SV_EN1_MASK                  0x2u
#define SNVS_LPSVCR_SV_EN1_SHIFT                 1
#define SNVS_LPSVCR_SV_EN2_MASK                  0x4u
#define SNVS_LPSVCR_SV_EN2_SHIFT                 2
#define SNVS_LPSVCR_SV_EN3_MASK                  0x8u
#define SNVS_LPSVCR_SV_EN3_SHIFT                 3
#define SNVS_LPSVCR_SV_EN4_MASK                  0x10u
#define SNVS_LPSVCR_SV_EN4_SHIFT                 4
#define SNVS_LPSVCR_SV_EN5_MASK                  0x20u
#define SNVS_LPSVCR_SV_EN5_SHIFT                 5
/* LPTGFCR Bit Fields */
#define SNVS_LPTGFCR_WMTGF_MASK                  0x1Fu
#define SNVS_LPTGFCR_WMTGF_SHIFT                 0
#define SNVS_LPTGFCR_WMTGF(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_LPTGFCR_WMTGF_SHIFT))&SNVS_LPTGFCR_WMTGF_MASK)
#define SNVS_LPTGFCR_WMTGF_EN_MASK               0x80u
#define SNVS_LPTGFCR_WMTGF_EN_SHIFT              7
#define SNVS_LPTGFCR_ETGF1_MASK                  0x1F0000u
#define SNVS_LPTGFCR_ETGF1_SHIFT                 16
#define SNVS_LPTGFCR_ETGF1(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_LPTGFCR_ETGF1_SHIFT))&SNVS_LPTGFCR_ETGF1_MASK)
#define SNVS_LPTGFCR_ETGF1_EN_MASK               0x800000u
#define SNVS_LPTGFCR_ETGF1_EN_SHIFT              23
#define SNVS_LPTGFCR_ETGF2_MASK                  0x1F000000u
#define SNVS_LPTGFCR_ETGF2_SHIFT                 24
#define SNVS_LPTGFCR_ETGF2(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_LPTGFCR_ETGF2_SHIFT))&SNVS_LPTGFCR_ETGF2_MASK)
#define SNVS_LPTGFCR_ETGF2_EN_MASK               0x80000000u
#define SNVS_LPTGFCR_ETGF2_EN_SHIFT              31
/* LPTDCR Bit Fields */
#define SNVS_LPTDCR_SRTCR_EN_MASK                0x2u
#define SNVS_LPTDCR_SRTCR_EN_SHIFT               1
#define SNVS_LPTDCR_MCR_EN_MASK                  0x4u
#define SNVS_LPTDCR_MCR_EN_SHIFT                 2
#define SNVS_LPTDCR_CT_EN_MASK                   0x10u
#define SNVS_LPTDCR_CT_EN_SHIFT                  4
#define SNVS_LPTDCR_TT_EN_MASK                   0x20u
#define SNVS_LPTDCR_TT_EN_SHIFT                  5
#define SNVS_LPTDCR_VT_EN_MASK                   0x40u
#define SNVS_LPTDCR_VT_EN_SHIFT                  6
#define SNVS_LPTDCR_WMT1_EN_MASK                 0x80u
#define SNVS_LPTDCR_WMT1_EN_SHIFT                7
#define SNVS_LPTDCR_WMT2_EN_MASK                 0x100u
#define SNVS_LPTDCR_WMT2_EN_SHIFT                8
#define SNVS_LPTDCR_ET1_EN_MASK                  0x200u
#define SNVS_LPTDCR_ET1_EN_SHIFT                 9
#define SNVS_LPTDCR_ET2_EN_MASK                  0x400u
#define SNVS_LPTDCR_ET2_EN_SHIFT                 10
#define SNVS_LPTDCR_PFD_OBSERV_MASK              0x4000u
#define SNVS_LPTDCR_PFD_OBSERV_SHIFT             14
#define SNVS_LPTDCR_POR_OBSERV_MASK              0x8000u
#define SNVS_LPTDCR_POR_OBSERV_SHIFT             15
#define SNVS_LPTDCR_LTDC_MASK                    0x70000u
#define SNVS_LPTDCR_LTDC_SHIFT                   16
#define SNVS_LPTDCR_LTDC(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_LPTDCR_LTDC_SHIFT))&SNVS_LPTDCR_LTDC_MASK)
#define SNVS_LPTDCR_HTDC_MASK                    0x700000u
#define SNVS_LPTDCR_HTDC_SHIFT                   20
#define SNVS_LPTDCR_HTDC(x)                      (((uint32_t)(((uint32_t)(x))<<SNVS_LPTDCR_HTDC_SHIFT))&SNVS_LPTDCR_HTDC_MASK)
#define SNVS_LPTDCR_VRC_MASK                     0x7000000u
#define SNVS_LPTDCR_VRC_SHIFT                    24
#define SNVS_LPTDCR_VRC(x)                       (((uint32_t)(((uint32_t)(x))<<SNVS_LPTDCR_VRC_SHIFT))&SNVS_LPTDCR_VRC_MASK)
#define SNVS_LPTDCR_OSCB_MASK                    0x10000000u
#define SNVS_LPTDCR_OSCB_SHIFT                   28
/* LPSR Bit Fields */
#define SNVS_LPSR_LPTA_MASK                      0x1u
#define SNVS_LPSR_LPTA_SHIFT                     0
#define SNVS_LPSR_SRTCR_MASK                     0x2u
#define SNVS_LPSR_SRTCR_SHIFT                    1
#define SNVS_LPSR_MCR_MASK                       0x4u
#define SNVS_LPSR_MCR_SHIFT                      2
#define SNVS_LPSR_PGD_MASK                       0x8u
#define SNVS_LPSR_PGD_SHIFT                      3
#define SNVS_LPSR_CTD_MASK                       0x10u
#define SNVS_LPSR_CTD_SHIFT                      4
#define SNVS_LPSR_TTD_MASK                       0x20u
#define SNVS_LPSR_TTD_SHIFT                      5
#define SNVS_LPSR_VTD_MASK                       0x40u
#define SNVS_LPSR_VTD_SHIFT                      6
#define SNVS_LPSR_WMT1D_MASK                     0x80u
#define SNVS_LPSR_WMT1D_SHIFT                    7
#define SNVS_LPSR_WMT2D_MASK                     0x100u
#define SNVS_LPSR_WMT2D_SHIFT                    8
#define SNVS_LPSR_ET1D_MASK                      0x200u
#define SNVS_LPSR_ET1D_SHIFT                     9
#define SNVS_LPSR_ET2D_MASK                      0x400u
#define SNVS_LPSR_ET2D_SHIFT                     10
#define SNVS_LPSR_ESVD_MASK                      0x10000u
#define SNVS_LPSR_ESVD_SHIFT                     16
#define SNVS_LPSR_EO_MASK                        0x20000u
#define SNVS_LPSR_EO_SHIFT                       17
#define SNVS_LPSR_SPO_MASK                       0x40000u
#define SNVS_LPSR_SPO_SHIFT                      18
#define SNVS_LPSR_SED_MASK                       0x100000u
#define SNVS_LPSR_SED_SHIFT                      20
#define SNVS_LPSR_LPNS_MASK                      0x40000000u
#define SNVS_LPSR_LPNS_SHIFT                     30
#define SNVS_LPSR_LPS_MASK                       0x80000000u
#define SNVS_LPSR_LPS_SHIFT                      31
/* LPSRTCMR Bit Fields */
#define SNVS_LPSRTCMR_SRTC_MASK                  0x7FFFu
#define SNVS_LPSRTCMR_SRTC_SHIFT                 0
#define SNVS_LPSRTCMR_SRTC(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_LPSRTCMR_SRTC_SHIFT))&SNVS_LPSRTCMR_SRTC_MASK)
/* LPSRTCLR Bit Fields */
#define SNVS_LPSRTCLR_SRTC_MASK                  0xFFFFFFFFu
#define SNVS_LPSRTCLR_SRTC_SHIFT                 0
#define SNVS_LPSRTCLR_SRTC(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_LPSRTCLR_SRTC_SHIFT))&SNVS_LPSRTCLR_SRTC_MASK)
/* LPTAR Bit Fields */
#define SNVS_LPTAR_LPTA_MASK                     0xFFFFFFFFu
#define SNVS_LPTAR_LPTA_SHIFT                    0
#define SNVS_LPTAR_LPTA(x)                       (((uint32_t)(((uint32_t)(x))<<SNVS_LPTAR_LPTA_SHIFT))&SNVS_LPTAR_LPTA_MASK)
/* LPSMCMR Bit Fields */
#define SNVS_LPSMCMR_MON_COUNTER_MASK            0xFFFFu
#define SNVS_LPSMCMR_MON_COUNTER_SHIFT           0
#define SNVS_LPSMCMR_MON_COUNTER(x)              (((uint32_t)(((uint32_t)(x))<<SNVS_LPSMCMR_MON_COUNTER_SHIFT))&SNVS_LPSMCMR_MON_COUNTER_MASK)
#define SNVS_LPSMCMR_MC_ERA_BITS_MASK            0xFFFF0000u
#define SNVS_LPSMCMR_MC_ERA_BITS_SHIFT           16
#define SNVS_LPSMCMR_MC_ERA_BITS(x)              (((uint32_t)(((uint32_t)(x))<<SNVS_LPSMCMR_MC_ERA_BITS_SHIFT))&SNVS_LPSMCMR_MC_ERA_BITS_MASK)
/* LPSMCLR Bit Fields */
#define SNVS_LPSMCLR_MON_COUNTER_MASK            0xFFFFFFFFu
#define SNVS_LPSMCLR_MON_COUNTER_SHIFT           0
#define SNVS_LPSMCLR_MON_COUNTER(x)              (((uint32_t)(((uint32_t)(x))<<SNVS_LPSMCLR_MON_COUNTER_SHIFT))&SNVS_LPSMCLR_MON_COUNTER_MASK)
/* LPPGDR Bit Fields */
#define SNVS_LPPGDR_PGD_MASK                     0xFFFFFFFFu
#define SNVS_LPPGDR_PGD_SHIFT                    0
#define SNVS_LPPGDR_PGD(x)                       (((uint32_t)(((uint32_t)(x))<<SNVS_LPPGDR_PGD_SHIFT))&SNVS_LPPGDR_PGD_MASK)
/* LPGPR Bit Fields */
#define SNVS_LPGPR_GPR_MASK                      0xFFFFFFFFu
#define SNVS_LPGPR_GPR_SHIFT                     0
#define SNVS_LPGPR_GPR(x)                        (((uint32_t)(((uint32_t)(x))<<SNVS_LPGPR_GPR_SHIFT))&SNVS_LPGPR_GPR_MASK)
/* LPZMKR Bit Fields */
#define SNVS_LPZMKR_ZMK_MASK                     0xFFFFFFFFu
#define SNVS_LPZMKR_ZMK_SHIFT                    0
#define SNVS_LPZMKR_ZMK(x)                       (((uint32_t)(((uint32_t)(x))<<SNVS_LPZMKR_ZMK_SHIFT))&SNVS_LPZMKR_ZMK_MASK)
/* HPVIDR1 Bit Fields */
#define SNVS_HPVIDR1_MINOR_REV_MASK              0xFFu
#define SNVS_HPVIDR1_MINOR_REV_SHIFT             0
#define SNVS_HPVIDR1_MINOR_REV(x)                (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR1_MINOR_REV_SHIFT))&SNVS_HPVIDR1_MINOR_REV_MASK)
#define SNVS_HPVIDR1_MAJOR_REV_MASK              0xFF00u
#define SNVS_HPVIDR1_MAJOR_REV_SHIFT             8
#define SNVS_HPVIDR1_MAJOR_REV(x)                (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR1_MAJOR_REV_SHIFT))&SNVS_HPVIDR1_MAJOR_REV_MASK)
#define SNVS_HPVIDR1_IP_ID_MASK                  0xFFFF0000u
#define SNVS_HPVIDR1_IP_ID_SHIFT                 16
#define SNVS_HPVIDR1_IP_ID(x)                    (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR1_IP_ID_SHIFT))&SNVS_HPVIDR1_IP_ID_MASK)
/* HPVIDR2 Bit Fields */
#define SNVS_HPVIDR2_CONFIG_OPT_MASK             0xFFu
#define SNVS_HPVIDR2_CONFIG_OPT_SHIFT            0
#define SNVS_HPVIDR2_CONFIG_OPT(x)               (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR2_CONFIG_OPT_SHIFT))&SNVS_HPVIDR2_CONFIG_OPT_MASK)
#define SNVS_HPVIDR2_ECO_REV_MASK                0xFF00u
#define SNVS_HPVIDR2_ECO_REV_SHIFT               8
#define SNVS_HPVIDR2_ECO_REV(x)                  (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR2_ECO_REV_SHIFT))&SNVS_HPVIDR2_ECO_REV_MASK)
#define SNVS_HPVIDR2_INTG_OPT_MASK               0xFF0000u
#define SNVS_HPVIDR2_INTG_OPT_SHIFT              16
#define SNVS_HPVIDR2_INTG_OPT(x)                 (((uint32_t)(((uint32_t)(x))<<SNVS_HPVIDR2_INTG_OPT_SHIFT))&SNVS_HPVIDR2_INTG_OPT_MASK)

/**
 * @}
 */ /* end of group SNVS_Register_Masks */


/* SNVS - Peripheral instance base addresses */
/** Peripheral SNVS base pointer */
#define SNVS_BASE_PTR                            ((SNVS_MemMapPtr)0x400A7000u)
/** Array initializer of SNVS peripheral base pointers */
#define SNVS_BASE_PTRS                           { SNVS_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SNVS - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SNVS_Register_Accessor_Macros SNVS - Register accessor macros
 * @{
 */


/* SNVS - Register instance definitions */
/* SNVS */
#define SNVS_HPLR                                SNVS_HPLR_REG(SNVS_BASE_PTR)
#define SNVS_HPCOMR                              SNVS_HPCOMR_REG(SNVS_BASE_PTR)
#define SNVS_HPCR                                SNVS_HPCR_REG(SNVS_BASE_PTR)
#define SNVS_HPSICR                              SNVS_HPSICR_REG(SNVS_BASE_PTR)
#define SNVS_HPSVCR                              SNVS_HPSVCR_REG(SNVS_BASE_PTR)
#define SNVS_HPSR                                SNVS_HPSR_REG(SNVS_BASE_PTR)
#define SNVS_HPSVSR                              SNVS_HPSVSR_REG(SNVS_BASE_PTR)
#define SNVS_HPHACIVR                            SNVS_HPHACIVR_REG(SNVS_BASE_PTR)
#define SNVS_HPHACR                              SNVS_HPHACR_REG(SNVS_BASE_PTR)
#define SNVS_HPRTCMR                             SNVS_HPRTCMR_REG(SNVS_BASE_PTR)
#define SNVS_HPRTCLR                             SNVS_HPRTCLR_REG(SNVS_BASE_PTR)
#define SNVS_HPTAMR                              SNVS_HPTAMR_REG(SNVS_BASE_PTR)
#define SNVS_HPTALR                              SNVS_HPTALR_REG(SNVS_BASE_PTR)
#define SNVS_LPLR                                SNVS_LPLR_REG(SNVS_BASE_PTR)
#define SNVS_LPCR                                SNVS_LPCR_REG(SNVS_BASE_PTR)
#define SNVS_LPMKCR                              SNVS_LPMKCR_REG(SNVS_BASE_PTR)
#define SNVS_LPSVCR                              SNVS_LPSVCR_REG(SNVS_BASE_PTR)
#define SNVS_LPTGFCR                             SNVS_LPTGFCR_REG(SNVS_BASE_PTR)
#define SNVS_LPTDCR                              SNVS_LPTDCR_REG(SNVS_BASE_PTR)
#define SNVS_LPSR                                SNVS_LPSR_REG(SNVS_BASE_PTR)
#define SNVS_LPSRTCMR                            SNVS_LPSRTCMR_REG(SNVS_BASE_PTR)
#define SNVS_LPSRTCLR                            SNVS_LPSRTCLR_REG(SNVS_BASE_PTR)
#define SNVS_LPTAR                               SNVS_LPTAR_REG(SNVS_BASE_PTR)
#define SNVS_LPSMCMR                             SNVS_LPSMCMR_REG(SNVS_BASE_PTR)
#define SNVS_LPSMCLR                             SNVS_LPSMCLR_REG(SNVS_BASE_PTR)
#define SNVS_LPPGDR                              SNVS_LPPGDR_REG(SNVS_BASE_PTR)
#define SNVS_LPGPR                               SNVS_LPGPR_REG(SNVS_BASE_PTR)
#define SNVS_LPZMKR0                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,0)
#define SNVS_LPZMKR1                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,1)
#define SNVS_LPZMKR2                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,2)
#define SNVS_LPZMKR3                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,3)
#define SNVS_LPZMKR4                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,4)
#define SNVS_LPZMKR5                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,5)
#define SNVS_LPZMKR6                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,6)
#define SNVS_LPZMKR7                             SNVS_LPZMKR_REG(SNVS_BASE_PTR,7)
#define SNVS_HPVIDR1                             SNVS_HPVIDR1_REG(SNVS_BASE_PTR)
#define SNVS_HPVIDR2                             SNVS_HPVIDR2_REG(SNVS_BASE_PTR)

/* SNVS - Register array accessors */
#define SNVS_LPZMKR(index)                       SNVS_LPZMKR_REG(SNVS_BASE_PTR,index)

/**
 * @}
 */ /* end of group SNVS_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SNVS_Peripheral */


/* ----------------------------------------------------------------------------
   -- SPDIF
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPDIF_Peripheral SPDIF
 * @{
 */

/** SPDIF - Peripheral register structure */
typedef struct SPDIF_MemMap {
  uint32_t SCR;                                    /**< SPDIF Configuration Register, offset: 0x0 */
  uint32_t SRCD;                                   /**< CDText Control Register, offset: 0x4 */
  uint32_t SRPC;                                   /**< PhaseConfig Register, offset: 0x8 */
  uint32_t SIE;                                    /**< InterruptEn Register, offset: 0xC */
  uint32_t SIS;                                    /**< InterruptStat Register, offset: 0x10 */
  uint32_t SRL;                                    /**< SPDIFRxLeft Register, offset: 0x14 */
  uint32_t SRR;                                    /**< SPDIFRxRight Register, offset: 0x18 */
  uint32_t SRCSH;                                  /**< SPDIFRxCChannel_h Register, offset: 0x1C */
  uint32_t SRCSL;                                  /**< SPDIFRxCChannel_l Register, offset: 0x20 */
  uint32_t SRU;                                    /**< UchannelRx Register, offset: 0x24 */
  uint32_t SRQ;                                    /**< QchannelRx Register, offset: 0x28 */
  uint32_t STL;                                    /**< SPDIFTxLeft Register, offset: 0x2C */
  uint32_t STR;                                    /**< SPDIFTxRight Register, offset: 0x30 */
  uint32_t STCSCH;                                 /**< SPDIFTxCChannelCons_h Register, offset: 0x34 */
  uint32_t STCSCL;                                 /**< SPDIFTxCChannelCons_l Register, offset: 0x38 */
  uint8_t RESERVED_0[8];
  uint32_t SRFM;                                   /**< FreqMeas Register, offset: 0x44 */
  uint8_t RESERVED_1[8];
  uint32_t STC;                                    /**< SPDIFTxClk Register, offset: 0x50 */
} volatile *SPDIF_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SPDIF - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPDIF_Register_Accessor_Macros SPDIF - Register accessor macros
 * @{
 */


/* SPDIF - Register accessors */
#define SPDIF_SCR_REG(base)                      ((base)->SCR)
#define SPDIF_SRCD_REG(base)                     ((base)->SRCD)
#define SPDIF_SRPC_REG(base)                     ((base)->SRPC)
#define SPDIF_SIE_REG(base)                      ((base)->SIE)
#define SPDIF_SIS_REG(base)                      ((base)->SIS)
#define SPDIF_SRL_REG(base)                      ((base)->SRL)
#define SPDIF_SRR_REG(base)                      ((base)->SRR)
#define SPDIF_SRCSH_REG(base)                    ((base)->SRCSH)
#define SPDIF_SRCSL_REG(base)                    ((base)->SRCSL)
#define SPDIF_SRU_REG(base)                      ((base)->SRU)
#define SPDIF_SRQ_REG(base)                      ((base)->SRQ)
#define SPDIF_STL_REG(base)                      ((base)->STL)
#define SPDIF_STR_REG(base)                      ((base)->STR)
#define SPDIF_STCSCH_REG(base)                   ((base)->STCSCH)
#define SPDIF_STCSCL_REG(base)                   ((base)->STCSCL)
#define SPDIF_SRFM_REG(base)                     ((base)->SRFM)
#define SPDIF_STC_REG(base)                      ((base)->STC)

/**
 * @}
 */ /* end of group SPDIF_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SPDIF Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPDIF_Register_Masks SPDIF Register Masks
 * @{
 */

/* SCR Bit Fields */
#define SPDIF_SCR_USrc_Sel_MASK                  0x3u
#define SPDIF_SCR_USrc_Sel_SHIFT                 0
#define SPDIF_SCR_USrc_Sel(x)                    (((uint32_t)(((uint32_t)(x))<<SPDIF_SCR_USrc_Sel_SHIFT))&SPDIF_SCR_USrc_Sel_MASK)
#define SPDIF_SCR_TxSel_MASK                     0x1Cu
#define SPDIF_SCR_TxSel_SHIFT                    2
#define SPDIF_SCR_TxSel(x)                       (((uint32_t)(((uint32_t)(x))<<SPDIF_SCR_TxSel_SHIFT))&SPDIF_SCR_TxSel_MASK)
#define SPDIF_SCR_ValCtrl_MASK                   0x20u
#define SPDIF_SCR_ValCtrl_SHIFT                  5
#define SPDIF_SCR_DMA_TX_En_MASK                 0x100u
#define SPDIF_SCR_DMA_TX_En_SHIFT                8
#define SPDIF_SCR_DMA_Rx_En_MASK                 0x200u
#define SPDIF_SCR_DMA_Rx_En_SHIFT                9
#define SPDIF_SCR_TxFIFO_Ctrl_MASK               0xC00u
#define SPDIF_SCR_TxFIFO_Ctrl_SHIFT              10
#define SPDIF_SCR_TxFIFO_Ctrl(x)                 (((uint32_t)(((uint32_t)(x))<<SPDIF_SCR_TxFIFO_Ctrl_SHIFT))&SPDIF_SCR_TxFIFO_Ctrl_MASK)
#define SPDIF_SCR_Soft_Reset_MASK                0x1000u
#define SPDIF_SCR_Soft_Reset_SHIFT               12
#define SPDIF_SCR_Low_Power_MASK                 0x2000u
#define SPDIF_SCR_Low_Power_SHIFT                13
#define SPDIF_SCR_TxFIFOEmpty_Sel_MASK           0x18000u
#define SPDIF_SCR_TxFIFOEmpty_Sel_SHIFT          15
#define SPDIF_SCR_TxFIFOEmpty_Sel(x)             (((uint32_t)(((uint32_t)(x))<<SPDIF_SCR_TxFIFOEmpty_Sel_SHIFT))&SPDIF_SCR_TxFIFOEmpty_Sel_MASK)
#define SPDIF_SCR_TxAutoSync_MASK                0x20000u
#define SPDIF_SCR_TxAutoSync_SHIFT               17
#define SPDIF_SCR_RxAutoSync_MASK                0x40000u
#define SPDIF_SCR_RxAutoSync_SHIFT               18
#define SPDIF_SCR_RxFIFOFull_Sel_MASK            0x180000u
#define SPDIF_SCR_RxFIFOFull_Sel_SHIFT           19
#define SPDIF_SCR_RxFIFOFull_Sel(x)              (((uint32_t)(((uint32_t)(x))<<SPDIF_SCR_RxFIFOFull_Sel_SHIFT))&SPDIF_SCR_RxFIFOFull_Sel_MASK)
#define SPDIF_SCR_RxFIFO_Rst_MASK                0x200000u
#define SPDIF_SCR_RxFIFO_Rst_SHIFT               21
#define SPDIF_SCR_RxFIFO_En_MASK                 0x400000u
#define SPDIF_SCR_RxFIFO_En_SHIFT                22
#define SPDIF_SCR_RxFIFO_Ctrl_MASK               0x800000u
#define SPDIF_SCR_RxFIFO_Ctrl_SHIFT              23
/* SRCD Bit Fields */
#define SPDIF_SRCD_USyncMode_MASK                0x2u
#define SPDIF_SRCD_USyncMode_SHIFT               1
/* SRPC Bit Fields */
#define SPDIF_SRPC_GainSel_MASK                  0x38u
#define SPDIF_SRPC_GainSel_SHIFT                 3
#define SPDIF_SRPC_GainSel(x)                    (((uint32_t)(((uint32_t)(x))<<SPDIF_SRPC_GainSel_SHIFT))&SPDIF_SRPC_GainSel_MASK)
#define SPDIF_SRPC_LOCK_MASK                     0x40u
#define SPDIF_SRPC_LOCK_SHIFT                    6
#define SPDIF_SRPC_ClkSrc_Sel_MASK               0x780u
#define SPDIF_SRPC_ClkSrc_Sel_SHIFT              7
#define SPDIF_SRPC_ClkSrc_Sel(x)                 (((uint32_t)(((uint32_t)(x))<<SPDIF_SRPC_ClkSrc_Sel_SHIFT))&SPDIF_SRPC_ClkSrc_Sel_MASK)
/* SIE Bit Fields */
#define SPDIF_SIE_RxFIFOFul_MASK                 0x1u
#define SPDIF_SIE_RxFIFOFul_SHIFT                0
#define SPDIF_SIE_TxEm_MASK                      0x2u
#define SPDIF_SIE_TxEm_SHIFT                     1
#define SPDIF_SIE_LockLoss_MASK                  0x4u
#define SPDIF_SIE_LockLoss_SHIFT                 2
#define SPDIF_SIE_RxFIFOResyn_MASK               0x8u
#define SPDIF_SIE_RxFIFOResyn_SHIFT              3
#define SPDIF_SIE_RxFIFOUnOv_MASK                0x10u
#define SPDIF_SIE_RxFIFOUnOv_SHIFT               4
#define SPDIF_SIE_UQErr_MASK                     0x20u
#define SPDIF_SIE_UQErr_SHIFT                    5
#define SPDIF_SIE_UQSync_MASK                    0x40u
#define SPDIF_SIE_UQSync_SHIFT                   6
#define SPDIF_SIE_QRxOv_MASK                     0x80u
#define SPDIF_SIE_QRxOv_SHIFT                    7
#define SPDIF_SIE_QRxFul_MASK                    0x100u
#define SPDIF_SIE_QRxFul_SHIFT                   8
#define SPDIF_SIE_URxOv_MASK                     0x200u
#define SPDIF_SIE_URxOv_SHIFT                    9
#define SPDIF_SIE_URxFul_MASK                    0x400u
#define SPDIF_SIE_URxFul_SHIFT                   10
#define SPDIF_SIE_BitErr_MASK                    0x4000u
#define SPDIF_SIE_BitErr_SHIFT                   14
#define SPDIF_SIE_SymErr_MASK                    0x8000u
#define SPDIF_SIE_SymErr_SHIFT                   15
#define SPDIF_SIE_ValNoGood_MASK                 0x10000u
#define SPDIF_SIE_ValNoGood_SHIFT                16
#define SPDIF_SIE_CNew_MASK                      0x20000u
#define SPDIF_SIE_CNew_SHIFT                     17
#define SPDIF_SIE_TxResyn_MASK                   0x40000u
#define SPDIF_SIE_TxResyn_SHIFT                  18
#define SPDIF_SIE_TxUnOv_MASK                    0x80000u
#define SPDIF_SIE_TxUnOv_SHIFT                   19
#define SPDIF_SIE_Lock_MASK                      0x100000u
#define SPDIF_SIE_Lock_SHIFT                     20
/* SIS Bit Fields */
#define SPDIF_SIS_LockLoss_MASK                  0x4u
#define SPDIF_SIS_LockLoss_SHIFT                 2
#define SPDIF_SIS_RxFIFOResyn_MASK               0x8u
#define SPDIF_SIS_RxFIFOResyn_SHIFT              3
#define SPDIF_SIS_RxFIFOUnOv_MASK                0x10u
#define SPDIF_SIS_RxFIFOUnOv_SHIFT               4
#define SPDIF_SIS_UQErr_MASK                     0x20u
#define SPDIF_SIS_UQErr_SHIFT                    5
#define SPDIF_SIS_UQSync_MASK                    0x40u
#define SPDIF_SIS_UQSync_SHIFT                   6
#define SPDIF_SIS_QRxOv_MASK                     0x80u
#define SPDIF_SIS_QRxOv_SHIFT                    7
#define SPDIF_SIS_URxOv_MASK                     0x200u
#define SPDIF_SIS_URxOv_SHIFT                    9
#define SPDIF_SIS_BitErr_MASK                    0x4000u
#define SPDIF_SIS_BitErr_SHIFT                   14
#define SPDIF_SIS_SymErr_MASK                    0x8000u
#define SPDIF_SIS_SymErr_SHIFT                   15
#define SPDIF_SIS_ValNoGood_MASK                 0x10000u
#define SPDIF_SIS_ValNoGood_SHIFT                16
#define SPDIF_SIS_CNew_MASK                      0x20000u
#define SPDIF_SIS_CNew_SHIFT                     17
#define SPDIF_SIS_TxResyn_MASK                   0x40000u
#define SPDIF_SIS_TxResyn_SHIFT                  18
#define SPDIF_SIS_TxUnOv_MASK                    0x80000u
#define SPDIF_SIS_TxUnOv_SHIFT                   19
#define SPDIF_SIS_Lock_MASK                      0x100000u
#define SPDIF_SIS_Lock_SHIFT                     20
/* SRL Bit Fields */
#define SPDIF_SRL_RxDataLeft_MASK                0xFFFFFFu
#define SPDIF_SRL_RxDataLeft_SHIFT               0
#define SPDIF_SRL_RxDataLeft(x)                  (((uint32_t)(((uint32_t)(x))<<SPDIF_SRL_RxDataLeft_SHIFT))&SPDIF_SRL_RxDataLeft_MASK)
/* SRR Bit Fields */
#define SPDIF_SRR_RxDataRight_MASK               0xFFFFFFu
#define SPDIF_SRR_RxDataRight_SHIFT              0
#define SPDIF_SRR_RxDataRight(x)                 (((uint32_t)(((uint32_t)(x))<<SPDIF_SRR_RxDataRight_SHIFT))&SPDIF_SRR_RxDataRight_MASK)
/* SRCSH Bit Fields */
#define SPDIF_SRCSH_RxCChannel_h_MASK            0xFFFFFFu
#define SPDIF_SRCSH_RxCChannel_h_SHIFT           0
#define SPDIF_SRCSH_RxCChannel_h(x)              (((uint32_t)(((uint32_t)(x))<<SPDIF_SRCSH_RxCChannel_h_SHIFT))&SPDIF_SRCSH_RxCChannel_h_MASK)
/* SRCSL Bit Fields */
#define SPDIF_SRCSL_RxCChannel_l_MASK            0xFFFFFFu
#define SPDIF_SRCSL_RxCChannel_l_SHIFT           0
#define SPDIF_SRCSL_RxCChannel_l(x)              (((uint32_t)(((uint32_t)(x))<<SPDIF_SRCSL_RxCChannel_l_SHIFT))&SPDIF_SRCSL_RxCChannel_l_MASK)
/* SRU Bit Fields */
#define SPDIF_SRU_RxUChannel_MASK                0xFFFFFFu
#define SPDIF_SRU_RxUChannel_SHIFT               0
#define SPDIF_SRU_RxUChannel(x)                  (((uint32_t)(((uint32_t)(x))<<SPDIF_SRU_RxUChannel_SHIFT))&SPDIF_SRU_RxUChannel_MASK)
/* SRQ Bit Fields */
#define SPDIF_SRQ_RxQChannel_MASK                0xFFFFFFu
#define SPDIF_SRQ_RxQChannel_SHIFT               0
#define SPDIF_SRQ_RxQChannel(x)                  (((uint32_t)(((uint32_t)(x))<<SPDIF_SRQ_RxQChannel_SHIFT))&SPDIF_SRQ_RxQChannel_MASK)
/* STL Bit Fields */
#define SPDIF_STL_TxDataLeft_MASK                0xFFFFFFu
#define SPDIF_STL_TxDataLeft_SHIFT               0
#define SPDIF_STL_TxDataLeft(x)                  (((uint32_t)(((uint32_t)(x))<<SPDIF_STL_TxDataLeft_SHIFT))&SPDIF_STL_TxDataLeft_MASK)
/* STR Bit Fields */
#define SPDIF_STR_TxDataRight_MASK               0xFFFFFFu
#define SPDIF_STR_TxDataRight_SHIFT              0
#define SPDIF_STR_TxDataRight(x)                 (((uint32_t)(((uint32_t)(x))<<SPDIF_STR_TxDataRight_SHIFT))&SPDIF_STR_TxDataRight_MASK)
/* STCSCH Bit Fields */
#define SPDIF_STCSCH_TxCChannelCons_h_MASK       0xFFFFFFu
#define SPDIF_STCSCH_TxCChannelCons_h_SHIFT      0
#define SPDIF_STCSCH_TxCChannelCons_h(x)         (((uint32_t)(((uint32_t)(x))<<SPDIF_STCSCH_TxCChannelCons_h_SHIFT))&SPDIF_STCSCH_TxCChannelCons_h_MASK)
/* STCSCL Bit Fields */
#define SPDIF_STCSCL_TxCChannelCons_l_MASK       0xFFFFFFu
#define SPDIF_STCSCL_TxCChannelCons_l_SHIFT      0
#define SPDIF_STCSCL_TxCChannelCons_l(x)         (((uint32_t)(((uint32_t)(x))<<SPDIF_STCSCL_TxCChannelCons_l_SHIFT))&SPDIF_STCSCL_TxCChannelCons_l_MASK)
/* SRFM Bit Fields */
#define SPDIF_SRFM_FreqMeas_MASK                 0xFFFFFFu
#define SPDIF_SRFM_FreqMeas_SHIFT                0
#define SPDIF_SRFM_FreqMeas(x)                   (((uint32_t)(((uint32_t)(x))<<SPDIF_SRFM_FreqMeas_SHIFT))&SPDIF_SRFM_FreqMeas_MASK)
/* STC Bit Fields */
#define SPDIF_STC_TxClk_DF_MASK                  0x7Fu
#define SPDIF_STC_TxClk_DF_SHIFT                 0
#define SPDIF_STC_TxClk_DF(x)                    (((uint32_t)(((uint32_t)(x))<<SPDIF_STC_TxClk_DF_SHIFT))&SPDIF_STC_TxClk_DF_MASK)
#define SPDIF_STC_tx_all_clk_en_MASK             0x80u
#define SPDIF_STC_tx_all_clk_en_SHIFT            7
#define SPDIF_STC_TxClk_Source_MASK              0x700u
#define SPDIF_STC_TxClk_Source_SHIFT             8
#define SPDIF_STC_TxClk_Source(x)                (((uint32_t)(((uint32_t)(x))<<SPDIF_STC_TxClk_Source_SHIFT))&SPDIF_STC_TxClk_Source_MASK)
#define SPDIF_STC_SYSCLK_DF_MASK                 0xFF800u
#define SPDIF_STC_SYSCLK_DF_SHIFT                11
#define SPDIF_STC_SYSCLK_DF(x)                   (((uint32_t)(((uint32_t)(x))<<SPDIF_STC_SYSCLK_DF_SHIFT))&SPDIF_STC_SYSCLK_DF_MASK)

/**
 * @}
 */ /* end of group SPDIF_Register_Masks */


/* SPDIF - Peripheral instance base addresses */
/** Peripheral SPDIF base pointer */
#define SPDIF_BASE_PTR                           ((SPDIF_MemMapPtr)0x40061000u)
/** Array initializer of SPDIF peripheral base pointers */
#define SPDIF_BASE_PTRS                          { SPDIF_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SPDIF - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPDIF_Register_Accessor_Macros SPDIF - Register accessor macros
 * @{
 */


/* SPDIF - Register instance definitions */
/* SPDIF */
#define SPDIF_SCR                                SPDIF_SCR_REG(SPDIF_BASE_PTR)
#define SPDIF_SRCD                               SPDIF_SRCD_REG(SPDIF_BASE_PTR)
#define SPDIF_SRPC                               SPDIF_SRPC_REG(SPDIF_BASE_PTR)
#define SPDIF_SIE                                SPDIF_SIE_REG(SPDIF_BASE_PTR)
#define SPDIF_SIS                                SPDIF_SIS_REG(SPDIF_BASE_PTR)
#define SPDIF_SRL                                SPDIF_SRL_REG(SPDIF_BASE_PTR)
#define SPDIF_SRR                                SPDIF_SRR_REG(SPDIF_BASE_PTR)
#define SPDIF_SRCSH                              SPDIF_SRCSH_REG(SPDIF_BASE_PTR)
#define SPDIF_SRCSL                              SPDIF_SRCSL_REG(SPDIF_BASE_PTR)
#define SPDIF_SRU                                SPDIF_SRU_REG(SPDIF_BASE_PTR)
#define SPDIF_SRQ                                SPDIF_SRQ_REG(SPDIF_BASE_PTR)
#define SPDIF_STL                                SPDIF_STL_REG(SPDIF_BASE_PTR)
#define SPDIF_STR                                SPDIF_STR_REG(SPDIF_BASE_PTR)
#define SPDIF_STCSCH                             SPDIF_STCSCH_REG(SPDIF_BASE_PTR)
#define SPDIF_STCSCL                             SPDIF_STCSCL_REG(SPDIF_BASE_PTR)
#define SPDIF_SRFM                               SPDIF_SRFM_REG(SPDIF_BASE_PTR)
#define SPDIF_STC                                SPDIF_STC_REG(SPDIF_BASE_PTR)

/**
 * @}
 */ /* end of group SPDIF_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SPDIF_Peripheral */


/* ----------------------------------------------------------------------------
   -- SPI
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPI_Peripheral SPI
 * @{
 */

/** SPI - Peripheral register structure */
typedef struct SPI_MemMap {
  uint32_t MCR;                                    /**< Module Configuration Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  uint32_t TCR;                                    /**< Transfer Count Register, offset: 0x8 */
  union {                                          /* offset: 0xC */
    uint32_t CTAR[4];                                /**< DSPI Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 */
    uint32_t CTAR_SLAVE[1];                          /**< Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 */
  };
  uint8_t RESERVED_1[16];
  uint32_t SR;                                     /**< DSPI Status Register, offset: 0x2C */
  uint32_t RSER;                                   /**< DMA/Interrupt Request Select and Enable Register, offset: 0x30 */
  union {                                          /* offset: 0x34 */
    uint32_t PUSHR;                                  /**< PUSH TX FIFO Register In Master Mode, offset: 0x34 */
    uint32_t PUSHR_SLAVE;                            /**< PUSH TX FIFO Register In Slave Mode, offset: 0x34 */
  };
  uint32_t POPR;                                   /**< POP RX FIFO Register, offset: 0x38 */
  uint32_t TXFR0;                                  /**< DSPI Transmit FIFO Registers, offset: 0x3C */
  uint32_t TXFR1;                                  /**< DSPI Transmit FIFO Registers, offset: 0x40 */
  uint32_t TXFR2;                                  /**< DSPI Transmit FIFO Registers, offset: 0x44 */
  uint32_t TXFR3;                                  /**< DSPI Transmit FIFO Registers, offset: 0x48 */
  uint8_t RESERVED_2[48];
  uint32_t RXFR0;                                  /**< DSPI Receive FIFO Registers, offset: 0x7C */
  uint32_t RXFR1;                                  /**< DSPI Receive FIFO Registers, offset: 0x80 */
  uint32_t RXFR2;                                  /**< DSPI Receive FIFO Registers, offset: 0x84 */
  uint32_t RXFR3;                                  /**< DSPI Receive FIFO Registers, offset: 0x88 */
} volatile *SPI_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPI_Register_Accessor_Macros SPI - Register accessor macros
 * @{
 */


/* SPI - Register accessors */
#define SPI_MCR_REG(base)                        ((base)->MCR)
#define SPI_TCR_REG(base)                        ((base)->TCR)
#define SPI_CTAR_REG(base,index2)                ((base)->CTAR[index2])
#define SPI_CTAR_SLAVE_REG(base,index2)          ((base)->CTAR_SLAVE[index2])
#define SPI_SR_REG(base)                         ((base)->SR)
#define SPI_RSER_REG(base)                       ((base)->RSER)
#define SPI_PUSHR_REG(base)                      ((base)->PUSHR)
#define SPI_PUSHR_SLAVE_REG(base)                ((base)->PUSHR_SLAVE)
#define SPI_POPR_REG(base)                       ((base)->POPR)
#define SPI_TXFR0_REG(base)                      ((base)->TXFR0)
#define SPI_TXFR1_REG(base)                      ((base)->TXFR1)
#define SPI_TXFR2_REG(base)                      ((base)->TXFR2)
#define SPI_TXFR3_REG(base)                      ((base)->TXFR3)
#define SPI_RXFR0_REG(base)                      ((base)->RXFR0)
#define SPI_RXFR1_REG(base)                      ((base)->RXFR1)
#define SPI_RXFR2_REG(base)                      ((base)->RXFR2)
#define SPI_RXFR3_REG(base)                      ((base)->RXFR3)

/**
 * @}
 */ /* end of group SPI_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SPI Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPI_Register_Masks SPI Register Masks
 * @{
 */

/* MCR Bit Fields */
#define SPI_MCR_HALT_MASK                        0x1u
#define SPI_MCR_HALT_SHIFT                       0
#define SPI_MCR_PES_MASK                         0x2u
#define SPI_MCR_PES_SHIFT                        1
#define SPI_MCR_FCPCS_MASK                       0x4u
#define SPI_MCR_FCPCS_SHIFT                      2
#define SPI_MCR_SMPL_PT_MASK                     0x300u
#define SPI_MCR_SMPL_PT_SHIFT                    8
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_SMPL_PT_SHIFT))&SPI_MCR_SMPL_PT_MASK)
#define SPI_MCR_CLR_RXF_MASK                     0x400u
#define SPI_MCR_CLR_RXF_SHIFT                    10
#define SPI_MCR_CLR_TXF_MASK                     0x800u
#define SPI_MCR_CLR_TXF_SHIFT                    11
#define SPI_MCR_DIS_RXF_MASK                     0x1000u
#define SPI_MCR_DIS_RXF_SHIFT                    12
#define SPI_MCR_DIS_TXF_MASK                     0x2000u
#define SPI_MCR_DIS_TXF_SHIFT                    13
#define SPI_MCR_MDIS_MASK                        0x4000u
#define SPI_MCR_MDIS_SHIFT                       14
#define SPI_MCR_PCSIS_MASK                       0x3F0000u
#define SPI_MCR_PCSIS_SHIFT                      16
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSIS_SHIFT))&SPI_MCR_PCSIS_MASK)
#define SPI_MCR_ROOE_MASK                        0x1000000u
#define SPI_MCR_ROOE_SHIFT                       24
#define SPI_MCR_PCSSE_MASK                       0x2000000u
#define SPI_MCR_PCSSE_SHIFT                      25
#define SPI_MCR_MTFE_MASK                        0x4000000u
#define SPI_MCR_MTFE_SHIFT                       26
#define SPI_MCR_FRZ_MASK                         0x8000000u
#define SPI_MCR_FRZ_SHIFT                        27
#define SPI_MCR_DCONF_MASK                       0x30000000u
#define SPI_MCR_DCONF_SHIFT                      28
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DCONF_SHIFT))&SPI_MCR_DCONF_MASK)
#define SPI_MCR_CONT_SCKE_MASK                   0x40000000u
#define SPI_MCR_CONT_SCKE_SHIFT                  30
#define SPI_MCR_MSTR_MASK                        0x80000000u
#define SPI_MCR_MSTR_SHIFT                       31
/* TCR Bit Fields */
#define SPI_TCR_SPI_TCNT_MASK                    0xFFFF0000u
#define SPI_TCR_SPI_TCNT_SHIFT                   16
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TCR_SPI_TCNT_SHIFT))&SPI_TCR_SPI_TCNT_MASK)
/* CTAR Bit Fields */
#define SPI_CTAR_BR_MASK                         0xFu
#define SPI_CTAR_BR_SHIFT                        0
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_BR_SHIFT))&SPI_CTAR_BR_MASK)
#define SPI_CTAR_DT_MASK                         0xF0u
#define SPI_CTAR_DT_SHIFT                        4
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DT_SHIFT))&SPI_CTAR_DT_MASK)
#define SPI_CTAR_ASC_MASK                        0xF00u
#define SPI_CTAR_ASC_SHIFT                       8
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_ASC_SHIFT))&SPI_CTAR_ASC_MASK)
#define SPI_CTAR_CSSCK_MASK                      0xF000u
#define SPI_CTAR_CSSCK_SHIFT                     12
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CSSCK_SHIFT))&SPI_CTAR_CSSCK_MASK)
#define SPI_CTAR_PBR_MASK                        0x30000u
#define SPI_CTAR_PBR_SHIFT                       16
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PBR_SHIFT))&SPI_CTAR_PBR_MASK)
#define SPI_CTAR_PDT_MASK                        0xC0000u
#define SPI_CTAR_PDT_SHIFT                       18
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PDT_SHIFT))&SPI_CTAR_PDT_MASK)
#define SPI_CTAR_PASC_MASK                       0x300000u
#define SPI_CTAR_PASC_SHIFT                      20
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PASC_SHIFT))&SPI_CTAR_PASC_MASK)
#define SPI_CTAR_PCSSCK_MASK                     0xC00000u
#define SPI_CTAR_PCSSCK_SHIFT                    22
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PCSSCK_SHIFT))&SPI_CTAR_PCSSCK_MASK)
#define SPI_CTAR_LSBFE_MASK                      0x1000000u
#define SPI_CTAR_LSBFE_SHIFT                     24
#define SPI_CTAR_CPHA_MASK                       0x2000000u
#define SPI_CTAR_CPHA_SHIFT                      25
#define SPI_CTAR_CPOL_MASK                       0x4000000u
#define SPI_CTAR_CPOL_SHIFT                      26
#define SPI_CTAR_FMSZ_MASK                       0x78000000u
#define SPI_CTAR_FMSZ_SHIFT                      27
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_FMSZ_SHIFT))&SPI_CTAR_FMSZ_MASK)
#define SPI_CTAR_DBR_MASK                        0x80000000u
#define SPI_CTAR_DBR_SHIFT                       31
/* CTAR_SLAVE Bit Fields */
#define SPI_CTAR_SLAVE_PP_MASK                   0x800000u
#define SPI_CTAR_SLAVE_PP_SHIFT                  23
#define SPI_CTAR_SLAVE_PE_MASK                   0x1000000u
#define SPI_CTAR_SLAVE_PE_SHIFT                  24
#define SPI_CTAR_SLAVE_CPHA_MASK                 0x2000000u
#define SPI_CTAR_SLAVE_CPHA_SHIFT                25
#define SPI_CTAR_SLAVE_CPOL_MASK                 0x4000000u
#define SPI_CTAR_SLAVE_CPOL_SHIFT                26
#define SPI_CTAR_SLAVE_FMSZ_MASK                 0xF8000000u
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                27
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ_SHIFT))&SPI_CTAR_SLAVE_FMSZ_MASK)
/* SR Bit Fields */
#define SPI_SR_POPNXTPTR_MASK                    0xFu
#define SPI_SR_POPNXTPTR_SHIFT                   0
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_SR_POPNXTPTR_SHIFT))&SPI_SR_POPNXTPTR_MASK)
#define SPI_SR_RXCTR_MASK                        0xF0u
#define SPI_SR_RXCTR_SHIFT                       4
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_RXCTR_SHIFT))&SPI_SR_RXCTR_MASK)
#define SPI_SR_TXNXTPTR_MASK                     0xF00u
#define SPI_SR_TXNXTPTR_SHIFT                    8
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXNXTPTR_SHIFT))&SPI_SR_TXNXTPTR_MASK)
#define SPI_SR_TXCTR_MASK                        0xF000u
#define SPI_SR_TXCTR_SHIFT                       12
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXCTR_SHIFT))&SPI_SR_TXCTR_MASK)
#define SPI_SR_RFDF_MASK                         0x20000u
#define SPI_SR_RFDF_SHIFT                        17
#define SPI_SR_RFOF_MASK                         0x80000u
#define SPI_SR_RFOF_SHIFT                        19
#define SPI_SR_SPEF_MASK                         0x200000u
#define SPI_SR_SPEF_SHIFT                        21
#define SPI_SR_TFFF_MASK                         0x2000000u
#define SPI_SR_TFFF_SHIFT                        25
#define SPI_SR_TFUF_MASK                         0x8000000u
#define SPI_SR_TFUF_SHIFT                        27
#define SPI_SR_EOQF_MASK                         0x10000000u
#define SPI_SR_EOQF_SHIFT                        28
#define SPI_SR_TXRXS_MASK                        0x40000000u
#define SPI_SR_TXRXS_SHIFT                       30
#define SPI_SR_TCF_MASK                          0x80000000u
#define SPI_SR_TCF_SHIFT                         31
/* RSER Bit Fields */
#define SPI_RSER_RFDF_DIRS_MASK                  0x10000u
#define SPI_RSER_RFDF_DIRS_SHIFT                 16
#define SPI_RSER_RFDF_RE_MASK                    0x20000u
#define SPI_RSER_RFDF_RE_SHIFT                   17
#define SPI_RSER_RFOF_RE_MASK                    0x80000u
#define SPI_RSER_RFOF_RE_SHIFT                   19
#define SPI_RSER_SPEF_RE_MASK                    0x200000u
#define SPI_RSER_SPEF_RE_SHIFT                   21
#define SPI_RSER_TFFF_DIRS_MASK                  0x1000000u
#define SPI_RSER_TFFF_DIRS_SHIFT                 24
#define SPI_RSER_TFFF_RE_MASK                    0x2000000u
#define SPI_RSER_TFFF_RE_SHIFT                   25
#define SPI_RSER_TFUF_RE_MASK                    0x8000000u
#define SPI_RSER_TFUF_RE_SHIFT                   27
#define SPI_RSER_EOQF_RE_MASK                    0x10000000u
#define SPI_RSER_EOQF_RE_SHIFT                   28
#define SPI_RSER_TCF_RE_MASK                     0x80000000u
#define SPI_RSER_TCF_RE_SHIFT                    31
/* PUSHR Bit Fields */
#define SPI_PUSHR_TXDATA_MASK                    0xFFFFu
#define SPI_PUSHR_TXDATA_SHIFT                   0
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_TXDATA_SHIFT))&SPI_PUSHR_TXDATA_MASK)
#define SPI_PUSHR_PCS_MASK                       0x3F0000u
#define SPI_PUSHR_PCS_SHIFT                      16
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PCS_SHIFT))&SPI_PUSHR_PCS_MASK)
#define SPI_PUSHR_PP_MCSC_MASK                   0x1000000u
#define SPI_PUSHR_PP_MCSC_SHIFT                  24
#define SPI_PUSHR_PE_MASC_MASK                   0x2000000u
#define SPI_PUSHR_PE_MASC_SHIFT                  25
#define SPI_PUSHR_CTCNT_MASK                     0x4000000u
#define SPI_PUSHR_CTCNT_SHIFT                    26
#define SPI_PUSHR_EOQ_MASK                       0x8000000u
#define SPI_PUSHR_EOQ_SHIFT                      27
#define SPI_PUSHR_CTAS_MASK                      0x70000000u
#define SPI_PUSHR_CTAS_SHIFT                     28
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTAS_SHIFT))&SPI_PUSHR_CTAS_MASK)
#define SPI_PUSHR_CONT_MASK                      0x80000000u
#define SPI_PUSHR_CONT_SHIFT                     31
/* PUSHR_SLAVE Bit Fields */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              0xFFFFu
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             0
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_SLAVE_TXDATA_SHIFT))&SPI_PUSHR_SLAVE_TXDATA_MASK)
/* POPR Bit Fields */
#define SPI_POPR_RXDATA_MASK                     0xFFFFFFFFu
#define SPI_POPR_RXDATA_SHIFT                    0
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_POPR_RXDATA_SHIFT))&SPI_POPR_RXDATA_MASK)
/* TXFR0 Bit Fields */
#define SPI_TXFR0_TXDATA_MASK                    0xFFFFu
#define SPI_TXFR0_TXDATA_SHIFT                   0
#define SPI_TXFR0_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TXFR0_TXDATA_SHIFT))&SPI_TXFR0_TXDATA_MASK)
#define SPI_TXFR0_TXCMD_TXDATA_MASK              0xFFFF0000u
#define SPI_TXFR0_TXCMD_TXDATA_SHIFT             16
#define SPI_TXFR0_TXCMD_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_TXFR0_TXCMD_TXDATA_SHIFT))&SPI_TXFR0_TXCMD_TXDATA_MASK)
/* TXFR1 Bit Fields */
#define SPI_TXFR1_TXDATA_MASK                    0xFFFFu
#define SPI_TXFR1_TXDATA_SHIFT                   0
#define SPI_TXFR1_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TXFR1_TXDATA_SHIFT))&SPI_TXFR1_TXDATA_MASK)
#define SPI_TXFR1_TXCMD_TXDATA_MASK              0xFFFF0000u
#define SPI_TXFR1_TXCMD_TXDATA_SHIFT             16
#define SPI_TXFR1_TXCMD_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_TXFR1_TXCMD_TXDATA_SHIFT))&SPI_TXFR1_TXCMD_TXDATA_MASK)
/* TXFR2 Bit Fields */
#define SPI_TXFR2_TXDATA_MASK                    0xFFFFu
#define SPI_TXFR2_TXDATA_SHIFT                   0
#define SPI_TXFR2_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TXFR2_TXDATA_SHIFT))&SPI_TXFR2_TXDATA_MASK)
#define SPI_TXFR2_TXCMD_TXDATA_MASK              0xFFFF0000u
#define SPI_TXFR2_TXCMD_TXDATA_SHIFT             16
#define SPI_TXFR2_TXCMD_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_TXFR2_TXCMD_TXDATA_SHIFT))&SPI_TXFR2_TXCMD_TXDATA_MASK)
/* TXFR3 Bit Fields */
#define SPI_TXFR3_TXDATA_MASK                    0xFFFFu
#define SPI_TXFR3_TXDATA_SHIFT                   0
#define SPI_TXFR3_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TXFR3_TXDATA_SHIFT))&SPI_TXFR3_TXDATA_MASK)
#define SPI_TXFR3_TXCMD_TXDATA_MASK              0xFFFF0000u
#define SPI_TXFR3_TXCMD_TXDATA_SHIFT             16
#define SPI_TXFR3_TXCMD_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_TXFR3_TXCMD_TXDATA_SHIFT))&SPI_TXFR3_TXCMD_TXDATA_MASK)
/* RXFR0 Bit Fields */
#define SPI_RXFR0_RXDATA_MASK                    0xFFFFFFFFu
#define SPI_RXFR0_RXDATA_SHIFT                   0
#define SPI_RXFR0_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RXFR0_RXDATA_SHIFT))&SPI_RXFR0_RXDATA_MASK)
/* RXFR1 Bit Fields */
#define SPI_RXFR1_RXDATA_MASK                    0xFFFFFFFFu
#define SPI_RXFR1_RXDATA_SHIFT                   0
#define SPI_RXFR1_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RXFR1_RXDATA_SHIFT))&SPI_RXFR1_RXDATA_MASK)
/* RXFR2 Bit Fields */
#define SPI_RXFR2_RXDATA_MASK                    0xFFFFFFFFu
#define SPI_RXFR2_RXDATA_SHIFT                   0
#define SPI_RXFR2_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RXFR2_RXDATA_SHIFT))&SPI_RXFR2_RXDATA_MASK)
/* RXFR3 Bit Fields */
#define SPI_RXFR3_RXDATA_MASK                    0xFFFFFFFFu
#define SPI_RXFR3_RXDATA_SHIFT                   0
#define SPI_RXFR3_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RXFR3_RXDATA_SHIFT))&SPI_RXFR3_RXDATA_MASK)

/**
 * @}
 */ /* end of group SPI_Register_Masks */


/* SPI - Peripheral instance base addresses */
/** Peripheral SPI0 base pointer */
#define SPI0_BASE_PTR                            ((SPI_MemMapPtr)0x4002C000u)
/** Peripheral SPI1 base pointer */
#define SPI1_BASE_PTR                            ((SPI_MemMapPtr)0x4002D000u)
/** Peripheral SPI2 base pointer */
#define SPI2_BASE_PTR                            ((SPI_MemMapPtr)0x400AC000u)
/** Peripheral SPI3 base pointer */
#define SPI3_BASE_PTR                            ((SPI_MemMapPtr)0x400AD000u)
/** Array initializer of SPI peripheral base pointers */
#define SPI_BASE_PTRS                            { SPI0_BASE_PTR, SPI1_BASE_PTR, SPI2_BASE_PTR, SPI3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SPI - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SPI_Register_Accessor_Macros SPI - Register accessor macros
 * @{
 */


/* SPI - Register instance definitions */
/* SPI0 */
#define SPI0_MCR                                 SPI_MCR_REG(SPI0_BASE_PTR)
#define SPI0_TCR                                 SPI_TCR_REG(SPI0_BASE_PTR)
#define SPI0_CTAR0                               SPI_CTAR_REG(SPI0_BASE_PTR,0)
#define SPI0_CTAR0_SLAVE                         SPI_CTAR_SLAVE_REG(SPI0_BASE_PTR,0)
#define SPI0_CTAR1                               SPI_CTAR_REG(SPI0_BASE_PTR,1)
#define SPI0_CTAR2                               SPI_CTAR_REG(SPI0_BASE_PTR,2)
#define SPI0_CTAR3                               SPI_CTAR_REG(SPI0_BASE_PTR,3)
#define SPI0_SR                                  SPI_SR_REG(SPI0_BASE_PTR)
#define SPI0_RSER                                SPI_RSER_REG(SPI0_BASE_PTR)
#define SPI0_PUSHR                               SPI_PUSHR_REG(SPI0_BASE_PTR)
#define SPI0_PUSHR_SLAVE                         SPI_PUSHR_SLAVE_REG(SPI0_BASE_PTR)
#define SPI0_POPR                                SPI_POPR_REG(SPI0_BASE_PTR)
#define SPI0_TXFR0                               SPI_TXFR0_REG(SPI0_BASE_PTR)
#define SPI0_TXFR1                               SPI_TXFR1_REG(SPI0_BASE_PTR)
#define SPI0_TXFR2                               SPI_TXFR2_REG(SPI0_BASE_PTR)
#define SPI0_TXFR3                               SPI_TXFR3_REG(SPI0_BASE_PTR)
#define SPI0_RXFR0                               SPI_RXFR0_REG(SPI0_BASE_PTR)
#define SPI0_RXFR1                               SPI_RXFR1_REG(SPI0_BASE_PTR)
#define SPI0_RXFR2                               SPI_RXFR2_REG(SPI0_BASE_PTR)
#define SPI0_RXFR3                               SPI_RXFR3_REG(SPI0_BASE_PTR)
/* SPI1 */
#define SPI1_MCR                                 SPI_MCR_REG(SPI1_BASE_PTR)
#define SPI1_TCR                                 SPI_TCR_REG(SPI1_BASE_PTR)
#define SPI1_CTAR0                               SPI_CTAR_REG(SPI1_BASE_PTR,0)
#define SPI1_CTAR0_SLAVE                         SPI_CTAR_SLAVE_REG(SPI1_BASE_PTR,0)
#define SPI1_CTAR1                               SPI_CTAR_REG(SPI1_BASE_PTR,1)
#define SPI1_CTAR2                               SPI_CTAR_REG(SPI1_BASE_PTR,2)
#define SPI1_CTAR3                               SPI_CTAR_REG(SPI1_BASE_PTR,3)
#define SPI1_SR                                  SPI_SR_REG(SPI1_BASE_PTR)
#define SPI1_RSER                                SPI_RSER_REG(SPI1_BASE_PTR)
#define SPI1_PUSHR                               SPI_PUSHR_REG(SPI1_BASE_PTR)
#define SPI1_PUSHR_SLAVE                         SPI_PUSHR_SLAVE_REG(SPI1_BASE_PTR)
#define SPI1_POPR                                SPI_POPR_REG(SPI1_BASE_PTR)
#define SPI1_TXFR0                               SPI_TXFR0_REG(SPI1_BASE_PTR)
#define SPI1_TXFR1                               SPI_TXFR1_REG(SPI1_BASE_PTR)
#define SPI1_TXFR2                               SPI_TXFR2_REG(SPI1_BASE_PTR)
#define SPI1_TXFR3                               SPI_TXFR3_REG(SPI1_BASE_PTR)
#define SPI1_RXFR0                               SPI_RXFR0_REG(SPI1_BASE_PTR)
#define SPI1_RXFR1                               SPI_RXFR1_REG(SPI1_BASE_PTR)
#define SPI1_RXFR2                               SPI_RXFR2_REG(SPI1_BASE_PTR)
#define SPI1_RXFR3                               SPI_RXFR3_REG(SPI1_BASE_PTR)
/* SPI2 */
#define SPI2_MCR                                 SPI_MCR_REG(SPI2_BASE_PTR)
#define SPI2_TCR                                 SPI_TCR_REG(SPI2_BASE_PTR)
#define SPI2_CTAR0                               SPI_CTAR_REG(SPI2_BASE_PTR,0)
#define SPI2_CTAR0_SLAVE                         SPI_CTAR_SLAVE_REG(SPI2_BASE_PTR,0)
#define SPI2_CTAR1                               SPI_CTAR_REG(SPI2_BASE_PTR,1)
#define SPI2_CTAR2                               SPI_CTAR_REG(SPI2_BASE_PTR,2)
#define SPI2_CTAR3                               SPI_CTAR_REG(SPI2_BASE_PTR,3)
#define SPI2_SR                                  SPI_SR_REG(SPI2_BASE_PTR)
#define SPI2_RSER                                SPI_RSER_REG(SPI2_BASE_PTR)
#define SPI2_PUSHR                               SPI_PUSHR_REG(SPI2_BASE_PTR)
#define SPI2_PUSHR_SLAVE                         SPI_PUSHR_SLAVE_REG(SPI2_BASE_PTR)
#define SPI2_POPR                                SPI_POPR_REG(SPI2_BASE_PTR)
#define SPI2_TXFR0                               SPI_TXFR0_REG(SPI2_BASE_PTR)
#define SPI2_TXFR1                               SPI_TXFR1_REG(SPI2_BASE_PTR)
#define SPI2_TXFR2                               SPI_TXFR2_REG(SPI2_BASE_PTR)
#define SPI2_TXFR3                               SPI_TXFR3_REG(SPI2_BASE_PTR)
#define SPI2_RXFR0                               SPI_RXFR0_REG(SPI2_BASE_PTR)
#define SPI2_RXFR1                               SPI_RXFR1_REG(SPI2_BASE_PTR)
#define SPI2_RXFR2                               SPI_RXFR2_REG(SPI2_BASE_PTR)
#define SPI2_RXFR3                               SPI_RXFR3_REG(SPI2_BASE_PTR)
/* SPI3 */
#define SPI3_MCR                                 SPI_MCR_REG(SPI3_BASE_PTR)
#define SPI3_TCR                                 SPI_TCR_REG(SPI3_BASE_PTR)
#define SPI3_CTAR0                               SPI_CTAR_REG(SPI3_BASE_PTR,0)
#define SPI3_CTAR0_SLAVE                         SPI_CTAR_SLAVE_REG(SPI3_BASE_PTR,0)
#define SPI3_CTAR1                               SPI_CTAR_REG(SPI3_BASE_PTR,1)
#define SPI3_CTAR2                               SPI_CTAR_REG(SPI3_BASE_PTR,2)
#define SPI3_CTAR3                               SPI_CTAR_REG(SPI3_BASE_PTR,3)
#define SPI3_SR                                  SPI_SR_REG(SPI3_BASE_PTR)
#define SPI3_RSER                                SPI_RSER_REG(SPI3_BASE_PTR)
#define SPI3_PUSHR                               SPI_PUSHR_REG(SPI3_BASE_PTR)
#define SPI3_PUSHR_SLAVE                         SPI_PUSHR_SLAVE_REG(SPI3_BASE_PTR)
#define SPI3_POPR                                SPI_POPR_REG(SPI3_BASE_PTR)
#define SPI3_TXFR0                               SPI_TXFR0_REG(SPI3_BASE_PTR)
#define SPI3_TXFR1                               SPI_TXFR1_REG(SPI3_BASE_PTR)
#define SPI3_TXFR2                               SPI_TXFR2_REG(SPI3_BASE_PTR)
#define SPI3_TXFR3                               SPI_TXFR3_REG(SPI3_BASE_PTR)
#define SPI3_RXFR0                               SPI_RXFR0_REG(SPI3_BASE_PTR)
#define SPI3_RXFR1                               SPI_RXFR1_REG(SPI3_BASE_PTR)
#define SPI3_RXFR2                               SPI_RXFR2_REG(SPI3_BASE_PTR)
#define SPI3_RXFR3                               SPI_RXFR3_REG(SPI3_BASE_PTR)

/* SPI - Register array accessors */
#define SPI0_CTAR(index2)                        SPI_CTAR_REG(SPI0_BASE_PTR,index2)
#define SPI1_CTAR(index2)                        SPI_CTAR_REG(SPI1_BASE_PTR,index2)
#define SPI2_CTAR(index2)                        SPI_CTAR_REG(SPI2_BASE_PTR,index2)
#define SPI3_CTAR(index2)                        SPI_CTAR_REG(SPI3_BASE_PTR,index2)
#define SPI0_CTAR_SLAVE(index2)                  SPI_CTAR_SLAVE_REG(SPI0_BASE_PTR,index2)
#define SPI1_CTAR_SLAVE(index2)                  SPI_CTAR_SLAVE_REG(SPI1_BASE_PTR,index2)
#define SPI2_CTAR_SLAVE(index2)                  SPI_CTAR_SLAVE_REG(SPI2_BASE_PTR,index2)
#define SPI3_CTAR_SLAVE(index2)                  SPI_CTAR_SLAVE_REG(SPI3_BASE_PTR,index2)

/**
 * @}
 */ /* end of group SPI_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SPI_Peripheral */


/* ----------------------------------------------------------------------------
   -- SRC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SRC_Peripheral SRC
 * @{
 */

/** SRC - Peripheral register structure */
typedef struct SRC_MemMap {
  uint32_t SCR;                                    /**< SRC Control Register, offset: 0x0 */
  uint32_t SBMR1;                                  /**< SRC Boot Mode Register 1, offset: 0x4 */
  uint32_t SRSR;                                   /**< SRC Status Register, offset: 0x8 */
  uint32_t SECR;                                   /**< , offset: 0xC */
  uint32_t GPSR;                                   /**< , offset: 0x10 */
  uint32_t SICR;                                   /**< SRC Reset Event Configuration Register, offset: 0x14 */
  uint32_t SIMR;                                   /**< SRC Interrupt Masking Register, offset: 0x18 */
  uint32_t SBMR2;                                  /**< SRC Boot Mode Register 2, offset: 0x1C */
  uint32_t GPR[5];                                 /**< General Purpose Register, array offset: 0x20, array step: 0x4 */
  uint32_t HAB[6];                                 /**< HAB, array offset: 0x34, array step: 0x4 */
  uint32_t MISC0;                                  /**< MISC0, offset: 0x4C */
  uint32_t MISC1;                                  /**< MISC1, offset: 0x50 */
  uint32_t MISC2;                                  /**< MISC2, offset: 0x54 */
  uint32_t MISC3;                                  /**< MISC3, offset: 0x58 */
} volatile *SRC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SRC_Register_Accessor_Macros SRC - Register accessor macros
 * @{
 */


/* SRC - Register accessors */
#define SRC_SCR_REG(base)                        ((base)->SCR)
#define SRC_SBMR1_REG(base)                      ((base)->SBMR1)
#define SRC_SRSR_REG(base)                       ((base)->SRSR)
#define SRC_SECR_REG(base)                       ((base)->SECR)
#define SRC_GPSR_REG(base)                       ((base)->GPSR)
#define SRC_SICR_REG(base)                       ((base)->SICR)
#define SRC_SIMR_REG(base)                       ((base)->SIMR)
#define SRC_SBMR2_REG(base)                      ((base)->SBMR2)
#define SRC_GPR_REG(base,index)                  ((base)->GPR[index])
#define SRC_HAB_REG(base,index)                  ((base)->HAB[index])
#define SRC_MISC0_REG(base)                      ((base)->MISC0)
#define SRC_MISC1_REG(base)                      ((base)->MISC1)
#define SRC_MISC2_REG(base)                      ((base)->MISC2)
#define SRC_MISC3_REG(base)                      ((base)->MISC3)

/**
 * @}
 */ /* end of group SRC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SRC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SRC_Register_Masks SRC Register Masks
 * @{
 */

/* SCR Bit Fields */
#define SRC_SCR_CA5_WDGRST_MASK_MASK             0xFu
#define SRC_SCR_CA5_WDGRST_MASK_SHIFT            0
#define SRC_SCR_CA5_WDGRST_MASK(x)               (((uint32_t)(((uint32_t)(x))<<SRC_SCR_CA5_WDGRST_MASK_SHIFT))&SRC_SCR_CA5_WDGRST_MASK_MASK)
#define SRC_SCR_CM4_WDGRST_MASK_MASK             0x780u
#define SRC_SCR_CM4_WDGRST_MASK_SHIFT            7
#define SRC_SCR_CM4_WDGRST_MASK(x)               (((uint32_t)(((uint32_t)(x))<<SRC_SCR_CM4_WDGRST_MASK_SHIFT))&SRC_SCR_CM4_WDGRST_MASK_MASK)
#define SRC_SCR_SW_RST_MASK                      0x1000u
#define SRC_SCR_SW_RST_SHIFT                     12
/* SBMR1 Bit Fields */
#define SRC_SBMR1_BOOT_CFG1_MASK                 0xFFu
#define SRC_SBMR1_BOOT_CFG1_SHIFT                0
#define SRC_SBMR1_BOOT_CFG1(x)                   (((uint32_t)(((uint32_t)(x))<<SRC_SBMR1_BOOT_CFG1_SHIFT))&SRC_SBMR1_BOOT_CFG1_MASK)
#define SRC_SBMR1_BOOT_CFG2_MASK                 0xFF00u
#define SRC_SBMR1_BOOT_CFG2_SHIFT                8
#define SRC_SBMR1_BOOT_CFG2(x)                   (((uint32_t)(((uint32_t)(x))<<SRC_SBMR1_BOOT_CFG2_SHIFT))&SRC_SBMR1_BOOT_CFG2_MASK)
#define SRC_SBMR1_BOOT_CFG3_MASK                 0xFF0000u
#define SRC_SBMR1_BOOT_CFG3_SHIFT                16
#define SRC_SBMR1_BOOT_CFG3(x)                   (((uint32_t)(((uint32_t)(x))<<SRC_SBMR1_BOOT_CFG3_SHIFT))&SRC_SBMR1_BOOT_CFG3_MASK)
#define SRC_SBMR1_BOOT_CFG4_MASK                 0xFF000000u
#define SRC_SBMR1_BOOT_CFG4_SHIFT                24
#define SRC_SBMR1_BOOT_CFG4(x)                   (((uint32_t)(((uint32_t)(x))<<SRC_SBMR1_BOOT_CFG4_SHIFT))&SRC_SBMR1_BOOT_CFG4_MASK)
/* SRSR Bit Fields */
#define SRC_SRSR_POR_RST_MASK                    0x1u
#define SRC_SRSR_POR_RST_SHIFT                   0
#define SRC_SRSR_CA5_WDG_RST_MASK                0x2u
#define SRC_SRSR_CA5_WDG_RST_SHIFT               1
#define SRC_SRSR_WDOG_RST_MASK                   0x18u
#define SRC_SRSR_WDOG_RST_SHIFT                  3
#define SRC_SRSR_WDOG_RST(x)                     (((uint32_t)(((uint32_t)(x))<<SRC_SRSR_WDOG_RST_SHIFT))&SRC_SRSR_WDOG_RST_MASK)
#define SRC_SRSR_JTAG_RST_MASK                   0x20u
#define SRC_SRSR_JTAG_RST_SHIFT                  5
#define SRC_SRSR_RESETB_MASK                     0x80u
#define SRC_SRSR_RESETB_SHIFT                    7
#define SRC_SRSR_POR1P2_MASK                     0x100u
#define SRC_SRSR_POR1P2_SHIFT                    8
#define SRC_SRSR_HP_LVD_MASK                     0x200u
#define SRC_SRSR_HP_LVD_SHIFT                    9
#define SRC_SRSR_ULP_LVD_MASK                    0x400u
#define SRC_SRSR_ULP_LVD_SHIFT                   10
#define SRC_SRSR_LVD_P3P_MASK                    0x800u
#define SRC_SRSR_LVD_P3P_SHIFT                   11
#define SRC_SRSR_LP_LVD_MASK                     0x1000u
#define SRC_SRSR_LP_LVD_SHIFT                    12
#define SRC_SRSR_MDM_SYS_RST_MASK                0x10000u
#define SRC_SRSR_MDM_SYS_RST_SHIFT               16
#define SRC_SRSR_SNVS_HARD_RST_MASK              0x20000u
#define SRC_SRSR_SNVS_HARD_RST_SHIFT             17
#define SRC_SRSR_SRC_SW_RST_MASK                 0x40000u
#define SRC_SRSR_SRC_SW_RST_SHIFT                18
#define SRC_SRSR_CSU_ALARM_RST_MASK              0x80000u
#define SRC_SRSR_CSU_ALARM_RST_SHIFT             19
#define SRC_SRSR_REG_1P1_OK_MASK                 0x1000000u
#define SRC_SRSR_REG_1P1_OK_SHIFT                24
#define SRC_SRSR_REG_2P5_OK_MASK                 0x2000000u
#define SRC_SRSR_REG_2P5_OK_SHIFT                25
#define SRC_SRSR_REG_3P0_OK_MASK                 0x4000000u
#define SRC_SRSR_REG_3P0_OK_SHIFT                26
#define SRC_SRSR_CMU_OLR_MASK                    0x8000000u
#define SRC_SRSR_CMU_OLR_SHIFT                   27
#define SRC_SRSR_CMU_FLL_FHH_MASK                0x10000000u
#define SRC_SRSR_CMU_FLL_FHH_SHIFT               28
#define SRC_SRSR_FOSC_OK_MASK                    0x20000000u
#define SRC_SRSR_FOSC_OK_SHIFT                   29
#define SRC_SRSR_SOSC_OK_MASK                    0x40000000u
#define SRC_SRSR_SOSC_OK_SHIFT                   30
#define SRC_SRSR_CM4_LCK_MASK                    0x80000000u
#define SRC_SRSR_CM4_LCK_SHIFT                   31
/* SECR Bit Fields */
#define SRC_SECR_SPNIDEN_MASK                    0x1u
#define SRC_SECR_SPNIDEN_SHIFT                   0
#define SRC_SECR_SPIDEN_MASK                     0x2u
#define SRC_SECR_SPIDEN_SHIFT                    1
#define SRC_SECR_WRLOCK_MASK                     0x10u
#define SRC_SECR_WRLOCK_SHIFT                    4
/* GPSR Bit Fields */
#define SRC_GPSR_GP_MASK                         0xFFFFFFFFu
#define SRC_GPSR_GP_SHIFT                        0
#define SRC_GPSR_GP(x)                           (((uint32_t)(((uint32_t)(x))<<SRC_GPSR_GP_SHIFT))&SRC_GPSR_GP_MASK)
/* SICR Bit Fields */
#define SRC_SICR_CA5_WDG_RST_MASK                0x2u
#define SRC_SICR_CA5_WDG_RST_SHIFT               1
#define SRC_SICR_WDOG_RST_MASK                   0x18u
#define SRC_SICR_WDOG_RST_SHIFT                  3
#define SRC_SICR_WDOG_RST(x)                     (((uint32_t)(((uint32_t)(x))<<SRC_SICR_WDOG_RST_SHIFT))&SRC_SICR_WDOG_RST_MASK)
#define SRC_SICR_JTAG_RST_MASK                   0x20u
#define SRC_SICR_JTAG_RST_SHIFT                  5
#define SRC_SICR_MDM_SYS_RST_MASK                0x10000u
#define SRC_SICR_MDM_SYS_RST_SHIFT               16
#define SRC_SICR_SNVS_HARD_RST_MASK              0x20000u
#define SRC_SICR_SNVS_HARD_RST_SHIFT             17
#define SRC_SICR_SRC_SW_RST_MASK                 0x40000u
#define SRC_SICR_SRC_SW_RST_SHIFT                18
#define SRC_SICR_CSU_ALARM_RST_MASK              0x80000u
#define SRC_SICR_CSU_ALARM_RST_SHIFT             19
#define SRC_SICR_REG_1P1_MASK                    0x1000000u
#define SRC_SICR_REG_1P1_SHIFT                   24
#define SRC_SICR_REG_2P5_MASK                    0x2000000u
#define SRC_SICR_REG_2P5_SHIFT                   25
#define SRC_SICR_REG_3P0_MASK                    0x4000000u
#define SRC_SICR_REG_3P0_SHIFT                   26
#define SRC_SICR_CMU_OLR_MASK                    0x8000000u
#define SRC_SICR_CMU_OLR_SHIFT                   27
#define SRC_SICR_CMU_FLL_FHH_MASK                0x10000000u
#define SRC_SICR_CMU_FLL_FHH_SHIFT               28
#define SRC_SICR_FOSC_MASK                       0x20000000u
#define SRC_SICR_FOSC_SHIFT                      29
#define SRC_SICR_SOSC_MASK                       0x40000000u
#define SRC_SICR_SOSC_SHIFT                      30
#define SRC_SICR_CM4_LCK_MASK                    0x80000000u
#define SRC_SICR_CM4_LCK_SHIFT                   31
/* SIMR Bit Fields */
#define SRC_SIMR_CA5_WDG_RST_MASK                0x2u
#define SRC_SIMR_CA5_WDG_RST_SHIFT               1
#define SRC_SIMR_WDOG_RST_MASK                   0x18u
#define SRC_SIMR_WDOG_RST_SHIFT                  3
#define SRC_SIMR_WDOG_RST(x)                     (((uint32_t)(((uint32_t)(x))<<SRC_SIMR_WDOG_RST_SHIFT))&SRC_SIMR_WDOG_RST_MASK)
#define SRC_SIMR_JTAG_RST_MASK                   0x20u
#define SRC_SIMR_JTAG_RST_SHIFT                  5
#define SRC_SIMR_MDM_SYS_RST_MASK                0x10000u
#define SRC_SIMR_MDM_SYS_RST_SHIFT               16
#define SRC_SIMR_SNVS_HARD_RST_MASK              0x20000u
#define SRC_SIMR_SNVS_HARD_RST_SHIFT             17
#define SRC_SIMR_SRC_SW_RST_MASK                 0x40000u
#define SRC_SIMR_SRC_SW_RST_SHIFT                18
#define SRC_SIMR_CSU_ALARM_RST_MASK              0x80000u
#define SRC_SIMR_CSU_ALARM_RST_SHIFT             19
#define SRC_SIMR_REG_1P1_OK_MASK                 0x1000000u
#define SRC_SIMR_REG_1P1_OK_SHIFT                24
#define SRC_SIMR_REG_2P5_OK_MASK                 0x2000000u
#define SRC_SIMR_REG_2P5_OK_SHIFT                25
#define SRC_SIMR_REG_3P0_OK_MASK                 0x4000000u
#define SRC_SIMR_REG_3P0_OK_SHIFT                26
#define SRC_SIMR_CMU_OLR_MASK                    0x8000000u
#define SRC_SIMR_CMU_OLR_SHIFT                   27
#define SRC_SIMR_CMU_FLL_FHH_MASK                0x10000000u
#define SRC_SIMR_CMU_FLL_FHH_SHIFT               28
#define SRC_SIMR_FOSC_OK_MASK                    0x20000000u
#define SRC_SIMR_FOSC_OK_SHIFT                   29
#define SRC_SIMR_SOSC_OK_MASK                    0x40000000u
#define SRC_SIMR_SOSC_OK_SHIFT                   30
#define SRC_SIMR_CM4_LCK_MASK                    0x80000000u
#define SRC_SIMR_CM4_LCK_SHIFT                   31
/* SBMR2 Bit Fields */
#define SRC_SBMR2_SEC_CONFIG_MASK                0x3u
#define SRC_SBMR2_SEC_CONFIG_SHIFT               0
#define SRC_SBMR2_SEC_CONFIG(x)                  (((uint32_t)(((uint32_t)(x))<<SRC_SBMR2_SEC_CONFIG_SHIFT))&SRC_SBMR2_SEC_CONFIG_MASK)
#define SRC_SBMR2_DIR_BT_DIS_MASK                0x8u
#define SRC_SBMR2_DIR_BT_DIS_SHIFT               3
#define SRC_SBMR2_BT_FUSE_SEL_MASK               0x10u
#define SRC_SBMR2_BT_FUSE_SEL_SHIFT              4
#define SRC_SBMR2_BMOD_MASK                      0x3000000u
#define SRC_SBMR2_BMOD_SHIFT                     24
#define SRC_SBMR2_BMOD(x)                        (((uint32_t)(((uint32_t)(x))<<SRC_SBMR2_BMOD_SHIFT))&SRC_SBMR2_BMOD_MASK)
/* GPR Bit Fields */
#define SRC_GPR_GP_MASK                          0xFFFFFFFFu
#define SRC_GPR_GP_SHIFT                         0
#define SRC_GPR_GP(x)                            (((uint32_t)(((uint32_t)(x))<<SRC_GPR_GP_SHIFT))&SRC_GPR_GP_MASK)
/* HAB Bit Fields */
#define SRC_HAB_GP_MASK                          0xFFFFFFFFu
#define SRC_HAB_GP_SHIFT                         0
#define SRC_HAB_GP(x)                            (((uint32_t)(((uint32_t)(x))<<SRC_HAB_GP_SHIFT))&SRC_HAB_GP_MASK)
/* MISC0 Bit Fields */
#define SRC_MISC0_MISC0_0_MASK                   0x1u
#define SRC_MISC0_MISC0_0_SHIFT                  0
#define SRC_MISC0_MISC0_15_1_MASK                0xFFFEu
#define SRC_MISC0_MISC0_15_1_SHIFT               1
#define SRC_MISC0_MISC0_15_1(x)                  (((uint32_t)(((uint32_t)(x))<<SRC_MISC0_MISC0_15_1_SHIFT))&SRC_MISC0_MISC0_15_1_MASK)
#define SRC_MISC0_MISC0_25_16_MASK               0x3FF0000u
#define SRC_MISC0_MISC0_25_16_SHIFT              16
#define SRC_MISC0_MISC0_25_16(x)                 (((uint32_t)(((uint32_t)(x))<<SRC_MISC0_MISC0_25_16_SHIFT))&SRC_MISC0_MISC0_25_16_MASK)
#define SRC_MISC0_MISC0_26_MASK                  0x4000000u
#define SRC_MISC0_MISC0_26_SHIFT                 26
#define SRC_MISC0_MISC0_27_MASK                  0x8000000u
#define SRC_MISC0_MISC0_27_SHIFT                 27
#define SRC_MISC0_MISC0_28_MASK                  0x10000000u
#define SRC_MISC0_MISC0_28_SHIFT                 28
#define SRC_MISC0_MISC0_29_MASK                  0x20000000u
#define SRC_MISC0_MISC0_29_SHIFT                 29
#define SRC_MISC0_MISC0_30_MASK                  0x40000000u
#define SRC_MISC0_MISC0_30_SHIFT                 30
#define SRC_MISC0_MISC0_31_MASK                  0x80000000u
#define SRC_MISC0_MISC0_31_SHIFT                 31
/* MISC1 Bit Fields */
#define SRC_MISC1_MISC1_0_MASK                   0x1u
#define SRC_MISC1_MISC1_0_SHIFT                  0
#define SRC_MISC1_MISC1_1_MASK                   0x2u
#define SRC_MISC1_MISC1_1_SHIFT                  1
#define SRC_MISC1_MISC1_2_MASK                   0x4u
#define SRC_MISC1_MISC1_2_SHIFT                  2
#define SRC_MISC1_MISC1_3_MASK                   0x8u
#define SRC_MISC1_MISC1_3_SHIFT                  3
#define SRC_MISC1_MISC1_4_MASK                   0x10u
#define SRC_MISC1_MISC1_4_SHIFT                  4
#define SRC_MISC1_MISC1_5_MASK                   0x20u
#define SRC_MISC1_MISC1_5_SHIFT                  5
#define SRC_MISC1_MISC1_6_MASK                   0x40u
#define SRC_MISC1_MISC1_6_SHIFT                  6
#define SRC_MISC1_MISC1_7_MASK                   0x80u
#define SRC_MISC1_MISC1_7_SHIFT                  7
#define SRC_MISC1_MISC1_8_MASK                   0x100u
#define SRC_MISC1_MISC1_8_SHIFT                  8
#define SRC_MISC1_MISC1_9_MASK                   0x200u
#define SRC_MISC1_MISC1_9_SHIFT                  9
#define SRC_MISC1_MISC1_10_MASK                  0x400u
#define SRC_MISC1_MISC1_10_SHIFT                 10
#define SRC_MISC1_MISC1_11_MASK                  0x800u
#define SRC_MISC1_MISC1_11_SHIFT                 11
#define SRC_MISC1_MISC1_12_MASK                  0x1000u
#define SRC_MISC1_MISC1_12_SHIFT                 12
#define SRC_MISC1_MISC1_13_MASK                  0x2000u
#define SRC_MISC1_MISC1_13_SHIFT                 13
#define SRC_MISC1_MISC1_14_MASK                  0x4000u
#define SRC_MISC1_MISC1_14_SHIFT                 14
#define SRC_MISC1_MISC1_15_MASK                  0x8000u
#define SRC_MISC1_MISC1_15_SHIFT                 15
#define SRC_MISC1_MISC1_25_16_MASK               0x3FF0000u
#define SRC_MISC1_MISC1_25_16_SHIFT              16
#define SRC_MISC1_MISC1_25_16(x)                 (((uint32_t)(((uint32_t)(x))<<SRC_MISC1_MISC1_25_16_SHIFT))&SRC_MISC1_MISC1_25_16_MASK)
#define SRC_MISC1_MISC1_26_MASK                  0x4000000u
#define SRC_MISC1_MISC1_26_SHIFT                 26
#define SRC_MISC1_MISC1_27_MASK                  0x8000000u
#define SRC_MISC1_MISC1_27_SHIFT                 27
#define SRC_MISC1_MISC1_28_MASK                  0x10000000u
#define SRC_MISC1_MISC1_28_SHIFT                 28
#define SRC_MISC1_MISC1_29_MASK                  0x20000000u
#define SRC_MISC1_MISC1_29_SHIFT                 29
#define SRC_MISC1_MISC1_30_MASK                  0x40000000u
#define SRC_MISC1_MISC1_30_SHIFT                 30
#define SRC_MISC1_MISC1_31_MASK                  0x80000000u
#define SRC_MISC1_MISC1_31_SHIFT                 31
/* MISC2 Bit Fields */
#define SRC_MISC2_MISC2_0_MASK                   0x1u
#define SRC_MISC2_MISC2_0_SHIFT                  0
#define SRC_MISC2_MISC2_7_3_MASK                 0xF8u
#define SRC_MISC2_MISC2_7_3_SHIFT                3
#define SRC_MISC2_MISC2_7_3(x)                   (((uint32_t)(((uint32_t)(x))<<SRC_MISC2_MISC2_7_3_SHIFT))&SRC_MISC2_MISC2_7_3_MASK)
#define SRC_MISC2_MISC2_8_MASK                   0x100u
#define SRC_MISC2_MISC2_8_SHIFT                  8
#define SRC_MISC2_MISC2_9_MASK                   0x200u
#define SRC_MISC2_MISC2_9_SHIFT                  9
#define SRC_MISC2_MISC2_15_10_MASK               0xFC00u
#define SRC_MISC2_MISC2_15_10_SHIFT              10
#define SRC_MISC2_MISC2_15_10(x)                 (((uint32_t)(((uint32_t)(x))<<SRC_MISC2_MISC2_15_10_SHIFT))&SRC_MISC2_MISC2_15_10_MASK)
#define SRC_MISC2_MISC2_31_16_MASK               0xFFFF0000u
#define SRC_MISC2_MISC2_31_16_SHIFT              16
#define SRC_MISC2_MISC2_31_16(x)                 (((uint32_t)(((uint32_t)(x))<<SRC_MISC2_MISC2_31_16_SHIFT))&SRC_MISC2_MISC2_31_16_MASK)
/* MISC3 Bit Fields */
#define SRC_MISC3_MISC3_0_MASK                   0x1u
#define SRC_MISC3_MISC3_0_SHIFT                  0
#define SRC_MISC3_MISC3_1_MASK                   0x2u
#define SRC_MISC3_MISC3_1_SHIFT                  1
#define SRC_MISC3_MISC3_2_MASK                   0x4u
#define SRC_MISC3_MISC3_2_SHIFT                  2
#define SRC_MISC3_MISC3_3_MASK                   0x8u
#define SRC_MISC3_MISC3_3_SHIFT                  3
#define SRC_MISC3_MISC3_4_MASK                   0x10u
#define SRC_MISC3_MISC3_4_SHIFT                  4
#define SRC_MISC3_MISC3_5_MASK                   0x20u
#define SRC_MISC3_MISC3_5_SHIFT                  5
#define SRC_MISC3_MISC3_6_MASK                   0x40u
#define SRC_MISC3_MISC3_6_SHIFT                  6
#define SRC_MISC3_MISC3_7_MASK                   0x80u
#define SRC_MISC3_MISC3_7_SHIFT                  7
#define SRC_MISC3_MISC3_15_8_MASK                0xFF00u
#define SRC_MISC3_MISC3_15_8_SHIFT               8
#define SRC_MISC3_MISC3_15_8(x)                  (((uint32_t)(((uint32_t)(x))<<SRC_MISC3_MISC3_15_8_SHIFT))&SRC_MISC3_MISC3_15_8_MASK)
#define SRC_MISC3_MISC3_31_16_MASK               0xFFFF0000u
#define SRC_MISC3_MISC3_31_16_SHIFT              16
#define SRC_MISC3_MISC3_31_16(x)                 (((uint32_t)(((uint32_t)(x))<<SRC_MISC3_MISC3_31_16_SHIFT))&SRC_MISC3_MISC3_31_16_MASK)

/**
 * @}
 */ /* end of group SRC_Register_Masks */


/* SRC - Peripheral instance base addresses */
/** Peripheral SRC base pointer */
#define SRC_BASE_PTR                             ((SRC_MemMapPtr)0x4006E000u)
/** Array initializer of SRC peripheral base pointers */
#define SRC_BASE_PTRS                            { SRC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- SRC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SRC_Register_Accessor_Macros SRC - Register accessor macros
 * @{
 */


/* SRC - Register instance definitions */
/* SRC */
#define SRC_SCR                                  SRC_SCR_REG(SRC_BASE_PTR)
#define SRC_SBMR1                                SRC_SBMR1_REG(SRC_BASE_PTR)
#define SRC_SRSR                                 SRC_SRSR_REG(SRC_BASE_PTR)
#define SRC_SECR                                 SRC_SECR_REG(SRC_BASE_PTR)
#define SRC_GPSR                                 SRC_GPSR_REG(SRC_BASE_PTR)
#define SRC_SICR                                 SRC_SICR_REG(SRC_BASE_PTR)
#define SRC_SIMR                                 SRC_SIMR_REG(SRC_BASE_PTR)
#define SRC_SBMR2                                SRC_SBMR2_REG(SRC_BASE_PTR)
#define SRC_GPR0                                 SRC_GPR_REG(SRC_BASE_PTR,0)
#define SRC_GPR1                                 SRC_GPR_REG(SRC_BASE_PTR,1)
#define SRC_GPR2                                 SRC_GPR_REG(SRC_BASE_PTR,2)
#define SRC_GPR3                                 SRC_GPR_REG(SRC_BASE_PTR,3)
#define SRC_GPR4                                 SRC_GPR_REG(SRC_BASE_PTR,4)
#define SRC_HAB0                                 SRC_HAB_REG(SRC_BASE_PTR,0)
#define SRC_HAB1                                 SRC_HAB_REG(SRC_BASE_PTR,1)
#define SRC_HAB2                                 SRC_HAB_REG(SRC_BASE_PTR,2)
#define SRC_HAB3                                 SRC_HAB_REG(SRC_BASE_PTR,3)
#define SRC_HAB4                                 SRC_HAB_REG(SRC_BASE_PTR,4)
#define SRC_HAB5                                 SRC_HAB_REG(SRC_BASE_PTR,5)
#define SRC_MISC0                                SRC_MISC0_REG(SRC_BASE_PTR)
#define SRC_MISC1                                SRC_MISC1_REG(SRC_BASE_PTR)
#define SRC_MISC2                                SRC_MISC2_REG(SRC_BASE_PTR)
#define SRC_MISC3                                SRC_MISC3_REG(SRC_BASE_PTR)

/* SRC - Register array accessors */
#define SRC_GPR(index)                           SRC_GPR_REG(SRC_BASE_PTR,index)
#define SRC_HAB(index)                           SRC_HAB_REG(SRC_BASE_PTR,index)

/**
 * @}
 */ /* end of group SRC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SRC_Peripheral */


/* ----------------------------------------------------------------------------
   -- TCON
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup TCON_Peripheral TCON
 * @{
 */

/** TCON - Peripheral register structure */
typedef struct TCON_MemMap {
  uint32_t CTRL1;                                  /**< TCON control1 register, offset: 0x0 */
  uint32_t BMC;                                    /**< Bit map control register, offset: 0x4 */
  uint32_t COMP0;                                  /**< Comparator 0 configure register, offset: 0x8 */
  uint32_t COMP1;                                  /**< Comparator 1 configure register, offset: 0xC */
  uint32_t COMP2;                                  /**< Comparator 2 configure register, offset: 0x10 */
  uint32_t COMP3;                                  /**< Comparator 3 configure register, offset: 0x14 */
  uint32_t COMP0_MSK;                              /**< Comparator 0 compare value mask register, offset: 0x18 */
  uint32_t COMP1_MSK;                              /**< Comparator 1 compare value mask register, offset: 0x1C */
  uint32_t COMP2_MSK;                              /**< Comparator 2 compare value mask register, offset: 0x20 */
  uint32_t COMP3_MSK;                              /**< Comparator 3 compare value mask register, offset: 0x24 */
  uint32_t PULSE0;                                 /**< Pulse 0 configure register, offset: 0x28 */
  uint32_t PULSE1;                                 /**< Pulse 1 configure register, offset: 0x2C */
  uint32_t PULSE2;                                 /**< Pulse 2 configure register, offset: 0x30 */
  uint32_t PULSE3;                                 /**< Pulse 3 configure register, offset: 0x34 */
  uint32_t PULSE4;                                 /**< Pulse 4 configure register, offset: 0x38 */
  uint32_t PULSE5;                                 /**< Pulse 5 configure register, offset: 0x3C */
  uint32_t PULSE0_MSK;                             /**< Pulse 0 compare value mask register, offset: 0x40 */
  uint32_t PULSE1_MSK;                             /**< Pulse 1 compare value mask register, offset: 0x44 */
  uint32_t PULSE2_MSK;                             /**< Pulse 2 compare value mask register, offset: 0x48 */
  uint32_t PULSE3_MSK;                             /**< Pulse 3 compare value mask register, offset: 0x4C */
  uint32_t PULSE4_MSK;                             /**< Pulse 4 compare value mask register, offset: 0x50 */
  uint32_t PULSE5_MSK;                             /**< Pulse 5 compare value mask register, offset: 0x54 */
  uint32_t SMX0;                                   /**< Function control register 0, offset: 0x58 */
  uint32_t SMX1;                                   /**< Function control register 1, offset: 0x5C */
  uint32_t SMX2;                                   /**< Function control registers 2, offset: 0x60 */
  uint32_t SMX3;                                   /**< Function control register 3, offset: 0x64 */
  uint32_t SMX4;                                   /**< Function control register 4, offset: 0x68 */
  uint32_t SMX5;                                   /**< Function control register 5, offset: 0x6C */
  uint32_t SMX6;                                   /**< Function control register 6, offset: 0x70 */
  uint32_t SMX7;                                   /**< Function control register 7, offset: 0x74 */
  uint32_t SMX8;                                   /**< Function control register 8, offset: 0x78 */
  uint32_t SMX9;                                   /**< Function control register 9, offset: 0x7C */
  uint32_t SMX10;                                  /**< Function control register 10, offset: 0x80 */
  uint32_t SMX11;                                  /**< Function control register 11, offset: 0x84 */
  uint32_t SMX12;                                  /**< Function control register 12, offset: 0x88 */
  uint32_t SMX13;                                  /**< Function control register 13, offset: 0x8C */
  uint32_t OMUX_LOW;                               /**< TCON output mux control low, offset: 0x90 */
  uint32_t OMUX_HIGH;                              /**< TCON output mux control high, offset: 0x94 */
  uint32_t LUT0;                                   /**< TCON look up table 0, offset: 0x98 */
  uint32_t LUT1;                                   /**< TCON look up table 1, offset: 0x9C */
  uint32_t LUT2;                                   /**< TCON look up table 2, offset: 0xA0 */
  uint32_t LUT3;                                   /**< TCON look up table 3, offset: 0xA4 */
  uint32_t LUT4;                                   /**< TCON look up table 4, offset: 0xA8 */
  uint32_t LUT5;                                   /**< TCON look up table 5, offset: 0xAC */
  uint32_t LUT6;                                   /**< TCON look up table 6, offset: 0xB0 */
  uint32_t LUT7;                                   /**< TCON look up table 7, offset: 0xB4 */
  uint32_t LUT8;                                   /**< TCON look up table 8, offset: 0xB8 */
  uint32_t LUT9;                                   /**< TCON look up tables 9, offset: 0xBC */
  uint32_t LUT10;                                  /**< TCON look up table 10, offset: 0xC0 */
  uint32_t LUT11;                                  /**< TCON look up table 11, offset: 0xC4 */
  uint32_t LUT12;                                  /**< TCON look up table 12, offset: 0xC8 */
  uint32_t LUT13;                                  /**< TCON look up table 13, offset: 0xCC */
  uint8_t RESERVED_0[52];
  uint32_t CTRL2;                                  /**< TCON control2 register, offset: 0x104 */
} volatile *TCON_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- TCON - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup TCON_Register_Accessor_Macros TCON - Register accessor macros
 * @{
 */


/* TCON - Register accessors */
#define TCON_CTRL1_REG(base)                     ((base)->CTRL1)
#define TCON_BMC_REG(base)                       ((base)->BMC)
#define TCON_COMP0_REG(base)                     ((base)->COMP0)
#define TCON_COMP1_REG(base)                     ((base)->COMP1)
#define TCON_COMP2_REG(base)                     ((base)->COMP2)
#define TCON_COMP3_REG(base)                     ((base)->COMP3)
#define TCON_COMP0_MSK_REG(base)                 ((base)->COMP0_MSK)
#define TCON_COMP1_MSK_REG(base)                 ((base)->COMP1_MSK)
#define TCON_COMP2_MSK_REG(base)                 ((base)->COMP2_MSK)
#define TCON_COMP3_MSK_REG(base)                 ((base)->COMP3_MSK)
#define TCON_PULSE0_REG(base)                    ((base)->PULSE0)
#define TCON_PULSE1_REG(base)                    ((base)->PULSE1)
#define TCON_PULSE2_REG(base)                    ((base)->PULSE2)
#define TCON_PULSE3_REG(base)                    ((base)->PULSE3)
#define TCON_PULSE4_REG(base)                    ((base)->PULSE4)
#define TCON_PULSE5_REG(base)                    ((base)->PULSE5)
#define TCON_PULSE0_MSK_REG(base)                ((base)->PULSE0_MSK)
#define TCON_PULSE1_MSK_REG(base)                ((base)->PULSE1_MSK)
#define TCON_PULSE2_MSK_REG(base)                ((base)->PULSE2_MSK)
#define TCON_PULSE3_MSK_REG(base)                ((base)->PULSE3_MSK)
#define TCON_PULSE4_MSK_REG(base)                ((base)->PULSE4_MSK)
#define TCON_PULSE5_MSK_REG(base)                ((base)->PULSE5_MSK)
#define TCON_SMX0_REG(base)                      ((base)->SMX0)
#define TCON_SMX1_REG(base)                      ((base)->SMX1)
#define TCON_SMX2_REG(base)                      ((base)->SMX2)
#define TCON_SMX3_REG(base)                      ((base)->SMX3)
#define TCON_SMX4_REG(base)                      ((base)->SMX4)
#define TCON_SMX5_REG(base)                      ((base)->SMX5)
#define TCON_SMX6_REG(base)                      ((base)->SMX6)
#define TCON_SMX7_REG(base)                      ((base)->SMX7)
#define TCON_SMX8_REG(base)                      ((base)->SMX8)
#define TCON_SMX9_REG(base)                      ((base)->SMX9)
#define TCON_SMX10_REG(base)                     ((base)->SMX10)
#define TCON_SMX11_REG(base)                     ((base)->SMX11)
#define TCON_SMX12_REG(base)                     ((base)->SMX12)
#define TCON_SMX13_REG(base)                     ((base)->SMX13)
#define TCON_OMUX_LOW_REG(base)                  ((base)->OMUX_LOW)
#define TCON_OMUX_HIGH_REG(base)                 ((base)->OMUX_HIGH)
#define TCON_LUT0_REG(base)                      ((base)->LUT0)
#define TCON_LUT1_REG(base)                      ((base)->LUT1)
#define TCON_LUT2_REG(base)                      ((base)->LUT2)
#define TCON_LUT3_REG(base)                      ((base)->LUT3)
#define TCON_LUT4_REG(base)                      ((base)->LUT4)
#define TCON_LUT5_REG(base)                      ((base)->LUT5)
#define TCON_LUT6_REG(base)                      ((base)->LUT6)
#define TCON_LUT7_REG(base)                      ((base)->LUT7)
#define TCON_LUT8_REG(base)                      ((base)->LUT8)
#define TCON_LUT9_REG(base)                      ((base)->LUT9)
#define TCON_LUT10_REG(base)                     ((base)->LUT10)
#define TCON_LUT11_REG(base)                     ((base)->LUT11)
#define TCON_LUT12_REG(base)                     ((base)->LUT12)
#define TCON_LUT13_REG(base)                     ((base)->LUT13)
#define TCON_CTRL2_REG(base)                     ((base)->CTRL2)

/**
 * @}
 */ /* end of group TCON_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- TCON Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup TCON_Register_Masks TCON Register Masks
 * @{
 */

/* CTRL1 Bit Fields */
#define TCON_CTRL1_RGB_PADDING_MASK              0x2u
#define TCON_CTRL1_RGB_PADDING_SHIFT             1
#define TCON_CTRL1_RGB_PADDING_EN_MASK           0x4u
#define TCON_CTRL1_RGB_PADDING_EN_SHIFT          2
#define TCON_CTRL1_COLOR_DEPTH_MASK              0x8u
#define TCON_CTRL1_COLOR_DEPTH_SHIFT             3
#define TCON_CTRL1_VSYNC_INV_MASK                0x10u
#define TCON_CTRL1_VSYNC_INV_SHIFT               4
#define TCON_CTRL1_HSYNC_INV_MASK                0x20u
#define TCON_CTRL1_HSYNC_INV_SHIFT               5
#define TCON_CTRL1_VLEN_MASK                     0xC0u
#define TCON_CTRL1_VLEN_SHIFT                    6
#define TCON_CTRL1_VLEN(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_CTRL1_VLEN_SHIFT))&TCON_CTRL1_VLEN_MASK)
#define TCON_CTRL1_H_REF_SEL_MASK                0x300u
#define TCON_CTRL1_H_REF_SEL_SHIFT               8
#define TCON_CTRL1_H_REF_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_CTRL1_H_REF_SEL_SHIFT))&TCON_CTRL1_H_REF_SEL_MASK)
#define TCON_CTRL1_V_REF_SEL_MASK                0x1C00u
#define TCON_CTRL1_V_REF_SEL_SHIFT               10
#define TCON_CTRL1_V_REF_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_CTRL1_V_REF_SEL_SHIFT))&TCON_CTRL1_V_REF_SEL_MASK)
#define TCON_CTRL1_INIT_DELAY_MASK               0xE000u
#define TCON_CTRL1_INIT_DELAY_SHIFT              13
#define TCON_CTRL1_INIT_DELAY(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_CTRL1_INIT_DELAY_SHIFT))&TCON_CTRL1_INIT_DELAY_MASK)
#define TCON_CTRL1_TCONx_INV_MASK                0xFFF0000u
#define TCON_CTRL1_TCONx_INV_SHIFT               16
#define TCON_CTRL1_TCONx_INV(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_CTRL1_TCONx_INV_SHIFT))&TCON_CTRL1_TCONx_INV_MASK)
#define TCON_CTRL1_TCON_BYPASS_MASK              0x20000000u
#define TCON_CTRL1_TCON_BYPASS_SHIFT             29
#define TCON_CTRL1_TCON_EN_MASK                  0x80000000u
#define TCON_CTRL1_TCON_EN_SHIFT                 31
/* BMC Bit Fields */
#define TCON_BMC_BIT_ORDER_MASK                  0x2u
#define TCON_BMC_BIT_ORDER_SHIFT                 1
#define TCON_BMC_COLOR_ORDER_MASK                0x1Cu
#define TCON_BMC_COLOR_ORDER_SHIFT               2
#define TCON_BMC_COLOR_ORDER(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_BMC_COLOR_ORDER_SHIFT))&TCON_BMC_COLOR_ORDER_MASK)
#define TCON_BMC_CLK_POS_MASK                    0x3E0u
#define TCON_BMC_CLK_POS_SHIFT                   5
#define TCON_BMC_CLK_POS(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_BMC_CLK_POS_SHIFT))&TCON_BMC_CLK_POS_MASK)
/* COMP0 Bit Fields */
#define TCON_COMP0_COMP_VALUE_MASK               0xFFFu
#define TCON_COMP0_COMP_VALUE_SHIFT              0
#define TCON_COMP0_COMP_VALUE(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_COMP0_COMP_VALUE_SHIFT))&TCON_COMP0_COMP_VALUE_MASK)
#define TCON_COMP0_FUNC_SEL_MASK                 0x80000000u
#define TCON_COMP0_FUNC_SEL_SHIFT                31
/* COMP1 Bit Fields */
#define TCON_COMP1_COMP_VALUE_MASK               0xFFFu
#define TCON_COMP1_COMP_VALUE_SHIFT              0
#define TCON_COMP1_COMP_VALUE(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_COMP1_COMP_VALUE_SHIFT))&TCON_COMP1_COMP_VALUE_MASK)
#define TCON_COMP1_FUNC_SEL_MASK                 0x80000000u
#define TCON_COMP1_FUNC_SEL_SHIFT                31
/* COMP2 Bit Fields */
#define TCON_COMP2_COMP_VALUE_MASK               0xFFFu
#define TCON_COMP2_COMP_VALUE_SHIFT              0
#define TCON_COMP2_COMP_VALUE(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_COMP2_COMP_VALUE_SHIFT))&TCON_COMP2_COMP_VALUE_MASK)
#define TCON_COMP2_FUNC_SEL_MASK                 0x80000000u
#define TCON_COMP2_FUNC_SEL_SHIFT                31
/* COMP3 Bit Fields */
#define TCON_COMP3_COMP_VALUE_MASK               0xFFFu
#define TCON_COMP3_COMP_VALUE_SHIFT              0
#define TCON_COMP3_COMP_VALUE(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_COMP3_COMP_VALUE_SHIFT))&TCON_COMP3_COMP_VALUE_MASK)
#define TCON_COMP3_FUNC_SEL_MASK                 0x80000000u
#define TCON_COMP3_FUNC_SEL_SHIFT                31
/* COMP0_MSK Bit Fields */
#define TCON_COMP0_MSK_MSK_MASK                  0xFFFu
#define TCON_COMP0_MSK_MSK_SHIFT                 0
#define TCON_COMP0_MSK_MSK(x)                    (((uint32_t)(((uint32_t)(x))<<TCON_COMP0_MSK_MSK_SHIFT))&TCON_COMP0_MSK_MSK_MASK)
/* COMP1_MSK Bit Fields */
#define TCON_COMP1_MSK_MSK_MASK                  0xFFFu
#define TCON_COMP1_MSK_MSK_SHIFT                 0
#define TCON_COMP1_MSK_MSK(x)                    (((uint32_t)(((uint32_t)(x))<<TCON_COMP1_MSK_MSK_SHIFT))&TCON_COMP1_MSK_MSK_MASK)
/* COMP2_MSK Bit Fields */
#define TCON_COMP2_MSK_MSK_MASK                  0xFFFu
#define TCON_COMP2_MSK_MSK_SHIFT                 0
#define TCON_COMP2_MSK_MSK(x)                    (((uint32_t)(((uint32_t)(x))<<TCON_COMP2_MSK_MSK_SHIFT))&TCON_COMP2_MSK_MSK_MASK)
/* COMP3_MSK Bit Fields */
#define TCON_COMP3_MSK_MSK_MASK                  0xFFFu
#define TCON_COMP3_MSK_MSK_SHIFT                 0
#define TCON_COMP3_MSK_MSK(x)                    (((uint32_t)(((uint32_t)(x))<<TCON_COMP3_MSK_MSK_SHIFT))&TCON_COMP3_MSK_MSK_MASK)
/* PULSE0 Bit Fields */
#define TCON_PULSE0_RESET_MASK                   0xFFFu
#define TCON_PULSE0_RESET_SHIFT                  0
#define TCON_PULSE0_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_RESET_SHIFT))&TCON_PULSE0_RESET_MASK)
#define TCON_PULSE0_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE0_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE0_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_COMPARATOR_SEL_SHIFT))&TCON_PULSE0_COMPARATOR_SEL_MASK)
#define TCON_PULSE0_SET_MASK                     0xFFF0000u
#define TCON_PULSE0_SET_SHIFT                    16
#define TCON_PULSE0_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_SET_SHIFT))&TCON_PULSE0_SET_MASK)
#define TCON_PULSE0_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE0_FUNC_SEL_SHIFT               30
#define TCON_PULSE0_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_FUNC_SEL_SHIFT))&TCON_PULSE0_FUNC_SEL_MASK)
/* PULSE1 Bit Fields */
#define TCON_PULSE1_RESET_MASK                   0xFFFu
#define TCON_PULSE1_RESET_SHIFT                  0
#define TCON_PULSE1_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_RESET_SHIFT))&TCON_PULSE1_RESET_MASK)
#define TCON_PULSE1_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE1_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE1_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_COMPARATOR_SEL_SHIFT))&TCON_PULSE1_COMPARATOR_SEL_MASK)
#define TCON_PULSE1_SET_MASK                     0xFFF0000u
#define TCON_PULSE1_SET_SHIFT                    16
#define TCON_PULSE1_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_SET_SHIFT))&TCON_PULSE1_SET_MASK)
#define TCON_PULSE1_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE1_FUNC_SEL_SHIFT               30
#define TCON_PULSE1_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_FUNC_SEL_SHIFT))&TCON_PULSE1_FUNC_SEL_MASK)
/* PULSE2 Bit Fields */
#define TCON_PULSE2_RESET_MASK                   0xFFFu
#define TCON_PULSE2_RESET_SHIFT                  0
#define TCON_PULSE2_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_RESET_SHIFT))&TCON_PULSE2_RESET_MASK)
#define TCON_PULSE2_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE2_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE2_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_COMPARATOR_SEL_SHIFT))&TCON_PULSE2_COMPARATOR_SEL_MASK)
#define TCON_PULSE2_SET_MASK                     0xFFF0000u
#define TCON_PULSE2_SET_SHIFT                    16
#define TCON_PULSE2_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_SET_SHIFT))&TCON_PULSE2_SET_MASK)
#define TCON_PULSE2_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE2_FUNC_SEL_SHIFT               30
#define TCON_PULSE2_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_FUNC_SEL_SHIFT))&TCON_PULSE2_FUNC_SEL_MASK)
/* PULSE3 Bit Fields */
#define TCON_PULSE3_RESET_MASK                   0xFFFu
#define TCON_PULSE3_RESET_SHIFT                  0
#define TCON_PULSE3_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_RESET_SHIFT))&TCON_PULSE3_RESET_MASK)
#define TCON_PULSE3_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE3_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE3_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_COMPARATOR_SEL_SHIFT))&TCON_PULSE3_COMPARATOR_SEL_MASK)
#define TCON_PULSE3_SET_MASK                     0xFFF0000u
#define TCON_PULSE3_SET_SHIFT                    16
#define TCON_PULSE3_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_SET_SHIFT))&TCON_PULSE3_SET_MASK)
#define TCON_PULSE3_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE3_FUNC_SEL_SHIFT               30
#define TCON_PULSE3_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_FUNC_SEL_SHIFT))&TCON_PULSE3_FUNC_SEL_MASK)
/* PULSE4 Bit Fields */
#define TCON_PULSE4_RESET_MASK                   0xFFFu
#define TCON_PULSE4_RESET_SHIFT                  0
#define TCON_PULSE4_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_RESET_SHIFT))&TCON_PULSE4_RESET_MASK)
#define TCON_PULSE4_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE4_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE4_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_COMPARATOR_SEL_SHIFT))&TCON_PULSE4_COMPARATOR_SEL_MASK)
#define TCON_PULSE4_SET_MASK                     0xFFF0000u
#define TCON_PULSE4_SET_SHIFT                    16
#define TCON_PULSE4_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_SET_SHIFT))&TCON_PULSE4_SET_MASK)
#define TCON_PULSE4_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE4_FUNC_SEL_SHIFT               30
#define TCON_PULSE4_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_FUNC_SEL_SHIFT))&TCON_PULSE4_FUNC_SEL_MASK)
/* PULSE5 Bit Fields */
#define TCON_PULSE5_RESET_MASK                   0xFFFu
#define TCON_PULSE5_RESET_SHIFT                  0
#define TCON_PULSE5_RESET(x)                     (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_RESET_SHIFT))&TCON_PULSE5_RESET_MASK)
#define TCON_PULSE5_COMPARATOR_SEL_MASK          0xC000u
#define TCON_PULSE5_COMPARATOR_SEL_SHIFT         14
#define TCON_PULSE5_COMPARATOR_SEL(x)            (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_COMPARATOR_SEL_SHIFT))&TCON_PULSE5_COMPARATOR_SEL_MASK)
#define TCON_PULSE5_SET_MASK                     0xFFF0000u
#define TCON_PULSE5_SET_SHIFT                    16
#define TCON_PULSE5_SET(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_SET_SHIFT))&TCON_PULSE5_SET_MASK)
#define TCON_PULSE5_FUNC_SEL_MASK                0xC0000000u
#define TCON_PULSE5_FUNC_SEL_SHIFT               30
#define TCON_PULSE5_FUNC_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_FUNC_SEL_SHIFT))&TCON_PULSE5_FUNC_SEL_MASK)
/* PULSE0_MSK Bit Fields */
#define TCON_PULSE0_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE0_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE0_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_MSK_RESET_MSK_SHIFT))&TCON_PULSE0_MSK_RESET_MSK_MASK)
#define TCON_PULSE0_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE0_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE0_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE0_MSK_SET_MSK_SHIFT))&TCON_PULSE0_MSK_SET_MSK_MASK)
/* PULSE1_MSK Bit Fields */
#define TCON_PULSE1_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE1_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE1_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_MSK_RESET_MSK_SHIFT))&TCON_PULSE1_MSK_RESET_MSK_MASK)
#define TCON_PULSE1_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE1_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE1_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE1_MSK_SET_MSK_SHIFT))&TCON_PULSE1_MSK_SET_MSK_MASK)
/* PULSE2_MSK Bit Fields */
#define TCON_PULSE2_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE2_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE2_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_MSK_RESET_MSK_SHIFT))&TCON_PULSE2_MSK_RESET_MSK_MASK)
#define TCON_PULSE2_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE2_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE2_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE2_MSK_SET_MSK_SHIFT))&TCON_PULSE2_MSK_SET_MSK_MASK)
/* PULSE3_MSK Bit Fields */
#define TCON_PULSE3_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE3_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE3_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_MSK_RESET_MSK_SHIFT))&TCON_PULSE3_MSK_RESET_MSK_MASK)
#define TCON_PULSE3_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE3_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE3_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE3_MSK_SET_MSK_SHIFT))&TCON_PULSE3_MSK_SET_MSK_MASK)
/* PULSE4_MSK Bit Fields */
#define TCON_PULSE4_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE4_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE4_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_MSK_RESET_MSK_SHIFT))&TCON_PULSE4_MSK_RESET_MSK_MASK)
#define TCON_PULSE4_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE4_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE4_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE4_MSK_SET_MSK_SHIFT))&TCON_PULSE4_MSK_SET_MSK_MASK)
/* PULSE5_MSK Bit Fields */
#define TCON_PULSE5_MSK_RESET_MSK_MASK           0xFFFu
#define TCON_PULSE5_MSK_RESET_MSK_SHIFT          0
#define TCON_PULSE5_MSK_RESET_MSK(x)             (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_MSK_RESET_MSK_SHIFT))&TCON_PULSE5_MSK_RESET_MSK_MASK)
#define TCON_PULSE5_MSK_SET_MSK_MASK             0xFFF0000u
#define TCON_PULSE5_MSK_SET_MSK_SHIFT            16
#define TCON_PULSE5_MSK_SET_MSK(x)               (((uint32_t)(((uint32_t)(x))<<TCON_PULSE5_MSK_SET_MSK_SHIFT))&TCON_PULSE5_MSK_SET_MSK_MASK)
/* SMX0 Bit Fields */
#define TCON_SMX0_X_SEL_MASK                     0x1Fu
#define TCON_SMX0_X_SEL_SHIFT                    0
#define TCON_SMX0_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_X_SEL_SHIFT))&TCON_SMX0_X_SEL_MASK)
#define TCON_SMX0_Y_SEL_MASK                     0x3E0u
#define TCON_SMX0_Y_SEL_SHIFT                    5
#define TCON_SMX0_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_Y_SEL_SHIFT))&TCON_SMX0_Y_SEL_MASK)
#define TCON_SMX0_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX0_INDEX0_SEL_SHIFT               20
#define TCON_SMX0_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_INDEX0_SEL_SHIFT))&TCON_SMX0_INDEX0_SEL_MASK)
#define TCON_SMX0_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX0_INDEX1_SEL_SHIFT               23
#define TCON_SMX0_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_INDEX1_SEL_SHIFT))&TCON_SMX0_INDEX1_SEL_MASK)
#define TCON_SMX0_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX0_INDEX2_SEL_SHIFT               26
#define TCON_SMX0_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_INDEX2_SEL_SHIFT))&TCON_SMX0_INDEX2_SEL_MASK)
#define TCON_SMX0_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX0_INDEX3_SEL_SHIFT               29
#define TCON_SMX0_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX0_INDEX3_SEL_SHIFT))&TCON_SMX0_INDEX3_SEL_MASK)
/* SMX1 Bit Fields */
#define TCON_SMX1_X_SEL_MASK                     0x1Fu
#define TCON_SMX1_X_SEL_SHIFT                    0
#define TCON_SMX1_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_X_SEL_SHIFT))&TCON_SMX1_X_SEL_MASK)
#define TCON_SMX1_Y_SEL_MASK                     0x3E0u
#define TCON_SMX1_Y_SEL_SHIFT                    5
#define TCON_SMX1_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_Y_SEL_SHIFT))&TCON_SMX1_Y_SEL_MASK)
#define TCON_SMX1_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX1_INDEX0_SEL_SHIFT               20
#define TCON_SMX1_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_INDEX0_SEL_SHIFT))&TCON_SMX1_INDEX0_SEL_MASK)
#define TCON_SMX1_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX1_INDEX1_SEL_SHIFT               23
#define TCON_SMX1_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_INDEX1_SEL_SHIFT))&TCON_SMX1_INDEX1_SEL_MASK)
#define TCON_SMX1_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX1_INDEX2_SEL_SHIFT               26
#define TCON_SMX1_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_INDEX2_SEL_SHIFT))&TCON_SMX1_INDEX2_SEL_MASK)
#define TCON_SMX1_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX1_INDEX3_SEL_SHIFT               29
#define TCON_SMX1_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX1_INDEX3_SEL_SHIFT))&TCON_SMX1_INDEX3_SEL_MASK)
/* SMX2 Bit Fields */
#define TCON_SMX2_X_SEL_MASK                     0x1Fu
#define TCON_SMX2_X_SEL_SHIFT                    0
#define TCON_SMX2_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_X_SEL_SHIFT))&TCON_SMX2_X_SEL_MASK)
#define TCON_SMX2_Y_SEL_MASK                     0x3E0u
#define TCON_SMX2_Y_SEL_SHIFT                    5
#define TCON_SMX2_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_Y_SEL_SHIFT))&TCON_SMX2_Y_SEL_MASK)
#define TCON_SMX2_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX2_INDEX0_SEL_SHIFT               20
#define TCON_SMX2_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_INDEX0_SEL_SHIFT))&TCON_SMX2_INDEX0_SEL_MASK)
#define TCON_SMX2_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX2_INDEX1_SEL_SHIFT               23
#define TCON_SMX2_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_INDEX1_SEL_SHIFT))&TCON_SMX2_INDEX1_SEL_MASK)
#define TCON_SMX2_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX2_INDEX2_SEL_SHIFT               26
#define TCON_SMX2_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_INDEX2_SEL_SHIFT))&TCON_SMX2_INDEX2_SEL_MASK)
#define TCON_SMX2_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX2_INDEX3_SEL_SHIFT               29
#define TCON_SMX2_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX2_INDEX3_SEL_SHIFT))&TCON_SMX2_INDEX3_SEL_MASK)
/* SMX3 Bit Fields */
#define TCON_SMX3_X_SEL_MASK                     0x1Fu
#define TCON_SMX3_X_SEL_SHIFT                    0
#define TCON_SMX3_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_X_SEL_SHIFT))&TCON_SMX3_X_SEL_MASK)
#define TCON_SMX3_Y_SEL_MASK                     0x3E0u
#define TCON_SMX3_Y_SEL_SHIFT                    5
#define TCON_SMX3_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_Y_SEL_SHIFT))&TCON_SMX3_Y_SEL_MASK)
#define TCON_SMX3_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX3_INDEX0_SEL_SHIFT               20
#define TCON_SMX3_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_INDEX0_SEL_SHIFT))&TCON_SMX3_INDEX0_SEL_MASK)
#define TCON_SMX3_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX3_INDEX1_SEL_SHIFT               23
#define TCON_SMX3_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_INDEX1_SEL_SHIFT))&TCON_SMX3_INDEX1_SEL_MASK)
#define TCON_SMX3_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX3_INDEX2_SEL_SHIFT               26
#define TCON_SMX3_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_INDEX2_SEL_SHIFT))&TCON_SMX3_INDEX2_SEL_MASK)
#define TCON_SMX3_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX3_INDEX3_SEL_SHIFT               29
#define TCON_SMX3_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX3_INDEX3_SEL_SHIFT))&TCON_SMX3_INDEX3_SEL_MASK)
/* SMX4 Bit Fields */
#define TCON_SMX4_X_SEL_MASK                     0x1Fu
#define TCON_SMX4_X_SEL_SHIFT                    0
#define TCON_SMX4_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_X_SEL_SHIFT))&TCON_SMX4_X_SEL_MASK)
#define TCON_SMX4_Y_SEL_MASK                     0x3E0u
#define TCON_SMX4_Y_SEL_SHIFT                    5
#define TCON_SMX4_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_Y_SEL_SHIFT))&TCON_SMX4_Y_SEL_MASK)
#define TCON_SMX4_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX4_INDEX0_SEL_SHIFT               20
#define TCON_SMX4_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_INDEX0_SEL_SHIFT))&TCON_SMX4_INDEX0_SEL_MASK)
#define TCON_SMX4_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX4_INDEX1_SEL_SHIFT               23
#define TCON_SMX4_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_INDEX1_SEL_SHIFT))&TCON_SMX4_INDEX1_SEL_MASK)
#define TCON_SMX4_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX4_INDEX2_SEL_SHIFT               26
#define TCON_SMX4_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_INDEX2_SEL_SHIFT))&TCON_SMX4_INDEX2_SEL_MASK)
#define TCON_SMX4_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX4_INDEX3_SEL_SHIFT               29
#define TCON_SMX4_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX4_INDEX3_SEL_SHIFT))&TCON_SMX4_INDEX3_SEL_MASK)
/* SMX5 Bit Fields */
#define TCON_SMX5_X_SEL_MASK                     0x1Fu
#define TCON_SMX5_X_SEL_SHIFT                    0
#define TCON_SMX5_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_X_SEL_SHIFT))&TCON_SMX5_X_SEL_MASK)
#define TCON_SMX5_Y_SEL_MASK                     0x3E0u
#define TCON_SMX5_Y_SEL_SHIFT                    5
#define TCON_SMX5_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_Y_SEL_SHIFT))&TCON_SMX5_Y_SEL_MASK)
#define TCON_SMX5_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX5_INDEX0_SEL_SHIFT               20
#define TCON_SMX5_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_INDEX0_SEL_SHIFT))&TCON_SMX5_INDEX0_SEL_MASK)
#define TCON_SMX5_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX5_INDEX1_SEL_SHIFT               23
#define TCON_SMX5_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_INDEX1_SEL_SHIFT))&TCON_SMX5_INDEX1_SEL_MASK)
#define TCON_SMX5_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX5_INDEX2_SEL_SHIFT               26
#define TCON_SMX5_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_INDEX2_SEL_SHIFT))&TCON_SMX5_INDEX2_SEL_MASK)
#define TCON_SMX5_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX5_INDEX3_SEL_SHIFT               29
#define TCON_SMX5_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX5_INDEX3_SEL_SHIFT))&TCON_SMX5_INDEX3_SEL_MASK)
/* SMX6 Bit Fields */
#define TCON_SMX6_X_SEL_MASK                     0x1Fu
#define TCON_SMX6_X_SEL_SHIFT                    0
#define TCON_SMX6_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_X_SEL_SHIFT))&TCON_SMX6_X_SEL_MASK)
#define TCON_SMX6_Y_SEL_MASK                     0x3E0u
#define TCON_SMX6_Y_SEL_SHIFT                    5
#define TCON_SMX6_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_Y_SEL_SHIFT))&TCON_SMX6_Y_SEL_MASK)
#define TCON_SMX6_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX6_INDEX0_SEL_SHIFT               20
#define TCON_SMX6_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_INDEX0_SEL_SHIFT))&TCON_SMX6_INDEX0_SEL_MASK)
#define TCON_SMX6_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX6_INDEX1_SEL_SHIFT               23
#define TCON_SMX6_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_INDEX1_SEL_SHIFT))&TCON_SMX6_INDEX1_SEL_MASK)
#define TCON_SMX6_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX6_INDEX2_SEL_SHIFT               26
#define TCON_SMX6_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_INDEX2_SEL_SHIFT))&TCON_SMX6_INDEX2_SEL_MASK)
#define TCON_SMX6_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX6_INDEX3_SEL_SHIFT               29
#define TCON_SMX6_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX6_INDEX3_SEL_SHIFT))&TCON_SMX6_INDEX3_SEL_MASK)
/* SMX7 Bit Fields */
#define TCON_SMX7_X_SEL_MASK                     0x1Fu
#define TCON_SMX7_X_SEL_SHIFT                    0
#define TCON_SMX7_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_X_SEL_SHIFT))&TCON_SMX7_X_SEL_MASK)
#define TCON_SMX7_Y_SEL_MASK                     0x3E0u
#define TCON_SMX7_Y_SEL_SHIFT                    5
#define TCON_SMX7_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_Y_SEL_SHIFT))&TCON_SMX7_Y_SEL_MASK)
#define TCON_SMX7_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX7_INDEX0_SEL_SHIFT               20
#define TCON_SMX7_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_INDEX0_SEL_SHIFT))&TCON_SMX7_INDEX0_SEL_MASK)
#define TCON_SMX7_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX7_INDEX1_SEL_SHIFT               23
#define TCON_SMX7_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_INDEX1_SEL_SHIFT))&TCON_SMX7_INDEX1_SEL_MASK)
#define TCON_SMX7_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX7_INDEX2_SEL_SHIFT               26
#define TCON_SMX7_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_INDEX2_SEL_SHIFT))&TCON_SMX7_INDEX2_SEL_MASK)
#define TCON_SMX7_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX7_INDEX3_SEL_SHIFT               29
#define TCON_SMX7_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX7_INDEX3_SEL_SHIFT))&TCON_SMX7_INDEX3_SEL_MASK)
/* SMX8 Bit Fields */
#define TCON_SMX8_X_SEL_MASK                     0x1Fu
#define TCON_SMX8_X_SEL_SHIFT                    0
#define TCON_SMX8_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_X_SEL_SHIFT))&TCON_SMX8_X_SEL_MASK)
#define TCON_SMX8_Y_SEL_MASK                     0x3E0u
#define TCON_SMX8_Y_SEL_SHIFT                    5
#define TCON_SMX8_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_Y_SEL_SHIFT))&TCON_SMX8_Y_SEL_MASK)
#define TCON_SMX8_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX8_INDEX0_SEL_SHIFT               20
#define TCON_SMX8_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_INDEX0_SEL_SHIFT))&TCON_SMX8_INDEX0_SEL_MASK)
#define TCON_SMX8_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX8_INDEX1_SEL_SHIFT               23
#define TCON_SMX8_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_INDEX1_SEL_SHIFT))&TCON_SMX8_INDEX1_SEL_MASK)
#define TCON_SMX8_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX8_INDEX2_SEL_SHIFT               26
#define TCON_SMX8_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_INDEX2_SEL_SHIFT))&TCON_SMX8_INDEX2_SEL_MASK)
#define TCON_SMX8_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX8_INDEX3_SEL_SHIFT               29
#define TCON_SMX8_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX8_INDEX3_SEL_SHIFT))&TCON_SMX8_INDEX3_SEL_MASK)
/* SMX9 Bit Fields */
#define TCON_SMX9_X_SEL_MASK                     0x1Fu
#define TCON_SMX9_X_SEL_SHIFT                    0
#define TCON_SMX9_X_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_X_SEL_SHIFT))&TCON_SMX9_X_SEL_MASK)
#define TCON_SMX9_Y_SEL_MASK                     0x3E0u
#define TCON_SMX9_Y_SEL_SHIFT                    5
#define TCON_SMX9_Y_SEL(x)                       (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_Y_SEL_SHIFT))&TCON_SMX9_Y_SEL_MASK)
#define TCON_SMX9_INDEX0_SEL_MASK                0x700000u
#define TCON_SMX9_INDEX0_SEL_SHIFT               20
#define TCON_SMX9_INDEX0_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_INDEX0_SEL_SHIFT))&TCON_SMX9_INDEX0_SEL_MASK)
#define TCON_SMX9_INDEX1_SEL_MASK                0x3800000u
#define TCON_SMX9_INDEX1_SEL_SHIFT               23
#define TCON_SMX9_INDEX1_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_INDEX1_SEL_SHIFT))&TCON_SMX9_INDEX1_SEL_MASK)
#define TCON_SMX9_INDEX2_SEL_MASK                0x1C000000u
#define TCON_SMX9_INDEX2_SEL_SHIFT               26
#define TCON_SMX9_INDEX2_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_INDEX2_SEL_SHIFT))&TCON_SMX9_INDEX2_SEL_MASK)
#define TCON_SMX9_INDEX3_SEL_MASK                0xE0000000u
#define TCON_SMX9_INDEX3_SEL_SHIFT               29
#define TCON_SMX9_INDEX3_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_SMX9_INDEX3_SEL_SHIFT))&TCON_SMX9_INDEX3_SEL_MASK)
/* SMX10 Bit Fields */
#define TCON_SMX10_X_SEL_MASK                    0x1Fu
#define TCON_SMX10_X_SEL_SHIFT                   0
#define TCON_SMX10_X_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_X_SEL_SHIFT))&TCON_SMX10_X_SEL_MASK)
#define TCON_SMX10_Y_SEL_MASK                    0x3E0u
#define TCON_SMX10_Y_SEL_SHIFT                   5
#define TCON_SMX10_Y_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_Y_SEL_SHIFT))&TCON_SMX10_Y_SEL_MASK)
#define TCON_SMX10_INDEX0_SEL_MASK               0x700000u
#define TCON_SMX10_INDEX0_SEL_SHIFT              20
#define TCON_SMX10_INDEX0_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_INDEX0_SEL_SHIFT))&TCON_SMX10_INDEX0_SEL_MASK)
#define TCON_SMX10_INDEX1_SEL_MASK               0x3800000u
#define TCON_SMX10_INDEX1_SEL_SHIFT              23
#define TCON_SMX10_INDEX1_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_INDEX1_SEL_SHIFT))&TCON_SMX10_INDEX1_SEL_MASK)
#define TCON_SMX10_INDEX2_SEL_MASK               0x1C000000u
#define TCON_SMX10_INDEX2_SEL_SHIFT              26
#define TCON_SMX10_INDEX2_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_INDEX2_SEL_SHIFT))&TCON_SMX10_INDEX2_SEL_MASK)
#define TCON_SMX10_INDEX3_SEL_MASK               0xE0000000u
#define TCON_SMX10_INDEX3_SEL_SHIFT              29
#define TCON_SMX10_INDEX3_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX10_INDEX3_SEL_SHIFT))&TCON_SMX10_INDEX3_SEL_MASK)
/* SMX11 Bit Fields */
#define TCON_SMX11_X_SEL_MASK                    0x1Fu
#define TCON_SMX11_X_SEL_SHIFT                   0
#define TCON_SMX11_X_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_X_SEL_SHIFT))&TCON_SMX11_X_SEL_MASK)
#define TCON_SMX11_Y_SEL_MASK                    0x3E0u
#define TCON_SMX11_Y_SEL_SHIFT                   5
#define TCON_SMX11_Y_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_Y_SEL_SHIFT))&TCON_SMX11_Y_SEL_MASK)
#define TCON_SMX11_INDEX0_SEL_MASK               0x700000u
#define TCON_SMX11_INDEX0_SEL_SHIFT              20
#define TCON_SMX11_INDEX0_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_INDEX0_SEL_SHIFT))&TCON_SMX11_INDEX0_SEL_MASK)
#define TCON_SMX11_INDEX1_SEL_MASK               0x3800000u
#define TCON_SMX11_INDEX1_SEL_SHIFT              23
#define TCON_SMX11_INDEX1_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_INDEX1_SEL_SHIFT))&TCON_SMX11_INDEX1_SEL_MASK)
#define TCON_SMX11_INDEX2_SEL_MASK               0x1C000000u
#define TCON_SMX11_INDEX2_SEL_SHIFT              26
#define TCON_SMX11_INDEX2_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_INDEX2_SEL_SHIFT))&TCON_SMX11_INDEX2_SEL_MASK)
#define TCON_SMX11_INDEX3_SEL_MASK               0xE0000000u
#define TCON_SMX11_INDEX3_SEL_SHIFT              29
#define TCON_SMX11_INDEX3_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX11_INDEX3_SEL_SHIFT))&TCON_SMX11_INDEX3_SEL_MASK)
/* SMX12 Bit Fields */
#define TCON_SMX12_X_SEL_MASK                    0x1Fu
#define TCON_SMX12_X_SEL_SHIFT                   0
#define TCON_SMX12_X_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_X_SEL_SHIFT))&TCON_SMX12_X_SEL_MASK)
#define TCON_SMX12_Y_SEL_MASK                    0x3E0u
#define TCON_SMX12_Y_SEL_SHIFT                   5
#define TCON_SMX12_Y_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_Y_SEL_SHIFT))&TCON_SMX12_Y_SEL_MASK)
#define TCON_SMX12_INDEX0_SEL_MASK               0x700000u
#define TCON_SMX12_INDEX0_SEL_SHIFT              20
#define TCON_SMX12_INDEX0_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_INDEX0_SEL_SHIFT))&TCON_SMX12_INDEX0_SEL_MASK)
#define TCON_SMX12_INDEX1_SEL_MASK               0x3800000u
#define TCON_SMX12_INDEX1_SEL_SHIFT              23
#define TCON_SMX12_INDEX1_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_INDEX1_SEL_SHIFT))&TCON_SMX12_INDEX1_SEL_MASK)
#define TCON_SMX12_INDEX2_SEL_MASK               0x1C000000u
#define TCON_SMX12_INDEX2_SEL_SHIFT              26
#define TCON_SMX12_INDEX2_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_INDEX2_SEL_SHIFT))&TCON_SMX12_INDEX2_SEL_MASK)
#define TCON_SMX12_INDEX3_SEL_MASK               0xE0000000u
#define TCON_SMX12_INDEX3_SEL_SHIFT              29
#define TCON_SMX12_INDEX3_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX12_INDEX3_SEL_SHIFT))&TCON_SMX12_INDEX3_SEL_MASK)
/* SMX13 Bit Fields */
#define TCON_SMX13_X_SEL_MASK                    0x1Fu
#define TCON_SMX13_X_SEL_SHIFT                   0
#define TCON_SMX13_X_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_X_SEL_SHIFT))&TCON_SMX13_X_SEL_MASK)
#define TCON_SMX13_Y_SEL_MASK                    0x3E0u
#define TCON_SMX13_Y_SEL_SHIFT                   5
#define TCON_SMX13_Y_SEL(x)                      (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_Y_SEL_SHIFT))&TCON_SMX13_Y_SEL_MASK)
#define TCON_SMX13_INDEX0_SEL_MASK               0x700000u
#define TCON_SMX13_INDEX0_SEL_SHIFT              20
#define TCON_SMX13_INDEX0_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_INDEX0_SEL_SHIFT))&TCON_SMX13_INDEX0_SEL_MASK)
#define TCON_SMX13_INDEX1_SEL_MASK               0x3800000u
#define TCON_SMX13_INDEX1_SEL_SHIFT              23
#define TCON_SMX13_INDEX1_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_INDEX1_SEL_SHIFT))&TCON_SMX13_INDEX1_SEL_MASK)
#define TCON_SMX13_INDEX2_SEL_MASK               0x1C000000u
#define TCON_SMX13_INDEX2_SEL_SHIFT              26
#define TCON_SMX13_INDEX2_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_INDEX2_SEL_SHIFT))&TCON_SMX13_INDEX2_SEL_MASK)
#define TCON_SMX13_INDEX3_SEL_MASK               0xE0000000u
#define TCON_SMX13_INDEX3_SEL_SHIFT              29
#define TCON_SMX13_INDEX3_SEL(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_SMX13_INDEX3_SEL_SHIFT))&TCON_SMX13_INDEX3_SEL_MASK)
/* OMUX_LOW Bit Fields */
#define TCON_OMUX_LOW_TCON0_MASK                 0x1Fu
#define TCON_OMUX_LOW_TCON0_SHIFT                0
#define TCON_OMUX_LOW_TCON0(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON0_SHIFT))&TCON_OMUX_LOW_TCON0_MASK)
#define TCON_OMUX_LOW_TCON1_MASK                 0x3E0u
#define TCON_OMUX_LOW_TCON1_SHIFT                5
#define TCON_OMUX_LOW_TCON1(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON1_SHIFT))&TCON_OMUX_LOW_TCON1_MASK)
#define TCON_OMUX_LOW_TCON2_MASK                 0x7C00u
#define TCON_OMUX_LOW_TCON2_SHIFT                10
#define TCON_OMUX_LOW_TCON2(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON2_SHIFT))&TCON_OMUX_LOW_TCON2_MASK)
#define TCON_OMUX_LOW_TCON3_MASK                 0xF8000u
#define TCON_OMUX_LOW_TCON3_SHIFT                15
#define TCON_OMUX_LOW_TCON3(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON3_SHIFT))&TCON_OMUX_LOW_TCON3_MASK)
#define TCON_OMUX_LOW_TCON4_MASK                 0x1F00000u
#define TCON_OMUX_LOW_TCON4_SHIFT                20
#define TCON_OMUX_LOW_TCON4(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON4_SHIFT))&TCON_OMUX_LOW_TCON4_MASK)
#define TCON_OMUX_LOW_TCON5_MASK                 0x3E000000u
#define TCON_OMUX_LOW_TCON5_SHIFT                25
#define TCON_OMUX_LOW_TCON5(x)                   (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_LOW_TCON5_SHIFT))&TCON_OMUX_LOW_TCON5_MASK)
/* OMUX_HIGH Bit Fields */
#define TCON_OMUX_HIGH_TCON6_MASK                0x1Fu
#define TCON_OMUX_HIGH_TCON6_SHIFT               0
#define TCON_OMUX_HIGH_TCON6(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON6_SHIFT))&TCON_OMUX_HIGH_TCON6_MASK)
#define TCON_OMUX_HIGH_TCON7_MASK                0x3E0u
#define TCON_OMUX_HIGH_TCON7_SHIFT               5
#define TCON_OMUX_HIGH_TCON7(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON7_SHIFT))&TCON_OMUX_HIGH_TCON7_MASK)
#define TCON_OMUX_HIGH_TCON8_MASK                0x7C00u
#define TCON_OMUX_HIGH_TCON8_SHIFT               10
#define TCON_OMUX_HIGH_TCON8(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON8_SHIFT))&TCON_OMUX_HIGH_TCON8_MASK)
#define TCON_OMUX_HIGH_TCON9_MASK                0xF8000u
#define TCON_OMUX_HIGH_TCON9_SHIFT               15
#define TCON_OMUX_HIGH_TCON9(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON9_SHIFT))&TCON_OMUX_HIGH_TCON9_MASK)
#define TCON_OMUX_HIGH_TCON10_MASK               0x1F00000u
#define TCON_OMUX_HIGH_TCON10_SHIFT              20
#define TCON_OMUX_HIGH_TCON10(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON10_SHIFT))&TCON_OMUX_HIGH_TCON10_MASK)
#define TCON_OMUX_HIGH_TCON11_MASK               0x3E000000u
#define TCON_OMUX_HIGH_TCON11_SHIFT              25
#define TCON_OMUX_HIGH_TCON11(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_OMUX_HIGH_TCON11_SHIFT))&TCON_OMUX_HIGH_TCON11_MASK)
/* LUT0 Bit Fields */
#define TCON_LUT0_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT0_LUT_SHIFT                      0
#define TCON_LUT0_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT0_LUT_SHIFT))&TCON_LUT0_LUT_MASK)
/* LUT1 Bit Fields */
#define TCON_LUT1_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT1_LUT_SHIFT                      0
#define TCON_LUT1_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT1_LUT_SHIFT))&TCON_LUT1_LUT_MASK)
/* LUT2 Bit Fields */
#define TCON_LUT2_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT2_LUT_SHIFT                      0
#define TCON_LUT2_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT2_LUT_SHIFT))&TCON_LUT2_LUT_MASK)
/* LUT3 Bit Fields */
#define TCON_LUT3_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT3_LUT_SHIFT                      0
#define TCON_LUT3_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT3_LUT_SHIFT))&TCON_LUT3_LUT_MASK)
/* LUT4 Bit Fields */
#define TCON_LUT4_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT4_LUT_SHIFT                      0
#define TCON_LUT4_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT4_LUT_SHIFT))&TCON_LUT4_LUT_MASK)
/* LUT5 Bit Fields */
#define TCON_LUT5_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT5_LUT_SHIFT                      0
#define TCON_LUT5_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT5_LUT_SHIFT))&TCON_LUT5_LUT_MASK)
/* LUT6 Bit Fields */
#define TCON_LUT6_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT6_LUT_SHIFT                      0
#define TCON_LUT6_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT6_LUT_SHIFT))&TCON_LUT6_LUT_MASK)
/* LUT7 Bit Fields */
#define TCON_LUT7_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT7_LUT_SHIFT                      0
#define TCON_LUT7_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT7_LUT_SHIFT))&TCON_LUT7_LUT_MASK)
/* LUT8 Bit Fields */
#define TCON_LUT8_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT8_LUT_SHIFT                      0
#define TCON_LUT8_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT8_LUT_SHIFT))&TCON_LUT8_LUT_MASK)
/* LUT9 Bit Fields */
#define TCON_LUT9_LUT_MASK                       0xFFFFFFFFu
#define TCON_LUT9_LUT_SHIFT                      0
#define TCON_LUT9_LUT(x)                         (((uint32_t)(((uint32_t)(x))<<TCON_LUT9_LUT_SHIFT))&TCON_LUT9_LUT_MASK)
/* LUT10 Bit Fields */
#define TCON_LUT10_LUT_MASK                      0xFFFFFFFFu
#define TCON_LUT10_LUT_SHIFT                     0
#define TCON_LUT10_LUT(x)                        (((uint32_t)(((uint32_t)(x))<<TCON_LUT10_LUT_SHIFT))&TCON_LUT10_LUT_MASK)
/* LUT11 Bit Fields */
#define TCON_LUT11_LUT_MASK                      0xFFFFFFFFu
#define TCON_LUT11_LUT_SHIFT                     0
#define TCON_LUT11_LUT(x)                        (((uint32_t)(((uint32_t)(x))<<TCON_LUT11_LUT_SHIFT))&TCON_LUT11_LUT_MASK)
/* LUT12 Bit Fields */
#define TCON_LUT12_LUT_MASK                      0xFFFFFFFFu
#define TCON_LUT12_LUT_SHIFT                     0
#define TCON_LUT12_LUT(x)                        (((uint32_t)(((uint32_t)(x))<<TCON_LUT12_LUT_SHIFT))&TCON_LUT12_LUT_MASK)
/* LUT13 Bit Fields */
#define TCON_LUT13_LUT_MASK                      0xFFFFFFFFu
#define TCON_LUT13_LUT_SHIFT                     0
#define TCON_LUT13_LUT(x)                        (((uint32_t)(((uint32_t)(x))<<TCON_LUT13_LUT_SHIFT))&TCON_LUT13_LUT_MASK)
/* CTRL2 Bit Fields */
#define TCON_CTRL2_DIV_RATIO_MASK                0xFFu
#define TCON_CTRL2_DIV_RATIO_SHIFT               0
#define TCON_CTRL2_DIV_RATIO(x)                  (((uint32_t)(((uint32_t)(x))<<TCON_CTRL2_DIV_RATIO_SHIFT))&TCON_CTRL2_DIV_RATIO_MASK)
#define TCON_CTRL2_CLK_OFFSET_MASK               0x1FF0000u
#define TCON_CTRL2_CLK_OFFSET_SHIFT              16
#define TCON_CTRL2_CLK_OFFSET(x)                 (((uint32_t)(((uint32_t)(x))<<TCON_CTRL2_CLK_OFFSET_SHIFT))&TCON_CTRL2_CLK_OFFSET_MASK)

/**
 * @}
 */ /* end of group TCON_Register_Masks */


/* TCON - Peripheral instance base addresses */
/** Peripheral TCON0 base pointer */
#define TCON0_BASE_PTR                           ((TCON_MemMapPtr)0x4003D000u)
/** Peripheral TCON1 base pointer */
#define TCON1_BASE_PTR                           ((TCON_MemMapPtr)0x400BD000u)
/** Array initializer of TCON peripheral base pointers */
#define TCON_BASE_PTRS                           { TCON0_BASE_PTR, TCON1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- TCON - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup TCON_Register_Accessor_Macros TCON - Register accessor macros
 * @{
 */


/* TCON - Register instance definitions */
/* TCON0 */
#define TCON0_CTRL1                              TCON_CTRL1_REG(TCON0_BASE_PTR)
#define TCON0_BMC                                TCON_BMC_REG(TCON0_BASE_PTR)
#define TCON0_COMP0                              TCON_COMP0_REG(TCON0_BASE_PTR)
#define TCON0_COMP1                              TCON_COMP1_REG(TCON0_BASE_PTR)
#define TCON0_COMP2                              TCON_COMP2_REG(TCON0_BASE_PTR)
#define TCON0_COMP3                              TCON_COMP3_REG(TCON0_BASE_PTR)
#define TCON0_COMP0_MSK                          TCON_COMP0_MSK_REG(TCON0_BASE_PTR)
#define TCON0_COMP1_MSK                          TCON_COMP1_MSK_REG(TCON0_BASE_PTR)
#define TCON0_COMP2_MSK                          TCON_COMP2_MSK_REG(TCON0_BASE_PTR)
#define TCON0_COMP3_MSK                          TCON_COMP3_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE0                             TCON_PULSE0_REG(TCON0_BASE_PTR)
#define TCON0_PULSE1                             TCON_PULSE1_REG(TCON0_BASE_PTR)
#define TCON0_PULSE2                             TCON_PULSE2_REG(TCON0_BASE_PTR)
#define TCON0_PULSE3                             TCON_PULSE3_REG(TCON0_BASE_PTR)
#define TCON0_PULSE4                             TCON_PULSE4_REG(TCON0_BASE_PTR)
#define TCON0_PULSE5                             TCON_PULSE5_REG(TCON0_BASE_PTR)
#define TCON0_PULSE0_MSK                         TCON_PULSE0_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE1_MSK                         TCON_PULSE1_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE2_MSK                         TCON_PULSE2_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE3_MSK                         TCON_PULSE3_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE4_MSK                         TCON_PULSE4_MSK_REG(TCON0_BASE_PTR)
#define TCON0_PULSE5_MSK                         TCON_PULSE5_MSK_REG(TCON0_BASE_PTR)
#define TCON0_SMX0                               TCON_SMX0_REG(TCON0_BASE_PTR)
#define TCON0_SMX1                               TCON_SMX1_REG(TCON0_BASE_PTR)
#define TCON0_SMX2                               TCON_SMX2_REG(TCON0_BASE_PTR)
#define TCON0_SMX3                               TCON_SMX3_REG(TCON0_BASE_PTR)
#define TCON0_SMX4                               TCON_SMX4_REG(TCON0_BASE_PTR)
#define TCON0_SMX5                               TCON_SMX5_REG(TCON0_BASE_PTR)
#define TCON0_SMX6                               TCON_SMX6_REG(TCON0_BASE_PTR)
#define TCON0_SMX7                               TCON_SMX7_REG(TCON0_BASE_PTR)
#define TCON0_SMX8                               TCON_SMX8_REG(TCON0_BASE_PTR)
#define TCON0_SMX9                               TCON_SMX9_REG(TCON0_BASE_PTR)
#define TCON0_SMX10                              TCON_SMX10_REG(TCON0_BASE_PTR)
#define TCON0_SMX11                              TCON_SMX11_REG(TCON0_BASE_PTR)
#define TCON0_SMX12                              TCON_SMX12_REG(TCON0_BASE_PTR)
#define TCON0_SMX13                              TCON_SMX13_REG(TCON0_BASE_PTR)
#define TCON0_OMUX_LOW                           TCON_OMUX_LOW_REG(TCON0_BASE_PTR)
#define TCON0_OMUX_HIGH                          TCON_OMUX_HIGH_REG(TCON0_BASE_PTR)
#define TCON0_LUT0                               TCON_LUT0_REG(TCON0_BASE_PTR)
#define TCON0_LUT1                               TCON_LUT1_REG(TCON0_BASE_PTR)
#define TCON0_LUT2                               TCON_LUT2_REG(TCON0_BASE_PTR)
#define TCON0_LUT3                               TCON_LUT3_REG(TCON0_BASE_PTR)
#define TCON0_LUT4                               TCON_LUT4_REG(TCON0_BASE_PTR)
#define TCON0_LUT5                               TCON_LUT5_REG(TCON0_BASE_PTR)
#define TCON0_LUT6                               TCON_LUT6_REG(TCON0_BASE_PTR)
#define TCON0_LUT7                               TCON_LUT7_REG(TCON0_BASE_PTR)
#define TCON0_LUT8                               TCON_LUT8_REG(TCON0_BASE_PTR)
#define TCON0_LUT9                               TCON_LUT9_REG(TCON0_BASE_PTR)
#define TCON0_LUT10                              TCON_LUT10_REG(TCON0_BASE_PTR)
#define TCON0_LUT11                              TCON_LUT11_REG(TCON0_BASE_PTR)
#define TCON0_LUT12                              TCON_LUT12_REG(TCON0_BASE_PTR)
#define TCON0_LUT13                              TCON_LUT13_REG(TCON0_BASE_PTR)
#define TCON0_CTRL2                              TCON_CTRL2_REG(TCON0_BASE_PTR)
/* TCON1 */
#define TCON1_CTRL1                              TCON_CTRL1_REG(TCON1_BASE_PTR)
#define TCON1_BMC                                TCON_BMC_REG(TCON1_BASE_PTR)
#define TCON1_COMP0                              TCON_COMP0_REG(TCON1_BASE_PTR)
#define TCON1_COMP1                              TCON_COMP1_REG(TCON1_BASE_PTR)
#define TCON1_COMP2                              TCON_COMP2_REG(TCON1_BASE_PTR)
#define TCON1_COMP3                              TCON_COMP3_REG(TCON1_BASE_PTR)
#define TCON1_COMP0_MSK                          TCON_COMP0_MSK_REG(TCON1_BASE_PTR)
#define TCON1_COMP1_MSK                          TCON_COMP1_MSK_REG(TCON1_BASE_PTR)
#define TCON1_COMP2_MSK                          TCON_COMP2_MSK_REG(TCON1_BASE_PTR)
#define TCON1_COMP3_MSK                          TCON_COMP3_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE0                             TCON_PULSE0_REG(TCON1_BASE_PTR)
#define TCON1_PULSE1                             TCON_PULSE1_REG(TCON1_BASE_PTR)
#define TCON1_PULSE2                             TCON_PULSE2_REG(TCON1_BASE_PTR)
#define TCON1_PULSE3                             TCON_PULSE3_REG(TCON1_BASE_PTR)
#define TCON1_PULSE4                             TCON_PULSE4_REG(TCON1_BASE_PTR)
#define TCON1_PULSE5                             TCON_PULSE5_REG(TCON1_BASE_PTR)
#define TCON1_PULSE0_MSK                         TCON_PULSE0_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE1_MSK                         TCON_PULSE1_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE2_MSK                         TCON_PULSE2_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE3_MSK                         TCON_PULSE3_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE4_MSK                         TCON_PULSE4_MSK_REG(TCON1_BASE_PTR)
#define TCON1_PULSE5_MSK                         TCON_PULSE5_MSK_REG(TCON1_BASE_PTR)
#define TCON1_SMX0                               TCON_SMX0_REG(TCON1_BASE_PTR)
#define TCON1_SMX1                               TCON_SMX1_REG(TCON1_BASE_PTR)
#define TCON1_SMX2                               TCON_SMX2_REG(TCON1_BASE_PTR)
#define TCON1_SMX3                               TCON_SMX3_REG(TCON1_BASE_PTR)
#define TCON1_SMX4                               TCON_SMX4_REG(TCON1_BASE_PTR)
#define TCON1_SMX5                               TCON_SMX5_REG(TCON1_BASE_PTR)
#define TCON1_SMX6                               TCON_SMX6_REG(TCON1_BASE_PTR)
#define TCON1_SMX7                               TCON_SMX7_REG(TCON1_BASE_PTR)
#define TCON1_SMX8                               TCON_SMX8_REG(TCON1_BASE_PTR)
#define TCON1_SMX9                               TCON_SMX9_REG(TCON1_BASE_PTR)
#define TCON1_SMX10                              TCON_SMX10_REG(TCON1_BASE_PTR)
#define TCON1_SMX11                              TCON_SMX11_REG(TCON1_BASE_PTR)
#define TCON1_SMX12                              TCON_SMX12_REG(TCON1_BASE_PTR)
#define TCON1_SMX13                              TCON_SMX13_REG(TCON1_BASE_PTR)
#define TCON1_OMUX_LOW                           TCON_OMUX_LOW_REG(TCON1_BASE_PTR)
#define TCON1_OMUX_HIGH                          TCON_OMUX_HIGH_REG(TCON1_BASE_PTR)
#define TCON1_LUT0                               TCON_LUT0_REG(TCON1_BASE_PTR)
#define TCON1_LUT1                               TCON_LUT1_REG(TCON1_BASE_PTR)
#define TCON1_LUT2                               TCON_LUT2_REG(TCON1_BASE_PTR)
#define TCON1_LUT3                               TCON_LUT3_REG(TCON1_BASE_PTR)
#define TCON1_LUT4                               TCON_LUT4_REG(TCON1_BASE_PTR)
#define TCON1_LUT5                               TCON_LUT5_REG(TCON1_BASE_PTR)
#define TCON1_LUT6                               TCON_LUT6_REG(TCON1_BASE_PTR)
#define TCON1_LUT7                               TCON_LUT7_REG(TCON1_BASE_PTR)
#define TCON1_LUT8                               TCON_LUT8_REG(TCON1_BASE_PTR)
#define TCON1_LUT9                               TCON_LUT9_REG(TCON1_BASE_PTR)
#define TCON1_LUT10                              TCON_LUT10_REG(TCON1_BASE_PTR)
#define TCON1_LUT11                              TCON_LUT11_REG(TCON1_BASE_PTR)
#define TCON1_LUT12                              TCON_LUT12_REG(TCON1_BASE_PTR)
#define TCON1_LUT13                              TCON_LUT13_REG(TCON1_BASE_PTR)
#define TCON1_CTRL2                              TCON_CTRL2_REG(TCON1_BASE_PTR)

/**
 * @}
 */ /* end of group TCON_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group TCON_Peripheral */


/* ----------------------------------------------------------------------------
   -- UART
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup UART_Peripheral UART
 * @{
 */

/** UART - Peripheral register structure */
typedef struct UART_MemMap {
  uint8_t BDH;                                     /**< UART Baud Rate Registers: High, offset: 0x0 */
  uint8_t BDL;                                     /**< UART Baud Rate Registers: Low, offset: 0x1 */
  uint8_t C1;                                      /**< UART Control Register 1, offset: 0x2 */
  uint8_t C2;                                      /**< UART Control Register 2, offset: 0x3 */
  uint8_t S1;                                      /**< UART Status Register 1, offset: 0x4 */
  uint8_t S2;                                      /**< UART Status Register 2, offset: 0x5 */
  uint8_t C3;                                      /**< UART Control Register 3, offset: 0x6 */
  uint8_t D;                                       /**< UART Data Register, offset: 0x7 */
  uint8_t MA1;                                     /**< UART Match Address Registers 1, offset: 0x8 */
  uint8_t MA2;                                     /**< UART Match Address Registers 2, offset: 0x9 */
  uint8_t C4;                                      /**< UART Control Register 4, offset: 0xA */
  uint8_t C5;                                      /**< UART Control Register 5, offset: 0xB */
  uint8_t ED;                                      /**< UART Extended Data Register, offset: 0xC */
  uint8_t MODEM;                                   /**< UART Modem Register, offset: 0xD */
  uint8_t IR;                                      /**< UART Infrared Register, offset: 0xE */
  uint8_t RESERVED_0[1];
  uint8_t PFIFO;                                   /**< UART FIFO Parameters, offset: 0x10 */
  uint8_t CFIFO;                                   /**< UART FIFO Control Register, offset: 0x11 */
  uint8_t SFIFO;                                   /**< UART FIFO Status Register, offset: 0x12 */
  uint8_t TWFIFO;                                  /**< UART FIFO Transmit Watermark, offset: 0x13 */
  uint8_t TCFIFO;                                  /**< UART FIFO Transmit Count, offset: 0x14 */
  uint8_t RWFIFO;                                  /**< UART FIFO Receive Watermark, offset: 0x15 */
  uint8_t RCFIFO;                                  /**< UART FIFO Receive Count, offset: 0x16 */
  uint8_t RESERVED_1[1];
  uint8_t C7816;                                   /**< UART 7816 Control Register, offset: 0x18 */
  uint8_t IE7816;                                  /**< UART 7816 Interrupt Enable Register, offset: 0x19 */
  uint8_t IS7816;                                  /**< UART 7816 Interrupt Status Register, offset: 0x1A */
  union {                                          /* offset: 0x1B */
    uint8_t WP7816_T_TYPE0;                          /**< UART 7816 Wait Parameter Register, offset: 0x1B */
    uint8_t WP7816_T_TYPE1;                          /**< UART 7816 Wait Parameter Register, offset: 0x1B */
  };
  uint8_t WN7816;                                  /**< UART 7816 Wait N Register, offset: 0x1C */
  uint8_t WF7816;                                  /**< UART 7816 Wait FD Register, offset: 0x1D */
  uint8_t ET7816;                                  /**< UART 7816 Error Threshold Register, offset: 0x1E */
  uint8_t TL7816;                                  /**< UART 7816 Transmit Length Register, offset: 0x1F */
  uint8_t RESERVED_2[1];
  uint8_t C6;                                      /**< UART CEA709.1-B Control Register 6, offset: 0x21 */
  uint8_t PCTH;                                    /**< UART CEA709.1-B Packet Cycle Time Counter High, offset: 0x22 */
  uint8_t PCTL;                                    /**< UART CEA709.1-B Packet Cycle Time Counter Low, offset: 0x23 */
  uint8_t B1T;                                     /**< UART CEA709.1-B Beta1 Timer, offset: 0x24 */
  uint8_t SDTH;                                    /**< UART CEA709.1-B Secondary Delay Timer High, offset: 0x25 */
  uint8_t SDTL;                                    /**< UART CEA709.1-B Secondary Delay Timer Low, offset: 0x26 */
  uint8_t PRE;                                     /**< UART CEA709.1-B Preamble, offset: 0x27 */
  uint8_t TPL;                                     /**< UART CEA709.1-B Transmit Packet Length, offset: 0x28 */
  uint8_t IE;                                      /**< UART CEA709.1-B Interrupt Enable Register, offset: 0x29 */
  uint8_t RESERVED_3[1];
  uint8_t S3;                                      /**< UART CEA709.1-B Status Register, offset: 0x2B */
  uint8_t S4;                                      /**< UART CEA709.1-B Status Register, offset: 0x2C */
  uint8_t RPL;                                     /**< UART CEA709.1-B Received Packet Length, offset: 0x2D */
  uint8_t RPREL;                                   /**< UART CEA709.1-B Received Preamble Length, offset: 0x2E */
  uint8_t CPW;                                     /**< UART CEA709.1-B Collision Pulse Width, offset: 0x2F */
  uint8_t RIDT;                                    /**< UART CEA709.1-B Receive Indeterminate Time, offset: 0x30 */
  uint8_t TIDT;                                    /**< UART CEA709.1-B Transmit Indeterminate Time, offset: 0x31 */
} volatile *UART_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- UART - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup UART_Register_Accessor_Macros UART - Register accessor macros
 * @{
 */


/* UART - Register accessors */
#define UART_BDH_REG(base)                       ((base)->BDH)
#define UART_BDL_REG(base)                       ((base)->BDL)
#define UART_C1_REG(base)                        ((base)->C1)
#define UART_C2_REG(base)                        ((base)->C2)
#define UART_S1_REG(base)                        ((base)->S1)
#define UART_S2_REG(base)                        ((base)->S2)
#define UART_C3_REG(base)                        ((base)->C3)
#define UART_D_REG(base)                         ((base)->D)
#define UART_MA1_REG(base)                       ((base)->MA1)
#define UART_MA2_REG(base)                       ((base)->MA2)
#define UART_C4_REG(base)                        ((base)->C4)
#define UART_C5_REG(base)                        ((base)->C5)
#define UART_ED_REG(base)                        ((base)->ED)
#define UART_MODEM_REG(base)                     ((base)->MODEM)
#define UART_IR_REG(base)                        ((base)->IR)
#define UART_PFIFO_REG(base)                     ((base)->PFIFO)
#define UART_CFIFO_REG(base)                     ((base)->CFIFO)
#define UART_SFIFO_REG(base)                     ((base)->SFIFO)
#define UART_TWFIFO_REG(base)                    ((base)->TWFIFO)
#define UART_TCFIFO_REG(base)                    ((base)->TCFIFO)
#define UART_RWFIFO_REG(base)                    ((base)->RWFIFO)
#define UART_RCFIFO_REG(base)                    ((base)->RCFIFO)
#define UART_C7816_REG(base)                     ((base)->C7816)
#define UART_IE7816_REG(base)                    ((base)->IE7816)
#define UART_IS7816_REG(base)                    ((base)->IS7816)
#define UART_WP7816_T_TYPE0_REG(base)            ((base)->WP7816_T_TYPE0)
#define UART_WP7816_T_TYPE1_REG(base)            ((base)->WP7816_T_TYPE1)
#define UART_WN7816_REG(base)                    ((base)->WN7816)
#define UART_WF7816_REG(base)                    ((base)->WF7816)
#define UART_ET7816_REG(base)                    ((base)->ET7816)
#define UART_TL7816_REG(base)                    ((base)->TL7816)
#define UART_C6_REG(base)                        ((base)->C6)
#define UART_PCTH_REG(base)                      ((base)->PCTH)
#define UART_PCTL_REG(base)                      ((base)->PCTL)
#define UART_B1T_REG(base)                       ((base)->B1T)
#define UART_SDTH_REG(base)                      ((base)->SDTH)
#define UART_SDTL_REG(base)                      ((base)->SDTL)
#define UART_PRE_REG(base)                       ((base)->PRE)
#define UART_TPL_REG(base)                       ((base)->TPL)
#define UART_IE_REG(base)                        ((base)->IE)
#define UART_S3_REG(base)                        ((base)->S3)
#define UART_S4_REG(base)                        ((base)->S4)
#define UART_RPL_REG(base)                       ((base)->RPL)
#define UART_RPREL_REG(base)                     ((base)->RPREL)
#define UART_CPW_REG(base)                       ((base)->CPW)
#define UART_RIDT_REG(base)                      ((base)->RIDT)
#define UART_TIDT_REG(base)                      ((base)->TIDT)

/**
 * @}
 */ /* end of group UART_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- UART Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup UART_Register_Masks UART Register Masks
 * @{
 */

/* BDH Bit Fields */
#define UART_BDH_SBR_MASK                        0x1Fu
#define UART_BDH_SBR_SHIFT                       0
#define UART_BDH_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDH_SBR_SHIFT))&UART_BDH_SBR_MASK)
#define UART_BDH_RXEDGIE_MASK                    0x40u
#define UART_BDH_RXEDGIE_SHIFT                   6
#define UART_BDH_LBKDIE_MASK                     0x80u
#define UART_BDH_LBKDIE_SHIFT                    7
/* BDL Bit Fields */
#define UART_BDL_SBR_MASK                        0xFFu
#define UART_BDL_SBR_SHIFT                       0
#define UART_BDL_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDL_SBR_SHIFT))&UART_BDL_SBR_MASK)
/* C1 Bit Fields */
#define UART_C1_PT_MASK                          0x1u
#define UART_C1_PT_SHIFT                         0
#define UART_C1_PE_MASK                          0x2u
#define UART_C1_PE_SHIFT                         1
#define UART_C1_ILT_MASK                         0x4u
#define UART_C1_ILT_SHIFT                        2
#define UART_C1_WAKE_MASK                        0x8u
#define UART_C1_WAKE_SHIFT                       3
#define UART_C1_M_MASK                           0x10u
#define UART_C1_M_SHIFT                          4
#define UART_C1_RSRC_MASK                        0x20u
#define UART_C1_RSRC_SHIFT                       5
#define UART_C1_LOOPS_MASK                       0x80u
#define UART_C1_LOOPS_SHIFT                      7
/* C2 Bit Fields */
#define UART_C2_SBK_MASK                         0x1u
#define UART_C2_SBK_SHIFT                        0
#define UART_C2_RWU_MASK                         0x2u
#define UART_C2_RWU_SHIFT                        1
#define UART_C2_RE_MASK                          0x4u
#define UART_C2_RE_SHIFT                         2
#define UART_C2_TE_MASK                          0x8u
#define UART_C2_TE_SHIFT                         3
#define UART_C2_ILIE_MASK                        0x10u
#define UART_C2_ILIE_SHIFT                       4
#define UART_C2_RIE_MASK                         0x20u
#define UART_C2_RIE_SHIFT                        5
#define UART_C2_TCIE_MASK                        0x40u
#define UART_C2_TCIE_SHIFT                       6
#define UART_C2_TIE_MASK                         0x80u
#define UART_C2_TIE_SHIFT                        7
/* S1 Bit Fields */
#define UART_S1_PF_MASK                          0x1u
#define UART_S1_PF_SHIFT                         0
#define UART_S1_FE_MASK                          0x2u
#define UART_S1_FE_SHIFT                         1
#define UART_S1_NF_MASK                          0x4u
#define UART_S1_NF_SHIFT                         2
#define UART_S1_OR_MASK                          0x8u
#define UART_S1_OR_SHIFT                         3
#define UART_S1_IDLE_MASK                        0x10u
#define UART_S1_IDLE_SHIFT                       4
#define UART_S1_RDRF_MASK                        0x20u
#define UART_S1_RDRF_SHIFT                       5
#define UART_S1_TC_MASK                          0x40u
#define UART_S1_TC_SHIFT                         6
#define UART_S1_TDRE_MASK                        0x80u
#define UART_S1_TDRE_SHIFT                       7
/* S2 Bit Fields */
#define UART_S2_RAF_MASK                         0x1u
#define UART_S2_RAF_SHIFT                        0
#define UART_S2_LBKDE_MASK                       0x2u
#define UART_S2_LBKDE_SHIFT                      1
#define UART_S2_BRK13_MASK                       0x4u
#define UART_S2_BRK13_SHIFT                      2
#define UART_S2_RWUID_MASK                       0x8u
#define UART_S2_RWUID_SHIFT                      3
#define UART_S2_RXINV_MASK                       0x10u
#define UART_S2_RXINV_SHIFT                      4
#define UART_S2_MSBF_MASK                        0x20u
#define UART_S2_MSBF_SHIFT                       5
#define UART_S2_RXEDGIF_MASK                     0x40u
#define UART_S2_RXEDGIF_SHIFT                    6
#define UART_S2_LBKDIF_MASK                      0x80u
#define UART_S2_LBKDIF_SHIFT                     7
/* C3 Bit Fields */
#define UART_C3_PEIE_MASK                        0x1u
#define UART_C3_PEIE_SHIFT                       0
#define UART_C3_FEIE_MASK                        0x2u
#define UART_C3_FEIE_SHIFT                       1
#define UART_C3_NEIE_MASK                        0x4u
#define UART_C3_NEIE_SHIFT                       2
#define UART_C3_ORIE_MASK                        0x8u
#define UART_C3_ORIE_SHIFT                       3
#define UART_C3_TXINV_MASK                       0x10u
#define UART_C3_TXINV_SHIFT                      4
#define UART_C3_TXDIR_MASK                       0x20u
#define UART_C3_TXDIR_SHIFT                      5
#define UART_C3_T8_MASK                          0x40u
#define UART_C3_T8_SHIFT                         6
#define UART_C3_R8_MASK                          0x80u
#define UART_C3_R8_SHIFT                         7
/* D Bit Fields */
#define UART_D_RT_MASK                           0xFFu
#define UART_D_RT_SHIFT                          0
#define UART_D_RT(x)                             (((uint8_t)(((uint8_t)(x))<<UART_D_RT_SHIFT))&UART_D_RT_MASK)
/* MA1 Bit Fields */
#define UART_MA1_MA_MASK                         0xFFu
#define UART_MA1_MA_SHIFT                        0
#define UART_MA1_MA(x)                           (((uint8_t)(((uint8_t)(x))<<UART_MA1_MA_SHIFT))&UART_MA1_MA_MASK)
/* MA2 Bit Fields */
#define UART_MA2_MA_MASK                         0xFFu
#define UART_MA2_MA_SHIFT                        0
#define UART_MA2_MA(x)                           (((uint8_t)(((uint8_t)(x))<<UART_MA2_MA_SHIFT))&UART_MA2_MA_MASK)
/* C4 Bit Fields */
#define UART_C4_BRFA_MASK                        0x1Fu
#define UART_C4_BRFA_SHIFT                       0
#define UART_C4_BRFA(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C4_BRFA_SHIFT))&UART_C4_BRFA_MASK)
#define UART_C4_M10_MASK                         0x20u
#define UART_C4_M10_SHIFT                        5
#define UART_C4_MAEN2_MASK                       0x40u
#define UART_C4_MAEN2_SHIFT                      6
#define UART_C4_MAEN1_MASK                       0x80u
#define UART_C4_MAEN1_SHIFT                      7
/* C5 Bit Fields */
#define UART_C5_RDMAS_MASK                       0x20u
#define UART_C5_RDMAS_SHIFT                      5
#define UART_C5_TDMAS_MASK                       0x80u
#define UART_C5_TDMAS_SHIFT                      7
/* ED Bit Fields */
#define UART_ED_PARITYE_MASK                     0x40u
#define UART_ED_PARITYE_SHIFT                    6
#define UART_ED_NOISY_MASK                       0x80u
#define UART_ED_NOISY_SHIFT                      7
/* MODEM Bit Fields */
#define UART_MODEM_TXCTSE_MASK                   0x1u
#define UART_MODEM_TXCTSE_SHIFT                  0
#define UART_MODEM_TXRTSE_MASK                   0x2u
#define UART_MODEM_TXRTSE_SHIFT                  1
#define UART_MODEM_TXRTSPOL_MASK                 0x4u
#define UART_MODEM_TXRTSPOL_SHIFT                2
#define UART_MODEM_RXRTSE_MASK                   0x8u
#define UART_MODEM_RXRTSE_SHIFT                  3
/* IR Bit Fields */
#define UART_IR_TNP_MASK                         0x3u
#define UART_IR_TNP_SHIFT                        0
#define UART_IR_TNP(x)                           (((uint8_t)(((uint8_t)(x))<<UART_IR_TNP_SHIFT))&UART_IR_TNP_MASK)
#define UART_IR_IREN_MASK                        0x4u
#define UART_IR_IREN_SHIFT                       2
/* PFIFO Bit Fields */
#define UART_PFIFO_RXFIFOSIZE_MASK               0x7u
#define UART_PFIFO_RXFIFOSIZE_SHIFT              0
#define UART_PFIFO_RXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_RXFIFOSIZE_SHIFT))&UART_PFIFO_RXFIFOSIZE_MASK)
#define UART_PFIFO_RXFE_MASK                     0x8u
#define UART_PFIFO_RXFE_SHIFT                    3
#define UART_PFIFO_TXFIFOSIZE_MASK               0x70u
#define UART_PFIFO_TXFIFOSIZE_SHIFT              4
#define UART_PFIFO_TXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_TXFIFOSIZE_SHIFT))&UART_PFIFO_TXFIFOSIZE_MASK)
#define UART_PFIFO_TXFE_MASK                     0x80u
#define UART_PFIFO_TXFE_SHIFT                    7
/* CFIFO Bit Fields */
#define UART_CFIFO_RXUFE_MASK                    0x1u
#define UART_CFIFO_RXUFE_SHIFT                   0
#define UART_CFIFO_TXOFE_MASK                    0x2u
#define UART_CFIFO_TXOFE_SHIFT                   1
#define UART_CFIFO_RXOFE_MASK                    0x4u
#define UART_CFIFO_RXOFE_SHIFT                   2
#define UART_CFIFO_RXFLUSH_MASK                  0x40u
#define UART_CFIFO_RXFLUSH_SHIFT                 6
#define UART_CFIFO_TXFLUSH_MASK                  0x80u
#define UART_CFIFO_TXFLUSH_SHIFT                 7
/* SFIFO Bit Fields */
#define UART_SFIFO_RXUF_MASK                     0x1u
#define UART_SFIFO_RXUF_SHIFT                    0
#define UART_SFIFO_TXOF_MASK                     0x2u
#define UART_SFIFO_TXOF_SHIFT                    1
#define UART_SFIFO_RXOF_MASK                     0x4u
#define UART_SFIFO_RXOF_SHIFT                    2
#define UART_SFIFO_RXEMPT_MASK                   0x40u
#define UART_SFIFO_RXEMPT_SHIFT                  6
#define UART_SFIFO_TXEMPT_MASK                   0x80u
#define UART_SFIFO_TXEMPT_SHIFT                  7
/* TWFIFO Bit Fields */
#define UART_TWFIFO_TXWATER_MASK                 0xFFu
#define UART_TWFIFO_TXWATER_SHIFT                0
#define UART_TWFIFO_TXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TWFIFO_TXWATER_SHIFT))&UART_TWFIFO_TXWATER_MASK)
/* TCFIFO Bit Fields */
#define UART_TCFIFO_TXCOUNT_MASK                 0xFFu
#define UART_TCFIFO_TXCOUNT_SHIFT                0
#define UART_TCFIFO_TXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TCFIFO_TXCOUNT_SHIFT))&UART_TCFIFO_TXCOUNT_MASK)
/* RWFIFO Bit Fields */
#define UART_RWFIFO_RXWATER_MASK                 0xFFu
#define UART_RWFIFO_RXWATER_SHIFT                0
#define UART_RWFIFO_RXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RWFIFO_RXWATER_SHIFT))&UART_RWFIFO_RXWATER_MASK)
/* RCFIFO Bit Fields */
#define UART_RCFIFO_RXCOUNT_MASK                 0xFFu
#define UART_RCFIFO_RXCOUNT_SHIFT                0
#define UART_RCFIFO_RXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RCFIFO_RXCOUNT_SHIFT))&UART_RCFIFO_RXCOUNT_MASK)
/* C7816 Bit Fields */
#define UART_C7816_ISO_7816E_MASK                0x1u
#define UART_C7816_ISO_7816E_SHIFT               0
#define UART_C7816_TTYPE_MASK                    0x2u
#define UART_C7816_TTYPE_SHIFT                   1
#define UART_C7816_INIT_MASK                     0x4u
#define UART_C7816_INIT_SHIFT                    2
#define UART_C7816_ANACK_MASK                    0x8u
#define UART_C7816_ANACK_SHIFT                   3
#define UART_C7816_ONACK_MASK                    0x10u
#define UART_C7816_ONACK_SHIFT                   4
/* IE7816 Bit Fields */
#define UART_IE7816_RXTE_MASK                    0x1u
#define UART_IE7816_RXTE_SHIFT                   0
#define UART_IE7816_TXTE_MASK                    0x2u
#define UART_IE7816_TXTE_SHIFT                   1
#define UART_IE7816_GTVE_MASK                    0x4u
#define UART_IE7816_GTVE_SHIFT                   2
#define UART_IE7816_INITDE_MASK                  0x10u
#define UART_IE7816_INITDE_SHIFT                 4
#define UART_IE7816_BWTE_MASK                    0x20u
#define UART_IE7816_BWTE_SHIFT                   5
#define UART_IE7816_CWTE_MASK                    0x40u
#define UART_IE7816_CWTE_SHIFT                   6
#define UART_IE7816_WTE_MASK                     0x80u
#define UART_IE7816_WTE_SHIFT                    7
/* IS7816 Bit Fields */
#define UART_IS7816_RXT_MASK                     0x1u
#define UART_IS7816_RXT_SHIFT                    0
#define UART_IS7816_TXT_MASK                     0x2u
#define UART_IS7816_TXT_SHIFT                    1
#define UART_IS7816_GTV_MASK                     0x4u
#define UART_IS7816_GTV_SHIFT                    2
#define UART_IS7816_INITD_MASK                   0x10u
#define UART_IS7816_INITD_SHIFT                  4
#define UART_IS7816_BWT_MASK                     0x20u
#define UART_IS7816_BWT_SHIFT                    5
#define UART_IS7816_CWT_MASK                     0x40u
#define UART_IS7816_CWT_SHIFT                    6
#define UART_IS7816_WT_MASK                      0x80u
#define UART_IS7816_WT_SHIFT                     7
/* WP7816_T_TYPE0 Bit Fields */
#define UART_WP7816_T_TYPE0_WI_MASK              0xFFu
#define UART_WP7816_T_TYPE0_WI_SHIFT             0
#define UART_WP7816_T_TYPE0_WI(x)                (((uint8_t)(((uint8_t)(x))<<UART_WP7816_T_TYPE0_WI_SHIFT))&UART_WP7816_T_TYPE0_WI_MASK)
/* WP7816_T_TYPE1 Bit Fields */
#define UART_WP7816_T_TYPE1_BWI_MASK             0xFu
#define UART_WP7816_T_TYPE1_BWI_SHIFT            0
#define UART_WP7816_T_TYPE1_BWI(x)               (((uint8_t)(((uint8_t)(x))<<UART_WP7816_T_TYPE1_BWI_SHIFT))&UART_WP7816_T_TYPE1_BWI_MASK)
#define UART_WP7816_T_TYPE1_CWI_MASK             0xF0u
#define UART_WP7816_T_TYPE1_CWI_SHIFT            4
#define UART_WP7816_T_TYPE1_CWI(x)               (((uint8_t)(((uint8_t)(x))<<UART_WP7816_T_TYPE1_CWI_SHIFT))&UART_WP7816_T_TYPE1_CWI_MASK)
/* WN7816 Bit Fields */
#define UART_WN7816_GTN_MASK                     0xFFu
#define UART_WN7816_GTN_SHIFT                    0
#define UART_WN7816_GTN(x)                       (((uint8_t)(((uint8_t)(x))<<UART_WN7816_GTN_SHIFT))&UART_WN7816_GTN_MASK)
/* WF7816 Bit Fields */
#define UART_WF7816_GTFD_MASK                    0xFFu
#define UART_WF7816_GTFD_SHIFT                   0
#define UART_WF7816_GTFD(x)                      (((uint8_t)(((uint8_t)(x))<<UART_WF7816_GTFD_SHIFT))&UART_WF7816_GTFD_MASK)
/* ET7816 Bit Fields */
#define UART_ET7816_RXTHRESHOLD_MASK             0xFu
#define UART_ET7816_RXTHRESHOLD_SHIFT            0
#define UART_ET7816_RXTHRESHOLD(x)               (((uint8_t)(((uint8_t)(x))<<UART_ET7816_RXTHRESHOLD_SHIFT))&UART_ET7816_RXTHRESHOLD_MASK)
#define UART_ET7816_TXTHRESHOLD_MASK             0xF0u
#define UART_ET7816_TXTHRESHOLD_SHIFT            4
#define UART_ET7816_TXTHRESHOLD(x)               (((uint8_t)(((uint8_t)(x))<<UART_ET7816_TXTHRESHOLD_SHIFT))&UART_ET7816_TXTHRESHOLD_MASK)
/* TL7816 Bit Fields */
#define UART_TL7816_TLEN_MASK                    0xFFu
#define UART_TL7816_TLEN_SHIFT                   0
#define UART_TL7816_TLEN(x)                      (((uint8_t)(((uint8_t)(x))<<UART_TL7816_TLEN_SHIFT))&UART_TL7816_TLEN_MASK)
/* C6 Bit Fields */
#define UART_C6_CP_MASK                          0x10u
#define UART_C6_CP_SHIFT                         4
#define UART_C6_CE_MASK                          0x20u
#define UART_C6_CE_SHIFT                         5
#define UART_C6_TX709_MASK                       0x40u
#define UART_C6_TX709_SHIFT                      6
#define UART_C6_EN709_MASK                       0x80u
#define UART_C6_EN709_SHIFT                      7
/* PCTH Bit Fields */
#define UART_PCTH_PCTH_MASK                      0xFFu
#define UART_PCTH_PCTH_SHIFT                     0
#define UART_PCTH_PCTH(x)                        (((uint8_t)(((uint8_t)(x))<<UART_PCTH_PCTH_SHIFT))&UART_PCTH_PCTH_MASK)
/* PCTL Bit Fields */
#define UART_PCTL_PCTL_MASK                      0xFFu
#define UART_PCTL_PCTL_SHIFT                     0
#define UART_PCTL_PCTL(x)                        (((uint8_t)(((uint8_t)(x))<<UART_PCTL_PCTL_SHIFT))&UART_PCTL_PCTL_MASK)
/* B1T Bit Fields */
#define UART_B1T_B1T_MASK                        0xFFu
#define UART_B1T_B1T_SHIFT                       0
#define UART_B1T_B1T(x)                          (((uint8_t)(((uint8_t)(x))<<UART_B1T_B1T_SHIFT))&UART_B1T_B1T_MASK)
/* SDTH Bit Fields */
#define UART_SDTH_SDTH_MASK                      0xFFu
#define UART_SDTH_SDTH_SHIFT                     0
#define UART_SDTH_SDTH(x)                        (((uint8_t)(((uint8_t)(x))<<UART_SDTH_SDTH_SHIFT))&UART_SDTH_SDTH_MASK)
/* SDTL Bit Fields */
#define UART_SDTL_SDTL_MASK                      0xFFu
#define UART_SDTL_SDTL_SHIFT                     0
#define UART_SDTL_SDTL(x)                        (((uint8_t)(((uint8_t)(x))<<UART_SDTL_SDTL_SHIFT))&UART_SDTL_SDTL_MASK)
/* PRE Bit Fields */
#define UART_PRE_PREAMBLE_MASK                   0xFFu
#define UART_PRE_PREAMBLE_SHIFT                  0
#define UART_PRE_PREAMBLE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_PRE_PREAMBLE_SHIFT))&UART_PRE_PREAMBLE_MASK)
/* TPL Bit Fields */
#define UART_TPL_TPL_MASK                        0xFFu
#define UART_TPL_TPL_SHIFT                       0
#define UART_TPL_TPL(x)                          (((uint8_t)(((uint8_t)(x))<<UART_TPL_TPL_SHIFT))&UART_TPL_TPL_MASK)
/* IE Bit Fields */
#define UART_IE_TXFIE_MASK                       0x1u
#define UART_IE_TXFIE_SHIFT                      0
#define UART_IE_PSIE_MASK                        0x2u
#define UART_IE_PSIE_SHIFT                       1
#define UART_IE_PCTEIE_MASK                      0x4u
#define UART_IE_PCTEIE_SHIFT                     2
#define UART_IE_PTXIE_MASK                       0x8u
#define UART_IE_PTXIE_SHIFT                      3
#define UART_IE_PRXIE_MASK                       0x10u
#define UART_IE_PRXIE_SHIFT                      4
#define UART_IE_ISDIE_MASK                       0x20u
#define UART_IE_ISDIE_SHIFT                      5
#define UART_IE_WBEIE_MASK                       0x40u
#define UART_IE_WBEIE_SHIFT                      6
/* S3 Bit Fields */
#define UART_S3_TXFF_MASK                        0x1u
#define UART_S3_TXFF_SHIFT                       0
#define UART_S3_PSF_MASK                         0x2u
#define UART_S3_PSF_SHIFT                        1
#define UART_S3_PCTEF_MASK                       0x4u
#define UART_S3_PCTEF_SHIFT                      2
#define UART_S3_PTXF_MASK                        0x8u
#define UART_S3_PTXF_SHIFT                       3
#define UART_S3_PRXF_MASK                        0x10u
#define UART_S3_PRXF_SHIFT                       4
#define UART_S3_ISD_MASK                         0x20u
#define UART_S3_ISD_SHIFT                        5
#define UART_S3_WBEF_MASK                        0x40u
#define UART_S3_WBEF_SHIFT                       6
#define UART_S3_PEF_MASK                         0x80u
#define UART_S3_PEF_SHIFT                        7
/* S4 Bit Fields */
#define UART_S4_FE_MASK                          0x1u
#define UART_S4_FE_SHIFT                         0
#define UART_S4_ILCV_MASK                        0x2u
#define UART_S4_ILCV_SHIFT                       1
#define UART_S4_CDET_MASK                        0xCu
#define UART_S4_CDET_SHIFT                       2
#define UART_S4_CDET(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S4_CDET_SHIFT))&UART_S4_CDET_MASK)
#define UART_S4_INITF_MASK                       0x10u
#define UART_S4_INITF_SHIFT                      4
/* RPL Bit Fields */
#define UART_RPL_RPL_MASK                        0xFFu
#define UART_RPL_RPL_SHIFT                       0
#define UART_RPL_RPL(x)                          (((uint8_t)(((uint8_t)(x))<<UART_RPL_RPL_SHIFT))&UART_RPL_RPL_MASK)
/* RPREL Bit Fields */
#define UART_RPREL_RPREL_MASK                    0xFFu
#define UART_RPREL_RPREL_SHIFT                   0
#define UART_RPREL_RPREL(x)                      (((uint8_t)(((uint8_t)(x))<<UART_RPREL_RPREL_SHIFT))&UART_RPREL_RPREL_MASK)
/* CPW Bit Fields */
#define UART_CPW_CPW_MASK                        0xFFu
#define UART_CPW_CPW_SHIFT                       0
#define UART_CPW_CPW(x)                          (((uint8_t)(((uint8_t)(x))<<UART_CPW_CPW_SHIFT))&UART_CPW_CPW_MASK)
/* RIDT Bit Fields */
#define UART_RIDT_RIDT_MASK                      0xFFu
#define UART_RIDT_RIDT_SHIFT                     0
#define UART_RIDT_RIDT(x)                        (((uint8_t)(((uint8_t)(x))<<UART_RIDT_RIDT_SHIFT))&UART_RIDT_RIDT_MASK)
/* TIDT Bit Fields */
#define UART_TIDT_TIDT_MASK                      0xFFu
#define UART_TIDT_TIDT_SHIFT                     0
#define UART_TIDT_TIDT(x)                        (((uint8_t)(((uint8_t)(x))<<UART_TIDT_TIDT_SHIFT))&UART_TIDT_TIDT_MASK)

/**
 * @}
 */ /* end of group UART_Register_Masks */


/* UART - Peripheral instance base addresses */
/** Peripheral UART0 base pointer */
#define UART0_BASE_PTR                           ((UART_MemMapPtr)0x40027000u)
/** Peripheral UART1 base pointer */
#define UART1_BASE_PTR                           ((UART_MemMapPtr)0x40028000u)
/** Peripheral UART2 base pointer */
#define UART2_BASE_PTR                           ((UART_MemMapPtr)0x40029000u)
/** Peripheral UART3 base pointer */
#define UART3_BASE_PTR                           ((UART_MemMapPtr)0x4002A000u)
/** Peripheral UART4 base pointer */
#define UART4_BASE_PTR                           ((UART_MemMapPtr)0x400A9000u)
/** Peripheral UART5 base pointer */
#define UART5_BASE_PTR                           ((UART_MemMapPtr)0x400AA000u)
/** Array initializer of UART peripheral base pointers */
#define UART_BASE_PTRS                           { UART0_BASE_PTR, UART1_BASE_PTR, UART2_BASE_PTR, UART3_BASE_PTR, UART4_BASE_PTR, UART5_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- UART - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup UART_Register_Accessor_Macros UART - Register accessor macros
 * @{
 */


/* UART - Register instance definitions */
/* UART0 */
#define UART0_BDH                                UART_BDH_REG(UART0_BASE_PTR)
#define UART0_BDL                                UART_BDL_REG(UART0_BASE_PTR)
#define UART0_C1                                 UART_C1_REG(UART0_BASE_PTR)
#define UART0_C2                                 UART_C2_REG(UART0_BASE_PTR)
#define UART0_S1                                 UART_S1_REG(UART0_BASE_PTR)
#define UART0_S2                                 UART_S2_REG(UART0_BASE_PTR)
#define UART0_C3                                 UART_C3_REG(UART0_BASE_PTR)
#define UART0_D                                  UART_D_REG(UART0_BASE_PTR)
#define UART0_MA1                                UART_MA1_REG(UART0_BASE_PTR)
#define UART0_MA2                                UART_MA2_REG(UART0_BASE_PTR)
#define UART0_C4                                 UART_C4_REG(UART0_BASE_PTR)
#define UART0_C5                                 UART_C5_REG(UART0_BASE_PTR)
#define UART0_ED                                 UART_ED_REG(UART0_BASE_PTR)
#define UART0_MODEM                              UART_MODEM_REG(UART0_BASE_PTR)
#define UART0_IR                                 UART_IR_REG(UART0_BASE_PTR)
#define UART0_PFIFO                              UART_PFIFO_REG(UART0_BASE_PTR)
#define UART0_CFIFO                              UART_CFIFO_REG(UART0_BASE_PTR)
#define UART0_SFIFO                              UART_SFIFO_REG(UART0_BASE_PTR)
#define UART0_TWFIFO                             UART_TWFIFO_REG(UART0_BASE_PTR)
#define UART0_TCFIFO                             UART_TCFIFO_REG(UART0_BASE_PTR)
#define UART0_RWFIFO                             UART_RWFIFO_REG(UART0_BASE_PTR)
#define UART0_RCFIFO                             UART_RCFIFO_REG(UART0_BASE_PTR)
#define UART0_C7816                              UART_C7816_REG(UART0_BASE_PTR)
#define UART0_IE7816                             UART_IE7816_REG(UART0_BASE_PTR)
#define UART0_IS7816                             UART_IS7816_REG(UART0_BASE_PTR)
#define UART0_WP7816T0                           UART_WP7816_T_TYPE0_REG(UART0_BASE_PTR)
#define UART0_WP7816T1                           UART_WP7816_T_TYPE1_REG(UART0_BASE_PTR)
#define UART0_WN7816                             UART_WN7816_REG(UART0_BASE_PTR)
#define UART0_WF7816                             UART_WF7816_REG(UART0_BASE_PTR)
#define UART0_ET7816                             UART_ET7816_REG(UART0_BASE_PTR)
#define UART0_TL7816                             UART_TL7816_REG(UART0_BASE_PTR)
#define UART0_C6                                 UART_C6_REG(UART0_BASE_PTR)
#define UART0_PCTH                               UART_PCTH_REG(UART0_BASE_PTR)
#define UART0_PCTL                               UART_PCTL_REG(UART0_BASE_PTR)
#define UART0_B1T                                UART_B1T_REG(UART0_BASE_PTR)
#define UART0_SDTH                               UART_SDTH_REG(UART0_BASE_PTR)
#define UART0_SDTL                               UART_SDTL_REG(UART0_BASE_PTR)
#define UART0_PRE                                UART_PRE_REG(UART0_BASE_PTR)
#define UART0_TPL                                UART_TPL_REG(UART0_BASE_PTR)
#define UART0_IE                                 UART_IE_REG(UART0_BASE_PTR)
#define UART0_S3                                 UART_S3_REG(UART0_BASE_PTR)
#define UART0_S4                                 UART_S4_REG(UART0_BASE_PTR)
#define UART0_RPL                                UART_RPL_REG(UART0_BASE_PTR)
#define UART0_RPREL                              UART_RPREL_REG(UART0_BASE_PTR)
#define UART0_CPW                                UART_CPW_REG(UART0_BASE_PTR)
#define UART0_RIDT                               UART_RIDT_REG(UART0_BASE_PTR)
#define UART0_TIDT                               UART_TIDT_REG(UART0_BASE_PTR)
/* UART1 */
#define UART1_BDH                                UART_BDH_REG(UART1_BASE_PTR)
#define UART1_BDL                                UART_BDL_REG(UART1_BASE_PTR)
#define UART1_C1                                 UART_C1_REG(UART1_BASE_PTR)
#define UART1_C2                                 UART_C2_REG(UART1_BASE_PTR)
#define UART1_S1                                 UART_S1_REG(UART1_BASE_PTR)
#define UART1_S2                                 UART_S2_REG(UART1_BASE_PTR)
#define UART1_C3                                 UART_C3_REG(UART1_BASE_PTR)
#define UART1_D                                  UART_D_REG(UART1_BASE_PTR)
#define UART1_MA1                                UART_MA1_REG(UART1_BASE_PTR)
#define UART1_MA2                                UART_MA2_REG(UART1_BASE_PTR)
#define UART1_C4                                 UART_C4_REG(UART1_BASE_PTR)
#define UART1_C5                                 UART_C5_REG(UART1_BASE_PTR)
#define UART1_ED                                 UART_ED_REG(UART1_BASE_PTR)
#define UART1_MODEM                              UART_MODEM_REG(UART1_BASE_PTR)
#define UART1_IR                                 UART_IR_REG(UART1_BASE_PTR)
#define UART1_PFIFO                              UART_PFIFO_REG(UART1_BASE_PTR)
#define UART1_CFIFO                              UART_CFIFO_REG(UART1_BASE_PTR)
#define UART1_SFIFO                              UART_SFIFO_REG(UART1_BASE_PTR)
#define UART1_TWFIFO                             UART_TWFIFO_REG(UART1_BASE_PTR)
#define UART1_TCFIFO                             UART_TCFIFO_REG(UART1_BASE_PTR)
#define UART1_RWFIFO                             UART_RWFIFO_REG(UART1_BASE_PTR)
#define UART1_RCFIFO                             UART_RCFIFO_REG(UART1_BASE_PTR)
#define UART1_C7816                              UART_C7816_REG(UART1_BASE_PTR)
#define UART1_IE7816                             UART_IE7816_REG(UART1_BASE_PTR)
#define UART1_IS7816                             UART_IS7816_REG(UART1_BASE_PTR)
#define UART1_WP7816T0                           UART_WP7816_T_TYPE0_REG(UART1_BASE_PTR)
#define UART1_WP7816T1                           UART_WP7816_T_TYPE1_REG(UART1_BASE_PTR)
#define UART1_WN7816                             UART_WN7816_REG(UART1_BASE_PTR)
#define UART1_WF7816                             UART_WF7816_REG(UART1_BASE_PTR)
#define UART1_ET7816                             UART_ET7816_REG(UART1_BASE_PTR)
#define UART1_TL7816                             UART_TL7816_REG(UART1_BASE_PTR)
#define UART1_C6                                 UART_C6_REG(UART1_BASE_PTR)
#define UART1_PCTH                               UART_PCTH_REG(UART1_BASE_PTR)
#define UART1_PCTL                               UART_PCTL_REG(UART1_BASE_PTR)
#define UART1_B1T                                UART_B1T_REG(UART1_BASE_PTR)
#define UART1_SDTH                               UART_SDTH_REG(UART1_BASE_PTR)
#define UART1_SDTL                               UART_SDTL_REG(UART1_BASE_PTR)
#define UART1_PRE                                UART_PRE_REG(UART1_BASE_PTR)
#define UART1_TPL                                UART_TPL_REG(UART1_BASE_PTR)
#define UART1_IE                                 UART_IE_REG(UART1_BASE_PTR)
#define UART1_S3                                 UART_S3_REG(UART1_BASE_PTR)
#define UART1_S4                                 UART_S4_REG(UART1_BASE_PTR)
#define UART1_RPL                                UART_RPL_REG(UART1_BASE_PTR)
#define UART1_RPREL                              UART_RPREL_REG(UART1_BASE_PTR)
#define UART1_CPW                                UART_CPW_REG(UART1_BASE_PTR)
#define UART1_RIDT                               UART_RIDT_REG(UART1_BASE_PTR)
#define UART1_TIDT                               UART_TIDT_REG(UART1_BASE_PTR)
/* UART2 */
#define UART2_BDH                                UART_BDH_REG(UART2_BASE_PTR)
#define UART2_BDL                                UART_BDL_REG(UART2_BASE_PTR)
#define UART2_C1                                 UART_C1_REG(UART2_BASE_PTR)
#define UART2_C2                                 UART_C2_REG(UART2_BASE_PTR)
#define UART2_S1                                 UART_S1_REG(UART2_BASE_PTR)
#define UART2_S2                                 UART_S2_REG(UART2_BASE_PTR)
#define UART2_C3                                 UART_C3_REG(UART2_BASE_PTR)
#define UART2_D                                  UART_D_REG(UART2_BASE_PTR)
#define UART2_MA1                                UART_MA1_REG(UART2_BASE_PTR)
#define UART2_MA2                                UART_MA2_REG(UART2_BASE_PTR)
#define UART2_C4                                 UART_C4_REG(UART2_BASE_PTR)
#define UART2_C5                                 UART_C5_REG(UART2_BASE_PTR)
#define UART2_ED                                 UART_ED_REG(UART2_BASE_PTR)
#define UART2_MODEM                              UART_MODEM_REG(UART2_BASE_PTR)
#define UART2_IR                                 UART_IR_REG(UART2_BASE_PTR)
#define UART2_PFIFO                              UART_PFIFO_REG(UART2_BASE_PTR)
#define UART2_CFIFO                              UART_CFIFO_REG(UART2_BASE_PTR)
#define UART2_SFIFO                              UART_SFIFO_REG(UART2_BASE_PTR)
#define UART2_TWFIFO                             UART_TWFIFO_REG(UART2_BASE_PTR)
#define UART2_TCFIFO                             UART_TCFIFO_REG(UART2_BASE_PTR)
#define UART2_RWFIFO                             UART_RWFIFO_REG(UART2_BASE_PTR)
#define UART2_RCFIFO                             UART_RCFIFO_REG(UART2_BASE_PTR)
/* UART3 */
#define UART3_BDH                                UART_BDH_REG(UART3_BASE_PTR)
#define UART3_BDL                                UART_BDL_REG(UART3_BASE_PTR)
#define UART3_C1                                 UART_C1_REG(UART3_BASE_PTR)
#define UART3_C2                                 UART_C2_REG(UART3_BASE_PTR)
#define UART3_S1                                 UART_S1_REG(UART3_BASE_PTR)
#define UART3_S2                                 UART_S2_REG(UART3_BASE_PTR)
#define UART3_C3                                 UART_C3_REG(UART3_BASE_PTR)
#define UART3_D                                  UART_D_REG(UART3_BASE_PTR)
#define UART3_MA1                                UART_MA1_REG(UART3_BASE_PTR)
#define UART3_MA2                                UART_MA2_REG(UART3_BASE_PTR)
#define UART3_C4                                 UART_C4_REG(UART3_BASE_PTR)
#define UART3_C5                                 UART_C5_REG(UART3_BASE_PTR)
#define UART3_ED                                 UART_ED_REG(UART3_BASE_PTR)
#define UART3_MODEM                              UART_MODEM_REG(UART3_BASE_PTR)
#define UART3_IR                                 UART_IR_REG(UART3_BASE_PTR)
#define UART3_PFIFO                              UART_PFIFO_REG(UART3_BASE_PTR)
#define UART3_CFIFO                              UART_CFIFO_REG(UART3_BASE_PTR)
#define UART3_SFIFO                              UART_SFIFO_REG(UART3_BASE_PTR)
#define UART3_TWFIFO                             UART_TWFIFO_REG(UART3_BASE_PTR)
#define UART3_TCFIFO                             UART_TCFIFO_REG(UART3_BASE_PTR)
#define UART3_RWFIFO                             UART_RWFIFO_REG(UART3_BASE_PTR)
#define UART3_RCFIFO                             UART_RCFIFO_REG(UART3_BASE_PTR)
/* UART4 */
#define UART4_BDH                                UART_BDH_REG(UART4_BASE_PTR)
#define UART4_BDL                                UART_BDL_REG(UART4_BASE_PTR)
#define UART4_C1                                 UART_C1_REG(UART4_BASE_PTR)
#define UART4_C2                                 UART_C2_REG(UART4_BASE_PTR)
#define UART4_S1                                 UART_S1_REG(UART4_BASE_PTR)
#define UART4_S2                                 UART_S2_REG(UART4_BASE_PTR)
#define UART4_C3                                 UART_C3_REG(UART4_BASE_PTR)
#define UART4_D                                  UART_D_REG(UART4_BASE_PTR)
#define UART4_MA1                                UART_MA1_REG(UART4_BASE_PTR)
#define UART4_MA2                                UART_MA2_REG(UART4_BASE_PTR)
#define UART4_C4                                 UART_C4_REG(UART4_BASE_PTR)
#define UART4_C5                                 UART_C5_REG(UART4_BASE_PTR)
#define UART4_ED                                 UART_ED_REG(UART4_BASE_PTR)
#define UART4_MODEM                              UART_MODEM_REG(UART4_BASE_PTR)
#define UART4_IR                                 UART_IR_REG(UART4_BASE_PTR)
#define UART4_PFIFO                              UART_PFIFO_REG(UART4_BASE_PTR)
#define UART4_CFIFO                              UART_CFIFO_REG(UART4_BASE_PTR)
#define UART4_SFIFO                              UART_SFIFO_REG(UART4_BASE_PTR)
#define UART4_TWFIFO                             UART_TWFIFO_REG(UART4_BASE_PTR)
#define UART4_TCFIFO                             UART_TCFIFO_REG(UART4_BASE_PTR)
#define UART4_RWFIFO                             UART_RWFIFO_REG(UART4_BASE_PTR)
#define UART4_RCFIFO                             UART_RCFIFO_REG(UART4_BASE_PTR)
/* UART5 */
#define UART5_BDH                                UART_BDH_REG(UART5_BASE_PTR)
#define UART5_BDL                                UART_BDL_REG(UART5_BASE_PTR)
#define UART5_C1                                 UART_C1_REG(UART5_BASE_PTR)
#define UART5_C2                                 UART_C2_REG(UART5_BASE_PTR)
#define UART5_S1                                 UART_S1_REG(UART5_BASE_PTR)
#define UART5_S2                                 UART_S2_REG(UART5_BASE_PTR)
#define UART5_C3                                 UART_C3_REG(UART5_BASE_PTR)
#define UART5_D                                  UART_D_REG(UART5_BASE_PTR)
#define UART5_MA1                                UART_MA1_REG(UART5_BASE_PTR)
#define UART5_MA2                                UART_MA2_REG(UART5_BASE_PTR)
#define UART5_C4                                 UART_C4_REG(UART5_BASE_PTR)
#define UART5_C5                                 UART_C5_REG(UART5_BASE_PTR)
#define UART5_ED                                 UART_ED_REG(UART5_BASE_PTR)
#define UART5_MODEM                              UART_MODEM_REG(UART5_BASE_PTR)
#define UART5_IR                                 UART_IR_REG(UART5_BASE_PTR)
#define UART5_PFIFO                              UART_PFIFO_REG(UART5_BASE_PTR)
#define UART5_CFIFO                              UART_CFIFO_REG(UART5_BASE_PTR)
#define UART5_SFIFO                              UART_SFIFO_REG(UART5_BASE_PTR)
#define UART5_TWFIFO                             UART_TWFIFO_REG(UART5_BASE_PTR)
#define UART5_TCFIFO                             UART_TCFIFO_REG(UART5_BASE_PTR)
#define UART5_RWFIFO                             UART_RWFIFO_REG(UART5_BASE_PTR)
#define UART5_RCFIFO                             UART_RCFIFO_REG(UART5_BASE_PTR)

/**
 * @}
 */ /* end of group UART_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group UART_Peripheral */


/* ----------------------------------------------------------------------------
   -- USB
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USB_Peripheral USB
 * @{
 */

/** USB - Peripheral register structure */
typedef struct USB_MemMap {
  uint32_t ID;                                     /**< Identification register, offset: 0x0 */
  uint32_t HWGENERAL;                              /**< Hardware General, offset: 0x4 */
  uint32_t HWHOST;                                 /**< Host Hardware Parameters, offset: 0x8 */
  uint32_t HWDEVICE;                               /**< Device Hardware Parameters, offset: 0xC */
  uint32_t HWTXBUF;                                /**< TX Buffer Hardware Parameters, offset: 0x10 */
  uint32_t HWRXBUF;                                /**< RX Buffer Hardware Parameters, offset: 0x14 */
  uint8_t RESERVED_0[104];
  uint32_t GPTIMER0LD;                             /**< General Purpose Timer #0 Load, offset: 0x80 */
  uint32_t GPTIMER0CTRL;                           /**< General Purpose Timer #0 Controller, offset: 0x84 */
  uint32_t GPTIMER1LD;                             /**< General Purpose Timer #1 Load, offset: 0x88 */
  uint32_t GPTIMER1CTRL;                           /**< General Purpose Timer #1 Controller, offset: 0x8C */
  uint32_t SBUSCFG;                                /**< System Bus Config, offset: 0x90 */
  uint8_t RESERVED_1[108];
  uint8_t CAPLENGTH;                               /**< Capability Register Length, offset: 0x100 */
  uint8_t RESERVED_2[1];
  uint16_t HCIVERSION;                             /**< Host Controller Interface Version, offset: 0x102 */
  uint32_t HCSPARAMS;                              /**< Host Controller Structural Parameters, offset: 0x104 */
  uint32_t HCCPARAMS;                              /**< Host Controller Capability Parameters, offset: 0x108 */
  uint8_t RESERVED_3[20];
  uint16_t DCIVERSION;                             /**< Device Controller Interface Version, offset: 0x120 */
  uint8_t RESERVED_4[2];
  uint32_t DCCPARAMS;                              /**< Device Controller Capability Parameters, offset: 0x124 */
  uint8_t RESERVED_5[24];
  uint32_t USBCMD;                                 /**< USB Command Register, offset: 0x140 */
  uint32_t USBSTS;                                 /**< USB Status Register, offset: 0x144 */
  uint32_t USBINTR;                                /**< Interrupt Enable Register, offset: 0x148 */
  uint32_t FRINDEX;                                /**< USB Frame Index, offset: 0x14C */
  uint8_t RESERVED_6[4];
  union {                                          /* offset: 0x154 */
    uint32_t DEVICEADDR;                             /**< Device Address, offset: 0x154 */
    uint32_t PERIODICLISTBASE;                       /**< Frame List Base Address, offset: 0x154 */
  };
  union {                                          /* offset: 0x158 */
    uint32_t ASYNCLISTADDR;                          /**< Next Asynch. Address, offset: 0x158 */
    uint32_t ENDPTLISTADDR;                          /**< Endpoint List Address, offset: 0x158 */
  };
  uint8_t RESERVED_7[4];
  uint32_t BURSTSIZE;                              /**< Programmable Burst Size, offset: 0x160 */
  uint32_t TXFILLTUNING;                           /**< TX FIFO Fill Tuning, offset: 0x164 */
  uint8_t RESERVED_8[4];
  uint32_t IC_USB;                                 /**< IC_USB enable and voltage negotiation, offset: 0x16C */
  uint8_t RESERVED_9[8];
  uint32_t ENDPTNAK;                               /**< Endpoint NAK, offset: 0x178 */
  uint32_t ENDPTNAKEN;                             /**< Endpoint NAK Enable, offset: 0x17C */
  uint8_t RESERVED_10[4];
  uint32_t PORTSC1;                                /**< Port Status & Control, offset: 0x184 */
  uint8_t RESERVED_11[28];
  uint32_t OTGSC;                                  /**< On-The-Go Status & control, offset: 0x1A4 */
  uint32_t USBMODE;                                /**< USB Device Mode, offset: 0x1A8 */
  uint32_t ENDPTSETUPSTAT;                         /**< Endpoint Setup Status, offset: 0x1AC */
  uint32_t ENDPTPRIME;                             /**< Endpoint Initialization, offset: 0x1B0 */
  uint32_t ENDPTFLUSH;                             /**< Endpoint De-Initialize, offset: 0x1B4 */
  uint32_t ENDPTSTAT;                              /**< Endpoint Status, offset: 0x1B8 */
  uint32_t ENDPTCOMPLETE;                          /**< Endpoint Complete, offset: 0x1BC */
  uint32_t ENDPTCTRL0;                             /**< Endpoint Control0, offset: 0x1C0 */
  uint32_t ENDPTCTRL[5];                           /**< Endpoint Controln, array offset: 0x1C4, array step: 0x4 */
} volatile *USB_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- USB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USB_Register_Accessor_Macros USB - Register accessor macros
 * @{
 */


/* USB - Register accessors */
#define USB_ID_REG(base)                         ((base)->ID)
#define USB_HWGENERAL_REG(base)                  ((base)->HWGENERAL)
#define USB_HWHOST_REG(base)                     ((base)->HWHOST)
#define USB_HWDEVICE_REG(base)                   ((base)->HWDEVICE)
#define USB_HWTXBUF_REG(base)                    ((base)->HWTXBUF)
#define USB_HWRXBUF_REG(base)                    ((base)->HWRXBUF)
#define USB_GPTIMER0LD_REG(base)                 ((base)->GPTIMER0LD)
#define USB_GPTIMER0CTRL_REG(base)               ((base)->GPTIMER0CTRL)
#define USB_GPTIMER1LD_REG(base)                 ((base)->GPTIMER1LD)
#define USB_GPTIMER1CTRL_REG(base)               ((base)->GPTIMER1CTRL)
#define USB_SBUSCFG_REG(base)                    ((base)->SBUSCFG)
#define USB_CAPLENGTH_REG(base)                  ((base)->CAPLENGTH)
#define USB_HCIVERSION_REG(base)                 ((base)->HCIVERSION)
#define USB_HCSPARAMS_REG(base)                  ((base)->HCSPARAMS)
#define USB_HCCPARAMS_REG(base)                  ((base)->HCCPARAMS)
#define USB_DCIVERSION_REG(base)                 ((base)->DCIVERSION)
#define USB_DCCPARAMS_REG(base)                  ((base)->DCCPARAMS)
#define USB_USBCMD_REG(base)                     ((base)->USBCMD)
#define USB_USBSTS_REG(base)                     ((base)->USBSTS)
#define USB_USBINTR_REG(base)                    ((base)->USBINTR)
#define USB_FRINDEX_REG(base)                    ((base)->FRINDEX)
#define USB_DEVICEADDR_REG(base)                 ((base)->DEVICEADDR)
#define USB_PERIODICLISTBASE_REG(base)           ((base)->PERIODICLISTBASE)
#define USB_ASYNCLISTADDR_REG(base)              ((base)->ASYNCLISTADDR)
#define USB_ENDPTLISTADDR_REG(base)              ((base)->ENDPTLISTADDR)
#define USB_BURSTSIZE_REG(base)                  ((base)->BURSTSIZE)
#define USB_TXFILLTUNING_REG(base)               ((base)->TXFILLTUNING)
#define USB_IC_USB_REG(base)                     ((base)->IC_USB)
#define USB_ENDPTNAK_REG(base)                   ((base)->ENDPTNAK)
#define USB_ENDPTNAKEN_REG(base)                 ((base)->ENDPTNAKEN)
#define USB_PORTSC1_REG(base)                    ((base)->PORTSC1)
#define USB_OTGSC_REG(base)                      ((base)->OTGSC)
#define USB_USBMODE_REG(base)                    ((base)->USBMODE)
#define USB_ENDPTSETUPSTAT_REG(base)             ((base)->ENDPTSETUPSTAT)
#define USB_ENDPTPRIME_REG(base)                 ((base)->ENDPTPRIME)
#define USB_ENDPTFLUSH_REG(base)                 ((base)->ENDPTFLUSH)
#define USB_ENDPTSTAT_REG(base)                  ((base)->ENDPTSTAT)
#define USB_ENDPTCOMPLETE_REG(base)              ((base)->ENDPTCOMPLETE)
#define USB_ENDPTCTRL0_REG(base)                 ((base)->ENDPTCTRL0)
#define USB_ENDPTCTRL_REG(base,index)            ((base)->ENDPTCTRL[index])

/**
 * @}
 */ /* end of group USB_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- USB Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USB_Register_Masks USB Register Masks
 * @{
 */

/* ID Bit Fields */
#define USB_ID_ID_MASK                           0x3Fu
#define USB_ID_ID_SHIFT                          0
#define USB_ID_ID(x)                             (((uint32_t)(((uint32_t)(x))<<USB_ID_ID_SHIFT))&USB_ID_ID_MASK)
#define USB_ID_NID_MASK                          0x3F00u
#define USB_ID_NID_SHIFT                         8
#define USB_ID_NID(x)                            (((uint32_t)(((uint32_t)(x))<<USB_ID_NID_SHIFT))&USB_ID_NID_MASK)
#define USB_ID_REVISION_MASK                     0xFF0000u
#define USB_ID_REVISION_SHIFT                    16
#define USB_ID_REVISION(x)                       (((uint32_t)(((uint32_t)(x))<<USB_ID_REVISION_SHIFT))&USB_ID_REVISION_MASK)
/* HWGENERAL Bit Fields */
#define USB_HWGENERAL_PHYW_MASK                  0x30u
#define USB_HWGENERAL_PHYW_SHIFT                 4
#define USB_HWGENERAL_PHYW(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HWGENERAL_PHYW_SHIFT))&USB_HWGENERAL_PHYW_MASK)
#define USB_HWGENERAL_PHYM_MASK                  0x1C0u
#define USB_HWGENERAL_PHYM_SHIFT                 6
#define USB_HWGENERAL_PHYM(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HWGENERAL_PHYM_SHIFT))&USB_HWGENERAL_PHYM_MASK)
#define USB_HWGENERAL_SM_MASK                    0x600u
#define USB_HWGENERAL_SM_SHIFT                   9
#define USB_HWGENERAL_SM(x)                      (((uint32_t)(((uint32_t)(x))<<USB_HWGENERAL_SM_SHIFT))&USB_HWGENERAL_SM_MASK)
/* HWHOST Bit Fields */
#define USB_HWHOST_HC_MASK                       0x1u
#define USB_HWHOST_HC_SHIFT                      0
#define USB_HWHOST_NPORT_MASK                    0xEu
#define USB_HWHOST_NPORT_SHIFT                   1
#define USB_HWHOST_NPORT(x)                      (((uint32_t)(((uint32_t)(x))<<USB_HWHOST_NPORT_SHIFT))&USB_HWHOST_NPORT_MASK)
/* HWDEVICE Bit Fields */
#define USB_HWDEVICE_DC_MASK                     0x1u
#define USB_HWDEVICE_DC_SHIFT                    0
#define USB_HWDEVICE_DEVEP_MASK                  0x3Eu
#define USB_HWDEVICE_DEVEP_SHIFT                 1
#define USB_HWDEVICE_DEVEP(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HWDEVICE_DEVEP_SHIFT))&USB_HWDEVICE_DEVEP_MASK)
/* HWTXBUF Bit Fields */
#define USB_HWTXBUF_TXBURST_MASK                 0xFFu
#define USB_HWTXBUF_TXBURST_SHIFT                0
#define USB_HWTXBUF_TXBURST(x)                   (((uint32_t)(((uint32_t)(x))<<USB_HWTXBUF_TXBURST_SHIFT))&USB_HWTXBUF_TXBURST_MASK)
#define USB_HWTXBUF_TXCHANADD_MASK               0xFF0000u
#define USB_HWTXBUF_TXCHANADD_SHIFT              16
#define USB_HWTXBUF_TXCHANADD(x)                 (((uint32_t)(((uint32_t)(x))<<USB_HWTXBUF_TXCHANADD_SHIFT))&USB_HWTXBUF_TXCHANADD_MASK)
/* HWRXBUF Bit Fields */
#define USB_HWRXBUF_RXBURST_MASK                 0xFFu
#define USB_HWRXBUF_RXBURST_SHIFT                0
#define USB_HWRXBUF_RXBURST(x)                   (((uint32_t)(((uint32_t)(x))<<USB_HWRXBUF_RXBURST_SHIFT))&USB_HWRXBUF_RXBURST_MASK)
#define USB_HWRXBUF_RXADD_MASK                   0xFF00u
#define USB_HWRXBUF_RXADD_SHIFT                  8
#define USB_HWRXBUF_RXADD(x)                     (((uint32_t)(((uint32_t)(x))<<USB_HWRXBUF_RXADD_SHIFT))&USB_HWRXBUF_RXADD_MASK)
/* GPTIMER0LD Bit Fields */
#define USB_GPTIMER0LD_GPTLD_MASK                0xFFFFFFu
#define USB_GPTIMER0LD_GPTLD_SHIFT               0
#define USB_GPTIMER0LD_GPTLD(x)                  (((uint32_t)(((uint32_t)(x))<<USB_GPTIMER0LD_GPTLD_SHIFT))&USB_GPTIMER0LD_GPTLD_MASK)
/* GPTIMER0CTRL Bit Fields */
#define USB_GPTIMER0CTRL_GPTCNT_MASK             0xFFFFFFu
#define USB_GPTIMER0CTRL_GPTCNT_SHIFT            0
#define USB_GPTIMER0CTRL_GPTCNT(x)               (((uint32_t)(((uint32_t)(x))<<USB_GPTIMER0CTRL_GPTCNT_SHIFT))&USB_GPTIMER0CTRL_GPTCNT_MASK)
#define USB_GPTIMER0CTRL_GPTMODE_MASK            0x1000000u
#define USB_GPTIMER0CTRL_GPTMODE_SHIFT           24
#define USB_GPTIMER0CTRL_GPTRST_MASK             0x40000000u
#define USB_GPTIMER0CTRL_GPTRST_SHIFT            30
#define USB_GPTIMER0CTRL_GPTRUN_MASK             0x80000000u
#define USB_GPTIMER0CTRL_GPTRUN_SHIFT            31
/* GPTIMER1LD Bit Fields */
#define USB_GPTIMER1LD_GPTLD_MASK                0xFFFFFFu
#define USB_GPTIMER1LD_GPTLD_SHIFT               0
#define USB_GPTIMER1LD_GPTLD(x)                  (((uint32_t)(((uint32_t)(x))<<USB_GPTIMER1LD_GPTLD_SHIFT))&USB_GPTIMER1LD_GPTLD_MASK)
/* GPTIMER1CTRL Bit Fields */
#define USB_GPTIMER1CTRL_GPTCNT_MASK             0xFFFFFFu
#define USB_GPTIMER1CTRL_GPTCNT_SHIFT            0
#define USB_GPTIMER1CTRL_GPTCNT(x)               (((uint32_t)(((uint32_t)(x))<<USB_GPTIMER1CTRL_GPTCNT_SHIFT))&USB_GPTIMER1CTRL_GPTCNT_MASK)
#define USB_GPTIMER1CTRL_GPTMODE_MASK            0x1000000u
#define USB_GPTIMER1CTRL_GPTMODE_SHIFT           24
#define USB_GPTIMER1CTRL_GPTRST_MASK             0x40000000u
#define USB_GPTIMER1CTRL_GPTRST_SHIFT            30
#define USB_GPTIMER1CTRL_GPTRUN_MASK             0x80000000u
#define USB_GPTIMER1CTRL_GPTRUN_SHIFT            31
/* SBUSCFG Bit Fields */
#define USB_SBUSCFG_AHBBRST_MASK                 0x7u
#define USB_SBUSCFG_AHBBRST_SHIFT                0
#define USB_SBUSCFG_AHBBRST(x)                   (((uint32_t)(((uint32_t)(x))<<USB_SBUSCFG_AHBBRST_SHIFT))&USB_SBUSCFG_AHBBRST_MASK)
/* CAPLENGTH Bit Fields */
#define USB_CAPLENGTH_CAPLENGTH_MASK             0xFFu
#define USB_CAPLENGTH_CAPLENGTH_SHIFT            0
#define USB_CAPLENGTH_CAPLENGTH(x)               (((uint8_t)(((uint8_t)(x))<<USB_CAPLENGTH_CAPLENGTH_SHIFT))&USB_CAPLENGTH_CAPLENGTH_MASK)
/* HCIVERSION Bit Fields */
#define USB_HCIVERSION_HCIVERSION_MASK           0xFFFFu
#define USB_HCIVERSION_HCIVERSION_SHIFT          0
#define USB_HCIVERSION_HCIVERSION(x)             (((uint16_t)(((uint16_t)(x))<<USB_HCIVERSION_HCIVERSION_SHIFT))&USB_HCIVERSION_HCIVERSION_MASK)
/* HCSPARAMS Bit Fields */
#define USB_HCSPARAMS_N_PORTS_MASK               0xFu
#define USB_HCSPARAMS_N_PORTS_SHIFT              0
#define USB_HCSPARAMS_N_PORTS(x)                 (((uint32_t)(((uint32_t)(x))<<USB_HCSPARAMS_N_PORTS_SHIFT))&USB_HCSPARAMS_N_PORTS_MASK)
#define USB_HCSPARAMS_PPC_MASK                   0x10u
#define USB_HCSPARAMS_PPC_SHIFT                  4
#define USB_HCSPARAMS_N_PCC_MASK                 0xF00u
#define USB_HCSPARAMS_N_PCC_SHIFT                8
#define USB_HCSPARAMS_N_PCC(x)                   (((uint32_t)(((uint32_t)(x))<<USB_HCSPARAMS_N_PCC_SHIFT))&USB_HCSPARAMS_N_PCC_MASK)
#define USB_HCSPARAMS_N_CC_MASK                  0xF000u
#define USB_HCSPARAMS_N_CC_SHIFT                 12
#define USB_HCSPARAMS_N_CC(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HCSPARAMS_N_CC_SHIFT))&USB_HCSPARAMS_N_CC_MASK)
#define USB_HCSPARAMS_PI_MASK                    0x10000u
#define USB_HCSPARAMS_PI_SHIFT                   16
#define USB_HCSPARAMS_N_PTT_MASK                 0xF00000u
#define USB_HCSPARAMS_N_PTT_SHIFT                20
#define USB_HCSPARAMS_N_PTT(x)                   (((uint32_t)(((uint32_t)(x))<<USB_HCSPARAMS_N_PTT_SHIFT))&USB_HCSPARAMS_N_PTT_MASK)
#define USB_HCSPARAMS_N_TT_MASK                  0xF000000u
#define USB_HCSPARAMS_N_TT_SHIFT                 24
#define USB_HCSPARAMS_N_TT(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HCSPARAMS_N_TT_SHIFT))&USB_HCSPARAMS_N_TT_MASK)
/* HCCPARAMS Bit Fields */
#define USB_HCCPARAMS_ADC_MASK                   0x1u
#define USB_HCCPARAMS_ADC_SHIFT                  0
#define USB_HCCPARAMS_PFL_MASK                   0x2u
#define USB_HCCPARAMS_PFL_SHIFT                  1
#define USB_HCCPARAMS_ASP_MASK                   0x4u
#define USB_HCCPARAMS_ASP_SHIFT                  2
#define USB_HCCPARAMS_IST_MASK                   0xF0u
#define USB_HCCPARAMS_IST_SHIFT                  4
#define USB_HCCPARAMS_IST(x)                     (((uint32_t)(((uint32_t)(x))<<USB_HCCPARAMS_IST_SHIFT))&USB_HCCPARAMS_IST_MASK)
#define USB_HCCPARAMS_EECP_MASK                  0xFF00u
#define USB_HCCPARAMS_EECP_SHIFT                 8
#define USB_HCCPARAMS_EECP(x)                    (((uint32_t)(((uint32_t)(x))<<USB_HCCPARAMS_EECP_SHIFT))&USB_HCCPARAMS_EECP_MASK)
/* DCIVERSION Bit Fields */
#define USB_DCIVERSION_DCIVERSION_MASK           0xFFFFu
#define USB_DCIVERSION_DCIVERSION_SHIFT          0
#define USB_DCIVERSION_DCIVERSION(x)             (((uint16_t)(((uint16_t)(x))<<USB_DCIVERSION_DCIVERSION_SHIFT))&USB_DCIVERSION_DCIVERSION_MASK)
/* DCCPARAMS Bit Fields */
#define USB_DCCPARAMS_DEN_MASK                   0x1Fu
#define USB_DCCPARAMS_DEN_SHIFT                  0
#define USB_DCCPARAMS_DEN(x)                     (((uint32_t)(((uint32_t)(x))<<USB_DCCPARAMS_DEN_SHIFT))&USB_DCCPARAMS_DEN_MASK)
#define USB_DCCPARAMS_DC_MASK                    0x80u
#define USB_DCCPARAMS_DC_SHIFT                   7
#define USB_DCCPARAMS_HC_MASK                    0x100u
#define USB_DCCPARAMS_HC_SHIFT                   8
/* USBCMD Bit Fields */
#define USB_USBCMD_RS_MASK                       0x1u
#define USB_USBCMD_RS_SHIFT                      0
#define USB_USBCMD_RST_MASK                      0x2u
#define USB_USBCMD_RST_SHIFT                     1
#define USB_USBCMD_FS1_MASK                      0xCu
#define USB_USBCMD_FS1_SHIFT                     2
#define USB_USBCMD_FS1(x)                        (((uint32_t)(((uint32_t)(x))<<USB_USBCMD_FS1_SHIFT))&USB_USBCMD_FS1_MASK)
#define USB_USBCMD_PSE_MASK                      0x10u
#define USB_USBCMD_PSE_SHIFT                     4
#define USB_USBCMD_ASE_MASK                      0x20u
#define USB_USBCMD_ASE_SHIFT                     5
#define USB_USBCMD_IAA_MASK                      0x40u
#define USB_USBCMD_IAA_SHIFT                     6
#define USB_USBCMD_ASP_MASK                      0x300u
#define USB_USBCMD_ASP_SHIFT                     8
#define USB_USBCMD_ASP(x)                        (((uint32_t)(((uint32_t)(x))<<USB_USBCMD_ASP_SHIFT))&USB_USBCMD_ASP_MASK)
#define USB_USBCMD_ASPE_MASK                     0x800u
#define USB_USBCMD_ASPE_SHIFT                    11
#define USB_USBCMD_SUTW_MASK                     0x2000u
#define USB_USBCMD_SUTW_SHIFT                    13
#define USB_USBCMD_ATDTW_MASK                    0x4000u
#define USB_USBCMD_ATDTW_SHIFT                   14
#define USB_USBCMD_FS2_MASK                      0x8000u
#define USB_USBCMD_FS2_SHIFT                     15
#define USB_USBCMD_ITC_MASK                      0xFF0000u
#define USB_USBCMD_ITC_SHIFT                     16
#define USB_USBCMD_ITC(x)                        (((uint32_t)(((uint32_t)(x))<<USB_USBCMD_ITC_SHIFT))&USB_USBCMD_ITC_MASK)
/* USBSTS Bit Fields */
#define USB_USBSTS_UI_MASK                       0x1u
#define USB_USBSTS_UI_SHIFT                      0
#define USB_USBSTS_UEI_MASK                      0x2u
#define USB_USBSTS_UEI_SHIFT                     1
#define USB_USBSTS_PCI_MASK                      0x4u
#define USB_USBSTS_PCI_SHIFT                     2
#define USB_USBSTS_FRI_MASK                      0x8u
#define USB_USBSTS_FRI_SHIFT                     3
#define USB_USBSTS_SEI_MASK                      0x10u
#define USB_USBSTS_SEI_SHIFT                     4
#define USB_USBSTS_AAI_MASK                      0x20u
#define USB_USBSTS_AAI_SHIFT                     5
#define USB_USBSTS_URI_MASK                      0x40u
#define USB_USBSTS_URI_SHIFT                     6
#define USB_USBSTS_SRI_MASK                      0x80u
#define USB_USBSTS_SRI_SHIFT                     7
#define USB_USBSTS_SLI_MASK                      0x100u
#define USB_USBSTS_SLI_SHIFT                     8
#define USB_USBSTS_ULPII_MASK                    0x400u
#define USB_USBSTS_ULPII_SHIFT                   10
#define USB_USBSTS_HCH_MASK                      0x1000u
#define USB_USBSTS_HCH_SHIFT                     12
#define USB_USBSTS_RCL_MASK                      0x2000u
#define USB_USBSTS_RCL_SHIFT                     13
#define USB_USBSTS_PS_MASK                       0x4000u
#define USB_USBSTS_PS_SHIFT                      14
#define USB_USBSTS_AS_MASK                       0x8000u
#define USB_USBSTS_AS_SHIFT                      15
#define USB_USBSTS_NAKI_MASK                     0x10000u
#define USB_USBSTS_NAKI_SHIFT                    16
#define USB_USBSTS_TI0_MASK                      0x1000000u
#define USB_USBSTS_TI0_SHIFT                     24
#define USB_USBSTS_TI1_MASK                      0x2000000u
#define USB_USBSTS_TI1_SHIFT                     25
/* USBINTR Bit Fields */
#define USB_USBINTR_UE_MASK                      0x1u
#define USB_USBINTR_UE_SHIFT                     0
#define USB_USBINTR_UEE_MASK                     0x2u
#define USB_USBINTR_UEE_SHIFT                    1
#define USB_USBINTR_PCE_MASK                     0x4u
#define USB_USBINTR_PCE_SHIFT                    2
#define USB_USBINTR_FRE_MASK                     0x8u
#define USB_USBINTR_FRE_SHIFT                    3
#define USB_USBINTR_SEE_MASK                     0x10u
#define USB_USBINTR_SEE_SHIFT                    4
#define USB_USBINTR_AAE_MASK                     0x20u
#define USB_USBINTR_AAE_SHIFT                    5
#define USB_USBINTR_URE_MASK                     0x40u
#define USB_USBINTR_URE_SHIFT                    6
#define USB_USBINTR_SRE_MASK                     0x80u
#define USB_USBINTR_SRE_SHIFT                    7
#define USB_USBINTR_SLE_MASK                     0x100u
#define USB_USBINTR_SLE_SHIFT                    8
#define USB_USBINTR_ULPIE_MASK                   0x400u
#define USB_USBINTR_ULPIE_SHIFT                  10
#define USB_USBINTR_NAKE_MASK                    0x10000u
#define USB_USBINTR_NAKE_SHIFT                   16
#define USB_USBINTR_UAIE_MASK                    0x40000u
#define USB_USBINTR_UAIE_SHIFT                   18
#define USB_USBINTR_UPIE_MASK                    0x80000u
#define USB_USBINTR_UPIE_SHIFT                   19
#define USB_USBINTR_TIE0_MASK                    0x1000000u
#define USB_USBINTR_TIE0_SHIFT                   24
#define USB_USBINTR_TIE1_MASK                    0x2000000u
#define USB_USBINTR_TIE1_SHIFT                   25
/* FRINDEX Bit Fields */
#define USB_FRINDEX_FRINDEX_MASK                 0x3FFFu
#define USB_FRINDEX_FRINDEX_SHIFT                0
#define USB_FRINDEX_FRINDEX(x)                   (((uint32_t)(((uint32_t)(x))<<USB_FRINDEX_FRINDEX_SHIFT))&USB_FRINDEX_FRINDEX_MASK)
/* DEVICEADDR Bit Fields */
#define USB_DEVICEADDR_USBADRA_MASK              0x1000000u
#define USB_DEVICEADDR_USBADRA_SHIFT             24
#define USB_DEVICEADDR_USBADR_MASK               0xFE000000u
#define USB_DEVICEADDR_USBADR_SHIFT              25
#define USB_DEVICEADDR_USBADR(x)                 (((uint32_t)(((uint32_t)(x))<<USB_DEVICEADDR_USBADR_SHIFT))&USB_DEVICEADDR_USBADR_MASK)
/* PERIODICLISTBASE Bit Fields */
#define USB_PERIODICLISTBASE_BASEADR_MASK        0xFFFFF000u
#define USB_PERIODICLISTBASE_BASEADR_SHIFT       12
#define USB_PERIODICLISTBASE_BASEADR(x)          (((uint32_t)(((uint32_t)(x))<<USB_PERIODICLISTBASE_BASEADR_SHIFT))&USB_PERIODICLISTBASE_BASEADR_MASK)
/* ASYNCLISTADDR Bit Fields */
#define USB_ASYNCLISTADDR_ASYBASE_MASK           0xFFFFFFE0u
#define USB_ASYNCLISTADDR_ASYBASE_SHIFT          5
#define USB_ASYNCLISTADDR_ASYBASE(x)             (((uint32_t)(((uint32_t)(x))<<USB_ASYNCLISTADDR_ASYBASE_SHIFT))&USB_ASYNCLISTADDR_ASYBASE_MASK)
/* ENDPTLISTADDR Bit Fields */
#define USB_ENDPTLISTADDR_EPBASE_MASK            0xFFFFF800u
#define USB_ENDPTLISTADDR_EPBASE_SHIFT           11
#define USB_ENDPTLISTADDR_EPBASE(x)              (((uint32_t)(((uint32_t)(x))<<USB_ENDPTLISTADDR_EPBASE_SHIFT))&USB_ENDPTLISTADDR_EPBASE_MASK)
/* BURSTSIZE Bit Fields */
#define USB_BURSTSIZE_RXPBURST_MASK              0xFFu
#define USB_BURSTSIZE_RXPBURST_SHIFT             0
#define USB_BURSTSIZE_RXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<USB_BURSTSIZE_RXPBURST_SHIFT))&USB_BURSTSIZE_RXPBURST_MASK)
#define USB_BURSTSIZE_TXPBURST_MASK              0x1FF00u
#define USB_BURSTSIZE_TXPBURST_SHIFT             8
#define USB_BURSTSIZE_TXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<USB_BURSTSIZE_TXPBURST_SHIFT))&USB_BURSTSIZE_TXPBURST_MASK)
/* TXFILLTUNING Bit Fields */
#define USB_TXFILLTUNING_TXSCHOH_MASK            0xFFu
#define USB_TXFILLTUNING_TXSCHOH_SHIFT           0
#define USB_TXFILLTUNING_TXSCHOH(x)              (((uint32_t)(((uint32_t)(x))<<USB_TXFILLTUNING_TXSCHOH_SHIFT))&USB_TXFILLTUNING_TXSCHOH_MASK)
#define USB_TXFILLTUNING_TXSCHHEALTH_MASK        0x1F00u
#define USB_TXFILLTUNING_TXSCHHEALTH_SHIFT       8
#define USB_TXFILLTUNING_TXSCHHEALTH(x)          (((uint32_t)(((uint32_t)(x))<<USB_TXFILLTUNING_TXSCHHEALTH_SHIFT))&USB_TXFILLTUNING_TXSCHHEALTH_MASK)
#define USB_TXFILLTUNING_TXFIFOTHRES_MASK        0x3F0000u
#define USB_TXFILLTUNING_TXFIFOTHRES_SHIFT       16
#define USB_TXFILLTUNING_TXFIFOTHRES(x)          (((uint32_t)(((uint32_t)(x))<<USB_TXFILLTUNING_TXFIFOTHRES_SHIFT))&USB_TXFILLTUNING_TXFIFOTHRES_MASK)
/* IC_USB Bit Fields */
#define USB_IC_USB_IC_VDD1_MASK                  0x7u
#define USB_IC_USB_IC_VDD1_SHIFT                 0
#define USB_IC_USB_IC_VDD1(x)                    (((uint32_t)(((uint32_t)(x))<<USB_IC_USB_IC_VDD1_SHIFT))&USB_IC_USB_IC_VDD1_MASK)
#define USB_IC_USB_IC1_MASK                      0x8u
#define USB_IC_USB_IC1_SHIFT                     3
/* ENDPTNAK Bit Fields */
#define USB_ENDPTNAK_EPRN_MASK                   0x3Fu
#define USB_ENDPTNAK_EPRN_SHIFT                  0
#define USB_ENDPTNAK_EPRN(x)                     (((uint32_t)(((uint32_t)(x))<<USB_ENDPTNAK_EPRN_SHIFT))&USB_ENDPTNAK_EPRN_MASK)
#define USB_ENDPTNAK_EPTN_MASK                   0x3F0000u
#define USB_ENDPTNAK_EPTN_SHIFT                  16
#define USB_ENDPTNAK_EPTN(x)                     (((uint32_t)(((uint32_t)(x))<<USB_ENDPTNAK_EPTN_SHIFT))&USB_ENDPTNAK_EPTN_MASK)
/* ENDPTNAKEN Bit Fields */
#define USB_ENDPTNAKEN_EPRNE_MASK                0x3Fu
#define USB_ENDPTNAKEN_EPRNE_SHIFT               0
#define USB_ENDPTNAKEN_EPRNE(x)                  (((uint32_t)(((uint32_t)(x))<<USB_ENDPTNAKEN_EPRNE_SHIFT))&USB_ENDPTNAKEN_EPRNE_MASK)
#define USB_ENDPTNAKEN_EPTNE_MASK                0x3F0000u
#define USB_ENDPTNAKEN_EPTNE_SHIFT               16
#define USB_ENDPTNAKEN_EPTNE(x)                  (((uint32_t)(((uint32_t)(x))<<USB_ENDPTNAKEN_EPTNE_SHIFT))&USB_ENDPTNAKEN_EPTNE_MASK)
/* PORTSC1 Bit Fields */
#define USB_PORTSC1_CCS_MASK                     0x1u
#define USB_PORTSC1_CCS_SHIFT                    0
#define USB_PORTSC1_CSC_MASK                     0x2u
#define USB_PORTSC1_CSC_SHIFT                    1
#define USB_PORTSC1_PE_MASK                      0x4u
#define USB_PORTSC1_PE_SHIFT                     2
#define USB_PORTSC1_PEC_MASK                     0x8u
#define USB_PORTSC1_PEC_SHIFT                    3
#define USB_PORTSC1_OCA_MASK                     0x10u
#define USB_PORTSC1_OCA_SHIFT                    4
#define USB_PORTSC1_OCC_MASK                     0x20u
#define USB_PORTSC1_OCC_SHIFT                    5
#define USB_PORTSC1_FPR_MASK                     0x40u
#define USB_PORTSC1_FPR_SHIFT                    6
#define USB_PORTSC1_SUSP_MASK                    0x80u
#define USB_PORTSC1_SUSP_SHIFT                   7
#define USB_PORTSC1_PR_MASK                      0x100u
#define USB_PORTSC1_PR_SHIFT                     8
#define USB_PORTSC1_HSP_MASK                     0x200u
#define USB_PORTSC1_HSP_SHIFT                    9
#define USB_PORTSC1_LS_MASK                      0xC00u
#define USB_PORTSC1_LS_SHIFT                     10
#define USB_PORTSC1_LS(x)                        (((uint32_t)(((uint32_t)(x))<<USB_PORTSC1_LS_SHIFT))&USB_PORTSC1_LS_MASK)
#define USB_PORTSC1_PP_MASK                      0x1000u
#define USB_PORTSC1_PP_SHIFT                     12
#define USB_PORTSC1_PO_MASK                      0x2000u
#define USB_PORTSC1_PO_SHIFT                     13
#define USB_PORTSC1_PIC_MASK                     0xC000u
#define USB_PORTSC1_PIC_SHIFT                    14
#define USB_PORTSC1_PIC(x)                       (((uint32_t)(((uint32_t)(x))<<USB_PORTSC1_PIC_SHIFT))&USB_PORTSC1_PIC_MASK)
#define USB_PORTSC1_PTC_MASK                     0xF0000u
#define USB_PORTSC1_PTC_SHIFT                    16
#define USB_PORTSC1_PTC(x)                       (((uint32_t)(((uint32_t)(x))<<USB_PORTSC1_PTC_SHIFT))&USB_PORTSC1_PTC_MASK)
#define USB_PORTSC1_WKCN_MASK                    0x100000u
#define USB_PORTSC1_WKCN_SHIFT                   20
#define USB_PORTSC1_WKDC_MASK                    0x200000u
#define USB_PORTSC1_WKDC_SHIFT                   21
#define USB_PORTSC1_WKOC_MASK                    0x400000u
#define USB_PORTSC1_WKOC_SHIFT                   22
#define USB_PORTSC1_PHCD_MASK                    0x800000u
#define USB_PORTSC1_PHCD_SHIFT                   23
#define USB_PORTSC1_PFSC_MASK                    0x1000000u
#define USB_PORTSC1_PFSC_SHIFT                   24
#define USB_PORTSC1_PTS1_MASK                    0x2000000u
#define USB_PORTSC1_PTS1_SHIFT                   25
#define USB_PORTSC1_PSPD_MASK                    0xC000000u
#define USB_PORTSC1_PSPD_SHIFT                   26
#define USB_PORTSC1_PSPD(x)                      (((uint32_t)(((uint32_t)(x))<<USB_PORTSC1_PSPD_SHIFT))&USB_PORTSC1_PSPD_MASK)
#define USB_PORTSC1_PTW_MASK                     0x10000000u
#define USB_PORTSC1_PTW_SHIFT                    28
#define USB_PORTSC1_STS_MASK                     0x20000000u
#define USB_PORTSC1_STS_SHIFT                    29
#define USB_PORTSC1_PTS2_MASK                    0xC0000000u
#define USB_PORTSC1_PTS2_SHIFT                   30
#define USB_PORTSC1_PTS2(x)                      (((uint32_t)(((uint32_t)(x))<<USB_PORTSC1_PTS2_SHIFT))&USB_PORTSC1_PTS2_MASK)
/* OTGSC Bit Fields */
#define USB_OTGSC_VD_MASK                        0x1u
#define USB_OTGSC_VD_SHIFT                       0
#define USB_OTGSC_OT_MASK                        0x8u
#define USB_OTGSC_OT_SHIFT                       3
#define USB_OTGSC_IDPU_MASK                      0x20u
#define USB_OTGSC_IDPU_SHIFT                     5
#define USB_OTGSC_ID_MASK                        0x100u
#define USB_OTGSC_ID_SHIFT                       8
#define USB_OTGSC_AVV_MASK                       0x200u
#define USB_OTGSC_AVV_SHIFT                      9
#define USB_OTGSC_ASV_MASK                       0x400u
#define USB_OTGSC_ASV_SHIFT                      10
#define USB_OTGSC_BSV_MASK                       0x800u
#define USB_OTGSC_BSV_SHIFT                      11
#define USB_OTGSC_BSE_MASK                       0x1000u
#define USB_OTGSC_BSE_SHIFT                      12
#define USB_OTGSC_1msT_MASK                      0x2000u
#define USB_OTGSC_1msT_SHIFT                     13
#define USB_OTGSC_DPS_MASK                       0x4000u
#define USB_OTGSC_DPS_SHIFT                      14
#define USB_OTGSC_IDIS_MASK                      0x10000u
#define USB_OTGSC_IDIS_SHIFT                     16
#define USB_OTGSC_AVVIS_MASK                     0x20000u
#define USB_OTGSC_AVVIS_SHIFT                    17
#define USB_OTGSC_ASVIS_MASK                     0x40000u
#define USB_OTGSC_ASVIS_SHIFT                    18
#define USB_OTGSC_BSVIS_MASK                     0x80000u
#define USB_OTGSC_BSVIS_SHIFT                    19
#define USB_OTGSC_BSEIS_MASK                     0x100000u
#define USB_OTGSC_BSEIS_SHIFT                    20
#define USB_OTGSC_1MSS_MASK                      0x200000u
#define USB_OTGSC_1MSS_SHIFT                     21
#define USB_OTGSC_DPIS_MASK                      0x400000u
#define USB_OTGSC_DPIS_SHIFT                     22
#define USB_OTGSC_IDIE_MASK                      0x1000000u
#define USB_OTGSC_IDIE_SHIFT                     24
#define USB_OTGSC_AVVIE_MASK                     0x2000000u
#define USB_OTGSC_AVVIE_SHIFT                    25
#define USB_OTGSC_ASVIE_MASK                     0x4000000u
#define USB_OTGSC_ASVIE_SHIFT                    26
#define USB_OTGSC_BSVIE_MASK                     0x8000000u
#define USB_OTGSC_BSVIE_SHIFT                    27
#define USB_OTGSC_BSEIE_MASK                     0x10000000u
#define USB_OTGSC_BSEIE_SHIFT                    28
#define USB_OTGSC_1MSSE_MASK                     0x20000000u
#define USB_OTGSC_1MSSE_SHIFT                    29
#define USB_OTGSC_DPIE_MASK                      0x40000000u
#define USB_OTGSC_DPIE_SHIFT                     30
/* USBMODE Bit Fields */
#define USB_USBMODE_CM_MASK                      0x3u
#define USB_USBMODE_CM_SHIFT                     0
#define USB_USBMODE_CM(x)                        (((uint32_t)(((uint32_t)(x))<<USB_USBMODE_CM_SHIFT))&USB_USBMODE_CM_MASK)
#define USB_USBMODE_ES_MASK                      0x4u
#define USB_USBMODE_ES_SHIFT                     2
#define USB_USBMODE_SLOM_MASK                    0x8u
#define USB_USBMODE_SLOM_SHIFT                   3
#define USB_USBMODE_SDIS_MASK                    0x10u
#define USB_USBMODE_SDIS_SHIFT                   4
/* ENDPTSETUPSTAT Bit Fields */
#define USB_ENDPTSETUPSTAT_ENDPTSETUPSTAT_MASK   0xFFFFu
#define USB_ENDPTSETUPSTAT_ENDPTSETUPSTAT_SHIFT  0
#define USB_ENDPTSETUPSTAT_ENDPTSETUPSTAT(x)     (((uint32_t)(((uint32_t)(x))<<USB_ENDPTSETUPSTAT_ENDPTSETUPSTAT_SHIFT))&USB_ENDPTSETUPSTAT_ENDPTSETUPSTAT_MASK)
/* ENDPTPRIME Bit Fields */
#define USB_ENDPTPRIME_PERB_MASK                 0x3Fu
#define USB_ENDPTPRIME_PERB_SHIFT                0
#define USB_ENDPTPRIME_PERB(x)                   (((uint32_t)(((uint32_t)(x))<<USB_ENDPTPRIME_PERB_SHIFT))&USB_ENDPTPRIME_PERB_MASK)
#define USB_ENDPTPRIME_PETB_MASK                 0x3F0000u
#define USB_ENDPTPRIME_PETB_SHIFT                16
#define USB_ENDPTPRIME_PETB(x)                   (((uint32_t)(((uint32_t)(x))<<USB_ENDPTPRIME_PETB_SHIFT))&USB_ENDPTPRIME_PETB_MASK)
/* ENDPTFLUSH Bit Fields */
#define USB_ENDPTFLUSH_FERB_MASK                 0x3Fu
#define USB_ENDPTFLUSH_FERB_SHIFT                0
#define USB_ENDPTFLUSH_FERB(x)                   (((uint32_t)(((uint32_t)(x))<<USB_ENDPTFLUSH_FERB_SHIFT))&USB_ENDPTFLUSH_FERB_MASK)
#define USB_ENDPTFLUSH_FETB_MASK                 0x3F0000u
#define USB_ENDPTFLUSH_FETB_SHIFT                16
#define USB_ENDPTFLUSH_FETB(x)                   (((uint32_t)(((uint32_t)(x))<<USB_ENDPTFLUSH_FETB_SHIFT))&USB_ENDPTFLUSH_FETB_MASK)
/* ENDPTSTAT Bit Fields */
#define USB_ENDPTSTAT_ERBR_MASK                  0x3Fu
#define USB_ENDPTSTAT_ERBR_SHIFT                 0
#define USB_ENDPTSTAT_ERBR(x)                    (((uint32_t)(((uint32_t)(x))<<USB_ENDPTSTAT_ERBR_SHIFT))&USB_ENDPTSTAT_ERBR_MASK)
#define USB_ENDPTSTAT_ETBR_MASK                  0x3F0000u
#define USB_ENDPTSTAT_ETBR_SHIFT                 16
#define USB_ENDPTSTAT_ETBR(x)                    (((uint32_t)(((uint32_t)(x))<<USB_ENDPTSTAT_ETBR_SHIFT))&USB_ENDPTSTAT_ETBR_MASK)
/* ENDPTCOMPLETE Bit Fields */
#define USB_ENDPTCOMPLETE_ERCE_MASK              0x3Fu
#define USB_ENDPTCOMPLETE_ERCE_SHIFT             0
#define USB_ENDPTCOMPLETE_ERCE(x)                (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCOMPLETE_ERCE_SHIFT))&USB_ENDPTCOMPLETE_ERCE_MASK)
#define USB_ENDPTCOMPLETE_ETCE_MASK              0x3F0000u
#define USB_ENDPTCOMPLETE_ETCE_SHIFT             16
#define USB_ENDPTCOMPLETE_ETCE(x)                (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCOMPLETE_ETCE_SHIFT))&USB_ENDPTCOMPLETE_ETCE_MASK)
/* ENDPTCTRL0 Bit Fields */
#define USB_ENDPTCTRL0_RXS_MASK                  0x1u
#define USB_ENDPTCTRL0_RXS_SHIFT                 0
#define USB_ENDPTCTRL0_RXT_MASK                  0xCu
#define USB_ENDPTCTRL0_RXT_SHIFT                 2
#define USB_ENDPTCTRL0_RXT(x)                    (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCTRL0_RXT_SHIFT))&USB_ENDPTCTRL0_RXT_MASK)
#define USB_ENDPTCTRL0_RXE_MASK                  0x80u
#define USB_ENDPTCTRL0_RXE_SHIFT                 7
#define USB_ENDPTCTRL0_TXS_MASK                  0x10000u
#define USB_ENDPTCTRL0_TXS_SHIFT                 16
#define USB_ENDPTCTRL0_TXT_MASK                  0xC0000u
#define USB_ENDPTCTRL0_TXT_SHIFT                 18
#define USB_ENDPTCTRL0_TXT(x)                    (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCTRL0_TXT_SHIFT))&USB_ENDPTCTRL0_TXT_MASK)
#define USB_ENDPTCTRL0_TXE_MASK                  0x800000u
#define USB_ENDPTCTRL0_TXE_SHIFT                 23
/* ENDPTCTRL Bit Fields */
#define USB_ENDPTCTRL_RXS_MASK                   0x1u
#define USB_ENDPTCTRL_RXS_SHIFT                  0
#define USB_ENDPTCTRL_RXD_MASK                   0x2u
#define USB_ENDPTCTRL_RXD_SHIFT                  1
#define USB_ENDPTCTRL_RXT_MASK                   0xCu
#define USB_ENDPTCTRL_RXT_SHIFT                  2
#define USB_ENDPTCTRL_RXT(x)                     (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCTRL_RXT_SHIFT))&USB_ENDPTCTRL_RXT_MASK)
#define USB_ENDPTCTRL_RXI_MASK                   0x20u
#define USB_ENDPTCTRL_RXI_SHIFT                  5
#define USB_ENDPTCTRL_RXR_MASK                   0x40u
#define USB_ENDPTCTRL_RXR_SHIFT                  6
#define USB_ENDPTCTRL_RXE_MASK                   0x80u
#define USB_ENDPTCTRL_RXE_SHIFT                  7
#define USB_ENDPTCTRL_TXS_MASK                   0x10000u
#define USB_ENDPTCTRL_TXS_SHIFT                  16
#define USB_ENDPTCTRL_TXD_MASK                   0x20000u
#define USB_ENDPTCTRL_TXD_SHIFT                  17
#define USB_ENDPTCTRL_TXT_MASK                   0xC0000u
#define USB_ENDPTCTRL_TXT_SHIFT                  18
#define USB_ENDPTCTRL_TXT(x)                     (((uint32_t)(((uint32_t)(x))<<USB_ENDPTCTRL_TXT_SHIFT))&USB_ENDPTCTRL_TXT_MASK)
#define USB_ENDPTCTRL_TXI_MASK                   0x200000u
#define USB_ENDPTCTRL_TXI_SHIFT                  21
#define USB_ENDPTCTRL_TXR_MASK                   0x400000u
#define USB_ENDPTCTRL_TXR_SHIFT                  22
#define USB_ENDPTCTRL_TXE_MASK                   0x800000u
#define USB_ENDPTCTRL_TXE_SHIFT                  23

/**
 * @}
 */ /* end of group USB_Register_Masks */


/* USB - Peripheral instance base addresses */
/** Peripheral USB0 base pointer */
#define USB0_BASE_PTR                            ((USB_MemMapPtr)0x40034000u)
/** Peripheral USB1 base pointer */
#define USB1_BASE_PTR                            ((USB_MemMapPtr)0x400B4000u)
/** Array initializer of USB peripheral base pointers */
#define USB_BASE_PTRS                            { USB0_BASE_PTR, USB1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- USB - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USB_Register_Accessor_Macros USB - Register accessor macros
 * @{
 */


/* USB - Register instance definitions */
/* USB0 */
#define USB0_ID                                  USB_ID_REG(USB0_BASE_PTR)
#define USB0_HWGENERAL                           USB_HWGENERAL_REG(USB0_BASE_PTR)
#define USB0_HWHOST                              USB_HWHOST_REG(USB0_BASE_PTR)
#define USB0_HWDEVICE                            USB_HWDEVICE_REG(USB0_BASE_PTR)
#define USB0_HWTXBUF                             USB_HWTXBUF_REG(USB0_BASE_PTR)
#define USB0_HWRXBUF                             USB_HWRXBUF_REG(USB0_BASE_PTR)
#define USB0_GPTIMER0LD                          USB_GPTIMER0LD_REG(USB0_BASE_PTR)
#define USB0_GPTIMER0CTRL                        USB_GPTIMER0CTRL_REG(USB0_BASE_PTR)
#define USB0_GPTIMER1LD                          USB_GPTIMER1LD_REG(USB0_BASE_PTR)
#define USB0_GPTIMER1CTRL                        USB_GPTIMER1CTRL_REG(USB0_BASE_PTR)
#define USB0_SBUSCFG                             USB_SBUSCFG_REG(USB0_BASE_PTR)
#define USB0_CAPLENGTH                           USB_CAPLENGTH_REG(USB0_BASE_PTR)
#define USB0_HCIVERSION                          USB_HCIVERSION_REG(USB0_BASE_PTR)
#define USB0_HCSPARAMS                           USB_HCSPARAMS_REG(USB0_BASE_PTR)
#define USB0_HCCPARAMS                           USB_HCCPARAMS_REG(USB0_BASE_PTR)
#define USB0_DCIVERSION                          USB_DCIVERSION_REG(USB0_BASE_PTR)
#define USB0_DCCPARAMS                           USB_DCCPARAMS_REG(USB0_BASE_PTR)
#define USB0_USBCMD                              USB_USBCMD_REG(USB0_BASE_PTR)
#define USB0_USBSTS                              USB_USBSTS_REG(USB0_BASE_PTR)
#define USB0_USBINTR                             USB_USBINTR_REG(USB0_BASE_PTR)
#define USB0_FRINDEX                             USB_FRINDEX_REG(USB0_BASE_PTR)
#define USB0_DEVICEADDR                          USB_DEVICEADDR_REG(USB0_BASE_PTR)
#define USB0_PERIODICLISTBASE                    USB_PERIODICLISTBASE_REG(USB0_BASE_PTR)
#define USB0_ASYNCLISTADDR                       USB_ASYNCLISTADDR_REG(USB0_BASE_PTR)
#define USB0_ENDPTLISTADDR                       USB_ENDPTLISTADDR_REG(USB0_BASE_PTR)
#define USB0_BURSTSIZE                           USB_BURSTSIZE_REG(USB0_BASE_PTR)
#define USB0_TXFILLTUNING                        USB_TXFILLTUNING_REG(USB0_BASE_PTR)
#define USB0_IC_USB                              USB_IC_USB_REG(USB0_BASE_PTR)
#define USB0_ENDPTNAK                            USB_ENDPTNAK_REG(USB0_BASE_PTR)
#define USB0_ENDPTNAKEN                          USB_ENDPTNAKEN_REG(USB0_BASE_PTR)
#define USB0_PORTSC1                             USB_PORTSC1_REG(USB0_BASE_PTR)
#define USB0_OTGSC                               USB_OTGSC_REG(USB0_BASE_PTR)
#define USB0_USBMODE                             USB_USBMODE_REG(USB0_BASE_PTR)
#define USB0_ENDPTSETUPSTAT                      USB_ENDPTSETUPSTAT_REG(USB0_BASE_PTR)
#define USB0_ENDPTPRIME                          USB_ENDPTPRIME_REG(USB0_BASE_PTR)
#define USB0_ENDPTFLUSH                          USB_ENDPTFLUSH_REG(USB0_BASE_PTR)
#define USB0_ENDPTSTAT                           USB_ENDPTSTAT_REG(USB0_BASE_PTR)
#define USB0_ENDPTCOMPLETE                       USB_ENDPTCOMPLETE_REG(USB0_BASE_PTR)
#define USB0_ENDPTCTRL0                          USB_ENDPTCTRL0_REG(USB0_BASE_PTR)
#define USB0_ENDPTCTRL1                          USB_ENDPTCTRL_REG(USB0_BASE_PTR,0)
#define USB0_ENDPTCTRL2                          USB_ENDPTCTRL_REG(USB0_BASE_PTR,1)
#define USB0_ENDPTCTRL3                          USB_ENDPTCTRL_REG(USB0_BASE_PTR,2)
#define USB0_ENDPTCTRL4                          USB_ENDPTCTRL_REG(USB0_BASE_PTR,3)
#define USB0_ENDPTCTRL5                          USB_ENDPTCTRL_REG(USB0_BASE_PTR,4)
/* USB1 */
#define USB1_ID                                  USB_ID_REG(USB1_BASE_PTR)
#define USB1_HWGENERAL                           USB_HWGENERAL_REG(USB1_BASE_PTR)
#define USB1_HWHOST                              USB_HWHOST_REG(USB1_BASE_PTR)
#define USB1_HWDEVICE                            USB_HWDEVICE_REG(USB1_BASE_PTR)
#define USB1_HWTXBUF                             USB_HWTXBUF_REG(USB1_BASE_PTR)
#define USB1_HWRXBUF                             USB_HWRXBUF_REG(USB1_BASE_PTR)
#define USB1_GPTIMER0LD                          USB_GPTIMER0LD_REG(USB1_BASE_PTR)
#define USB1_GPTIMER0CTRL                        USB_GPTIMER0CTRL_REG(USB1_BASE_PTR)
#define USB1_GPTIMER1LD                          USB_GPTIMER1LD_REG(USB1_BASE_PTR)
#define USB1_GPTIMER1CTRL                        USB_GPTIMER1CTRL_REG(USB1_BASE_PTR)
#define USB1_SBUSCFG                             USB_SBUSCFG_REG(USB1_BASE_PTR)
#define USB1_CAPLENGTH                           USB_CAPLENGTH_REG(USB1_BASE_PTR)
#define USB1_HCIVERSION                          USB_HCIVERSION_REG(USB1_BASE_PTR)
#define USB1_HCSPARAMS                           USB_HCSPARAMS_REG(USB1_BASE_PTR)
#define USB1_HCCPARAMS                           USB_HCCPARAMS_REG(USB1_BASE_PTR)
#define USB1_DCIVERSION                          USB_DCIVERSION_REG(USB1_BASE_PTR)
#define USB1_DCCPARAMS                           USB_DCCPARAMS_REG(USB1_BASE_PTR)
#define USB1_USBCMD                              USB_USBCMD_REG(USB1_BASE_PTR)
#define USB1_USBSTS                              USB_USBSTS_REG(USB1_BASE_PTR)
#define USB1_USBINTR                             USB_USBINTR_REG(USB1_BASE_PTR)
#define USB1_FRINDEX                             USB_FRINDEX_REG(USB1_BASE_PTR)
#define USB1_DEVICEADDR                          USB_DEVICEADDR_REG(USB1_BASE_PTR)
#define USB1_PERIODICLISTBASE                    USB_PERIODICLISTBASE_REG(USB1_BASE_PTR)
#define USB1_ASYNCLISTADDR                       USB_ASYNCLISTADDR_REG(USB1_BASE_PTR)
#define USB1_ENDPTLISTADDR                       USB_ENDPTLISTADDR_REG(USB1_BASE_PTR)
#define USB1_BURSTSIZE                           USB_BURSTSIZE_REG(USB1_BASE_PTR)
#define USB1_TXFILLTUNING                        USB_TXFILLTUNING_REG(USB1_BASE_PTR)
#define USB1_IC_USB                              USB_IC_USB_REG(USB1_BASE_PTR)
#define USB1_ENDPTNAK                            USB_ENDPTNAK_REG(USB1_BASE_PTR)
#define USB1_ENDPTNAKEN                          USB_ENDPTNAKEN_REG(USB1_BASE_PTR)
#define USB1_PORTSC1                             USB_PORTSC1_REG(USB1_BASE_PTR)
#define USB1_OTGSC                               USB_OTGSC_REG(USB1_BASE_PTR)
#define USB1_USBMODE                             USB_USBMODE_REG(USB1_BASE_PTR)
#define USB1_ENDPTSETUPSTAT                      USB_ENDPTSETUPSTAT_REG(USB1_BASE_PTR)
#define USB1_ENDPTPRIME                          USB_ENDPTPRIME_REG(USB1_BASE_PTR)
#define USB1_ENDPTFLUSH                          USB_ENDPTFLUSH_REG(USB1_BASE_PTR)
#define USB1_ENDPTSTAT                           USB_ENDPTSTAT_REG(USB1_BASE_PTR)
#define USB1_ENDPTCOMPLETE                       USB_ENDPTCOMPLETE_REG(USB1_BASE_PTR)
#define USB1_ENDPTCTRL0                          USB_ENDPTCTRL0_REG(USB1_BASE_PTR)
#define USB1_ENDPTCTRL1                          USB_ENDPTCTRL_REG(USB1_BASE_PTR,0)
#define USB1_ENDPTCTRL2                          USB_ENDPTCTRL_REG(USB1_BASE_PTR,1)
#define USB1_ENDPTCTRL3                          USB_ENDPTCTRL_REG(USB1_BASE_PTR,2)
#define USB1_ENDPTCTRL4                          USB_ENDPTCTRL_REG(USB1_BASE_PTR,3)
#define USB1_ENDPTCTRL5                          USB_ENDPTCTRL_REG(USB1_BASE_PTR,4)

/* USB - Register array accessors */
#define USB0_ENDPTCTRL(index)                    USB_ENDPTCTRL_REG(USB0_BASE_PTR,index)
#define USB1_ENDPTCTRL(index)                    USB_ENDPTCTRL_REG(USB1_BASE_PTR,index)

/**
 * @}
 */ /* end of group USB_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group USB_Peripheral */


/* ----------------------------------------------------------------------------
   -- USBC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBC_Peripheral USBC
 * @{
 */

/** USBC - Peripheral register structure */
typedef struct USBC_MemMap {
  uint8_t RESERVED_0[2048];
  uint32_t CTRL;                                   /**< USB OTG Control Register, offset: 0x800 */
  uint8_t RESERVED_1[20];
  uint32_t PHY;                                    /**< UTMI PHY Control Register, offset: 0x818 */
} volatile *USBC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- USBC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBC_Register_Accessor_Macros USBC - Register accessor macros
 * @{
 */


/* USBC - Register accessors */
#define USBC_CTRL_REG(base)                      ((base)->CTRL)
#define USBC_PHY_REG(base)                       ((base)->PHY)

/**
 * @}
 */ /* end of group USBC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- USBC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBC_Register_Masks USBC Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define USBC_CTRL_OVER_CUR_DIS_MASK              0x80u
#define USBC_CTRL_OVER_CUR_DIS_SHIFT             7
#define USBC_CTRL_OVER_CUR_POL_MASK              0x100u
#define USBC_CTRL_OVER_CUR_POL_SHIFT             8
#define USBC_CTRL_PM_MASK                        0x200u
#define USBC_CTRL_PM_SHIFT                       9
#define USBC_CTRL_WIE_MASK                       0x400u
#define USBC_CTRL_WIE_SHIFT                      10
#define USBC_CTRL_RESET_MASK                     0x800u
#define USBC_CTRL_RESET_SHIFT                    11
#define USBC_CTRL_SUSPENDM_MASK                  0x1000u
#define USBC_CTRL_SUSPENDM_SHIFT                 12
#define USBC_CTRL_UTMI_ON_CLOCK_MASK             0x2000u
#define USBC_CTRL_UTMI_ON_CLOCK_SHIFT            13
#define USBC_CTRL_WKUP_SW_EN_MASK                0x4000u
#define USBC_CTRL_WKUP_SW_EN_SHIFT               14
#define USBC_CTRL_WKUP_SW_MASK                   0x8000u
#define USBC_CTRL_WKUP_SW_SHIFT                  15
#define USBC_CTRL_WKUP_VBUS_EN_MASK              0x20000u
#define USBC_CTRL_WKUP_VBUS_EN_SHIFT             17
#define USBC_CTRL_VBUS_CH_STAT_MASK              0x1000000u
#define USBC_CTRL_VBUS_CH_STAT_SHIFT             24
#define USBC_CTRL_VBUS_CH_INT_MASK_MASK          0x2000000u
#define USBC_CTRL_VBUS_CH_INT_MASK_SHIFT         25
#define USBC_CTRL_WIR_MASK                       0x80000000u
#define USBC_CTRL_WIR_SHIFT                      31
/* PHY Bit Fields */
#define USBC_PHY_CHRGDET_INT_FLG_MASK            0x1u
#define USBC_PHY_CHRGDET_INT_FLG_SHIFT           0
#define USBC_PHY_CHRGDET_INT_EN_MASK             0x2u
#define USBC_PHY_CHRGDET_INT_EN_SHIFT            1
#define USBC_PHY_CHRGDET_MASK                    0x4u
#define USBC_PHY_CHRGDET_SHIFT                   2
#define USBC_PHY_UTMI_CLK_VLD_MASK               0x80000000u
#define USBC_PHY_UTMI_CLK_VLD_SHIFT              31

/**
 * @}
 */ /* end of group USBC_Register_Masks */


/* USBC - Peripheral instance base addresses */
/** Peripheral USBC0 base pointer */
#define USBC0_BASE_PTR                           ((USBC_MemMapPtr)0x40034000u)
/** Peripheral USBC1 base pointer */
#define USBC1_BASE_PTR                           ((USBC_MemMapPtr)0x400B4000u)
/** Array initializer of USBC peripheral base pointers */
#define USBC_BASE_PTRS                           { USBC0_BASE_PTR, USBC1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- USBC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBC_Register_Accessor_Macros USBC - Register accessor macros
 * @{
 */


/* USBC - Register instance definitions */
/* USBC0 */
#define USBC0_CTRL                               USBC_CTRL_REG(USBC0_BASE_PTR)
#define USBC0_PHY                                USBC_PHY_REG(USBC0_BASE_PTR)
/* USBC1 */
#define USBC1_CTRL                               USBC_CTRL_REG(USBC1_BASE_PTR)
#define USBC1_PHY                                USBC_PHY_REG(USBC1_BASE_PTR)

/**
 * @}
 */ /* end of group USBC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group USBC_Peripheral */


/* ----------------------------------------------------------------------------
   -- USBPHY
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBPHY_Peripheral USBPHY
 * @{
 */

/** USBPHY - Peripheral register structure */
typedef struct USBPHY_MemMap {
  uint32_t PWD[4];                                 /**< USB PHY Power-Down Register, array offset: 0x0, array step: 0x4 */
  uint32_t TX;                                     /**< USB PHY Transmitter Control Register, offset: 0x10 */
  uint8_t RESERVED_0[12];
  uint32_t RX[4];                                  /**< USB PHY Receiver Control Register, array offset: 0x20, array step: 0x4 */
  uint32_t CTRL[4];                                /**< USB PHY General Control Register, array offset: 0x30, array step: 0x4 */
  uint32_t STATUS;                                 /**< USB PHY Status Register, offset: 0x40 */
  uint8_t RESERVED_1[12];
  uint32_t DEBUG[4];                               /**< USB PHY Debug Register, array offset: 0x50, array step: 0x4 */
  uint32_t DEBUG0_STATUS;                          /**< UTMI Debug Status Register 0, offset: 0x60 */
  uint8_t RESERVED_2[12];
  uint32_t DEBUG1[4];                              /**< UTMI Debug Status Register 1, array offset: 0x70, array step: 0x4 */
  uint32_t VERSION;                                /**< UTMI RTL Version, offset: 0x80 */
  uint8_t RESERVED_3[12];
  uint32_t IP[4];                                  /**< USB PHY IP Block Register, array offset: 0x90, array step: 0x4 */
} volatile *USBPHY_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- USBPHY - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBPHY_Register_Accessor_Macros USBPHY - Register accessor macros
 * @{
 */


/* USBPHY - Register accessors */
#define USBPHY_PWD_REG(base,index)               ((base)->PWD[index])
#define USBPHY_TX_REG(base)                      ((base)->TX)
#define USBPHY_RX_REG(base,index)                ((base)->RX[index])
#define USBPHY_CTRL_REG(base,index)              ((base)->CTRL[index])
#define USBPHY_STATUS_REG(base)                  ((base)->STATUS)
#define USBPHY_DEBUG_REG(base,index)             ((base)->DEBUG[index])
#define USBPHY_DEBUG0_STATUS_REG(base)           ((base)->DEBUG0_STATUS)
#define USBPHY_DEBUG1_REG(base,index)            ((base)->DEBUG1[index])
#define USBPHY_VERSION_REG(base)                 ((base)->VERSION)
#define USBPHY_IP_REG(base,index)                ((base)->IP[index])

/**
 * @}
 */ /* end of group USBPHY_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- USBPHY Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBPHY_Register_Masks USBPHY Register Masks
 * @{
 */

/* PWD Bit Fields */
#define USBPHY_PWD_RSVD0_MASK                    0x3FFu
#define USBPHY_PWD_RSVD0_SHIFT                   0
#define USBPHY_PWD_RSVD0(x)                      (((uint32_t)(((uint32_t)(x))<<USBPHY_PWD_RSVD0_SHIFT))&USBPHY_PWD_RSVD0_MASK)
#define USBPHY_PWD_TXPWDFS_MASK                  0x400u
#define USBPHY_PWD_TXPWDFS_SHIFT                 10
#define USBPHY_PWD_TXPWDIBIAS_MASK               0x800u
#define USBPHY_PWD_TXPWDIBIAS_SHIFT              11
#define USBPHY_PWD_TXPWDV2I_MASK                 0x1000u
#define USBPHY_PWD_TXPWDV2I_SHIFT                12
#define USBPHY_PWD_RSVD1_MASK                    0x1E000u
#define USBPHY_PWD_RSVD1_SHIFT                   13
#define USBPHY_PWD_RSVD1(x)                      (((uint32_t)(((uint32_t)(x))<<USBPHY_PWD_RSVD1_SHIFT))&USBPHY_PWD_RSVD1_MASK)
#define USBPHY_PWD_RXPWDENV_MASK                 0x20000u
#define USBPHY_PWD_RXPWDENV_SHIFT                17
#define USBPHY_PWD_RXPWD1PT1_MASK                0x40000u
#define USBPHY_PWD_RXPWD1PT1_SHIFT               18
#define USBPHY_PWD_RXPWDDIFF_MASK                0x80000u
#define USBPHY_PWD_RXPWDDIFF_SHIFT               19
#define USBPHY_PWD_RXPWDRX_MASK                  0x100000u
#define USBPHY_PWD_RXPWDRX_SHIFT                 20
#define USBPHY_PWD_RSVD2_MASK                    0xFFE00000u
#define USBPHY_PWD_RSVD2_SHIFT                   21
#define USBPHY_PWD_RSVD2(x)                      (((uint32_t)(((uint32_t)(x))<<USBPHY_PWD_RSVD2_SHIFT))&USBPHY_PWD_RSVD2_MASK)
/* TX Bit Fields */
#define USBPHY_TX_D_CAL_MASK                     0xFu
#define USBPHY_TX_D_CAL_SHIFT                    0
#define USBPHY_TX_D_CAL(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_D_CAL_SHIFT))&USBPHY_TX_D_CAL_MASK)
#define USBPHY_TX_RSVD0_MASK                     0xF0u
#define USBPHY_TX_RSVD0_SHIFT                    4
#define USBPHY_TX_RSVD0(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_RSVD0_SHIFT))&USBPHY_TX_RSVD0_MASK)
#define USBPHY_TX_TXCAL45DN_MASK                 0xF00u
#define USBPHY_TX_TXCAL45DN_SHIFT                8
#define USBPHY_TX_TXCAL45DN(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_TXCAL45DN_SHIFT))&USBPHY_TX_TXCAL45DN_MASK)
#define USBPHY_TX_RSVD1_MASK                     0xF000u
#define USBPHY_TX_RSVD1_SHIFT                    12
#define USBPHY_TX_RSVD1(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_RSVD1_SHIFT))&USBPHY_TX_RSVD1_MASK)
#define USBPHY_TX_TXCAL45DP_MASK                 0xF0000u
#define USBPHY_TX_TXCAL45DP_SHIFT                16
#define USBPHY_TX_TXCAL45DP(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_TXCAL45DP_SHIFT))&USBPHY_TX_TXCAL45DP_MASK)
#define USBPHY_TX_RSVD2_MASK                     0xFFF00000u
#define USBPHY_TX_RSVD2_SHIFT                    20
#define USBPHY_TX_RSVD2(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_TX_RSVD2_SHIFT))&USBPHY_TX_RSVD2_MASK)
/* RX Bit Fields */
#define USBPHY_RX_ENVADJ_MASK                    0x7u
#define USBPHY_RX_ENVADJ_SHIFT                   0
#define USBPHY_RX_ENVADJ(x)                      (((uint32_t)(((uint32_t)(x))<<USBPHY_RX_ENVADJ_SHIFT))&USBPHY_RX_ENVADJ_MASK)
#define USBPHY_RX_RSVD0_MASK                     0x8u
#define USBPHY_RX_RSVD0_SHIFT                    3
#define USBPHY_RX_DISCONADJ_MASK                 0x70u
#define USBPHY_RX_DISCONADJ_SHIFT                4
#define USBPHY_RX_DISCONADJ(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_RX_DISCONADJ_SHIFT))&USBPHY_RX_DISCONADJ_MASK)
#define USBPHY_RX_RSVD1_MASK                     0x3FFF80u
#define USBPHY_RX_RSVD1_SHIFT                    7
#define USBPHY_RX_RSVD1(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_RX_RSVD1_SHIFT))&USBPHY_RX_RSVD1_MASK)
#define USBPHY_RX_RXDBYPASS_MASK                 0x400000u
#define USBPHY_RX_RXDBYPASS_SHIFT                22
#define USBPHY_RX_RSVD2_MASK                     0xFF800000u
#define USBPHY_RX_RSVD2_SHIFT                    23
#define USBPHY_RX_RSVD2(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_RX_RSVD2_SHIFT))&USBPHY_RX_RSVD2_MASK)
/* CTRL Bit Fields */
#define USBPHY_CTRL_ENOTG_ID_CHG_IRQ_MASK        0x1u
#define USBPHY_CTRL_ENOTG_ID_CHG_IRQ_SHIFT       0
#define USBPHY_CTRL_ENHOSTDISCONDETECT_MASK      0x2u
#define USBPHY_CTRL_ENHOSTDISCONDETECT_SHIFT     1
#define USBPHY_CTRL_ENIRQHOSTDISCON_MASK         0x4u
#define USBPHY_CTRL_ENIRQHOSTDISCON_SHIFT        2
#define USBPHY_CTRL_HOSTDISCONDETECT_IRQ_MASK    0x8u
#define USBPHY_CTRL_HOSTDISCONDETECT_IRQ_SHIFT   3
#define USBPHY_CTRL_ENDEVPLUGINDETECT_MASK       0x10u
#define USBPHY_CTRL_ENDEVPLUGINDETECT_SHIFT      4
#define USBPHY_CTRL_DEVPLUGIN_POLARITY_MASK      0x20u
#define USBPHY_CTRL_DEVPLUGIN_POLARITY_SHIFT     5
#define USBPHY_CTRL_OTG_ID_CHG_IRQ_MASK          0x40u
#define USBPHY_CTRL_OTG_ID_CHG_IRQ_SHIFT         6
#define USBPHY_CTRL_ENOTGIDDETECT_MASK           0x80u
#define USBPHY_CTRL_ENOTGIDDETECT_SHIFT          7
#define USBPHY_CTRL_RESUMEIRQSTICKY_MASK         0x100u
#define USBPHY_CTRL_RESUMEIRQSTICKY_SHIFT        8
#define USBPHY_CTRL_ENIRQRESUMEDETECT_MASK       0x200u
#define USBPHY_CTRL_ENIRQRESUMEDETECT_SHIFT      9
#define USBPHY_CTRL_RESUME_IRQ_MASK              0x400u
#define USBPHY_CTRL_RESUME_IRQ_SHIFT             10
#define USBPHY_CTRL_ENIRQDEVPLUGIN_MASK          0x800u
#define USBPHY_CTRL_ENIRQDEVPLUGIN_SHIFT         11
#define USBPHY_CTRL_DEVPLUGIN_IRQ_MASK           0x1000u
#define USBPHY_CTRL_DEVPLUGIN_IRQ_SHIFT          12
#define USBPHY_CTRL_DATA_ON_LRADC_MASK           0x2000u
#define USBPHY_CTRL_DATA_ON_LRADC_SHIFT          13
#define USBPHY_CTRL_ENUTMILEVEL2_MASK            0x4000u
#define USBPHY_CTRL_ENUTMILEVEL2_SHIFT           14
#define USBPHY_CTRL_ENUTMILEVEL3_MASK            0x8000u
#define USBPHY_CTRL_ENUTMILEVEL3_SHIFT           15
#define USBPHY_CTRL_ENIRQWAKEUP_MASK             0x10000u
#define USBPHY_CTRL_ENIRQWAKEUP_SHIFT            16
#define USBPHY_CTRL_WAKEUP_IRQ_MASK              0x20000u
#define USBPHY_CTRL_WAKEUP_IRQ_SHIFT             17
#define USBPHY_CTRL_ENAUTO_PWRON_PLL_MASK        0x40000u
#define USBPHY_CTRL_ENAUTO_PWRON_PLL_SHIFT       18
#define USBPHY_CTRL_ENAUTOCLR_CLKGATE_MASK       0x80000u
#define USBPHY_CTRL_ENAUTOCLR_CLKGATE_SHIFT      19
#define USBPHY_CTRL_ENAUTOCLR_PHY_PWD_MASK       0x100000u
#define USBPHY_CTRL_ENAUTOCLR_PHY_PWD_SHIFT      20
#define USBPHY_CTRL_ENDPDMCHG_WKUP_MASK          0x200000u
#define USBPHY_CTRL_ENDPDMCHG_WKUP_SHIFT         21
#define USBPHY_CTRL_ENIDCHG_WKUP_MASK            0x400000u
#define USBPHY_CTRL_ENIDCHG_WKUP_SHIFT           22
#define USBPHY_CTRL_ENVBUSCHG_WKUP_MASK          0x800000u
#define USBPHY_CTRL_ENVBUSCHG_WKUP_SHIFT         23
#define USBPHY_CTRL_FSDLL_RST_EN_MASK            0x1000000u
#define USBPHY_CTRL_FSDLL_RST_EN_SHIFT           24
#define USBPHY_CTRL_ENAUTOCLR_USBCLKGATE_MASK    0x2000000u
#define USBPHY_CTRL_ENAUTOCLR_USBCLKGATE_SHIFT   25
#define USBPHY_CTRL_ENAUTOSET_USBCLKS_MASK       0x4000000u
#define USBPHY_CTRL_ENAUTOSET_USBCLKS_SHIFT      26
#define USBPHY_CTRL_OTG_ID_VALUE_MASK            0x8000000u
#define USBPHY_CTRL_OTG_ID_VALUE_SHIFT           27
#define USBPHY_CTRL_HOST_FORCE_LS_SE0_MASK       0x10000000u
#define USBPHY_CTRL_HOST_FORCE_LS_SE0_SHIFT      28
#define USBPHY_CTRL_UTMI_SUSPENDM_MASK           0x20000000u
#define USBPHY_CTRL_UTMI_SUSPENDM_SHIFT          29
#define USBPHY_CTRL_CLKGATE_MASK                 0x40000000u
#define USBPHY_CTRL_CLKGATE_SHIFT                30
#define USBPHY_CTRL_SFTRST_MASK                  0x80000000u
#define USBPHY_CTRL_SFTRST_SHIFT                 31
/* STATUS Bit Fields */
#define USBPHY_STATUS_RSVD0_MASK                 0x7u
#define USBPHY_STATUS_RSVD0_SHIFT                0
#define USBPHY_STATUS_RSVD0(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_STATUS_RSVD0_SHIFT))&USBPHY_STATUS_RSVD0_MASK)
#define USBPHY_STATUS_HOSTDISCONDETECT_STATUS_MASK 0x8u
#define USBPHY_STATUS_HOSTDISCONDETECT_STATUS_SHIFT 3
#define USBPHY_STATUS_RSVD1_MASK                 0x30u
#define USBPHY_STATUS_RSVD1_SHIFT                4
#define USBPHY_STATUS_RSVD1(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_STATUS_RSVD1_SHIFT))&USBPHY_STATUS_RSVD1_MASK)
#define USBPHY_STATUS_DEVPLUGIN_STATUS_MASK      0x40u
#define USBPHY_STATUS_DEVPLUGIN_STATUS_SHIFT     6
#define USBPHY_STATUS_RSVD2_MASK                 0x80u
#define USBPHY_STATUS_RSVD2_SHIFT                7
#define USBPHY_STATUS_OTGID_STATUS_MASK          0x100u
#define USBPHY_STATUS_OTGID_STATUS_SHIFT         8
#define USBPHY_STATUS_RSVD3_MASK                 0x200u
#define USBPHY_STATUS_RSVD3_SHIFT                9
#define USBPHY_STATUS_RESUME_STATUS_MASK         0x400u
#define USBPHY_STATUS_RESUME_STATUS_SHIFT        10
#define USBPHY_STATUS_RSVD4_MASK                 0xFFFFF800u
#define USBPHY_STATUS_RSVD4_SHIFT                11
#define USBPHY_STATUS_RSVD4(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_STATUS_RSVD4_SHIFT))&USBPHY_STATUS_RSVD4_MASK)
/* DEBUG Bit Fields */
#define USBPHY_DEBUG_OTGIDPIOLOCK_MASK           0x1u
#define USBPHY_DEBUG_OTGIDPIOLOCK_SHIFT          0
#define USBPHY_DEBUG_DEBUG_INTERFACE_HOLD_MASK   0x2u
#define USBPHY_DEBUG_DEBUG_INTERFACE_HOLD_SHIFT  1
#define USBPHY_DEBUG_HSTPULLDOWN_MASK            0xCu
#define USBPHY_DEBUG_HSTPULLDOWN_SHIFT           2
#define USBPHY_DEBUG_HSTPULLDOWN(x)              (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_HSTPULLDOWN_SHIFT))&USBPHY_DEBUG_HSTPULLDOWN_MASK)
#define USBPHY_DEBUG_ENHSTPULLDOWN_MASK          0x30u
#define USBPHY_DEBUG_ENHSTPULLDOWN_SHIFT         4
#define USBPHY_DEBUG_ENHSTPULLDOWN(x)            (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_ENHSTPULLDOWN_SHIFT))&USBPHY_DEBUG_ENHSTPULLDOWN_MASK)
#define USBPHY_DEBUG_RSVD0_MASK                  0xC0u
#define USBPHY_DEBUG_RSVD0_SHIFT                 6
#define USBPHY_DEBUG_RSVD0(x)                    (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_RSVD0_SHIFT))&USBPHY_DEBUG_RSVD0_MASK)
#define USBPHY_DEBUG_TX2RXCOUNT_MASK             0xF00u
#define USBPHY_DEBUG_TX2RXCOUNT_SHIFT            8
#define USBPHY_DEBUG_TX2RXCOUNT(x)               (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_TX2RXCOUNT_SHIFT))&USBPHY_DEBUG_TX2RXCOUNT_MASK)
#define USBPHY_DEBUG_ENTX2RXCOUNT_MASK           0x1000u
#define USBPHY_DEBUG_ENTX2RXCOUNT_SHIFT          12
#define USBPHY_DEBUG_RSVD1_MASK                  0xE000u
#define USBPHY_DEBUG_RSVD1_SHIFT                 13
#define USBPHY_DEBUG_RSVD1(x)                    (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_RSVD1_SHIFT))&USBPHY_DEBUG_RSVD1_MASK)
#define USBPHY_DEBUG_SQUELCHRESETCOUNT_MASK      0x1F0000u
#define USBPHY_DEBUG_SQUELCHRESETCOUNT_SHIFT     16
#define USBPHY_DEBUG_SQUELCHRESETCOUNT(x)        (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_SQUELCHRESETCOUNT_SHIFT))&USBPHY_DEBUG_SQUELCHRESETCOUNT_MASK)
#define USBPHY_DEBUG_RSVD2_MASK                  0xE00000u
#define USBPHY_DEBUG_RSVD2_SHIFT                 21
#define USBPHY_DEBUG_RSVD2(x)                    (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_RSVD2_SHIFT))&USBPHY_DEBUG_RSVD2_MASK)
#define USBPHY_DEBUG_ENSQUELCHRESET_MASK         0x1000000u
#define USBPHY_DEBUG_ENSQUELCHRESET_SHIFT        24
#define USBPHY_DEBUG_SQUELCHRESETLENGTH_MASK     0x1E000000u
#define USBPHY_DEBUG_SQUELCHRESETLENGTH_SHIFT    25
#define USBPHY_DEBUG_SQUELCHRESETLENGTH(x)       (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG_SQUELCHRESETLENGTH_SHIFT))&USBPHY_DEBUG_SQUELCHRESETLENGTH_MASK)
#define USBPHY_DEBUG_HOST_RESUME_DEBUG_MASK      0x20000000u
#define USBPHY_DEBUG_HOST_RESUME_DEBUG_SHIFT     29
#define USBPHY_DEBUG_CLKGATE_MASK                0x40000000u
#define USBPHY_DEBUG_CLKGATE_SHIFT               30
#define USBPHY_DEBUG_RSVD3_MASK                  0x80000000u
#define USBPHY_DEBUG_RSVD3_SHIFT                 31
/* DEBUG0_STATUS Bit Fields */
#define USBPHY_DEBUG0_STATUS_LOOP_BACK_FAIL_COUNT_MASK 0xFFFFu
#define USBPHY_DEBUG0_STATUS_LOOP_BACK_FAIL_COUNT_SHIFT 0
#define USBPHY_DEBUG0_STATUS_LOOP_BACK_FAIL_COUNT(x) (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG0_STATUS_LOOP_BACK_FAIL_COUNT_SHIFT))&USBPHY_DEBUG0_STATUS_LOOP_BACK_FAIL_COUNT_MASK)
#define USBPHY_DEBUG0_STATUS_UTMI_RXERROR_FAIL_COUNT_MASK 0x3FF0000u
#define USBPHY_DEBUG0_STATUS_UTMI_RXERROR_FAIL_COUNT_SHIFT 16
#define USBPHY_DEBUG0_STATUS_UTMI_RXERROR_FAIL_COUNT(x) (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG0_STATUS_UTMI_RXERROR_FAIL_COUNT_SHIFT))&USBPHY_DEBUG0_STATUS_UTMI_RXERROR_FAIL_COUNT_MASK)
#define USBPHY_DEBUG0_STATUS_SQUELCH_COUNT_MASK  0xFC000000u
#define USBPHY_DEBUG0_STATUS_SQUELCH_COUNT_SHIFT 26
#define USBPHY_DEBUG0_STATUS_SQUELCH_COUNT(x)    (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG0_STATUS_SQUELCH_COUNT_SHIFT))&USBPHY_DEBUG0_STATUS_SQUELCH_COUNT_MASK)
/* DEBUG1 Bit Fields */
#define USBPHY_DEBUG1_RSVD0_MASK                 0x1FFFu
#define USBPHY_DEBUG1_RSVD0_SHIFT                0
#define USBPHY_DEBUG1_RSVD0(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG1_RSVD0_SHIFT))&USBPHY_DEBUG1_RSVD0_MASK)
#define USBPHY_DEBUG1_ENTAILADJVD_MASK           0x6000u
#define USBPHY_DEBUG1_ENTAILADJVD_SHIFT          13
#define USBPHY_DEBUG1_ENTAILADJVD(x)             (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG1_ENTAILADJVD_SHIFT))&USBPHY_DEBUG1_ENTAILADJVD_MASK)
#define USBPHY_DEBUG1_RSVD1_MASK                 0xFFFF8000u
#define USBPHY_DEBUG1_RSVD1_SHIFT                15
#define USBPHY_DEBUG1_RSVD1(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_DEBUG1_RSVD1_SHIFT))&USBPHY_DEBUG1_RSVD1_MASK)
/* VERSION Bit Fields */
#define USBPHY_VERSION_STEP_MASK                 0xFFFFu
#define USBPHY_VERSION_STEP_SHIFT                0
#define USBPHY_VERSION_STEP(x)                   (((uint32_t)(((uint32_t)(x))<<USBPHY_VERSION_STEP_SHIFT))&USBPHY_VERSION_STEP_MASK)
#define USBPHY_VERSION_MINOR_MASK                0xFF0000u
#define USBPHY_VERSION_MINOR_SHIFT               16
#define USBPHY_VERSION_MINOR(x)                  (((uint32_t)(((uint32_t)(x))<<USBPHY_VERSION_MINOR_SHIFT))&USBPHY_VERSION_MINOR_MASK)
#define USBPHY_VERSION_MAJOR_MASK                0xFF000000u
#define USBPHY_VERSION_MAJOR_SHIFT               24
#define USBPHY_VERSION_MAJOR(x)                  (((uint32_t)(((uint32_t)(x))<<USBPHY_VERSION_MAJOR_SHIFT))&USBPHY_VERSION_MAJOR_MASK)
/* IP Bit Fields */
#define USBPHY_IP_PLL_POWER_MASK                 0x1u
#define USBPHY_IP_PLL_POWER_SHIFT                0
#define USBPHY_IP_PLL_LOCKED_MASK                0x2u
#define USBPHY_IP_PLL_LOCKED_SHIFT               1
#define USBPHY_IP_EN_USB_CLKS_MASK               0x4u
#define USBPHY_IP_EN_USB_CLKS_SHIFT              2
#define USBPHY_IP_RSVD0_MASK                     0xFFF8u
#define USBPHY_IP_RSVD0_SHIFT                    3
#define USBPHY_IP_RSVD0(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_IP_RSVD0_SHIFT))&USBPHY_IP_RSVD0_MASK)
#define USBPHY_IP_ANALOG_TESTMODE_MASK           0x10000u
#define USBPHY_IP_ANALOG_TESTMODE_SHIFT          16
#define USBPHY_IP_TSTI_TX_DM_MASK                0x20000u
#define USBPHY_IP_TSTI_TX_DM_SHIFT               17
#define USBPHY_IP_TSTI_TX_DP_MASK                0x40000u
#define USBPHY_IP_TSTI_TX_DP_SHIFT               18
#define USBPHY_IP_RSVD1_MASK                     0xFFF80000u
#define USBPHY_IP_RSVD1_SHIFT                    19
#define USBPHY_IP_RSVD1(x)                       (((uint32_t)(((uint32_t)(x))<<USBPHY_IP_RSVD1_SHIFT))&USBPHY_IP_RSVD1_MASK)

/**
 * @}
 */ /* end of group USBPHY_Register_Masks */


/* USBPHY - Peripheral instance base addresses */
/** Peripheral USBPHY0 base pointer */
#define USBPHY0_BASE_PTR                         ((USBPHY_MemMapPtr)0x40050800u)
/** Peripheral USBPHY1 base pointer */
#define USBPHY1_BASE_PTR                         ((USBPHY_MemMapPtr)0x40050C00u)
/** Array initializer of USBPHY peripheral base pointers */
#define USBPHY_BASE_PTRS                         { USBPHY0_BASE_PTR, USBPHY1_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- USBPHY - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup USBPHY_Register_Accessor_Macros USBPHY - Register accessor macros
 * @{
 */


/* USBPHY - Register instance definitions */
/* USBPHY0 */
#define USBPHY0_PWD                              USBPHY_PWD_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_PWD_SET                          USBPHY_PWD_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_PWD_CLR                          USBPHY_PWD_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_PWD_TOG                          USBPHY_PWD_REG(USBPHY0_BASE_PTR,3)
#define USBPHY0_TX                               USBPHY_TX_REG(USBPHY0_BASE_PTR)
#define USBPHY0_RX                               USBPHY_RX_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_RX_SET                           USBPHY_RX_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_RX_CLR                           USBPHY_RX_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_RX_TOG                           USBPHY_RX_REG(USBPHY0_BASE_PTR,3)
#define USBPHY0_CTRL                             USBPHY_CTRL_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_CTRL_SET                         USBPHY_CTRL_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_CTRL_CLR                         USBPHY_CTRL_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_CTRL_TOG                         USBPHY_CTRL_REG(USBPHY0_BASE_PTR,3)
#define USBPHY0_STATUS                           USBPHY_STATUS_REG(USBPHY0_BASE_PTR)
#define USBPHY0_DEBUG                            USBPHY_DEBUG_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_DEBUG_SET                        USBPHY_DEBUG_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_DEBUG_CLR                        USBPHY_DEBUG_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_DEBUG_TOG                        USBPHY_DEBUG_REG(USBPHY0_BASE_PTR,3)
#define USBPHY0_DEBUG0_STATUS                    USBPHY_DEBUG0_STATUS_REG(USBPHY0_BASE_PTR)
#define USBPHY0_DEBUG1                           USBPHY_DEBUG1_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_DEBUG1_SET                       USBPHY_DEBUG1_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_DEBUG1_CLR                       USBPHY_DEBUG1_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_DEBUG1_TOG                       USBPHY_DEBUG1_REG(USBPHY0_BASE_PTR,3)
#define USBPHY0_VERSION                          USBPHY_VERSION_REG(USBPHY0_BASE_PTR)
#define USBPHY0_IP                               USBPHY_IP_REG(USBPHY0_BASE_PTR,0)
#define USBPHY0_IP_SET                           USBPHY_IP_REG(USBPHY0_BASE_PTR,1)
#define USBPHY0_IP_CLR                           USBPHY_IP_REG(USBPHY0_BASE_PTR,2)
#define USBPHY0_IP_TOG                           USBPHY_IP_REG(USBPHY0_BASE_PTR,3)
/* USBPHY1 */
#define USBPHY1_PWD                              USBPHY_PWD_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_PWD_SET                          USBPHY_PWD_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_PWD_CLR                          USBPHY_PWD_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_PWD_TOG                          USBPHY_PWD_REG(USBPHY1_BASE_PTR,3)
#define USBPHY1_TX                               USBPHY_TX_REG(USBPHY1_BASE_PTR)
#define USBPHY1_RX                               USBPHY_RX_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_RX_SET                           USBPHY_RX_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_RX_CLR                           USBPHY_RX_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_RX_TOG                           USBPHY_RX_REG(USBPHY1_BASE_PTR,3)
#define USBPHY1_CTRL                             USBPHY_CTRL_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_CTRL_SET                         USBPHY_CTRL_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_CTRL_CLR                         USBPHY_CTRL_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_CTRL_TOG                         USBPHY_CTRL_REG(USBPHY1_BASE_PTR,3)
#define USBPHY1_STATUS                           USBPHY_STATUS_REG(USBPHY1_BASE_PTR)
#define USBPHY1_DEBUG                            USBPHY_DEBUG_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_DEBUG_SET                        USBPHY_DEBUG_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_DEBUG_CLR                        USBPHY_DEBUG_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_DEBUG_TOG                        USBPHY_DEBUG_REG(USBPHY1_BASE_PTR,3)
#define USBPHY1_DEBUG0_STATUS                    USBPHY_DEBUG0_STATUS_REG(USBPHY1_BASE_PTR)
#define USBPHY1_DEBUG1                           USBPHY_DEBUG1_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_DEBUG1_SET                       USBPHY_DEBUG1_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_DEBUG1_CLR                       USBPHY_DEBUG1_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_DEBUG1_TOG                       USBPHY_DEBUG1_REG(USBPHY1_BASE_PTR,3)
#define USBPHY1_VERSION                          USBPHY_VERSION_REG(USBPHY1_BASE_PTR)
#define USBPHY1_IP                               USBPHY_IP_REG(USBPHY1_BASE_PTR,0)
#define USBPHY1_IP_SET                           USBPHY_IP_REG(USBPHY1_BASE_PTR,1)
#define USBPHY1_IP_CLR                           USBPHY_IP_REG(USBPHY1_BASE_PTR,2)
#define USBPHY1_IP_TOG                           USBPHY_IP_REG(USBPHY1_BASE_PTR,3)

#if 0 // jm PES
/* USBPHY - Register array accessors */
#define USBPHY0_PWD(index)                       USBPHY_PWD_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_PWD(index)                       USBPHY_PWD_REG(USBPHY1_BASE_PTR,index)
#define USBPHY0_RX(index)                        USBPHY_RX_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_RX(index)                        USBPHY_RX_REG(USBPHY1_BASE_PTR,index)
#define USBPHY0_CTRL(index)                      USBPHY_CTRL_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_CTRL(index)                      USBPHY_CTRL_REG(USBPHY1_BASE_PTR,index)
#define USBPHY0_DEBUG(index)                     USBPHY_DEBUG_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_DEBUG(index)                     USBPHY_DEBUG_REG(USBPHY1_BASE_PTR,index)
#define USBPHY0_DEBUG1(index)                    USBPHY_DEBUG1_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_DEBUG1(index)                    USBPHY_DEBUG1_REG(USBPHY1_BASE_PTR,index)
#define USBPHY0_IP(index)                        USBPHY_IP_REG(USBPHY0_BASE_PTR,index)
#define USBPHY1_IP(index)                        USBPHY_IP_REG(USBPHY1_BASE_PTR,index)
#endif //
/**
 * @}
 */ /* end of group USBPHY_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group USBPHY_Peripheral */


/* ----------------------------------------------------------------------------
   -- VDEC
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VDEC_Peripheral VDEC
 * @{
 */

/** VDEC - Peripheral register structure */
typedef struct VDEC_MemMap {
  uint32_t CFC1;                                   /**< 2D Comb Filter Control 1, offset: 0x0 */
  uint8_t RESERVED_0[32];
  uint32_t BRSTGT;                                 /**< Burst Gate, offset: 0x24 */
  uint8_t RESERVED_1[24];
  uint32_t HZPOS;                                  /**< Horizontal Position, offset: 0x40 */
  uint32_t VRTPOS;                                 /**< Vertical Position, offset: 0x44 */
  uint8_t RESERVED_2[12];
  uint32_t HVSHFT;                                 /**< Output Conditioning and HV Shift, offset: 0x54 */
  uint32_t HSIGS;                                  /**< HSync Ignore Start, offset: 0x58 */
  uint32_t HSIGE;                                  /**< HSync Ignore End, offset: 0x5C */
  uint32_t VSCON1;                                 /**< VSync Control 1, offset: 0x60 */
  uint32_t VSCON2;                                 /**< VSync Control 2, offset: 0x64 */
  uint8_t RESERVED_3[4];
  uint32_t YCDEL;                                  /**< Y/C Delay and Chroma Debug, offset: 0x6C */
  uint32_t AFTCLP;                                 /**< After Clamp, offset: 0x70 */
  uint8_t RESERVED_4[4];
  uint32_t DCOFF;                                  /**< DC Offset, offset: 0x78 */
  uint8_t RESERVED_5[8];
  uint32_t CSID;                                   /**< Chroma Swap, Invert, and Debug, offset: 0x84 */
  uint32_t CBGN;                                   /**< Cb Gain, offset: 0x88 */
  uint32_t CRGN;                                   /**< Cr Gain, offset: 0x8C */
  uint32_t CNTR;                                   /**< Contrast, offset: 0x90 */
  uint32_t BRT;                                    /**< Brightness, offset: 0x94 */
  uint32_t HUE;                                    /**< Hue, offset: 0x98 */
  uint32_t CHBTH;                                  /**< Chroma Burst Threshold, offset: 0x9C */
  uint8_t RESERVED_6[4];
  uint32_t SHPIMP;                                 /**< Sharpness Improvement, offset: 0xA4 */
  uint32_t CHPLLIM;                                /**< Chroma PLL and Input Mode, offset: 0xA8 */
  uint32_t VIDMOD;                                 /**< Video Mode, offset: 0xAC */
  uint32_t VIDSTS;                                 /**< Video Status, offset: 0xB0 */
  uint32_t NOISE;                                  /**< Noise Detector, offset: 0xB4 */
  uint32_t STDDBG;                                 /**< Standards and Debug, offset: 0xB8 */
  uint32_t MANOVR;                                 /**< Manual Override, offset: 0xBC */
  uint8_t RESERVED_7[8];
  uint32_t VSSGTH;                                 /**< VSync and Signal Thresholds, offset: 0xC8 */
  uint8_t RESERVED_8[4];
  uint32_t DBGFBH;                                 /**< Debug Framebuffer, offset: 0xD0 */
  uint32_t DBGFBL;                                 /**< Debug Framebuffer 2, offset: 0xD4 */
  uint32_t HACTS;                                  /**< H Active Start, offset: 0xD8 */
  uint32_t HACTE;                                  /**< H Active End, offset: 0xDC */
  uint32_t VACTS;                                  /**< V Active Start, offset: 0xE0 */
  uint32_t VACTE;                                  /**< V Active End, offset: 0xE4 */
  uint8_t RESERVED_9[4];
  uint32_t HSTIP;                                  /**< HSync Tip, offset: 0xEC */
  uint8_t RESERVED_10[8];
  uint32_t BLSCRCR;                                /**< Bluescreen Cr, offset: 0xF8 */
  uint32_t BLSCRCB;                                /**< Bluescreen Cb, offset: 0xFC */
  uint8_t RESERVED_11[4];
  uint32_t LMAGC2;                                 /**< Luma AGC Control 2, offset: 0x104 */
  uint8_t RESERVED_12[4];
  uint32_t CHAGC2;                                 /**< Chroma AGC Control 2, offset: 0x10C */
  uint8_t RESERVED_13[4];
  uint32_t MINTH;                                  /**< Minimum Threshold, offset: 0x114 */
  uint8_t RESERVED_14[4];
  uint32_t VFRQOH;                                 /**< Vertical Lines High, offset: 0x11C */
  uint32_t VFRQOL;                                 /**< Vertical Lines Low, offset: 0x120 */
} volatile *VDEC_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- VDEC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VDEC_Register_Accessor_Macros VDEC - Register accessor macros
 * @{
 */


/* VDEC - Register accessors */
#define VDEC_CFC1_REG(base)                      ((base)->CFC1)
#define VDEC_BRSTGT_REG(base)                    ((base)->BRSTGT)
#define VDEC_HZPOS_REG(base)                     ((base)->HZPOS)
#define VDEC_VRTPOS_REG(base)                    ((base)->VRTPOS)
#define VDEC_HVSHFT_REG(base)                    ((base)->HVSHFT)
#define VDEC_HSIGS_REG(base)                     ((base)->HSIGS)
#define VDEC_HSIGE_REG(base)                     ((base)->HSIGE)
#define VDEC_VSCON1_REG(base)                    ((base)->VSCON1)
#define VDEC_VSCON2_REG(base)                    ((base)->VSCON2)
#define VDEC_YCDEL_REG(base)                     ((base)->YCDEL)
#define VDEC_AFTCLP_REG(base)                    ((base)->AFTCLP)
#define VDEC_DCOFF_REG(base)                     ((base)->DCOFF)
#define VDEC_CSID_REG(base)                      ((base)->CSID)
#define VDEC_CBGN_REG(base)                      ((base)->CBGN)
#define VDEC_CRGN_REG(base)                      ((base)->CRGN)
#define VDEC_CNTR_REG(base)                      ((base)->CNTR)
#define VDEC_BRT_REG(base)                       ((base)->BRT)
#define VDEC_HUE_REG(base)                       ((base)->HUE)
#define VDEC_CHBTH_REG(base)                     ((base)->CHBTH)
#define VDEC_SHPIMP_REG(base)                    ((base)->SHPIMP)
#define VDEC_CHPLLIM_REG(base)                   ((base)->CHPLLIM)
#define VDEC_VIDMOD_REG(base)                    ((base)->VIDMOD)
#define VDEC_VIDSTS_REG(base)                    ((base)->VIDSTS)
#define VDEC_NOISE_REG(base)                     ((base)->NOISE)
#define VDEC_STDDBG_REG(base)                    ((base)->STDDBG)
#define VDEC_MANOVR_REG(base)                    ((base)->MANOVR)
#define VDEC_VSSGTH_REG(base)                    ((base)->VSSGTH)
#define VDEC_DBGFBH_REG(base)                    ((base)->DBGFBH)
#define VDEC_DBGFBL_REG(base)                    ((base)->DBGFBL)
#define VDEC_HACTS_REG(base)                     ((base)->HACTS)
#define VDEC_HACTE_REG(base)                     ((base)->HACTE)
#define VDEC_VACTS_REG(base)                     ((base)->VACTS)
#define VDEC_VACTE_REG(base)                     ((base)->VACTE)
#define VDEC_HSTIP_REG(base)                     ((base)->HSTIP)
#define VDEC_BLSCRCR_REG(base)                   ((base)->BLSCRCR)
#define VDEC_BLSCRCB_REG(base)                   ((base)->BLSCRCB)
#define VDEC_LMAGC2_REG(base)                    ((base)->LMAGC2)
#define VDEC_CHAGC2_REG(base)                    ((base)->CHAGC2)
#define VDEC_MINTH_REG(base)                     ((base)->MINTH)
#define VDEC_VFRQOH_REG(base)                    ((base)->VFRQOH)
#define VDEC_VFRQOL_REG(base)                    ((base)->VFRQOL)

/**
 * @}
 */ /* end of group VDEC_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- VDEC Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VDEC_Register_Masks VDEC Register Masks
 * @{
 */

/* CFC1 Bit Fields */
#define VDEC_CFC1_rc_combmode_override_MASK      0xFu
#define VDEC_CFC1_rc_combmode_override_SHIFT     0
#define VDEC_CFC1_rc_combmode_override(x)        (((uint32_t)(((uint32_t)(x))<<VDEC_CFC1_rc_combmode_override_SHIFT))&VDEC_CFC1_rc_combmode_override_MASK)
#define VDEC_CFC1_rc_debugout_MASK               0xF0u
#define VDEC_CFC1_rc_debugout_SHIFT              4
#define VDEC_CFC1_rc_debugout(x)                 (((uint32_t)(((uint32_t)(x))<<VDEC_CFC1_rc_debugout_SHIFT))&VDEC_CFC1_rc_debugout_MASK)
/* BRSTGT Bit Fields */
#define VDEC_BRSTGT_rc_cburststart_MASK          0xFFu
#define VDEC_BRSTGT_rc_cburststart_SHIFT         0
#define VDEC_BRSTGT_rc_cburststart(x)            (((uint32_t)(((uint32_t)(x))<<VDEC_BRSTGT_rc_cburststart_SHIFT))&VDEC_BRSTGT_rc_cburststart_MASK)
/* HZPOS Bit Fields */
#define VDEC_HZPOS_ro_hpramp_cmp_MASK            0xFFu
#define VDEC_HZPOS_ro_hpramp_cmp_SHIFT           0
#define VDEC_HZPOS_ro_hpramp_cmp(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_HZPOS_ro_hpramp_cmp_SHIFT))&VDEC_HZPOS_ro_hpramp_cmp_MASK)
/* VRTPOS Bit Fields */
#define VDEC_VRTPOS_ro_vline_cmp_MASK            0xFFu
#define VDEC_VRTPOS_ro_vline_cmp_SHIFT           0
#define VDEC_VRTPOS_ro_vline_cmp(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_VRTPOS_ro_vline_cmp_SHIFT))&VDEC_VRTPOS_ro_vline_cmp_MASK)
/* HVSHFT Bit Fields */
#define VDEC_HVSHFT_ro_hzero_sel_MASK            0x1u
#define VDEC_HVSHFT_ro_hzero_sel_SHIFT           0
#define VDEC_HVSHFT_ro_invfield_MASK             0x2u
#define VDEC_HVSHFT_ro_invfield_SHIFT            1
#define VDEC_HVSHFT_ro_vzero_sel_MASK            0x10u
#define VDEC_HVSHFT_ro_vzero_sel_SHIFT           4
#define VDEC_HVSHFT_ro_useactive_MASK            0x20u
#define VDEC_HVSHFT_ro_useactive_SHIFT           5
#define VDEC_HVSHFT_antialias_dis_MASK           0x40u
#define VDEC_HVSHFT_antialias_dis_SHIFT          6
/* HSIGS Bit Fields */
#define VDEC_HSIGS_rv_ignorestart_MASK           0xFFu
#define VDEC_HSIGS_rv_ignorestart_SHIFT          0
#define VDEC_HSIGS_rv_ignorestart(x)             (((uint32_t)(((uint32_t)(x))<<VDEC_HSIGS_rv_ignorestart_SHIFT))&VDEC_HSIGS_rv_ignorestart_MASK)
/* HSIGE Bit Fields */
#define VDEC_HSIGE_rv_ignoreend_MASK             0xFFu
#define VDEC_HSIGE_rv_ignoreend_SHIFT            0
#define VDEC_HSIGE_rv_ignoreend(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_HSIGE_rv_ignoreend_SHIFT))&VDEC_HSIGE_rv_ignoreend_MASK)
/* VSCON1 Bit Fields */
#define VDEC_VSCON1_rh_vdet_dbg_MASK             0x7u
#define VDEC_VSCON1_rh_vdet_dbg_SHIFT            0
#define VDEC_VSCON1_rh_vdet_dbg(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_VSCON1_rh_vdet_dbg_SHIFT))&VDEC_VSCON1_rh_vdet_dbg_MASK)
#define VDEC_VSCON1_rh_robust625det_MASK         0x8u
#define VDEC_VSCON1_rh_robust625det_SHIFT        3
#define VDEC_VSCON1_rh_dis_vsyncdetect_MASK      0x10u
#define VDEC_VSCON1_rh_dis_vsyncdetect_SHIFT     4
#define VDEC_VSCON1_rh_vsynchalfmode_MASK        0x20u
#define VDEC_VSCON1_rh_vsynchalfmode_SHIFT       5
#define VDEC_VSCON1_rh_modadd_dis_MASK           0x40u
#define VDEC_VSCON1_rh_modadd_dis_SHIFT          6
#define VDEC_VSCON1_rh_8or16_MASK                0x80u
#define VDEC_VSCON1_rh_8or16_SHIFT               7
/* VSCON2 Bit Fields */
#define VDEC_VSCON2_rh_vcr_phasethr_MASK         0x3u
#define VDEC_VSCON2_rh_vcr_phasethr_SHIFT        0
#define VDEC_VSCON2_rh_vcr_phasethr(x)           (((uint32_t)(((uint32_t)(x))<<VDEC_VSCON2_rh_vcr_phasethr_SHIFT))&VDEC_VSCON2_rh_vcr_phasethr_MASK)
#define VDEC_VSCON2_rh_vcr_force_dis_MASK        0xCu
#define VDEC_VSCON2_rh_vcr_force_dis_SHIFT       2
#define VDEC_VSCON2_rh_vcr_force_dis(x)          (((uint32_t)(((uint32_t)(x))<<VDEC_VSCON2_rh_vcr_force_dis_SHIFT))&VDEC_VSCON2_rh_vcr_force_dis_MASK)
#define VDEC_VSCON2_rh_hsw_coring_MASK           0x30u
#define VDEC_VSCON2_rh_hsw_coring_SHIFT          4
#define VDEC_VSCON2_rh_hsw_coring(x)             (((uint32_t)(((uint32_t)(x))<<VDEC_VSCON2_rh_hsw_coring_SHIFT))&VDEC_VSCON2_rh_hsw_coring_MASK)
#define VDEC_VSCON2_rh_smooth_hsw_MASK           0x40u
#define VDEC_VSCON2_rh_smooth_hsw_SHIFT          6
#define VDEC_VSCON2_rh_disable_hsw_MASK          0x80u
#define VDEC_VSCON2_rh_disable_hsw_SHIFT         7
/* YCDEL Bit Fields */
#define VDEC_YCDEL_rd_nopalave_MASK              0x1u
#define VDEC_YCDEL_rd_nopalave_SHIFT             0
#define VDEC_YCDEL_rd_narrow_MASK                0x2u
#define VDEC_YCDEL_rd_narrow_SHIFT               1
#define VDEC_YCDEL_rd_wide_MASK                  0x4u
#define VDEC_YCDEL_rd_wide_SHIFT                 2
#define VDEC_YCDEL_rd_lumadel_MASK               0xF0u
#define VDEC_YCDEL_rd_lumadel_SHIFT              4
#define VDEC_YCDEL_rd_lumadel(x)                 (((uint32_t)(((uint32_t)(x))<<VDEC_YCDEL_rd_lumadel_SHIFT))&VDEC_YCDEL_rd_lumadel_MASK)
/* AFTCLP Bit Fields */
#define VDEC_AFTCLP_rh_shortframe_MASK           0x1u
#define VDEC_AFTCLP_rh_shortframe_SHIFT          0
#define VDEC_AFTCLP_rl_disoffset_MASK            0x2u
#define VDEC_AFTCLP_rl_disoffset_SHIFT           1
#define VDEC_AFTCLP_rl_resetoffset_MASK          0x4u
#define VDEC_AFTCLP_rl_resetoffset_SHIFT         2
#define VDEC_AFTCLP_rc_afterclamp_update_en_MASK 0x10u
#define VDEC_AFTCLP_rc_afterclamp_update_en_SHIFT 4
#define VDEC_AFTCLP_rc_midfield_dis_MASK         0x20u
#define VDEC_AFTCLP_rc_midfield_dis_SHIFT        5
#define VDEC_AFTCLP_rc_aoutoafterclamp_dis_MASK  0x40u
#define VDEC_AFTCLP_rc_aoutoafterclamp_dis_SHIFT 6
/* DCOFF Bit Fields */
#define VDEC_DCOFF_rl_dcoffsetI_MASK             0x3u
#define VDEC_DCOFF_rl_dcoffsetI_SHIFT            0
#define VDEC_DCOFF_rl_dcoffsetI(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_DCOFF_rl_dcoffsetI_SHIFT))&VDEC_DCOFF_rl_dcoffsetI_MASK)
#define VDEC_DCOFF_rl_linemeasure_dis_MASK       0x8u
#define VDEC_DCOFF_rl_linemeasure_dis_SHIFT      3
#define VDEC_DCOFF_rl_dcoffsetP_MASK             0x70u
#define VDEC_DCOFF_rl_dcoffsetP_SHIFT            4
#define VDEC_DCOFF_rl_dcoffsetP(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_DCOFF_rl_dcoffsetP_SHIFT))&VDEC_DCOFF_rl_dcoffsetP_MASK)
/* CSID Bit Fields */
#define VDEC_CSID_rd_swapcrcb_MASK               0x1u
#define VDEC_CSID_rd_swapcrcb_SHIFT              0
#define VDEC_CSID_rd_invcr_MASK                  0x2u
#define VDEC_CSID_rd_invcr_SHIFT                 1
#define VDEC_CSID_rd_invcb_MASK                  0x4u
#define VDEC_CSID_rd_invcb_SHIFT                 2
#define VDEC_CSID_rd_nopalhue_MASK               0x8u
#define VDEC_CSID_rd_nopalhue_SHIFT              3
#define VDEC_CSID_rd_bypasshilbert_MASK          0x80u
#define VDEC_CSID_rd_bypasshilbert_SHIFT         7
/* CBGN Bit Fields */
#define VDEC_CBGN_rd_cbgain_MASK                 0xFFu
#define VDEC_CBGN_rd_cbgain_SHIFT                0
#define VDEC_CBGN_rd_cbgain(x)                   (((uint32_t)(((uint32_t)(x))<<VDEC_CBGN_rd_cbgain_SHIFT))&VDEC_CBGN_rd_cbgain_MASK)
/* CRGN Bit Fields */
#define VDEC_CRGN_rd_crgain_MASK                 0xFFu
#define VDEC_CRGN_rd_crgain_SHIFT                0
#define VDEC_CRGN_rd_crgain(x)                   (((uint32_t)(((uint32_t)(x))<<VDEC_CRGN_rd_crgain_SHIFT))&VDEC_CRGN_rd_crgain_MASK)
/* CNTR Bit Fields */
#define VDEC_CNTR_rd_lumagain_MASK               0xFFu
#define VDEC_CNTR_rd_lumagain_SHIFT              0
#define VDEC_CNTR_rd_lumagain(x)                 (((uint32_t)(((uint32_t)(x))<<VDEC_CNTR_rd_lumagain_SHIFT))&VDEC_CNTR_rd_lumagain_MASK)
/* BRT Bit Fields */
#define VDEC_BRT_rc_blacklevel_MASK              0xFFu
#define VDEC_BRT_rc_blacklevel_SHIFT             0
#define VDEC_BRT_rc_blacklevel(x)                (((uint32_t)(((uint32_t)(x))<<VDEC_BRT_rc_blacklevel_SHIFT))&VDEC_BRT_rc_blacklevel_MASK)
/* HUE Bit Fields */
#define VDEC_HUE_rd_ch_thresh_MASK               0xFFu
#define VDEC_HUE_rd_ch_thresh_SHIFT              0
#define VDEC_HUE_rd_ch_thresh(x)                 (((uint32_t)(((uint32_t)(x))<<VDEC_HUE_rd_ch_thresh_SHIFT))&VDEC_HUE_rd_ch_thresh_MASK)
/* CHBTH Bit Fields */
#define VDEC_CHBTH_rd_ch_thresh_MASK             0xFFu
#define VDEC_CHBTH_rd_ch_thresh_SHIFT            0
#define VDEC_CHBTH_rd_ch_thresh(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_CHBTH_rd_ch_thresh_SHIFT))&VDEC_CHBTH_rd_ch_thresh_MASK)
/* SHPIMP Bit Fields */
#define VDEC_SHPIMP_rd_peak_MASK                 0xFu
#define VDEC_SHPIMP_rd_peak_SHIFT                0
#define VDEC_SHPIMP_rd_peak(x)                   (((uint32_t)(((uint32_t)(x))<<VDEC_SHPIMP_rd_peak_SHIFT))&VDEC_SHPIMP_rd_peak_MASK)
#define VDEC_SHPIMP_rd_slope_MASK                0xF0u
#define VDEC_SHPIMP_rd_slope_SHIFT               4
#define VDEC_SHPIMP_rd_slope(x)                  (((uint32_t)(((uint32_t)(x))<<VDEC_SHPIMP_rd_slope_SHIFT))&VDEC_SHPIMP_rd_slope_MASK)
/* CHPLLIM Bit Fields */
#define VDEC_CHPLLIM_rd_inputcables_MASK         0x7u
#define VDEC_CHPLLIM_rd_inputcables_SHIFT        0
#define VDEC_CHPLLIM_rd_inputcables(x)           (((uint32_t)(((uint32_t)(x))<<VDEC_CHPLLIM_rd_inputcables_SHIFT))&VDEC_CHPLLIM_rd_inputcables_MASK)
#define VDEC_CHPLLIM_rd_locked_force_MASK        0x8u
#define VDEC_CHPLLIM_rd_locked_force_SHIFT       3
#define VDEC_CHPLLIM_rd_chlock_atten_MASK        0x70u
#define VDEC_CHPLLIM_rd_chlock_atten_SHIFT       4
#define VDEC_CHPLLIM_rd_chlock_atten(x)          (((uint32_t)(((uint32_t)(x))<<VDEC_CHPLLIM_rd_chlock_atten_SHIFT))&VDEC_CHPLLIM_rd_chlock_atten_MASK)
/* VIDMOD Bit Fields */
#define VDEC_VIDMOD_havesignal_MASK              0x1u
#define VDEC_VIDMOD_havesignal_SHIFT             0
#define VDEC_VIDMOD_Hlocked_MASK                 0x2u
#define VDEC_VIDMOD_Hlocked_SHIFT                1
#define VDEC_VIDMOD_chroma_MASK                  0x4u
#define VDEC_VIDMOD_chroma_SHIFT                 2
#define VDEC_VIDMOD_ch_locked_MASK               0x8u
#define VDEC_VIDMOD_ch_locked_SHIFT              3
#define VDEC_VIDMOD_m625_MASK                    0x10u
#define VDEC_VIDMOD_m625_SHIFT                   4
#define VDEC_VIDMOD_Secam_MASK                   0x20u
#define VDEC_VIDMOD_Secam_SHIFT                  5
#define VDEC_VIDMOD_F443_MASK                    0x40u
#define VDEC_VIDMOD_F443_SHIFT                   6
#define VDEC_VIDMOD_Pal_MASK                     0x80u
#define VDEC_VIDMOD_Pal_SHIFT                    7
/* VIDSTS Bit Fields */
#define VDEC_VIDSTS_Nonarith_MASK                0x1u
#define VDEC_VIDSTS_Nonarith_SHIFT               0
#define VDEC_VIDSTS_Nonarith3D_MASK              0x2u
#define VDEC_VIDSTS_Nonarith3D_SHIFT             1
#define VDEC_VIDSTS_Vcrdetect_MASK               0x4u
#define VDEC_VIDSTS_Vcrdetect_SHIFT              2
/* NOISE Bit Fields */
#define VDEC_NOISE_Noise_MASK                    0xFFu
#define VDEC_NOISE_Noise_SHIFT                   0
#define VDEC_NOISE_Noise(x)                      (((uint32_t)(((uint32_t)(x))<<VDEC_NOISE_Noise_SHIFT))&VDEC_NOISE_Noise_MASK)
/* STDDBG Bit Fields */
#define VDEC_STDDBG_standard_filter_MASK         0x3u
#define VDEC_STDDBG_standard_filter_SHIFT        0
#define VDEC_STDDBG_standard_filter(x)           (((uint32_t)(((uint32_t)(x))<<VDEC_STDDBG_standard_filter_SHIFT))&VDEC_STDDBG_standard_filter_MASK)
#define VDEC_STDDBG_force_havesignal_MASK        0x8u
#define VDEC_STDDBG_force_havesignal_SHIFT       3
#define VDEC_STDDBG_force_2dntsc443_MASK         0x20u
#define VDEC_STDDBG_force_2dntsc443_SHIFT        5
#define VDEC_STDDBG_ntscj_MASK                   0x40u
#define VDEC_STDDBG_ntscj_SHIFT                  6
#define VDEC_STDDBG_rd_fc_maual_MASK             0x80u
#define VDEC_STDDBG_rd_fc_maual_SHIFT            7
/* MANOVR Bit Fields */
#define VDEC_MANOVR_manual_625_MASK              0x1u
#define VDEC_MANOVR_manual_625_SHIFT             0
#define VDEC_MANOVR_secam_manual_MASK            0x2u
#define VDEC_MANOVR_secam_manual_SHIFT           1
#define VDEC_MANOVR_four43_manual_MASK           0x4u
#define VDEC_MANOVR_four43_manual_SHIFT          2
#define VDEC_MANOVR_pal_manual_MASK              0x8u
#define VDEC_MANOVR_pal_manual_SHIFT             3
#define VDEC_MANOVR_line625_override_MASK        0x10u
#define VDEC_MANOVR_line625_override_SHIFT       4
#define VDEC_MANOVR_secam_override_MASK          0x20u
#define VDEC_MANOVR_secam_override_SHIFT         5
#define VDEC_MANOVR_f443_override_MASK           0x40u
#define VDEC_MANOVR_f443_override_SHIFT          6
#define VDEC_MANOVR_pal_override_MASK            0x80u
#define VDEC_MANOVR_pal_override_SHIFT           7
/* VSSGTH Bit Fields */
#define VDEC_VSSGTH_nosigthresh_MASK             0x7u
#define VDEC_VSSGTH_nosigthresh_SHIFT            0
#define VDEC_VSSGTH_nosigthresh(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_VSSGTH_nosigthresh_SHIFT))&VDEC_VSSGTH_nosigthresh_MASK)
#define VDEC_VSSGTH_rh_vsynclength_MASK          0xF0u
#define VDEC_VSSGTH_rh_vsynclength_SHIFT         4
#define VDEC_VSSGTH_rh_vsynclength(x)            (((uint32_t)(((uint32_t)(x))<<VDEC_VSSGTH_rh_vsynclength_SHIFT))&VDEC_VSSGTH_rh_vsynclength_MASK)
/* DBGFBH Bit Fields */
#define VDEC_DBGFBH_clamp_delayH_MASK            0x3u
#define VDEC_DBGFBH_clamp_delayH_SHIFT           0
#define VDEC_DBGFBH_clamp_delayH(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_DBGFBH_clamp_delayH_SHIFT))&VDEC_DBGFBH_clamp_delayH_MASK)
/* DBGFBL Bit Fields */
#define VDEC_DBGFBL_clamp_delayL_MASK            0xFFu
#define VDEC_DBGFBL_clamp_delayL_SHIFT           0
#define VDEC_DBGFBL_clamp_delayL(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_DBGFBL_clamp_delayL_SHIFT))&VDEC_DBGFBL_clamp_delayL_MASK)
/* HACTS Bit Fields */
#define VDEC_HACTS_ro_hactivestart_MASK          0xFFu
#define VDEC_HACTS_ro_hactivestart_SHIFT         0
#define VDEC_HACTS_ro_hactivestart(x)            (((uint32_t)(((uint32_t)(x))<<VDEC_HACTS_ro_hactivestart_SHIFT))&VDEC_HACTS_ro_hactivestart_MASK)
/* HACTE Bit Fields */
#define VDEC_HACTE_ro_hactiveend_MASK            0xFFu
#define VDEC_HACTE_ro_hactiveend_SHIFT           0
#define VDEC_HACTE_ro_hactiveend(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_HACTE_ro_hactiveend_SHIFT))&VDEC_HACTE_ro_hactiveend_MASK)
/* VACTS Bit Fields */
#define VDEC_VACTS_ro_vactivestart_MASK          0xFFu
#define VDEC_VACTS_ro_vactivestart_SHIFT         0
#define VDEC_VACTS_ro_vactivestart(x)            (((uint32_t)(((uint32_t)(x))<<VDEC_VACTS_ro_vactivestart_SHIFT))&VDEC_VACTS_ro_vactivestart_MASK)
/* VACTE Bit Fields */
#define VDEC_VACTE_ro_vactiveend_MASK            0xFFu
#define VDEC_VACTE_ro_vactiveend_SHIFT           0
#define VDEC_VACTE_ro_vactiveend(x)              (((uint32_t)(((uint32_t)(x))<<VDEC_VACTE_ro_vactiveend_SHIFT))&VDEC_VACTE_ro_vactiveend_MASK)
/* HSTIP Bit Fields */
#define VDEC_HSTIP_rh_tipgate_start_MASK         0xFFu
#define VDEC_HSTIP_rh_tipgate_start_SHIFT        0
#define VDEC_HSTIP_rh_tipgate_start(x)           (((uint32_t)(((uint32_t)(x))<<VDEC_HSTIP_rh_tipgate_start_SHIFT))&VDEC_HSTIP_rh_tipgate_start_MASK)
/* BLSCRCR Bit Fields */
#define VDEC_BLSCRCR_bluescreen_y_MASK           0xFFu
#define VDEC_BLSCRCR_bluescreen_y_SHIFT          0
#define VDEC_BLSCRCR_bluescreen_y(x)             (((uint32_t)(((uint32_t)(x))<<VDEC_BLSCRCR_bluescreen_y_SHIFT))&VDEC_BLSCRCR_bluescreen_y_MASK)
/* BLSCRCB Bit Fields */
#define VDEC_BLSCRCB_bluescreen_cb_MASK          0xFFu
#define VDEC_BLSCRCB_bluescreen_cb_SHIFT         0
#define VDEC_BLSCRCB_bluescreen_cb(x)            (((uint32_t)(((uint32_t)(x))<<VDEC_BLSCRCB_bluescreen_cb_SHIFT))&VDEC_BLSCRCB_bluescreen_cb_MASK)
/* LMAGC2 Bit Fields */
#define VDEC_LMAGC2_ragc_target_MASK             0xFFu
#define VDEC_LMAGC2_ragc_target_SHIFT            0
#define VDEC_LMAGC2_ragc_target(x)               (((uint32_t)(((uint32_t)(x))<<VDEC_LMAGC2_ragc_target_SHIFT))&VDEC_LMAGC2_ragc_target_MASK)
/* CHAGC2 Bit Fields */
#define VDEC_CHAGC2_rd_chagc_target_MASK         0xFFu
#define VDEC_CHAGC2_rd_chagc_target_SHIFT        0
#define VDEC_CHAGC2_rd_chagc_target(x)           (((uint32_t)(((uint32_t)(x))<<VDEC_CHAGC2_rd_chagc_target_SHIFT))&VDEC_CHAGC2_rd_chagc_target_MASK)
/* MINTH Bit Fields */
#define VDEC_MINTH_minthresh_MASK                0xFFu
#define VDEC_MINTH_minthresh_SHIFT               0
#define VDEC_MINTH_minthresh(x)                  (((uint32_t)(((uint32_t)(x))<<VDEC_MINTH_minthresh_SHIFT))&VDEC_MINTH_minthresh_MASK)
/* VFRQOH Bit Fields */
#define VDEC_VFRQOH_vfreqo_MASK                  0xFu
#define VDEC_VFRQOH_vfreqo_SHIFT                 0
#define VDEC_VFRQOH_vfreqo(x)                    (((uint32_t)(((uint32_t)(x))<<VDEC_VFRQOH_vfreqo_SHIFT))&VDEC_VFRQOH_vfreqo_MASK)
/* VFRQOL Bit Fields */
#define VDEC_VFRQOL_vfreqo_MASK                  0xFFu
#define VDEC_VFRQOL_vfreqo_SHIFT                 0
#define VDEC_VFRQOL_vfreqo(x)                    (((uint32_t)(((uint32_t)(x))<<VDEC_VFRQOL_vfreqo_SHIFT))&VDEC_VFRQOL_vfreqo_MASK)

/**
 * @}
 */ /* end of group VDEC_Register_Masks */


/* VDEC - Peripheral instance base addresses */
/** Peripheral VDEC base pointer */
#define VDEC_BASE_PTR                            ((VDEC_MemMapPtr)0x400C8000u)
/** Array initializer of VDEC peripheral base pointers */
#define VDEC_BASE_PTRS                           { VDEC_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- VDEC - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VDEC_Register_Accessor_Macros VDEC - Register accessor macros
 * @{
 */


/* VDEC - Register instance definitions */
/* VDEC */
#define VDEC_CFC1                                VDEC_CFC1_REG(VDEC_BASE_PTR)
#define VDEC_BRSTGT                              VDEC_BRSTGT_REG(VDEC_BASE_PTR)
#define VDEC_HZPOS                               VDEC_HZPOS_REG(VDEC_BASE_PTR)
#define VDEC_VRTPOS                              VDEC_VRTPOS_REG(VDEC_BASE_PTR)
#define VDEC_HVSHFT                              VDEC_HVSHFT_REG(VDEC_BASE_PTR)
#define VDEC_HSIGS                               VDEC_HSIGS_REG(VDEC_BASE_PTR)
#define VDEC_HSIGE                               VDEC_HSIGE_REG(VDEC_BASE_PTR)
#define VDEC_VSCON1                              VDEC_VSCON1_REG(VDEC_BASE_PTR)
#define VDEC_VSCON2                              VDEC_VSCON2_REG(VDEC_BASE_PTR)
#define VDEC_YCDEL                               VDEC_YCDEL_REG(VDEC_BASE_PTR)
#define VDEC_AFTCLP                              VDEC_AFTCLP_REG(VDEC_BASE_PTR)
#define VDEC_DCOFF                               VDEC_DCOFF_REG(VDEC_BASE_PTR)
#define VDEC_CSID                                VDEC_CSID_REG(VDEC_BASE_PTR)
#define VDEC_CBGN                                VDEC_CBGN_REG(VDEC_BASE_PTR)
#define VDEC_CRGN                                VDEC_CRGN_REG(VDEC_BASE_PTR)
#define VDEC_CNTR                                VDEC_CNTR_REG(VDEC_BASE_PTR)
#define VDEC_BRT                                 VDEC_BRT_REG(VDEC_BASE_PTR)
#define VDEC_HUE                                 VDEC_HUE_REG(VDEC_BASE_PTR)
#define VDEC_CHBTH                               VDEC_CHBTH_REG(VDEC_BASE_PTR)
#define VDEC_SHPIMP                              VDEC_SHPIMP_REG(VDEC_BASE_PTR)
#define VDEC_CHPLLIM                             VDEC_CHPLLIM_REG(VDEC_BASE_PTR)
#define VDEC_VIDMOD                              VDEC_VIDMOD_REG(VDEC_BASE_PTR)
#define VDEC_VIDSTS                              VDEC_VIDSTS_REG(VDEC_BASE_PTR)
#define VDEC_NOISE                               VDEC_NOISE_REG(VDEC_BASE_PTR)
#define VDEC_STDDBG                              VDEC_STDDBG_REG(VDEC_BASE_PTR)
#define VDEC_MANOVR                              VDEC_MANOVR_REG(VDEC_BASE_PTR)
#define VDEC_VSSGTH                              VDEC_VSSGTH_REG(VDEC_BASE_PTR)
#define VDEC_DBGFBH                              VDEC_DBGFBH_REG(VDEC_BASE_PTR)
#define VDEC_DBGFBL                              VDEC_DBGFBL_REG(VDEC_BASE_PTR)
#define VDEC_HACTS                               VDEC_HACTS_REG(VDEC_BASE_PTR)
#define VDEC_HACTE                               VDEC_HACTE_REG(VDEC_BASE_PTR)
#define VDEC_VACTS                               VDEC_VACTS_REG(VDEC_BASE_PTR)
#define VDEC_VACTE                               VDEC_VACTE_REG(VDEC_BASE_PTR)
#define VDEC_HSTIP                               VDEC_HSTIP_REG(VDEC_BASE_PTR)
#define VDEC_BLSCRCR                             VDEC_BLSCRCR_REG(VDEC_BASE_PTR)
#define VDEC_BLSCRCB                             VDEC_BLSCRCB_REG(VDEC_BASE_PTR)
#define VDEC_LMAGC2                              VDEC_LMAGC2_REG(VDEC_BASE_PTR)
#define VDEC_CHAGC2                              VDEC_CHAGC2_REG(VDEC_BASE_PTR)
#define VDEC_MINTH                               VDEC_MINTH_REG(VDEC_BASE_PTR)
#define VDEC_VFRQOH                              VDEC_VFRQOH_REG(VDEC_BASE_PTR)
#define VDEC_VFRQOL                              VDEC_VFRQOL_REG(VDEC_BASE_PTR)

/**
 * @}
 */ /* end of group VDEC_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group VDEC_Peripheral */


/* ----------------------------------------------------------------------------
   -- VIU3
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VIU3_Peripheral VIU3
 * @{
 */

/** VIU3 - Peripheral register structure */
typedef struct VIU3_MemMap {
  uint32_t SCR;                                    /**< Status And Configuration Register, offset: 0x0 */
  uint32_t LUMA_COMP;                              /**< Luminance Coefficients For Red, Green And Blue Matrix, offset: 0x4 */
  uint32_t CHROMA_RED;                             /**< Chroma Coefficients For Red Matrix, offset: 0x8 */
  uint32_t CHROMA_GREEN;                           /**< Chroma Coefficients For Green Matrix, offset: 0xC */
  uint32_t CHROMA_BLUE;                            /**< Chroma Coefficients For Blue Matrix, offset: 0x10 */
  uint32_t DMA_ADDR;                               /**< Base Address Of Every Field/Frame Of Picture In Memory, offset: 0x14 */
  uint32_t DMA_INC;                                /**< Horizontal DMA Increment, offset: 0x18 */
  uint32_t INVSZ;                                  /**< Input Video Pixel and Line Count, offset: 0x1C */
  uint32_t HPRALRM;                                /**< High IPM Request Priority Alarm, offset: 0x20 */
  uint32_t ALPHA;                                  /**< Programable Alpha Value, offset: 0x24 */
  uint32_t HFACTOR;                                /**< Down Scaling Factor In Horizontal Direction, offset: 0x28 */
  uint32_t VFACTOR;                                /**< Down Scaling Factor In Vertical Direction, offset: 0x2C */
  uint32_t VID_SIZE;                               /**< Down Scaling Destination Pixel and Line Count, offset: 0x30 */
  uint32_t LUT_ADDR;                               /**< B/C Adjust Look-up-table Current Address, offset: 0x34 */
  uint32_t LUT_DATA;                               /**< B/C Adjust Look-up-table Data Entry, offset: 0x38 */
  uint32_t EXT_CONFIG;                             /**< Extended Configuration Register, offset: 0x3C */
  uint32_t RGB_Y;                                  /**< Red, Green and Blue Coefficients for Luminance component, offset: 0x40 */
  uint32_t RGB_U;                                  /**< Red, Green and Blue Coefficients for Chroma U component, offset: 0x44 */
  uint32_t RGB_V;                                  /**< Red, Green and Blue Coefficients for Chroma V component, offset: 0x48 */
} volatile *VIU3_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- VIU3 - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VIU3_Register_Accessor_Macros VIU3 - Register accessor macros
 * @{
 */


/* VIU3 - Register accessors */
#define VIU3_SCR_REG(base)                       ((base)->SCR)
#define VIU3_LUMA_COMP_REG(base)                 ((base)->LUMA_COMP)
#define VIU3_CHROMA_RED_REG(base)                ((base)->CHROMA_RED)
#define VIU3_CHROMA_GREEN_REG(base)              ((base)->CHROMA_GREEN)
#define VIU3_CHROMA_BLUE_REG(base)               ((base)->CHROMA_BLUE)
#define VIU3_DMA_ADDR_REG(base)                  ((base)->DMA_ADDR)
#define VIU3_DMA_INC_REG(base)                   ((base)->DMA_INC)
#define VIU3_INVSZ_REG(base)                     ((base)->INVSZ)
#define VIU3_HPRALRM_REG(base)                   ((base)->HPRALRM)
#define VIU3_ALPHA_REG(base)                     ((base)->ALPHA)
#define VIU3_HFACTOR_REG(base)                   ((base)->HFACTOR)
#define VIU3_VFACTOR_REG(base)                   ((base)->VFACTOR)
#define VIU3_VID_SIZE_REG(base)                  ((base)->VID_SIZE)
#define VIU3_LUT_ADDR_REG(base)                  ((base)->LUT_ADDR)
#define VIU3_LUT_DATA_REG(base)                  ((base)->LUT_DATA)
#define VIU3_EXT_CONFIG_REG(base)                ((base)->EXT_CONFIG)
#define VIU3_RGB_Y_REG(base)                     ((base)->RGB_Y)
#define VIU3_RGB_U_REG(base)                     ((base)->RGB_U)
#define VIU3_RGB_V_REG(base)                     ((base)->RGB_V)

/**
 * @}
 */ /* end of group VIU3_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- VIU3 Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VIU3_Register_Masks VIU3 Register Masks
 * @{
 */

/* SCR Bit Fields */
#define VIU3_SCR_SOFT_RESET_MASK                 0x1u
#define VIU3_SCR_SOFT_RESET_SHIFT                0
#define VIU3_SCR_FORMAT_CTRL_MASK                0xEu
#define VIU3_SCR_FORMAT_CTRL_SHIFT               1
#define VIU3_SCR_FORMAT_CTRL(x)                  (((uint32_t)(((uint32_t)(x))<<VIU3_SCR_FORMAT_CTRL_SHIFT))&VIU3_SCR_FORMAT_CTRL_MASK)
#define VIU3_SCR_ERROR_CODE_MASK                 0xF0u
#define VIU3_SCR_ERROR_CODE_SHIFT                4
#define VIU3_SCR_ERROR_CODE(x)                   (((uint32_t)(((uint32_t)(x))<<VIU3_SCR_ERROR_CODE_SHIFT))&VIU3_SCR_ERROR_CODE_MASK)
#define VIU3_SCR_FIELD_EN_MASK                   0x100u
#define VIU3_SCR_FIELD_EN_SHIFT                  8
#define VIU3_SCR_VSYNC_EN_MASK                   0x200u
#define VIU3_SCR_VSYNC_EN_SHIFT                  9
#define VIU3_SCR_HSYNC_EN_MASK                   0x400u
#define VIU3_SCR_HSYNC_EN_SHIFT                  10
#define VIU3_SCR_VSTART_EN_MASK                  0x800u
#define VIU3_SCR_VSTART_EN_SHIFT                 11
#define VIU3_SCR_DMA_END_EN_MASK                 0x1000u
#define VIU3_SCR_DMA_END_EN_SHIFT                12
#define VIU3_SCR_ERROR_EN_MASK                   0x2000u
#define VIU3_SCR_ERROR_EN_SHIFT                  13
#define VIU3_SCR_ECC_EN_MASK                     0x4000u
#define VIU3_SCR_ECC_EN_SHIFT                    14
#define VIU3_SCR_FIELD_IRQ_MASK                  0x10000u
#define VIU3_SCR_FIELD_IRQ_SHIFT                 16
#define VIU3_SCR_VSYNC_IRQ_MASK                  0x20000u
#define VIU3_SCR_VSYNC_IRQ_SHIFT                 17
#define VIU3_SCR_HSYNC_IRQ_MASK                  0x40000u
#define VIU3_SCR_HSYNC_IRQ_SHIFT                 18
#define VIU3_SCR_VSTART_IRQ_MASK                 0x80000u
#define VIU3_SCR_VSTART_IRQ_SHIFT                19
#define VIU3_SCR_DMA_END_IRQ_MASK                0x100000u
#define VIU3_SCR_DMA_END_IRQ_SHIFT               20
#define VIU3_SCR_ERROR_IRQ_MASK                  0x200000u
#define VIU3_SCR_ERROR_IRQ_SHIFT                 21
#define VIU3_SCR_MODE444_MASK                    0x800000u
#define VIU3_SCR_MODE444_SHIFT                   23
#define VIU3_SCR_BC_EN_MASK                      0x1000000u
#define VIU3_SCR_BC_EN_SHIFT                     24
#define VIU3_SCR_YUV2RGB_EN_MASK                 0x2000000u
#define VIU3_SCR_YUV2RGB_EN_SHIFT                25
#define VIU3_SCR_SCALER_EN_MASK                  0x4000000u
#define VIU3_SCR_SCALER_EN_SHIFT                 26
#define VIU3_SCR_DMA_ACT_MASK                    0x8000000u
#define VIU3_SCR_DMA_ACT_SHIFT                   27
#define VIU3_SCR_FIELD_NO_MASK                   0x10000000u
#define VIU3_SCR_FIELD_NO_SHIFT                  28
#define VIU3_SCR_DITHER_ON_MASK                  0x20000000u
#define VIU3_SCR_DITHER_ON_SHIFT                 29
#define VIU3_SCR_ROUND_ON_MASK                   0x40000000u
#define VIU3_SCR_ROUND_ON_SHIFT                  30
#define VIU3_SCR_MODE32BIT_MASK                  0x80000000u
#define VIU3_SCR_MODE32BIT_SHIFT                 31
/* LUMA_COMP Bit Fields */
#define VIU3_LUMA_COMP_Y_BLUE_MASK               0x3FFu
#define VIU3_LUMA_COMP_Y_BLUE_SHIFT              0
#define VIU3_LUMA_COMP_Y_BLUE(x)                 (((uint32_t)(((uint32_t)(x))<<VIU3_LUMA_COMP_Y_BLUE_SHIFT))&VIU3_LUMA_COMP_Y_BLUE_MASK)
#define VIU3_LUMA_COMP_Y_GREEN_MASK              0x1FF800u
#define VIU3_LUMA_COMP_Y_GREEN_SHIFT             11
#define VIU3_LUMA_COMP_Y_GREEN(x)                (((uint32_t)(((uint32_t)(x))<<VIU3_LUMA_COMP_Y_GREEN_SHIFT))&VIU3_LUMA_COMP_Y_GREEN_MASK)
#define VIU3_LUMA_COMP_Y_RED_MASK                0xFFC00000u
#define VIU3_LUMA_COMP_Y_RED_SHIFT               22
#define VIU3_LUMA_COMP_Y_RED(x)                  (((uint32_t)(((uint32_t)(x))<<VIU3_LUMA_COMP_Y_RED_SHIFT))&VIU3_LUMA_COMP_Y_RED_MASK)
/* CHROMA_RED Bit Fields */
#define VIU3_CHROMA_RED_CB_RED_MASK              0xFFFu
#define VIU3_CHROMA_RED_CB_RED_SHIFT             0
#define VIU3_CHROMA_RED_CB_RED(x)                (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_RED_CB_RED_SHIFT))&VIU3_CHROMA_RED_CB_RED_MASK)
#define VIU3_CHROMA_RED_CR_RED_MASK              0x7FF0000u
#define VIU3_CHROMA_RED_CR_RED_SHIFT             16
#define VIU3_CHROMA_RED_CR_RED(x)                (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_RED_CR_RED_SHIFT))&VIU3_CHROMA_RED_CR_RED_MASK)
/* CHROMA_GREEN Bit Fields */
#define VIU3_CHROMA_GREEN_CB_GREEN_MASK          0xFFFu
#define VIU3_CHROMA_GREEN_CB_GREEN_SHIFT         0
#define VIU3_CHROMA_GREEN_CB_GREEN(x)            (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_GREEN_CB_GREEN_SHIFT))&VIU3_CHROMA_GREEN_CB_GREEN_MASK)
#define VIU3_CHROMA_GREEN_CR_GREEN_MASK          0x7FF0000u
#define VIU3_CHROMA_GREEN_CR_GREEN_SHIFT         16
#define VIU3_CHROMA_GREEN_CR_GREEN(x)            (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_GREEN_CR_GREEN_SHIFT))&VIU3_CHROMA_GREEN_CR_GREEN_MASK)
/* CHROMA_BLUE Bit Fields */
#define VIU3_CHROMA_BLUE_CB_BLUE_MASK            0xFFFu
#define VIU3_CHROMA_BLUE_CB_BLUE_SHIFT           0
#define VIU3_CHROMA_BLUE_CB_BLUE(x)              (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_BLUE_CB_BLUE_SHIFT))&VIU3_CHROMA_BLUE_CB_BLUE_MASK)
#define VIU3_CHROMA_BLUE_CR_BLUE_MASK            0x7FF0000u
#define VIU3_CHROMA_BLUE_CR_BLUE_SHIFT           16
#define VIU3_CHROMA_BLUE_CR_BLUE(x)              (((uint32_t)(((uint32_t)(x))<<VIU3_CHROMA_BLUE_CR_BLUE_SHIFT))&VIU3_CHROMA_BLUE_CR_BLUE_MASK)
/* DMA_ADDR Bit Fields */
#define VIU3_DMA_ADDR_ADDR_MASK                  0xFFFFFFF8u
#define VIU3_DMA_ADDR_ADDR_SHIFT                 3
#define VIU3_DMA_ADDR_ADDR(x)                    (((uint32_t)(((uint32_t)(x))<<VIU3_DMA_ADDR_ADDR_SHIFT))&VIU3_DMA_ADDR_ADDR_MASK)
/* DMA_INC Bit Fields */
#define VIU3_DMA_INC_INC_MASK                    0xFFF8u
#define VIU3_DMA_INC_INC_SHIFT                   3
#define VIU3_DMA_INC_INC(x)                      (((uint32_t)(((uint32_t)(x))<<VIU3_DMA_INC_INC_SHIFT))&VIU3_DMA_INC_INC_MASK)
/* INVSZ Bit Fields */
#define VIU3_INVSZ_PIXELC_MASK                   0xFFFFu
#define VIU3_INVSZ_PIXELC_SHIFT                  0
#define VIU3_INVSZ_PIXELC(x)                     (((uint32_t)(((uint32_t)(x))<<VIU3_INVSZ_PIXELC_SHIFT))&VIU3_INVSZ_PIXELC_MASK)
#define VIU3_INVSZ_LINEC_MASK                    0xFFFF0000u
#define VIU3_INVSZ_LINEC_SHIFT                   16
#define VIU3_INVSZ_LINEC(x)                      (((uint32_t)(((uint32_t)(x))<<VIU3_INVSZ_LINEC_SHIFT))&VIU3_INVSZ_LINEC_MASK)
/* HPRALRM Bit Fields */
#define VIU3_HPRALRM_ALARM_MASK                  0xFFu
#define VIU3_HPRALRM_ALARM_SHIFT                 0
#define VIU3_HPRALRM_ALARM(x)                    (((uint32_t)(((uint32_t)(x))<<VIU3_HPRALRM_ALARM_SHIFT))&VIU3_HPRALRM_ALARM_MASK)
/* ALPHA Bit Fields */
#define VIU3_ALPHA_ALPHA_MASK                    0xFFu
#define VIU3_ALPHA_ALPHA_SHIFT                   0
#define VIU3_ALPHA_ALPHA(x)                      (((uint32_t)(((uint32_t)(x))<<VIU3_ALPHA_ALPHA_SHIFT))&VIU3_ALPHA_ALPHA_MASK)
/* HFACTOR Bit Fields */
#define VIU3_HFACTOR_FACTOR_MASK                 0x7FFu
#define VIU3_HFACTOR_FACTOR_SHIFT                0
#define VIU3_HFACTOR_FACTOR(x)                   (((uint32_t)(((uint32_t)(x))<<VIU3_HFACTOR_FACTOR_SHIFT))&VIU3_HFACTOR_FACTOR_MASK)
/* VFACTOR Bit Fields */
#define VIU3_VFACTOR_FACTOR_MASK                 0x7FFu
#define VIU3_VFACTOR_FACTOR_SHIFT                0
#define VIU3_VFACTOR_FACTOR(x)                   (((uint32_t)(((uint32_t)(x))<<VIU3_VFACTOR_FACTOR_SHIFT))&VIU3_VFACTOR_FACTOR_MASK)
/* VID_SIZE Bit Fields */
#define VIU3_VID_SIZE_PIXELC_MASK                0xFFFFu
#define VIU3_VID_SIZE_PIXELC_SHIFT               0
#define VIU3_VID_SIZE_PIXELC(x)                  (((uint32_t)(((uint32_t)(x))<<VIU3_VID_SIZE_PIXELC_SHIFT))&VIU3_VID_SIZE_PIXELC_MASK)
#define VIU3_VID_SIZE_LINEC_MASK                 0xFFFF0000u
#define VIU3_VID_SIZE_LINEC_SHIFT                16
#define VIU3_VID_SIZE_LINEC(x)                   (((uint32_t)(((uint32_t)(x))<<VIU3_VID_SIZE_LINEC_SHIFT))&VIU3_VID_SIZE_LINEC_MASK)
/* LUT_ADDR Bit Fields */
#define VIU3_LUT_ADDR_ADDR_MASK                  0x3FCu
#define VIU3_LUT_ADDR_ADDR_SHIFT                 2
#define VIU3_LUT_ADDR_ADDR(x)                    (((uint32_t)(((uint32_t)(x))<<VIU3_LUT_ADDR_ADDR_SHIFT))&VIU3_LUT_ADDR_ADDR_MASK)
/* LUT_DATA Bit Fields */
#define VIU3_LUT_DATA_DATA_MASK                  0xFFFFFFFFu
#define VIU3_LUT_DATA_DATA_SHIFT                 0
#define VIU3_LUT_DATA_DATA(x)                    (((uint32_t)(((uint32_t)(x))<<VIU3_LUT_DATA_DATA_SHIFT))&VIU3_LUT_DATA_DATA_MASK)
/* EXT_CONFIG Bit Fields */
#define VIU3_EXT_CONFIG_HMIRROR_EN_MASK          0x1u
#define VIU3_EXT_CONFIG_HMIRROR_EN_SHIFT         0
#define VIU3_EXT_CONFIG_DE_POL_MASK              0x2u
#define VIU3_EXT_CONFIG_DE_POL_SHIFT             1
#define VIU3_EXT_CONFIG_HSYNC_POL_MASK           0x4u
#define VIU3_EXT_CONFIG_HSYNC_POL_SHIFT          2
#define VIU3_EXT_CONFIG_VSYNC_POL_MASK           0x8u
#define VIU3_EXT_CONFIG_VSYNC_POL_SHIFT          3
#define VIU3_EXT_CONFIG_PCLK_POL_MASK            0x10u
#define VIU3_EXT_CONFIG_PCLK_POL_SHIFT           4
#define VIU3_EXT_CONFIG_INP_FORMAT_MASK          0xE0u
#define VIU3_EXT_CONFIG_INP_FORMAT_SHIFT         5
#define VIU3_EXT_CONFIG_INP_FORMAT(x)            (((uint32_t)(((uint32_t)(x))<<VIU3_EXT_CONFIG_INP_FORMAT_SHIFT))&VIU3_EXT_CONFIG_INP_FORMAT_MASK)
#define VIU3_EXT_CONFIG_DE_VALID_MASK            0x100u
#define VIU3_EXT_CONFIG_DE_VALID_SHIFT           8
#define VIU3_EXT_CONFIG_RGB2YUV_EN_MASK          0x200u
#define VIU3_EXT_CONFIG_RGB2YUV_EN_SHIFT         9
#define VIU3_EXT_CONFIG_LENDIAN_MASK             0x800u
#define VIU3_EXT_CONFIG_LENDIAN_SHIFT            11
#define VIU3_EXT_CONFIG_CS_EN_MASK               0x1000u
#define VIU3_EXT_CONFIG_CS_EN_SHIFT              12
/* RGB_Y Bit Fields */
#define VIU3_RGB_Y_B_Y_MASK                      0x3Fu
#define VIU3_RGB_Y_B_Y_SHIFT                     0
#define VIU3_RGB_Y_B_Y(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_Y_B_Y_SHIFT))&VIU3_RGB_Y_B_Y_MASK)
#define VIU3_RGB_Y_G_Y_MASK                      0xFF800u
#define VIU3_RGB_Y_G_Y_SHIFT                     11
#define VIU3_RGB_Y_G_Y(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_Y_G_Y_SHIFT))&VIU3_RGB_Y_G_Y_MASK)
#define VIU3_RGB_Y_R_Y_MASK                      0x3FC00000u
#define VIU3_RGB_Y_R_Y_SHIFT                     22
#define VIU3_RGB_Y_R_Y(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_Y_R_Y_SHIFT))&VIU3_RGB_Y_R_Y_MASK)
/* RGB_U Bit Fields */
#define VIU3_RGB_U_B_U_MASK                      0xFFu
#define VIU3_RGB_U_B_U_SHIFT                     0
#define VIU3_RGB_U_B_U(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_U_B_U_SHIFT))&VIU3_RGB_U_B_U_MASK)
#define VIU3_RGB_U_G_U_MASK                      0x7F800u
#define VIU3_RGB_U_G_U_SHIFT                     11
#define VIU3_RGB_U_G_U(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_U_G_U_SHIFT))&VIU3_RGB_U_G_U_MASK)
#define VIU3_RGB_U_R_U_MASK                      0x1FC00000u
#define VIU3_RGB_U_R_U_SHIFT                     22
#define VIU3_RGB_U_R_U(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_U_R_U_SHIFT))&VIU3_RGB_U_R_U_MASK)
/* RGB_V Bit Fields */
#define VIU3_RGB_V_B_V_MASK                      0x3Fu
#define VIU3_RGB_V_B_V_SHIFT                     0
#define VIU3_RGB_V_B_V(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_V_B_V_SHIFT))&VIU3_RGB_V_B_V_MASK)
#define VIU3_RGB_V_G_V_MASK                      0x7F800u
#define VIU3_RGB_V_G_V_SHIFT                     11
#define VIU3_RGB_V_G_V(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_V_G_V_SHIFT))&VIU3_RGB_V_G_V_MASK)
#define VIU3_RGB_V_R_V_MASK                      0x3FC00000u
#define VIU3_RGB_V_R_V_SHIFT                     22
#define VIU3_RGB_V_R_V(x)                        (((uint32_t)(((uint32_t)(x))<<VIU3_RGB_V_R_V_SHIFT))&VIU3_RGB_V_R_V_MASK)

/**
 * @}
 */ /* end of group VIU3_Register_Masks */


/* VIU3 - Peripheral instance base addresses */
/** Peripheral VIU3 base pointer */
#define VIU3_BASE_PTR                            ((VIU3_MemMapPtr)0x400C9000u)
/** Array initializer of VIU3 peripheral base pointers */
#define VIU3_BASE_PTRS                           { VIU3_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- VIU3 - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VIU3_Register_Accessor_Macros VIU3 - Register accessor macros
 * @{
 */


/* VIU3 - Register instance definitions */
/* VIU3 */
#define VIU3_SCR                                 VIU3_SCR_REG(VIU3_BASE_PTR)
#define VIU3_LUMA_COMP                           VIU3_LUMA_COMP_REG(VIU3_BASE_PTR)
#define VIU3_CHROMA_RED                          VIU3_CHROMA_RED_REG(VIU3_BASE_PTR)
#define VIU3_CHROMA_GREEN                        VIU3_CHROMA_GREEN_REG(VIU3_BASE_PTR)
#define VIU3_CHROMA_BLUE                         VIU3_CHROMA_BLUE_REG(VIU3_BASE_PTR)
#define VIU3_DMA_ADDR                            VIU3_DMA_ADDR_REG(VIU3_BASE_PTR)
#define VIU3_DMA_INC                             VIU3_DMA_INC_REG(VIU3_BASE_PTR)
#define VIU3_INVSZ                               VIU3_INVSZ_REG(VIU3_BASE_PTR)
#define VIU3_HPRALRM                             VIU3_HPRALRM_REG(VIU3_BASE_PTR)
#define VIU3_ALPHA                               VIU3_ALPHA_REG(VIU3_BASE_PTR)
#define VIU3_HFACTOR                             VIU3_HFACTOR_REG(VIU3_BASE_PTR)
#define VIU3_VFACTOR                             VIU3_VFACTOR_REG(VIU3_BASE_PTR)
#define VIU3_VID_SIZE                            VIU3_VID_SIZE_REG(VIU3_BASE_PTR)
#define VIU3_LUT_ADDR                            VIU3_LUT_ADDR_REG(VIU3_BASE_PTR)
#define VIU3_LUT_DATA                            VIU3_LUT_DATA_REG(VIU3_BASE_PTR)
#define VIU3_EXT_CONFIG                          VIU3_EXT_CONFIG_REG(VIU3_BASE_PTR)
#define VIU3_RGB_Y                               VIU3_RGB_Y_REG(VIU3_BASE_PTR)
#define VIU3_RGB_U                               VIU3_RGB_U_REG(VIU3_BASE_PTR)
#define VIU3_RGB_V                               VIU3_RGB_V_REG(VIU3_BASE_PTR)

/**
 * @}
 */ /* end of group VIU3_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group VIU3_Peripheral */


/* ----------------------------------------------------------------------------
   -- VREG
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VREG_Peripheral VREG
 * @{
 */

/** VREG - Peripheral register structure */
typedef struct VREG_MemMap {
  uint32_t CTRL;                                   /**< Control Register, offset: 0x0 */
  uint32_t STAT;                                   /**< Status register, offset: 0x4 */
} volatile *VREG_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- VREG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VREG_Register_Accessor_Macros VREG - Register accessor macros
 * @{
 */


/* VREG - Register accessors */
#define VREG_CTRL_REG(base)                      ((base)->CTRL)
#define VREG_STAT_REG(base)                      ((base)->STAT)

/**
 * @}
 */ /* end of group VREG_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- VREG Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VREG_Register_Masks VREG Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define VREG_CTRL_HVDMASK_MASK                   0x1u
#define VREG_CTRL_HVDMASK_SHIFT                  0
#define VREG_CTRL_POR1P2_PD_MASK                 0x4u
#define VREG_CTRL_POR1P2_PD_SHIFT                2
#define VREG_CTRL_HVD_PD_MASK                    0x8u
#define VREG_CTRL_HVD_PD_SHIFT                   3
#define VREG_CTRL_PORPU_MASK                     0x10000u
#define VREG_CTRL_PORPU_SHIFT                    16
/* STAT Bit Fields */
#define VREG_STAT_HVDSTAT_MASK                   0x1u
#define VREG_STAT_HVDSTAT_SHIFT                  0

/**
 * @}
 */ /* end of group VREG_Register_Masks */


/* VREG - Peripheral instance base addresses */
/** Peripheral VREG base pointer */
#define VREG_BASE_PTR                            ((VREG_MemMapPtr)0x4006D000u)
/** Array initializer of VREG peripheral base pointers */
#define VREG_BASE_PTRS                           { VREG_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- VREG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup VREG_Register_Accessor_Macros VREG - Register accessor macros
 * @{
 */


/* VREG - Register instance definitions */
/* VREG */
#define VREG_CTRL                                VREG_CTRL_REG(VREG_BASE_PTR)
#define VREG_STAT                                VREG_STAT_REG(VREG_BASE_PTR)

/**
 * @}
 */ /* end of group VREG_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group VREG_Peripheral */


/* ----------------------------------------------------------------------------
   -- WDOG
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WDOG_Peripheral WDOG
 * @{
 */

/** WDOG - Peripheral register structure */
typedef struct WDOG_MemMap {
  uint16_t WCR;                                    /**< Watchdog Control Register, offset: 0x0 */
  uint16_t WSR;                                    /**< Watchdog Service Register, offset: 0x2 */
  uint16_t WRSR;                                   /**< Watchdog Reset Status Register, offset: 0x4 */
  uint16_t WICR;                                   /**< Watchdog Interrupt Control Register, offset: 0x6 */
  uint16_t WMCR;                                   /**< Watchdog Miscellaneous Control Register, offset: 0x8 */
} volatile *WDOG_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- WDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WDOG_Register_Accessor_Macros WDOG - Register accessor macros
 * @{
 */


/* WDOG - Register accessors */
#define WDOG_WCR_REG(base)                       ((base)->WCR)
#define WDOG_WSR_REG(base)                       ((base)->WSR)
#define WDOG_WRSR_REG(base)                      ((base)->WRSR)
#define WDOG_WICR_REG(base)                      ((base)->WICR)
#define WDOG_WMCR_REG(base)                      ((base)->WMCR)

/**
 * @}
 */ /* end of group WDOG_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- WDOG Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WDOG_Register_Masks WDOG Register Masks
 * @{
 */

/* WCR Bit Fields */
#define WDOG_WCR_WDZST_MASK                      0x1u
#define WDOG_WCR_WDZST_SHIFT                     0
#define WDOG_WCR_WDBG_MASK                       0x2u
#define WDOG_WCR_WDBG_SHIFT                      1
#define WDOG_WCR_WDE_MASK                        0x4u
#define WDOG_WCR_WDE_SHIFT                       2
#define WDOG_WCR_WDT_MASK                        0x8u
#define WDOG_WCR_WDT_SHIFT                       3
#define WDOG_WCR_SRS_MASK                        0x10u
#define WDOG_WCR_SRS_SHIFT                       4
#define WDOG_WCR_WDA_MASK                        0x20u
#define WDOG_WCR_WDA_SHIFT                       5
#define WDOG_WCR_SRE_MASK                        0x40u
#define WDOG_WCR_SRE_SHIFT                       6
#define WDOG_WCR_WDW_MASK                        0x80u
#define WDOG_WCR_WDW_SHIFT                       7
#define WDOG_WCR_WT_MASK                         0xFF00u
#define WDOG_WCR_WT_SHIFT                        8
#define WDOG_WCR_WT(x)                           (((uint16_t)(((uint16_t)(x))<<WDOG_WCR_WT_SHIFT))&WDOG_WCR_WT_MASK)
/* WSR Bit Fields */
#define WDOG_WSR_WSR_MASK                        0xFFFFu
#define WDOG_WSR_WSR_SHIFT                       0
#define WDOG_WSR_WSR(x)                          (((uint16_t)(((uint16_t)(x))<<WDOG_WSR_WSR_SHIFT))&WDOG_WSR_WSR_MASK)
/* WRSR Bit Fields */
#define WDOG_WRSR_SFTW_MASK                      0x1u
#define WDOG_WRSR_SFTW_SHIFT                     0
#define WDOG_WRSR_TOUT_MASK                      0x2u
#define WDOG_WRSR_TOUT_SHIFT                     1
#define WDOG_WRSR_POR_MASK                       0x10u
#define WDOG_WRSR_POR_SHIFT                      4
/* WICR Bit Fields */
#define WDOG_WICR_WICT_MASK                      0xFFu
#define WDOG_WICR_WICT_SHIFT                     0
#define WDOG_WICR_WICT(x)                        (((uint16_t)(((uint16_t)(x))<<WDOG_WICR_WICT_SHIFT))&WDOG_WICR_WICT_MASK)
#define WDOG_WICR_WTIS_MASK                      0x4000u
#define WDOG_WICR_WTIS_SHIFT                     14
#define WDOG_WICR_WIE_MASK                       0x8000u
#define WDOG_WICR_WIE_SHIFT                      15
/* WMCR Bit Fields */
#define WDOG_WMCR_PDE_MASK                       0x1u
#define WDOG_WMCR_PDE_SHIFT                      0

/**
 * @}
 */ /* end of group WDOG_Register_Masks */


/* WDOG - Peripheral instance base addresses */
/** Peripheral WDOG base pointer */
#define WDOG_BASE_PTR                            ((WDOG_MemMapPtr)0u)
/** Array initializer of WDOG peripheral base pointers */
#define WDOG_BASE_PTRS                           { WDOG_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- WDOG - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WDOG_Register_Accessor_Macros WDOG - Register accessor macros
 * @{
 */


/* WDOG - Register instance definitions */
/* WDOG */
#define WDOG_WCR                                 WDOG_WCR_REG(WDOG_BASE_PTR)
#define WDOG_WSR                                 WDOG_WSR_REG(WDOG_BASE_PTR)
#define WDOG_WRSR                                WDOG_WRSR_REG(WDOG_BASE_PTR)
#define WDOG_WICR                                WDOG_WICR_REG(WDOG_BASE_PTR)
#define WDOG_WMCR                                WDOG_WMCR_REG(WDOG_BASE_PTR)

/**
 * @}
 */ /* end of group WDOG_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group WDOG_Peripheral */


/* ----------------------------------------------------------------------------
   -- WKPU
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WKPU_Peripheral WKPU
 * @{
 */

/** WKPU - Peripheral register structure */
typedef struct WKPU_MemMap {
  uint32_t NSR;                                    /**< NMI Status Flag Register, offset: 0x0 */
  uint8_t RESERVED_0[4];
  uint32_t NCR;                                    /**< NMI Configuration Register, offset: 0x8 */
  uint8_t RESERVED_1[8];
  uint32_t WISR;                                   /**< Wakeup/Interrupt Status Flag Register, offset: 0x14 */
  uint32_t IRER;                                   /**< Interrupt Request Enable Register, offset: 0x18 */
  uint32_t WRER;                                   /**< Wakeup Request Enable Register, offset: 0x1C */
  uint8_t RESERVED_2[8];
  uint32_t WIREER;                                 /**< Wakeup/Interrupt Rising-Edge Event Enable Register, offset: 0x28 */
  uint32_t WIFEER;                                 /**< Wakeup/Interrupt Falling-Edge Event Enable Register, offset: 0x2C */
  uint32_t WIFER;                                  /**< Wakeup/Interrupt Filter Enable Register, offset: 0x30 */
  uint32_t WIPUER;                                 /**< Wakeup/Interrupt Pullup Enable Register, offset: 0x34 */
} volatile *WKPU_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- WKPU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WKPU_Register_Accessor_Macros WKPU - Register accessor macros
 * @{
 */


/* WKPU - Register accessors */
#define WKPU_NSR_REG(base)                       ((base)->NSR)
#define WKPU_NCR_REG(base)                       ((base)->NCR)
#define WKPU_WISR_REG(base)                      ((base)->WISR)
#define WKPU_IRER_REG(base)                      ((base)->IRER)
#define WKPU_WRER_REG(base)                      ((base)->WRER)
#define WKPU_WIREER_REG(base)                    ((base)->WIREER)
#define WKPU_WIFEER_REG(base)                    ((base)->WIFEER)
#define WKPU_WIFER_REG(base)                     ((base)->WIFER)
#define WKPU_WIPUER_REG(base)                    ((base)->WIPUER)

/**
 * @}
 */ /* end of group WKPU_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- WKPU Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WKPU_Register_Masks WKPU Register Masks
 * @{
 */

/* NSR Bit Fields */
#define WKPU_NSR_NOVF0_MASK                      0x40000000u
#define WKPU_NSR_NOVF0_SHIFT                     30
#define WKPU_NSR_NIF0_MASK                       0x80000000u
#define WKPU_NSR_NIF0_SHIFT                      31
/* NCR Bit Fields */
#define WKPU_NCR_NFE0_MASK                       0x1000000u
#define WKPU_NCR_NFE0_SHIFT                      24
#define WKPU_NCR_NFEE0_MASK                      0x2000000u
#define WKPU_NCR_NFEE0_SHIFT                     25
#define WKPU_NCR_NREE0_MASK                      0x4000000u
#define WKPU_NCR_NREE0_SHIFT                     26
#define WKPU_NCR_NWRE0_MASK                      0x10000000u
#define WKPU_NCR_NWRE0_SHIFT                     28
#define WKPU_NCR_NDSS0_MASK                      0x60000000u
#define WKPU_NCR_NDSS0_SHIFT                     29
#define WKPU_NCR_NDSS0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NDSS0_SHIFT))&WKPU_NCR_NDSS0_MASK)
#define WKPU_NCR_NLOCK0_MASK                     0x80000000u
#define WKPU_NCR_NLOCK0_SHIFT                    31
/* WISR Bit Fields */
#define WKPU_WISR_EIF_MASK                       0xFFFFFFFFu
#define WKPU_WISR_EIF_SHIFT                      0
#define WKPU_WISR_EIF(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_WISR_EIF_SHIFT))&WKPU_WISR_EIF_MASK)
/* IRER Bit Fields */
#define WKPU_IRER_EIRE_MASK                      0xFFFFFFFFu
#define WKPU_IRER_EIRE_SHIFT                     0
#define WKPU_IRER_EIRE(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_IRER_EIRE_SHIFT))&WKPU_IRER_EIRE_MASK)
/* WRER Bit Fields */
#define WKPU_WRER_WRE_MASK                       0xFFFFFFFFu
#define WKPU_WRER_WRE_SHIFT                      0
#define WKPU_WRER_WRE(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_WRER_WRE_SHIFT))&WKPU_WRER_WRE_MASK)
/* WIREER Bit Fields */
#define WKPU_WIREER_IREE_MASK                    0xFFFFFFFFu
#define WKPU_WIREER_IREE_SHIFT                   0
#define WKPU_WIREER_IREE(x)                      (((uint32_t)(((uint32_t)(x))<<WKPU_WIREER_IREE_SHIFT))&WKPU_WIREER_IREE_MASK)
/* WIFEER Bit Fields */
#define WKPU_WIFEER_IFEEx_MASK                   0xFFFFFFFFu
#define WKPU_WIFEER_IFEEx_SHIFT                  0
#define WKPU_WIFEER_IFEEx(x)                     (((uint32_t)(((uint32_t)(x))<<WKPU_WIFEER_IFEEx_SHIFT))&WKPU_WIFEER_IFEEx_MASK)
/* WIFER Bit Fields */
#define WKPU_WIFER_IFE_MASK                      0xFFFFFFFFu
#define WKPU_WIFER_IFE_SHIFT                     0
#define WKPU_WIFER_IFE(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_WIFER_IFE_SHIFT))&WKPU_WIFER_IFE_MASK)
/* WIPUER Bit Fields */
#define WKPU_WIPUER_IPUE_MASK                    0xFFFFFFFFu
#define WKPU_WIPUER_IPUE_SHIFT                   0
#define WKPU_WIPUER_IPUE(x)                      (((uint32_t)(((uint32_t)(x))<<WKPU_WIPUER_IPUE_SHIFT))&WKPU_WIPUER_IPUE_MASK)

/**
 * @}
 */ /* end of group WKPU_Register_Masks */


/* WKPU - Peripheral instance base addresses */
/** Peripheral WKPU base pointer */
#define WKPU_BASE_PTR                            ((WKPU_MemMapPtr)0x4006A000u)
/** Array initializer of WKPU peripheral base pointers */
#define WKPU_BASE_PTRS                           { WKPU_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- WKPU - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup WKPU_Register_Accessor_Macros WKPU - Register accessor macros
 * @{
 */


/* WKPU - Register instance definitions */
/* WKPU */
#define WKPU_NSR                                 WKPU_NSR_REG(WKPU_BASE_PTR)
#define WKPU_NCR                                 WKPU_NCR_REG(WKPU_BASE_PTR)
#define WKPU_WISR                                WKPU_WISR_REG(WKPU_BASE_PTR)
#define WKPU_IRER                                WKPU_IRER_REG(WKPU_BASE_PTR)
#define WKPU_WRER                                WKPU_WRER_REG(WKPU_BASE_PTR)
#define WKPU_WIREER                              WKPU_WIREER_REG(WKPU_BASE_PTR)
#define WKPU_WIFEER                              WKPU_WIFEER_REG(WKPU_BASE_PTR)
#define WKPU_WIFER                               WKPU_WIFER_REG(WKPU_BASE_PTR)
#define WKPU_WIPUER                              WKPU_WIPUER_REG(WKPU_BASE_PTR)

/**
 * @}
 */ /* end of group WKPU_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group WKPU_Peripheral */



typedef volatile uint32_t vuint32_t;
typedef volatile uint16_t vuint16_t;
typedef volatile uint8_t vuint8_t;

/* MSCM - Peripheral register structure */
typedef struct MSCM_MemMap {
  vuint32_t CPxTYPE;            /* offset: 0x00000000*/
  vuint32_t CPxNUM;             /* offset: 0x00000004*/
  vuint32_t CPxMASTER;          /* offset: 0x00000008*/
  vuint32_t CPxCOUNT;           /* offset: 0x0000000C*/
  vuint32_t CPxCFG0;            /* offset: 0x00000010*/
  vuint32_t CPxCFG1;            /* offset: 0x00000014*/
  vuint32_t CPxCFG2;            /* offset: 0x00000018*/
  vuint32_t CPxCFG3;            /* offset: 0x0000001C*/
  vuint32_t CP0TYPE;            /* offset: 0x00000020*/
  vuint32_t CP0NUM;             /* offset: 0x00000024*/
  vuint32_t CP0MASTER;          /* offset: 0x00000028*/
  vuint32_t CP0COUNT;           /* offset: 0x0000002C*/
  vuint32_t CP0CFG0;            /* offset: 0x00000030*/
  vuint32_t CP0CFG1;            /* offset: 0x00000034*/
  vuint32_t CP0CFG2;            /* offset: 0x00000038*/
  vuint32_t CP0CFG3;            /* offset: 0x0000003C*/
  vuint32_t CP1TYPE;            /* offset: 0x00000040*/
  vuint32_t CP1NUM;             /* offset: 0x00000044*/
  vuint32_t CP1MASTER;          /* offset: 0x00000048*/
  vuint32_t CP1COUNT;           /* offset: 0x0000004C*/
  vuint32_t CP1CFG0;            /* offset: 0x00000050*/
  vuint32_t CP1CFG1;            /* offset: 0x00000054*/
  vuint32_t CP1CFG2;            /* offset: 0x00000058*/
  vuint32_t CP1CFG3;            /* offset: 0x0000005C*/
  vuint8_t RESERVED0[1952];
  vuint32_t IRCP0IR;            /* offset: 0x00000800*/
  vuint32_t IRCP1IR;            /* offset: 0x00000804*/
  vuint8_t RESERVED1[24];
  vuint32_t IRCPGIR;            /* offset: 0x00000820*/
  vuint8_t RESERVED2[92];
  vuint16_t IRSPRC0;            /* offset: 0x00000880*/
  vuint16_t IRSPRC1;            /* offset: 0x00000882*/
  vuint16_t IRSPRC2;            /* offset: 0x00000884*/
  vuint16_t IRSPRC3;            /* offset: 0x00000886*/
  vuint16_t IRSPRC4;            /* offset: 0x00000888*/
  vuint16_t IRSPRC5;            /* offset: 0x0000088A*/
  vuint16_t IRSPRC6;            /* offset: 0x0000088C*/
  vuint16_t IRSPRC7;            /* offset: 0x0000088E*/
  vuint16_t IRSPRC8;            /* offset: 0x00000890*/
  vuint16_t IRSPRC9;            /* offset: 0x00000892*/
  vuint16_t IRSPRC10;           /* offset: 0x00000894*/
  vuint16_t IRSPRC11;           /* offset: 0x00000896*/
  vuint16_t IRSPRC12;           /* offset: 0x00000898*/
  vuint16_t IRSPRC13;           /* offset: 0x0000089A*/
  vuint16_t IRSPRC14;           /* offset: 0x0000089C*/
  vuint16_t IRSPRC15;           /* offset: 0x0000089E*/
  vuint16_t IRSPRC16;           /* offset: 0x000008A0*/
  vuint16_t IRSPRC17;           /* offset: 0x000008A2*/
  vuint16_t IRSPRC18;           /* offset: 0x000008A4*/
  vuint16_t IRSPRC19;           /* offset: 0x000008A6*/
  vuint16_t IRSPRC20;           /* offset: 0x000008A8*/
  vuint16_t IRSPRC21;           /* offset: 0x000008AA*/
  vuint16_t IRSPRC22;           /* offset: 0x000008AC*/
  vuint16_t IRSPRC23;           /* offset: 0x000008AE*/
  vuint16_t IRSPRC24;           /* offset: 0x000008B0*/
  vuint16_t IRSPRC25;           /* offset: 0x000008B2*/
  vuint16_t IRSPRC26;           /* offset: 0x000008B4*/
  vuint16_t IRSPRC27;           /* offset: 0x000008B6*/
  vuint16_t IRSPRC28;           /* offset: 0x000008B8*/
  vuint16_t IRSPRC29;           /* offset: 0x000008BA*/
  vuint16_t IRSPRC30;           /* offset: 0x000008BC*/
  vuint16_t IRSPRC31;           /* offset: 0x000008BE*/
  vuint16_t IRSPRC32;           /* offset: 0x000008C0*/
  vuint16_t IRSPRC33;           /* offset: 0x000008C2*/
  vuint16_t IRSPRC34;           /* offset: 0x000008C4*/
  vuint16_t IRSPRC35;           /* offset: 0x000008C6*/
  vuint16_t IRSPRC36;           /* offset: 0x000008C8*/
  vuint16_t IRSPRC37;           /* offset: 0x000008CA*/
  vuint16_t IRSPRC38;           /* offset: 0x000008CC*/
  vuint16_t IRSPRC39;           /* offset: 0x000008CE*/
  vuint16_t IRSPRC40;           /* offset: 0x000008D0*/
  vuint16_t IRSPRC41;           /* offset: 0x000008D2*/
  vuint16_t IRSPRC42;           /* offset: 0x000008D4*/
  vuint16_t IRSPRC43;           /* offset: 0x000008D6*/
  vuint16_t IRSPRC44;           /* offset: 0x000008D8*/
  vuint16_t IRSPRC45;           /* offset: 0x000008DA*/
  vuint16_t IRSPRC46;           /* offset: 0x000008DC*/
  vuint16_t IRSPRC47;           /* offset: 0x000008DE*/
  vuint16_t IRSPRC48;           /* offset: 0x000008E0*/
  vuint16_t IRSPRC49;           /* offset: 0x000008E2*/
  vuint16_t IRSPRC50;           /* offset: 0x000008E4*/
  vuint16_t IRSPRC51;           /* offset: 0x000008E6*/
  vuint16_t IRSPRC52;           /* offset: 0x000008E8*/
  vuint16_t IRSPRC53;           /* offset: 0x000008EA*/
  vuint16_t IRSPRC54;           /* offset: 0x000008EC*/
  vuint16_t IRSPRC55;           /* offset: 0x000008EE*/
  vuint16_t IRSPRC56;           /* offset: 0x000008F0*/
  vuint16_t IRSPRC57;           /* offset: 0x000008F2*/
  vuint16_t IRSPRC58;           /* offset: 0x000008F4*/
  vuint16_t IRSPRC59;           /* offset: 0x000008F6*/
  vuint16_t IRSPRC60;           /* offset: 0x000008F8*/
  vuint16_t IRSPRC61;           /* offset: 0x000008FA*/
  vuint16_t IRSPRC62;           /* offset: 0x000008FC*/
  vuint16_t IRSPRC63;           /* offset: 0x000008FE*/
  vuint16_t IRSPRC64;           /* offset: 0x00000900*/
  vuint16_t IRSPRC65;           /* offset: 0x00000902*/
  vuint16_t IRSPRC66;           /* offset: 0x00000904*/
  vuint16_t IRSPRC67;           /* offset: 0x00000906*/
  vuint16_t IRSPRC68;           /* offset: 0x00000908*/
  vuint16_t IRSPRC69;           /* offset: 0x0000090A*/
  vuint16_t IRSPRC70;           /* offset: 0x0000090C*/
  vuint16_t IRSPRC71;           /* offset: 0x0000090E*/
  vuint16_t IRSPRC72;           /* offset: 0x00000910*/
  vuint16_t IRSPRC73;           /* offset: 0x00000912*/
  vuint16_t IRSPRC74;           /* offset: 0x00000914*/
  vuint16_t IRSPRC75;           /* offset: 0x00000916*/
  vuint16_t IRSPRC76;           /* offset: 0x00000918*/
  vuint16_t IRSPRC77;           /* offset: 0x0000091A*/
  vuint16_t IRSPRC78;           /* offset: 0x0000091C*/
  vuint16_t IRSPRC79;           /* offset: 0x0000091E*/
  vuint16_t IRSPRC80;           /* offset: 0x00000920*/
  vuint16_t IRSPRC81;           /* offset: 0x00000922*/
  vuint16_t IRSPRC82;           /* offset: 0x00000924*/
  vuint16_t IRSPRC83;           /* offset: 0x00000926*/
  vuint16_t IRSPRC84;           /* offset: 0x00000928*/
  vuint16_t IRSPRC85;           /* offset: 0x0000092A*/
  vuint16_t IRSPRC86;           /* offset: 0x0000092C*/
  vuint16_t IRSPRC87;           /* offset: 0x0000092E*/
  vuint16_t IRSPRC88;           /* offset: 0x00000930*/
  vuint16_t IRSPRC89;           /* offset: 0x00000932*/
  vuint16_t IRSPRC90;           /* offset: 0x00000934*/
  vuint16_t IRSPRC91;           /* offset: 0x00000936*/
  vuint16_t IRSPRC92;           /* offset: 0x00000938*/
  vuint16_t IRSPRC93;           /* offset: 0x0000093A*/
  vuint16_t IRSPRC94;           /* offset: 0x0000093C*/
  vuint16_t IRSPRC95;           /* offset: 0x0000093E*/
  vuint16_t IRSPRC96;           /* offset: 0x00000940*/
  vuint16_t IRSPRC97;           /* offset: 0x00000942*/
  vuint16_t IRSPRC98;           /* offset: 0x00000944*/
  vuint16_t IRSPRC99;           /* offset: 0x00000946*/
  vuint16_t IRSPRC100;          /* offset: 0x00000948*/
  vuint16_t IRSPRC101;          /* offset: 0x0000094A*/
  vuint16_t IRSPRC102;          /* offset: 0x0000094C*/
  vuint16_t IRSPRC103;          /* offset: 0x0000094E*/
  vuint16_t IRSPRC104;          /* offset: 0x00000950*/
  vuint16_t IRSPRC105;          /* offset: 0x00000952*/
  vuint16_t IRSPRC106;          /* offset: 0x00000954*/
  vuint16_t IRSPRC107;          /* offset: 0x00000956*/
  vuint16_t IRSPRC108;          /* offset: 0x00000958*/
  vuint16_t IRSPRC109;          /* offset: 0x0000095A*/
  vuint16_t IRSPRC110;          /* offset: 0x0000095C*/
  vuint16_t IRSPRC111;          /* offset: 0x0000095E*/
} volatile *MSCM_MemMapPtr;



/* MSCM - Register offsets */
#define MSCM_CPxTYPE_OFFSET             0x00000000
#define MSCM_CPxNUM_OFFSET              0x00000004
#define MSCM_CPxMASTER_OFFSET           0x00000008
#define MSCM_CPxCOUNT_OFFSET            0x0000000C
#define MSCM_CPxCFG0_OFFSET             0x00000010
#define MSCM_CPxCFG1_OFFSET             0x00000014
#define MSCM_CPxCFG2_OFFSET             0x00000018
#define MSCM_CPxCFG3_OFFSET             0x0000001C
#define MSCM_CP0TYPE_OFFSET             0x00000020
#define MSCM_CP0NUM_OFFSET              0x00000024
#define MSCM_CP0MASTER_OFFSET           0x00000028
#define MSCM_CP0COUNT_OFFSET            0x0000002C
#define MSCM_CP0CFG0_OFFSET             0x00000030
#define MSCM_CP0CFG1_OFFSET             0x00000034
#define MSCM_CP0CFG2_OFFSET             0x00000038
#define MSCM_CP0CFG3_OFFSET             0x0000003C
#define MSCM_CP1TYPE_OFFSET             0x00000040
#define MSCM_CP1NUM_OFFSET              0x00000044
#define MSCM_CP1MASTER_OFFSET           0x00000048
#define MSCM_CP1COUNT_OFFSET            0x0000004C
#define MSCM_CP1CFG0_OFFSET             0x00000050
#define MSCM_CP1CFG1_OFFSET             0x00000054
#define MSCM_CP1CFG2_OFFSET             0x00000058
#define MSCM_CP1CFG3_OFFSET             0x0000005C
#define MSCM_IRCP0IR_OFFSET             0x00000800
#define MSCM_IRCP1IR_OFFSET             0x00000804
#define MSCM_IRCPGIR_OFFSET             0x00000820
#define MSCM_IRSPRC0_OFFSET             0x00000880
#define MSCM_IRSPRC1_OFFSET             0x00000882
#define MSCM_IRSPRC2_OFFSET             0x00000884
#define MSCM_IRSPRC3_OFFSET             0x00000886
#define MSCM_IRSPRC4_OFFSET             0x00000888
#define MSCM_IRSPRC5_OFFSET             0x0000088A
#define MSCM_IRSPRC6_OFFSET             0x0000088C
#define MSCM_IRSPRC7_OFFSET             0x0000088E
#define MSCM_IRSPRC8_OFFSET             0x00000890
#define MSCM_IRSPRC9_OFFSET             0x00000892
#define MSCM_IRSPRC10_OFFSET            0x00000894
#define MSCM_IRSPRC11_OFFSET            0x00000896
#define MSCM_IRSPRC12_OFFSET            0x00000898
#define MSCM_IRSPRC13_OFFSET            0x0000089A
#define MSCM_IRSPRC14_OFFSET            0x0000089C
#define MSCM_IRSPRC15_OFFSET            0x0000089E
#define MSCM_IRSPRC16_OFFSET            0x000008A0
#define MSCM_IRSPRC17_OFFSET            0x000008A2
#define MSCM_IRSPRC18_OFFSET            0x000008A4
#define MSCM_IRSPRC19_OFFSET            0x000008A6
#define MSCM_IRSPRC20_OFFSET            0x000008A8
#define MSCM_IRSPRC21_OFFSET            0x000008AA
#define MSCM_IRSPRC22_OFFSET            0x000008AC
#define MSCM_IRSPRC23_OFFSET            0x000008AE
#define MSCM_IRSPRC24_OFFSET            0x000008B0
#define MSCM_IRSPRC25_OFFSET            0x000008B2
#define MSCM_IRSPRC26_OFFSET            0x000008B4
#define MSCM_IRSPRC27_OFFSET            0x000008B6
#define MSCM_IRSPRC28_OFFSET            0x000008B8
#define MSCM_IRSPRC29_OFFSET            0x000008BA
#define MSCM_IRSPRC30_OFFSET            0x000008BC
#define MSCM_IRSPRC31_OFFSET            0x000008BE
#define MSCM_IRSPRC32_OFFSET            0x000008C0
#define MSCM_IRSPRC33_OFFSET            0x000008C2
#define MSCM_IRSPRC34_OFFSET            0x000008C4
#define MSCM_IRSPRC35_OFFSET            0x000008C6
#define MSCM_IRSPRC36_OFFSET            0x000008C8
#define MSCM_IRSPRC37_OFFSET            0x000008CA
#define MSCM_IRSPRC38_OFFSET            0x000008CC
#define MSCM_IRSPRC39_OFFSET            0x000008CE
#define MSCM_IRSPRC40_OFFSET            0x000008D0
#define MSCM_IRSPRC41_OFFSET            0x000008D2
#define MSCM_IRSPRC42_OFFSET            0x000008D4
#define MSCM_IRSPRC43_OFFSET            0x000008D6
#define MSCM_IRSPRC44_OFFSET            0x000008D8
#define MSCM_IRSPRC45_OFFSET            0x000008DA
#define MSCM_IRSPRC46_OFFSET            0x000008DC
#define MSCM_IRSPRC47_OFFSET            0x000008DE
#define MSCM_IRSPRC48_OFFSET            0x000008E0
#define MSCM_IRSPRC49_OFFSET            0x000008E2
#define MSCM_IRSPRC50_OFFSET            0x000008E4
#define MSCM_IRSPRC51_OFFSET            0x000008E6
#define MSCM_IRSPRC52_OFFSET            0x000008E8
#define MSCM_IRSPRC53_OFFSET            0x000008EA
#define MSCM_IRSPRC54_OFFSET            0x000008EC
#define MSCM_IRSPRC55_OFFSET            0x000008EE
#define MSCM_IRSPRC56_OFFSET            0x000008F0
#define MSCM_IRSPRC57_OFFSET            0x000008F2
#define MSCM_IRSPRC58_OFFSET            0x000008F4
#define MSCM_IRSPRC59_OFFSET            0x000008F6
#define MSCM_IRSPRC60_OFFSET            0x000008F8
#define MSCM_IRSPRC61_OFFSET            0x000008FA
#define MSCM_IRSPRC62_OFFSET            0x000008FC
#define MSCM_IRSPRC63_OFFSET            0x000008FE
#define MSCM_IRSPRC64_OFFSET            0x00000900
#define MSCM_IRSPRC65_OFFSET            0x00000902
#define MSCM_IRSPRC66_OFFSET            0x00000904
#define MSCM_IRSPRC67_OFFSET            0x00000906
#define MSCM_IRSPRC68_OFFSET            0x00000908
#define MSCM_IRSPRC69_OFFSET            0x0000090A
#define MSCM_IRSPRC70_OFFSET            0x0000090C
#define MSCM_IRSPRC71_OFFSET            0x0000090E
#define MSCM_IRSPRC72_OFFSET            0x00000910
#define MSCM_IRSPRC73_OFFSET            0x00000912
#define MSCM_IRSPRC74_OFFSET            0x00000914
#define MSCM_IRSPRC75_OFFSET            0x00000916
#define MSCM_IRSPRC76_OFFSET            0x00000918
#define MSCM_IRSPRC77_OFFSET            0x0000091A
#define MSCM_IRSPRC78_OFFSET            0x0000091C
#define MSCM_IRSPRC79_OFFSET            0x0000091E
#define MSCM_IRSPRC80_OFFSET            0x00000920
#define MSCM_IRSPRC81_OFFSET            0x00000922
#define MSCM_IRSPRC82_OFFSET            0x00000924
#define MSCM_IRSPRC83_OFFSET            0x00000926
#define MSCM_IRSPRC84_OFFSET            0x00000928
#define MSCM_IRSPRC85_OFFSET            0x0000092A
#define MSCM_IRSPRC86_OFFSET            0x0000092C
#define MSCM_IRSPRC87_OFFSET            0x0000092E
#define MSCM_IRSPRC88_OFFSET            0x00000930
#define MSCM_IRSPRC89_OFFSET            0x00000932
#define MSCM_IRSPRC90_OFFSET            0x00000934
#define MSCM_IRSPRC91_OFFSET            0x00000936
#define MSCM_IRSPRC92_OFFSET            0x00000938
#define MSCM_IRSPRC93_OFFSET            0x0000093A
#define MSCM_IRSPRC94_OFFSET            0x0000093C
#define MSCM_IRSPRC95_OFFSET            0x0000093E
#define MSCM_IRSPRC96_OFFSET            0x00000940
#define MSCM_IRSPRC97_OFFSET            0x00000942
#define MSCM_IRSPRC98_OFFSET            0x00000944
#define MSCM_IRSPRC99_OFFSET            0x00000946
#define MSCM_IRSPRC100_OFFSET           0x00000948
#define MSCM_IRSPRC101_OFFSET           0x0000094A
#define MSCM_IRSPRC102_OFFSET           0x0000094C
#define MSCM_IRSPRC103_OFFSET           0x0000094E
#define MSCM_IRSPRC104_OFFSET           0x00000950
#define MSCM_IRSPRC105_OFFSET           0x00000952
#define MSCM_IRSPRC106_OFFSET           0x00000954
#define MSCM_IRSPRC107_OFFSET           0x00000956
#define MSCM_IRSPRC108_OFFSET           0x00000958
#define MSCM_IRSPRC109_OFFSET           0x0000095A
#define MSCM_IRSPRC110_OFFSET           0x0000095C
#define MSCM_IRSPRC111_OFFSET           0x0000095E

/* MSCM Register per module */
#define MSCM_CPxTYPE                    (MSCM_BASE + MSCM_CPxTYPE_OFFSET)
//#define MSCM_CPxNUM                     (MSCM_BASE + MSCM_CPxNUM_OFFSET)
#define MSCM_CPxMASTER                  (MSCM_BASE + MSCM_CPxMASTER_OFFSET)
#define MSCM_CPxCOUNT                   (MSCM_BASE + MSCM_CPxCOUNT_OFFSET)
#define MSCM_CPxCFG0                    (MSCM_BASE + MSCM_CPxCFG0_OFFSET)
#define MSCM_CPxCFG1                    (MSCM_BASE + MSCM_CPxCFG1_OFFSET)
#define MSCM_CPxCFG2                    (MSCM_BASE + MSCM_CPxCFG2_OFFSET)
#define MSCM_CPxCFG3                    (MSCM_BASE + MSCM_CPxCFG3_OFFSET)
#define MSCM_CP0TYPE                    (MSCM_BASE + MSCM_CP0TYPE_OFFSET)
#define MSCM_CP0NUM                     (MSCM_BASE + MSCM_CP0NUM_OFFSET)
#define MSCM_CP0MASTER                  (MSCM_BASE + MSCM_CP0MASTER_OFFSET)
#define MSCM_CP0COUNT                   (MSCM_BASE + MSCM_CP0COUNT_OFFSET)
#define MSCM_CP0CFG0                    (MSCM_BASE + MSCM_CP0CFG0_OFFSET)
#define MSCM_CP0CFG1                    (MSCM_BASE + MSCM_CP0CFG1_OFFSET)
#define MSCM_CP0CFG2                    (MSCM_BASE + MSCM_CP0CFG2_OFFSET)
#define MSCM_CP0CFG3                    (MSCM_BASE + MSCM_CP0CFG3_OFFSET)
#define MSCM_CP1TYPE                    (MSCM_BASE + MSCM_CP1TYPE_OFFSET)
#define MSCM_CP1NUM                     (MSCM_BASE + MSCM_CP1NUM_OFFSET)
#define MSCM_CP1MASTER                  (MSCM_BASE + MSCM_CP1MASTER_OFFSET)
#define MSCM_CP1COUNT                   (MSCM_BASE + MSCM_CP1COUNT_OFFSET)
#define MSCM_CP1CFG0                    (MSCM_BASE + MSCM_CP1CFG0_OFFSET)
#define MSCM_CP1CFG1                    (MSCM_BASE + MSCM_CP1CFG1_OFFSET)
#define MSCM_CP1CFG2                    (MSCM_BASE + MSCM_CP1CFG2_OFFSET)
#define MSCM_CP1CFG3                    (MSCM_BASE + MSCM_CP1CFG3_OFFSET)
//#define MSCM_IRCP0IR                    (MSCM_BASE + MSCM_IRCP0IR_OFFSET)
//#define MSCM_IRCP1IR                    (MSCM_BASE + MSCM_IRCP1IR_OFFSET)
//#define MSCM_IRCPGIR                    (MSCM_BASE + MSCM_IRCPGIR_OFFSET)
#define MSCM_IRSPRC0                    (MSCM_BASE + MSCM_IRSPRC0_OFFSET)
#define MSCM_IRSPRC1                    (MSCM_BASE + MSCM_IRSPRC1_OFFSET)
#define MSCM_IRSPRC2                    (MSCM_BASE + MSCM_IRSPRC2_OFFSET)
#define MSCM_IRSPRC3                    (MSCM_BASE + MSCM_IRSPRC3_OFFSET)
#define MSCM_IRSPRC4                    (MSCM_BASE + MSCM_IRSPRC4_OFFSET)
#define MSCM_IRSPRC5                    (MSCM_BASE + MSCM_IRSPRC5_OFFSET)
#define MSCM_IRSPRC6                    (MSCM_BASE + MSCM_IRSPRC6_OFFSET)
#define MSCM_IRSPRC7                    (MSCM_BASE + MSCM_IRSPRC7_OFFSET)
#define MSCM_IRSPRC8                    (MSCM_BASE + MSCM_IRSPRC8_OFFSET)
#define MSCM_IRSPRC9                    (MSCM_BASE + MSCM_IRSPRC9_OFFSET)
#define MSCM_IRSPRC10                   (MSCM_BASE + MSCM_IRSPRC10_OFFSET)
#define MSCM_IRSPRC11                   (MSCM_BASE + MSCM_IRSPRC11_OFFSET)
#define MSCM_IRSPRC12                   (MSCM_BASE + MSCM_IRSPRC12_OFFSET)
#define MSCM_IRSPRC13                   (MSCM_BASE + MSCM_IRSPRC13_OFFSET)
#define MSCM_IRSPRC14                   (MSCM_BASE + MSCM_IRSPRC14_OFFSET)
#define MSCM_IRSPRC15                   (MSCM_BASE + MSCM_IRSPRC15_OFFSET)
#define MSCM_IRSPRC16                   (MSCM_BASE + MSCM_IRSPRC16_OFFSET)
#define MSCM_IRSPRC17                   (MSCM_BASE + MSCM_IRSPRC17_OFFSET)
#define MSCM_IRSPRC18                   (MSCM_BASE + MSCM_IRSPRC18_OFFSET)
#define MSCM_IRSPRC19                   (MSCM_BASE + MSCM_IRSPRC19_OFFSET)
#define MSCM_IRSPRC20                   (MSCM_BASE + MSCM_IRSPRC20_OFFSET)
#define MSCM_IRSPRC21                   (MSCM_BASE + MSCM_IRSPRC21_OFFSET)
#define MSCM_IRSPRC22                   (MSCM_BASE + MSCM_IRSPRC22_OFFSET)
#define MSCM_IRSPRC23                   (MSCM_BASE + MSCM_IRSPRC23_OFFSET)
#define MSCM_IRSPRC24                   (MSCM_BASE + MSCM_IRSPRC24_OFFSET)
#define MSCM_IRSPRC25                   (MSCM_BASE + MSCM_IRSPRC25_OFFSET)
#define MSCM_IRSPRC26                   (MSCM_BASE + MSCM_IRSPRC26_OFFSET)
#define MSCM_IRSPRC27                   (MSCM_BASE + MSCM_IRSPRC27_OFFSET)
#define MSCM_IRSPRC28                   (MSCM_BASE + MSCM_IRSPRC28_OFFSET)
#define MSCM_IRSPRC29                   (MSCM_BASE + MSCM_IRSPRC29_OFFSET)
#define MSCM_IRSPRC30                   (MSCM_BASE + MSCM_IRSPRC30_OFFSET)
#define MSCM_IRSPRC31                   (MSCM_BASE + MSCM_IRSPRC31_OFFSET)
#define MSCM_IRSPRC32                   (MSCM_BASE + MSCM_IRSPRC32_OFFSET)
#define MSCM_IRSPRC33                   (MSCM_BASE + MSCM_IRSPRC33_OFFSET)
#define MSCM_IRSPRC34                   (MSCM_BASE + MSCM_IRSPRC34_OFFSET)
#define MSCM_IRSPRC35                   (MSCM_BASE + MSCM_IRSPRC35_OFFSET)
#define MSCM_IRSPRC36                   (MSCM_BASE + MSCM_IRSPRC36_OFFSET)
#define MSCM_IRSPRC37                   (MSCM_BASE + MSCM_IRSPRC37_OFFSET)
#define MSCM_IRSPRC38                   (MSCM_BASE + MSCM_IRSPRC38_OFFSET)
#define MSCM_IRSPRC39                   (MSCM_BASE + MSCM_IRSPRC39_OFFSET)
#define MSCM_IRSPRC40                   (MSCM_BASE + MSCM_IRSPRC40_OFFSET)
#define MSCM_IRSPRC41                   (MSCM_BASE + MSCM_IRSPRC41_OFFSET)
#define MSCM_IRSPRC42                   (MSCM_BASE + MSCM_IRSPRC42_OFFSET)
#define MSCM_IRSPRC43                   (MSCM_BASE + MSCM_IRSPRC43_OFFSET)
#define MSCM_IRSPRC44                   (MSCM_BASE + MSCM_IRSPRC44_OFFSET)
#define MSCM_IRSPRC45                   (MSCM_BASE + MSCM_IRSPRC45_OFFSET)
#define MSCM_IRSPRC46                   (MSCM_BASE + MSCM_IRSPRC46_OFFSET)
#define MSCM_IRSPRC47                   (MSCM_BASE + MSCM_IRSPRC47_OFFSET)
#define MSCM_IRSPRC48                   (MSCM_BASE + MSCM_IRSPRC48_OFFSET)
#define MSCM_IRSPRC49                   (MSCM_BASE + MSCM_IRSPRC49_OFFSET)
#define MSCM_IRSPRC50                   (MSCM_BASE + MSCM_IRSPRC50_OFFSET)
#define MSCM_IRSPRC51                   (MSCM_BASE + MSCM_IRSPRC51_OFFSET)
#define MSCM_IRSPRC52                   (MSCM_BASE + MSCM_IRSPRC52_OFFSET)
#define MSCM_IRSPRC53                   (MSCM_BASE + MSCM_IRSPRC53_OFFSET)
#define MSCM_IRSPRC54                   (MSCM_BASE + MSCM_IRSPRC54_OFFSET)
#define MSCM_IRSPRC55                   (MSCM_BASE + MSCM_IRSPRC55_OFFSET)
#define MSCM_IRSPRC56                   (MSCM_BASE + MSCM_IRSPRC56_OFFSET)
#define MSCM_IRSPRC57                   (MSCM_BASE + MSCM_IRSPRC57_OFFSET)
#define MSCM_IRSPRC58                   (MSCM_BASE + MSCM_IRSPRC58_OFFSET)
#define MSCM_IRSPRC59                   (MSCM_BASE + MSCM_IRSPRC59_OFFSET)
#define MSCM_IRSPRC60                   (MSCM_BASE + MSCM_IRSPRC60_OFFSET)
#define MSCM_IRSPRC61                   (MSCM_BASE + MSCM_IRSPRC61_OFFSET)
#define MSCM_IRSPRC62                   (MSCM_BASE + MSCM_IRSPRC62_OFFSET)
#define MSCM_IRSPRC63                   (MSCM_BASE + MSCM_IRSPRC63_OFFSET)
#define MSCM_IRSPRC64                   (MSCM_BASE + MSCM_IRSPRC64_OFFSET)
#define MSCM_IRSPRC65                   (MSCM_BASE + MSCM_IRSPRC65_OFFSET)
#define MSCM_IRSPRC66                   (MSCM_BASE + MSCM_IRSPRC66_OFFSET)
#define MSCM_IRSPRC67                   (MSCM_BASE + MSCM_IRSPRC67_OFFSET)
#define MSCM_IRSPRC68                   (MSCM_BASE + MSCM_IRSPRC68_OFFSET)
#define MSCM_IRSPRC69                   (MSCM_BASE + MSCM_IRSPRC69_OFFSET)
#define MSCM_IRSPRC70                   (MSCM_BASE + MSCM_IRSPRC70_OFFSET)
#define MSCM_IRSPRC71                   (MSCM_BASE + MSCM_IRSPRC71_OFFSET)
#define MSCM_IRSPRC72                   (MSCM_BASE + MSCM_IRSPRC72_OFFSET)
#define MSCM_IRSPRC73                   (MSCM_BASE + MSCM_IRSPRC73_OFFSET)
#define MSCM_IRSPRC74                   (MSCM_BASE + MSCM_IRSPRC74_OFFSET)
#define MSCM_IRSPRC75                   (MSCM_BASE + MSCM_IRSPRC75_OFFSET)
#define MSCM_IRSPRC76                   (MSCM_BASE + MSCM_IRSPRC76_OFFSET)
#define MSCM_IRSPRC77                   (MSCM_BASE + MSCM_IRSPRC77_OFFSET)
#define MSCM_IRSPRC78                   (MSCM_BASE + MSCM_IRSPRC78_OFFSET)
#define MSCM_IRSPRC79                   (MSCM_BASE + MSCM_IRSPRC79_OFFSET)
#define MSCM_IRSPRC80                   (MSCM_BASE + MSCM_IRSPRC80_OFFSET)
#define MSCM_IRSPRC81                   (MSCM_BASE + MSCM_IRSPRC81_OFFSET)
#define MSCM_IRSPRC82                   (MSCM_BASE + MSCM_IRSPRC82_OFFSET)
#define MSCM_IRSPRC83                   (MSCM_BASE + MSCM_IRSPRC83_OFFSET)
#define MSCM_IRSPRC84                   (MSCM_BASE + MSCM_IRSPRC84_OFFSET)
#define MSCM_IRSPRC85                   (MSCM_BASE + MSCM_IRSPRC85_OFFSET)
#define MSCM_IRSPRC86                   (MSCM_BASE + MSCM_IRSPRC86_OFFSET)
#define MSCM_IRSPRC87                   (MSCM_BASE + MSCM_IRSPRC87_OFFSET)
#define MSCM_IRSPRC88                   (MSCM_BASE + MSCM_IRSPRC88_OFFSET)
#define MSCM_IRSPRC89                   (MSCM_BASE + MSCM_IRSPRC89_OFFSET)
#define MSCM_IRSPRC90                   (MSCM_BASE + MSCM_IRSPRC90_OFFSET)
#define MSCM_IRSPRC91                   (MSCM_BASE + MSCM_IRSPRC91_OFFSET)
#define MSCM_IRSPRC92                   (MSCM_BASE + MSCM_IRSPRC92_OFFSET)
#define MSCM_IRSPRC93                   (MSCM_BASE + MSCM_IRSPRC93_OFFSET)
#define MSCM_IRSPRC94                   (MSCM_BASE + MSCM_IRSPRC94_OFFSET)
#define MSCM_IRSPRC95                   (MSCM_BASE + MSCM_IRSPRC95_OFFSET)
#define MSCM_IRSPRC96                   (MSCM_BASE + MSCM_IRSPRC96_OFFSET)
#define MSCM_IRSPRC97                   (MSCM_BASE + MSCM_IRSPRC97_OFFSET)
#define MSCM_IRSPRC98                   (MSCM_BASE + MSCM_IRSPRC98_OFFSET)
#define MSCM_IRSPRC99                   (MSCM_BASE + MSCM_IRSPRC99_OFFSET)
#define MSCM_IRSPRC100                  (MSCM_BASE + MSCM_IRSPRC100_OFFSET)
#define MSCM_IRSPRC101                  (MSCM_BASE + MSCM_IRSPRC101_OFFSET)
#define MSCM_IRSPRC102                  (MSCM_BASE + MSCM_IRSPRC102_OFFSET)
#define MSCM_IRSPRC103                  (MSCM_BASE + MSCM_IRSPRC103_OFFSET)
#define MSCM_IRSPRC104                  (MSCM_BASE + MSCM_IRSPRC104_OFFSET)
#define MSCM_IRSPRC105                  (MSCM_BASE + MSCM_IRSPRC105_OFFSET)
#define MSCM_IRSPRC106                  (MSCM_BASE + MSCM_IRSPRC106_OFFSET)
#define MSCM_IRSPRC107                  (MSCM_BASE + MSCM_IRSPRC107_OFFSET)
#define MSCM_IRSPRC108                  (MSCM_BASE + MSCM_IRSPRC108_OFFSET)
#define MSCM_IRSPRC109                  (MSCM_BASE + MSCM_IRSPRC109_OFFSET)
#define MSCM_IRSPRC110                  (MSCM_BASE + MSCM_IRSPRC110_OFFSET)
#define MSCM_IRSPRC111                  (MSCM_BASE + MSCM_IRSPRC111_OFFSET)

#define MSCM_IRSPRC(i)                  (((uint16_t*)MSCM_IRSPRC0)[i])

/* Field definitions for CPxTYPE */
#define MSCM_CPxTYPE_rYpZ_SHIFT                (0)
#define MSCM_CPxTYPE_rYpZ_MASK                 ((0x000000FF) << (MSCM_CPxTYPE_rYpZ_SHIFT))

#define MSCM_CPxTYPE_PERSONALITY_SHIFT         (8)
#define MSCM_CPxTYPE_PERSONALITY_MASK          ((0x00FFFFFF) << (MSCM_CPxTYPE_PERSONALITY_SHIFT))



/* Field definitions for CPxNUM */
#define MSCM_CPxNUM_CPN_SHIFT                 (0)
#define MSCM_CPxNUM_CPN_MASK                  ((1) << (MSCM_CPxNUM_CPN_SHIFT))



/* Field definitions for CPxMASTER */
#define MSCM_CPxMASTER_PPN_SHIFT                 (0)
#define MSCM_CPxMASTER_PPN_MASK                  ((0x0000001F) << (MSCM_CPxMASTER_PPN_SHIFT))



/* Field definitions for CPxCOUNT */
#define MSCM_CPxCOUNT_PCNT_SHIFT                (0)
#define MSCM_CPxCOUNT_PCNT_MASK                 ((1) << (MSCM_CPxCOUNT_PCNT_SHIFT))



/* Field definitions for CPxCFG0 */
#define MSCM_CPxCFG0_DCWY_SHIFT                (0)
#define MSCM_CPxCFG0_DCWY_MASK                 ((0x000000FF) << (MSCM_CPxCFG0_DCWY_SHIFT))

#define MSCM_CPxCFG0_DCSZ_SHIFT                (8)
#define MSCM_CPxCFG0_DCSZ_MASK                 ((0x000000FF) << (MSCM_CPxCFG0_DCSZ_SHIFT))

#define MSCM_CPxCFG0_ICWY_SHIFT                (16)
#define MSCM_CPxCFG0_ICWY_MASK                 ((0x000000FF) << (MSCM_CPxCFG0_ICWY_SHIFT))

#define MSCM_CPxCFG0_ICSZ_SHIFT                (24)
#define MSCM_CPxCFG0_ICSZ_MASK                 ((0x000000FF) << (MSCM_CPxCFG0_ICSZ_SHIFT))



/* Field definitions for CPxCFG1 */
#define MSCM_CPxCFG1_L2WY_SHIFT                (16)
#define MSCM_CPxCFG1_L2WY_MASK                 ((0x000000FF) << (MSCM_CPxCFG1_L2WY_SHIFT))

#define MSCM_CPxCFG1_L2SZ_SHIFT                (24)
#define MSCM_CPxCFG1_L2SZ_MASK                 ((0x000000FFU) << (MSCM_CPxCFG1_L2SZ_SHIFT))



/* Field definitions for CPxCFG2 */
#define MSCM_CPxCFG2_TMUSZ_SHIFT               (8)
#define MSCM_CPxCFG2_TMUSZ_MASK                ((0x000000FF) << (MSCM_CPxCFG2_TMUSZ_SHIFT))

#define MSCM_CPxCFG2_TMLSZ_SHIFT               (24)
#define MSCM_CPxCFG2_TMLSZ_MASK                ((0x000000FF) << (MSCM_CPxCFG2_TMLSZ_SHIFT))



/* Field definitions for CPxCFG3 */
#define MSCM_CPxCFG3_FPU_SHIFT                 (0)
#define MSCM_CPxCFG3_FPU_MASK                  ((1) << (MSCM_CPxCFG3_FPU_SHIFT))

#define MSCM_CPxCFG3_SIMD_SHIFT                (1)
#define MSCM_CPxCFG3_SIMD_MASK                 ((1) << (MSCM_CPxCFG3_SIMD_SHIFT))

#define MSCM_CPxCFG3_JAZ_SHIFT                 (2)
#define MSCM_CPxCFG3_JAZ_MASK                  ((1) << (MSCM_CPxCFG3_JAZ_SHIFT))

#define MSCM_CPxCFG3_MMU_SHIFT                 (3)
#define MSCM_CPxCFG3_MMU_MASK                  ((1) << (MSCM_CPxCFG3_MMU_SHIFT))

#define MSCM_CPxCFG3_TZ_SHIFT                  (4)
#define MSCM_CPxCFG3_TZ_MASK                   ((1) << (MSCM_CPxCFG3_TZ_SHIFT))

#define MSCM_CPxCFG3_CMP_SHIFT                 (5)
#define MSCM_CPxCFG3_CMP_MASK                  ((1) << (MSCM_CPxCFG3_CMP_SHIFT))

#define MSCM_CPxCFG3_BB_SHIFT                  (6)
#define MSCM_CPxCFG3_BB_MASK                   ((1) << (MSCM_CPxCFG3_BB_SHIFT))

#define MSCM_CPxCFG3_SBP_SHIFT                 (8)
#define MSCM_CPxCFG3_SBP_MASK                  ((0x00000003) << (MSCM_CPxCFG3_SBP_SHIFT))



/* Field definitions for CP0TYPE */


/* Field definitions for CP0NUM */


/* Field definitions for CP0MASTER */


/* Field definitions for CP0COUNT */


/* Field definitions for CP0CFG0 */


/* Field definitions for CP0CFG1 */


/* Field definitions for CP0CFG2 */


/* Field definitions for CP0CFG3 */


/* Field definitions for CP1TYPE */


/* Field definitions for CP1NUM */


/* Field definitions for CP1MASTER */


/* Field definitions for CP1COUNT */


/* Field definitions for CP1CFG0 */


/* Field definitions for CP1CFG1 */


/* Field definitions for CP1CFG2 */


/* Field definitions for CP1CFG3 */


/* Field definitions for IRCP0IR */
#define MSCM_IRCP0IR_INT0_SHIFT             (0)
#define MSCM_IRCP0IR_INT0_MASK              ((1) << (MSCM_IRCP0IR_INT0_SHIFT))

#define MSCM_IRCP0IR_INT1_SHIFT             (1)
#define MSCM_IRCP0IR_INT1_MASK              ((1) << (MSCM_IRCP0IR_INT1_SHIFT))

#define MSCM_IRCP0IR_INT2_SHIFT             (2)
#define MSCM_IRCP0IR_INT2_MASK              ((1) << (MSCM_IRCP0IR_INT2_SHIFT))

#define MSCM_IRCP0IR_INT3_SHIFT             (3)
#define MSCM_IRCP0IR_INT3_MASK              ((1) << (MSCM_IRCP0IR_INT3_SHIFT))



/* Field definitions for IRCP1IR */
#define MSCM_IRCP1IR_INT0_SHIFT             (0)
#define MSCM_IRCP1IR_INT0_MASK              ((1) << (MSCM_IRCP1IR_INT0_SHIFT))

#define MSCM_IRCP1IR_INT1_SHIFT             (1)
#define MSCM_IRCP1IR_INT1_MASK              ((1) << (MSCM_IRCP1IR_INT1_SHIFT))

#define MSCM_IRCP1IR_INT2_SHIFT             (2)
#define MSCM_IRCP1IR_INT2_MASK              ((1) << (MSCM_IRCP1IR_INT2_SHIFT))

#define MSCM_IRCP1IR_INT3_SHIFT             (3)
#define MSCM_IRCP1IR_INT3_MASK              ((1) << (MSCM_IRCP1IR_INT3_SHIFT))



/* Field definitions for IRCPGIR */
#define MSCM_IRCPGIR_INTID_SHIFT            (0)
#define MSCM_IRCPGIR_INTID_MASK             ((0x00000003) << (MSCM_IRCPGIR_INTID_SHIFT))
#define MSCM_IRCPGIR_INTID(n)               (((n) << MSCM_IRCPGIR_INTID_SHIFT) & MSCM_IRCPGIR_INTID_MASK)

#define MSCM_IRCPGIR_CPUTL_SHIFT            (16)
#define MSCM_IRCPGIR_CPUTL_MASK             ((0x00000003) << (MSCM_IRCPGIR_CPUTL_SHIFT))
#define MSCM_IRCPGIR_CPUTL(n)               (((n) << MSCM_IRCPGIR_CPUTL_SHIFT) & MSCM_IRCPGIR_CPUTL_MASK)

#define MSCM_IRCPGIR_TLF_SHIFT              (24)
#define MSCM_IRCPGIR_TLF_MASK               ((0x00000003) << (MSCM_IRCPGIR_TLF_SHIFT))
#define MSCM_IRCPGIR_TLF(n)                 (((n) << MSCM_IRCPGIR_TLF_SHIFT) & MSCM_IRCPGIR_TLF_MASK)



/* Field definitions for IRSPRCn */
#define MSCM_IRSPRCn_CP0_SHIFT              (0)
#define MSCM_IRSPRCn_CP0_MASK               ((1) << (MSCM_IRSPRCn_CP0_SHIFT))

#define MSCM_IRSPRCn_CP1_SHIFT              (1)
#define MSCM_IRSPRCn_CP1_MASK               ((1) << (MSCM_IRSPRCn_CP1_SHIFT))

#define MSCM_IRSPRCn_RO_SHIFT               (15)
#define MSCM_IRSPRCn_RO_MASK                ((1) << (MSCM_IRSPRCn_RO_SHIFT))
/*** End of bit definitions ***/

/*** define base address ***/
#define MSCM_BASE                       (0x40001000)
#define MSCM_BASE_PTR                       ((MSCM_MemMapPtr)0x40001000)

#define MSCM_CPxNUM_REG(base)               ((base)->CPxNUM)
#define MSCM_CPxNUM                         MSCM_CPxNUM_REG(MSCM_BASE_PTR)

#define MSCM_IRCP0IR_REG(base)              ((base)->IRCP0IR)
#define MSCM_IRCP0IR                        MSCM_IRCP0IR_REG(MSCM_BASE_PTR)

#define MSCM_IRCP1IR_REG(base)              ((base)->IRCP1IR)
#define MSCM_IRCP1IR                        MSCM_IRCP1IR_REG(MSCM_BASE_PTR)

#define MSCM_IRCPGIR_REG(base)              ((base)->IRCPGIR)
#define MSCM_IRCPGIR                        MSCM_IRCPGIR_REG(MSCM_BASE_PTR)


/* ----------------------------------------------------------------------------
   -- SysTick
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SysTick_Peripheral SysTick
 * @{
 */

/** SysTick - Peripheral register structure */
typedef struct SysTick_MemMap {
  uint32_t CSR;                                    /**< SysTick Control and Status Register, offset: 0x0 */
  uint32_t RVR;                                    /**< SysTick Reload Value Register, offset: 0x4 */
  uint32_t CVR;                                    /**< SysTick Current Value Register, offset: 0x8 */
  uint32_t CALIB;                                  /**< SysTick Calibration Value Register, offset: 0xC */
} volatile *SysTick_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- SysTick - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SysTick_Register_Accessor_Macros SysTick - Register accessor macros
 * @{
 */


/* SysTick - Register accessors */
#define SysTick_CSR_REG(base)                    ((base)->CSR)
#define SysTick_RVR_REG(base)                    ((base)->RVR)
#define SysTick_CVR_REG(base)                    ((base)->CVR)
#define SysTick_CALIB_REG(base)                  ((base)->CALIB)

/**
 * @}
 */ /* end of group SysTick_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- SysTick Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SysTick_Register_Masks SysTick Register Masks
 * @{
 */

/* CSR Bit Fields */
#define SysTick_CSR_ENABLE_MASK                  0x1u
#define SysTick_CSR_ENABLE_SHIFT                 0
#define SysTick_CSR_TICKINT_MASK                 0x2u
#define SysTick_CSR_TICKINT_SHIFT                1
#define SysTick_CSR_CLKSOURCE_MASK               0x4u
#define SysTick_CSR_CLKSOURCE_SHIFT              2
#define SysTick_CSR_COUNTFLAG_MASK               0x10000u
#define SysTick_CSR_COUNTFLAG_SHIFT              16
/* RVR Bit Fields */
#define SysTick_RVR_RELOAD_MASK                  0xFFFFFFu
#define SysTick_RVR_RELOAD_SHIFT                 0
#define SysTick_RVR_RELOAD(x)                    (((uint32_t)(((uint32_t)(x))<<SysTick_RVR_RELOAD_SHIFT))&SysTick_RVR_RELOAD_MASK)
/* CVR Bit Fields */
#define SysTick_CVR_CURRENT_MASK                 0xFFFFFFu
#define SysTick_CVR_CURRENT_SHIFT                0
#define SysTick_CVR_CURRENT(x)                   (((uint32_t)(((uint32_t)(x))<<SysTick_CVR_CURRENT_SHIFT))&SysTick_CVR_CURRENT_MASK)
/* CALIB Bit Fields */
#define SysTick_CALIB_TENMS_MASK                 0xFFFFFFu
#define SysTick_CALIB_TENMS_SHIFT                0
#define SysTick_CALIB_TENMS(x)                   (((uint32_t)(((uint32_t)(x))<<SysTick_CALIB_TENMS_SHIFT))&SysTick_CALIB_TENMS_MASK)
#define SysTick_CALIB_SKEW_MASK                  0x40000000u
#define SysTick_CALIB_SKEW_SHIFT                 30
#define SysTick_CALIB_NOREF_MASK                 0x80000000u
#define SysTick_CALIB_NOREF_SHIFT                31

/**
 * @}
 */ /* end of group SysTick_Register_Masks */


/* SysTick - Peripheral instance base addresses */
/** Peripheral SysTick base pointer */
#define SysTick_BASE_PTR                         ((SysTick_MemMapPtr)0xE000E010u)

/* ----------------------------------------------------------------------------
   -- SysTick - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup SysTick_Register_Accessor_Macros SysTick - Register accessor macros
 * @{
 */


/* SysTick - Register instance definitions */
/* SysTick */
#define SYST_CSR                                 SysTick_CSR_REG(SysTick_BASE_PTR)
#define SYST_RVR                                 SysTick_RVR_REG(SysTick_BASE_PTR)
#define SYST_CVR                                 SysTick_CVR_REG(SysTick_BASE_PTR)
#define SYST_CALIB                               SysTick_CALIB_REG(SysTick_BASE_PTR)

/**
 * @}
 */ /* end of group SysTick_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group SysTick_Peripheral */

/* ----------------------------------------------------------------------------
   -- L2C
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup L2C_Peripheral L2C
 * @{
 */

/** L2C - Peripheral register structure */
typedef struct L2C_MemMap {
  uint32_t reg0_cache_id;                          /**< Performance Monitor Control Register, offset: 0x0 */
  uint32_t reg0_cache_type;                        /**< Cache Type Register, offset: 0x4 */
  uint8_t RESERVED_0[248];
  uint32_t reg1_control;                           /**< Control Register, offset: 0x100 */
  uint32_t reg1_aux_control;                       /**< Auxiliary Control Register, offset: 0x104 */
  uint32_t reg1_tag_ram_control;                   /**< Tag RAM Latency Control Register, offset: 0x108 */
  uint32_t reg1_data_ram_control;                  /**< Data RAM Latency Control Register, offset: 0x10C */
  uint8_t RESERVED_1[240];
  uint32_t reg2_ev_counter_ctrl;                   /**< Event Counter Control Register, offset: 0x200 */
  uint32_t reg2_ev_counter1_cfg;                   /**< Event Counter Configuration Register, offset: 0x204 */
  uint32_t reg2_ev_counter0_cfg;                   /**< Event Counter Configuration Register, offset: 0x208 */
  uint32_t reg2_ev_counter1;                       /**< Event counter value register 1, offset: 0x20C */
  uint32_t reg2_ev_counter0;                       /**< Event counter value register 0, offset: 0x210 */
  uint32_t reg2_int_mask;                          /**< Interrupt Mask Register, offset: 0x214 */
  uint32_t reg2_int_mask_status;                   /**< Masked Interrupt Status Register, offset: 0x218 */
  uint32_t reg2_int_raw_status;                    /**< Raw Interrupt Status Register, offset: 0x21C */
  uint32_t reg2_int_clear;                         /**< Interrupt Clear Register, offset: 0x220 */
  uint8_t RESERVED_2[1292];
  uint32_t reg7_cache_sync;                        /**< Cache Sync, offset: 0x730 */
  uint8_t RESERVED_3[60];
  uint32_t reg7_inv_pa;                            /**< Invalidate Line by PA, offset: 0x770 */
  uint8_t RESERVED_4[8];
  uint32_t reg7_inv_way;                           /**< Invalidate by Way, offset: 0x77C */
  uint8_t RESERVED_5[48];
  uint32_t reg7_clean_pa;                          /**< Clean Line by PA, offset: 0x7B0 */
  uint8_t RESERVED_6[4];
  uint32_t reg7_clean_index;                       /**< Clean Line by Set/Way, offset: 0x7B8 */
  uint32_t reg7_clean_way;                         /**< Clean by Way, offset: 0x7BC */
  uint8_t RESERVED_7[48];
  uint32_t reg7_clean_inv_pa;                      /**< Clean and Invalidate Line by PA, offset: 0x7F0 */
  uint8_t RESERVED_8[4];
  uint32_t reg7_clean_inv_index;                   /**< Clean and Invalidate Line by Set/Way, offset: 0x7F8 */
  uint32_t reg7_clean_inv_way;                     /**< Clean and Invalidate by Way, offset: 0x7FC */
  uint8_t RESERVED_9[256];
  uint32_t reg9_d_lockdown0;                       /**< Data Lockdown 0 Register, offset: 0x900 */
  uint32_t reg9_i_lockdown0;                       /**< Instruction Lockdown 0 Register, offset: 0x904 */
  uint32_t reg9_d_lockdown1;                       /**< Cache lockdown by way, offset: 0x908 */
  uint32_t reg9_i_lockdown1;                       /**< Instruction Lockdown 0 Register, offset: 0x90C */
  uint32_t reg9_d_lockdown2;                       /**< Data Lockdown 0 Register, offset: 0x910 */
  uint32_t reg9_i_lockdown2;                       /**< Instruction Lockdown 0 Register, offset: 0x914 */
  uint32_t reg9_d_lockdown3;                       /**< Data Lockdown 3 Register, offset: 0x918 */
  uint32_t reg9_i_lockdown3;                       /**< Instruction Lockdown 3 Register, offset: 0x91C */
  uint32_t reg9_d_lockdown4;                       /**< Data Lockdown 4 Register, offset: 0x920 */
  uint32_t reg9_i_lockdown4;                       /**< Instruction Lockdown 4 Register, offset: 0x924 */
  uint32_t reg9_d_lockdown5;                       /**< Data Lockdown 5 Register, offset: 0x928 */
  uint32_t reg9_i_lockdown5;                       /**< Instruction Lockdown 5 Register, offset: 0x92C */
  uint32_t reg9_d_lockdown6;                       /**< Data Lockdown 6 Register, offset: 0x930 */
  uint32_t reg9_i_lockdown6;                       /**< Instruction Lockdown 6 Register, offset: 0x934 */
  uint32_t reg9_d_lockdown7;                       /**< Data Lockdown 7 Register, offset: 0x938 */
  uint32_t reg9_i_lockdown7;                       /**< Instruction Lockdown 7 Register, offset: 0x93C */
  uint8_t RESERVED_10[16];
  uint32_t reg9_lock_line_en;                      /**< , offset: 0x950 */
  uint32_t reg9_unlock_way;                        /**< , offset: 0x954 */
  uint8_t RESERVED_11[680];
  uint32_t reg12_addr_filtering_start;             /**< Address Filtering Start Register, offset: 0xC00 */
  uint32_t reg12_addr_filtering_end;               /**< , offset: 0xC04 */
  uint8_t RESERVED_12[824];
  uint32_t reg15_debug_ctrl;                       /**< Debug Control Register, offset: 0xF40 */
  uint8_t RESERVED_13[28];
  uint32_t reg15_prefetch_ctrl;                    /**< Prefetch Control Register, offset: 0xF60 */
  uint8_t RESERVED_14[28];
  uint32_t reg15_power_ctrl;                       /**< Power Control Register, offset: 0xF80 */
} volatile *L2C_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- L2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup L2C_Register_Accessor_Macros L2C - Register accessor macros
 * @{
 */


/* L2C - Register accessors */
#define L2C_reg0_cache_id_REG(base)              ((base)->reg0_cache_id)
#define L2C_reg0_cache_type_REG(base)            ((base)->reg0_cache_type)
#define L2C_reg1_control_REG(base)               ((base)->reg1_control)
#define L2C_reg1_aux_control_REG(base)           ((base)->reg1_aux_control)
#define L2C_reg1_tag_ram_control_REG(base)       ((base)->reg1_tag_ram_control)
#define L2C_reg1_data_ram_control_REG(base)      ((base)->reg1_data_ram_control)
#define L2C_reg2_ev_counter_ctrl_REG(base)       ((base)->reg2_ev_counter_ctrl)
#define L2C_reg2_ev_counter1_cfg_REG(base)       ((base)->reg2_ev_counter1_cfg)
#define L2C_reg2_ev_counter0_cfg_REG(base)       ((base)->reg2_ev_counter0_cfg)
#define L2C_reg2_ev_counter1_REG(base)           ((base)->reg2_ev_counter1)
#define L2C_reg2_ev_counter0_REG(base)           ((base)->reg2_ev_counter0)
#define L2C_reg2_int_mask_REG(base)              ((base)->reg2_int_mask)
#define L2C_reg2_int_mask_status_REG(base)       ((base)->reg2_int_mask_status)
#define L2C_reg2_int_raw_status_REG(base)        ((base)->reg2_int_raw_status)
#define L2C_reg2_int_clear_REG(base)             ((base)->reg2_int_clear)
#define L2C_reg7_cache_sync_REG(base)            ((base)->reg7_cache_sync)
#define L2C_reg7_inv_pa_REG(base)                ((base)->reg7_inv_pa)
#define L2C_reg7_inv_way_REG(base)               ((base)->reg7_inv_way)
#define L2C_reg7_clean_pa_REG(base)              ((base)->reg7_clean_pa)
#define L2C_reg7_clean_index_REG(base)           ((base)->reg7_clean_index)
#define L2C_reg7_clean_way_REG(base)             ((base)->reg7_clean_way)
#define L2C_reg7_clean_inv_pa_REG(base)          ((base)->reg7_clean_inv_pa)
#define L2C_reg7_clean_inv_index_REG(base)       ((base)->reg7_clean_inv_index)
#define L2C_reg7_clean_inv_way_REG(base)         ((base)->reg7_clean_inv_way)
#define L2C_reg9_d_lockdown0_REG(base)           ((base)->reg9_d_lockdown0)
#define L2C_reg9_i_lockdown0_REG(base)           ((base)->reg9_i_lockdown0)
#define L2C_reg9_d_lockdown1_REG(base)           ((base)->reg9_d_lockdown1)
#define L2C_reg9_i_lockdown1_REG(base)           ((base)->reg9_i_lockdown1)
#define L2C_reg9_d_lockdown2_REG(base)           ((base)->reg9_d_lockdown2)
#define L2C_reg9_i_lockdown2_REG(base)           ((base)->reg9_i_lockdown2)
#define L2C_reg9_d_lockdown3_REG(base)           ((base)->reg9_d_lockdown3)
#define L2C_reg9_i_lockdown3_REG(base)           ((base)->reg9_i_lockdown3)
#define L2C_reg9_d_lockdown4_REG(base)           ((base)->reg9_d_lockdown4)
#define L2C_reg9_i_lockdown4_REG(base)           ((base)->reg9_i_lockdown4)
#define L2C_reg9_d_lockdown5_REG(base)           ((base)->reg9_d_lockdown5)
#define L2C_reg9_i_lockdown5_REG(base)           ((base)->reg9_i_lockdown5)
#define L2C_reg9_d_lockdown6_REG(base)           ((base)->reg9_d_lockdown6)
#define L2C_reg9_i_lockdown6_REG(base)           ((base)->reg9_i_lockdown6)
#define L2C_reg9_d_lockdown7_REG(base)           ((base)->reg9_d_lockdown7)
#define L2C_reg9_i_lockdown7_REG(base)           ((base)->reg9_i_lockdown7)
#define L2C_reg9_lock_line_en_REG(base)          ((base)->reg9_lock_line_en)
#define L2C_reg9_unlock_way_REG(base)            ((base)->reg9_unlock_way)
#define L2C_reg12_addr_filtering_start_REG(base) ((base)->reg12_addr_filtering_start)
#define L2C_reg12_addr_filtering_end_REG(base)   ((base)->reg12_addr_filtering_end)
#define L2C_reg15_debug_ctrl_REG(base)           ((base)->reg15_debug_ctrl)
#define L2C_reg15_prefetch_ctrl_REG(base)        ((base)->reg15_prefetch_ctrl)
#define L2C_reg15_power_ctrl_REG(base)           ((base)->reg15_power_ctrl)

/**
 * @}
 */ /* end of group L2C_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- L2C Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup L2C_Register_Masks L2C Register Masks
 * @{
 */

/* reg0_cache_id Bit Fields */
#define L2C_reg0_cache_id_RTL_release_MASK       0x3Fu
#define L2C_reg0_cache_id_RTL_release_SHIFT      0
#define L2C_reg0_cache_id_RTL_release(x)         (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_id_RTL_release_SHIFT))&L2C_reg0_cache_id_RTL_release_MASK)
#define L2C_reg0_cache_id_Part_number_MASK       0x3C0u
#define L2C_reg0_cache_id_Part_number_SHIFT      6
#define L2C_reg0_cache_id_Part_number(x)         (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_id_Part_number_SHIFT))&L2C_reg0_cache_id_Part_number_MASK)
#define L2C_reg0_cache_id_CACHE_ID_MASK          0xFC00u
#define L2C_reg0_cache_id_CACHE_ID_SHIFT         10
#define L2C_reg0_cache_id_CACHE_ID(x)            (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_id_CACHE_ID_SHIFT))&L2C_reg0_cache_id_CACHE_ID_MASK)
#define L2C_reg0_cache_id_Implementer_MASK       0xFF000000u
#define L2C_reg0_cache_id_Implementer_SHIFT      24
#define L2C_reg0_cache_id_Implementer(x)         (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_id_Implementer_SHIFT))&L2C_reg0_cache_id_Implementer_MASK)
/* reg0_cache_type Bit Fields */
#define L2C_reg0_cache_type_I_L2_cache_line_length_MASK 0x3u
#define L2C_reg0_cache_type_I_L2_cache_line_length_SHIFT 0
#define L2C_reg0_cache_type_I_L2_cache_line_length(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_type_I_L2_cache_line_length_SHIFT))&L2C_reg0_cache_type_I_L2_cache_line_length_MASK)
#define L2C_reg0_cache_type_I_L2_associativity_MASK 0x40u
#define L2C_reg0_cache_type_I_L2_associativity_SHIFT 6
#define L2C_reg0_cache_type_Isize_MASK           0xF80u
#define L2C_reg0_cache_type_Isize_SHIFT          7
#define L2C_reg0_cache_type_Isize(x)             (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_type_Isize_SHIFT))&L2C_reg0_cache_type_Isize_MASK)
#define L2C_reg0_cache_type_D_L2_cache_line_length_MASK 0x3000u
#define L2C_reg0_cache_type_D_L2_cache_line_length_SHIFT 12
#define L2C_reg0_cache_type_D_L2_cache_line_length(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_type_D_L2_cache_line_length_SHIFT))&L2C_reg0_cache_type_D_L2_cache_line_length_MASK)
#define L2C_reg0_cache_type_D_L2_associativity_MASK 0x40000u
#define L2C_reg0_cache_type_D_L2_associativity_SHIFT 18
#define L2C_reg0_cache_type_Dsize_MASK           0xF80000u
#define L2C_reg0_cache_type_Dsize_SHIFT          19
#define L2C_reg0_cache_type_Dsize(x)             (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_type_Dsize_SHIFT))&L2C_reg0_cache_type_Dsize_MASK)
#define L2C_reg0_cache_type_H_MASK               0x1000000u
#define L2C_reg0_cache_type_H_SHIFT              24
#define L2C_reg0_cache_type_ctype_MASK           0x1E000000u
#define L2C_reg0_cache_type_ctype_SHIFT          25
#define L2C_reg0_cache_type_ctype(x)             (((uint32_t)(((uint32_t)(x))<<L2C_reg0_cache_type_ctype_SHIFT))&L2C_reg0_cache_type_ctype_MASK)
#define L2C_reg0_cache_type_Data_banking_MASK    0x80000000u
#define L2C_reg0_cache_type_Data_banking_SHIFT   31
/* reg1_control Bit Fields */
#define L2C_reg1_control_L2_Cache_enable_MASK    0x1u
#define L2C_reg1_control_L2_Cache_enable_SHIFT   0
/* reg1_aux_control Bit Fields */
#define L2C_reg1_aux_control_Full_Line_of_Zero_Enable_MASK 0x1u
#define L2C_reg1_aux_control_Full_Line_of_Zero_Enable_SHIFT 0
#define L2C_reg1_aux_control_High_Priority_for_SO_and_Dev_Reads_Enable_MASK 0x400u
#define L2C_reg1_aux_control_High_Priority_for_SO_and_Dev_Reads_Enable_SHIFT 10
#define L2C_reg1_aux_control_Store_buffer_device_limitation_Enable_MASK 0x800u
#define L2C_reg1_aux_control_Store_buffer_device_limitation_Enable_SHIFT 11
#define L2C_reg1_aux_control_Exclusive_cache_configuration_MASK 0x1000u
#define L2C_reg1_aux_control_Exclusive_cache_configuration_SHIFT 12
#define L2C_reg1_aux_control_Shared_Attribute_Invalidate_Enable_MASK 0x2000u
#define L2C_reg1_aux_control_Shared_Attribute_Invalidate_Enable_SHIFT 13
#define L2C_reg1_aux_control_Associativity_MASK  0x10000u
#define L2C_reg1_aux_control_Associativity_SHIFT 16
#define L2C_reg1_aux_control_Way_size_MASK       0xE0000u
#define L2C_reg1_aux_control_Way_size_SHIFT      17
#define L2C_reg1_aux_control_Way_size(x)         (((uint32_t)(((uint32_t)(x))<<L2C_reg1_aux_control_Way_size_SHIFT))&L2C_reg1_aux_control_Way_size_MASK)
#define L2C_reg1_aux_control_Event_monitor_bus_enable_MASK 0x100000u
#define L2C_reg1_aux_control_Event_monitor_bus_enable_SHIFT 20
#define L2C_reg1_aux_control_Parity_enable_MASK  0x200000u
#define L2C_reg1_aux_control_Parity_enable_SHIFT 21
#define L2C_reg1_aux_control_Shared_attribute_override_enable_MASK 0x400000u
#define L2C_reg1_aux_control_Shared_attribute_override_enable_SHIFT 22
#define L2C_reg1_aux_control_Force_write_allocate_MASK 0x1800000u
#define L2C_reg1_aux_control_Force_write_allocate_SHIFT 23
#define L2C_reg1_aux_control_Force_write_allocate(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_aux_control_Force_write_allocate_SHIFT))&L2C_reg1_aux_control_Force_write_allocate_MASK)
#define L2C_reg1_aux_control_Cache_replacement_policy_MASK 0x2000000u
#define L2C_reg1_aux_control_Cache_replacement_policy_SHIFT 25
#define L2C_reg1_aux_control_Non_secure_lockdown_enable_MASK 0x4000000u
#define L2C_reg1_aux_control_Non_secure_lockdown_enable_SHIFT 26
#define L2C_reg1_aux_control_Non_secure_interrupt_access_control_MASK 0x8000000u
#define L2C_reg1_aux_control_Non_secure_interrupt_access_control_SHIFT 27
#define L2C_reg1_aux_control_Data_prefetch_enable_MASK 0x10000000u
#define L2C_reg1_aux_control_Data_prefetch_enable_SHIFT 28
#define L2C_reg1_aux_control_Instruction_prefetch_enable_MASK 0x20000000u
#define L2C_reg1_aux_control_Instruction_prefetch_enable_SHIFT 29
#define L2C_reg1_aux_control_Early_BRESP_enable_MASK 0x40000000u
#define L2C_reg1_aux_control_Early_BRESP_enable_SHIFT 30
/* reg1_tag_ram_control Bit Fields */
#define L2C_reg1_tag_ram_control_RAM_setup_latency_MASK 0x7u
#define L2C_reg1_tag_ram_control_RAM_setup_latency_SHIFT 0
#define L2C_reg1_tag_ram_control_RAM_setup_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_tag_ram_control_RAM_setup_latency_SHIFT))&L2C_reg1_tag_ram_control_RAM_setup_latency_MASK)
#define L2C_reg1_tag_ram_control_RAM_read_access_latency_MASK 0x70u
#define L2C_reg1_tag_ram_control_RAM_read_access_latency_SHIFT 4
#define L2C_reg1_tag_ram_control_RAM_read_access_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_tag_ram_control_RAM_read_access_latency_SHIFT))&L2C_reg1_tag_ram_control_RAM_read_access_latency_MASK)
#define L2C_reg1_tag_ram_control_RAM_write_access_latency_MASK 0x700u
#define L2C_reg1_tag_ram_control_RAM_write_access_latency_SHIFT 8
#define L2C_reg1_tag_ram_control_RAM_write_access_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_tag_ram_control_RAM_write_access_latency_SHIFT))&L2C_reg1_tag_ram_control_RAM_write_access_latency_MASK)
/* reg1_data_ram_control Bit Fields */
#define L2C_reg1_data_ram_control_RAM_setup_latency_MASK 0x7u
#define L2C_reg1_data_ram_control_RAM_setup_latency_SHIFT 0
#define L2C_reg1_data_ram_control_RAM_setup_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_data_ram_control_RAM_setup_latency_SHIFT))&L2C_reg1_data_ram_control_RAM_setup_latency_MASK)
#define L2C_reg1_data_ram_control_RAM_read_access_latency_MASK 0x70u
#define L2C_reg1_data_ram_control_RAM_read_access_latency_SHIFT 4
#define L2C_reg1_data_ram_control_RAM_read_access_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_data_ram_control_RAM_read_access_latency_SHIFT))&L2C_reg1_data_ram_control_RAM_read_access_latency_MASK)
#define L2C_reg1_data_ram_control_RAM_write_access_latency_MASK 0x700u
#define L2C_reg1_data_ram_control_RAM_write_access_latency_SHIFT 8
#define L2C_reg1_data_ram_control_RAM_write_access_latency(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg1_data_ram_control_RAM_write_access_latency_SHIFT))&L2C_reg1_data_ram_control_RAM_write_access_latency_MASK)
/* reg2_ev_counter_ctrl Bit Fields */
#define L2C_reg2_ev_counter_ctrl_Event_counter_enable_MASK 0x1u
#define L2C_reg2_ev_counter_ctrl_Event_counter_enable_SHIFT 0
#define L2C_reg2_ev_counter_ctrl_Counter_reset_MASK 0x6u
#define L2C_reg2_ev_counter_ctrl_Counter_reset_SHIFT 1
#define L2C_reg2_ev_counter_ctrl_Counter_reset(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter_ctrl_Counter_reset_SHIFT))&L2C_reg2_ev_counter_ctrl_Counter_reset_MASK)
/* reg2_ev_counter1_cfg Bit Fields */
#define L2C_reg2_ev_counter1_cfg_Event_counter_interrupt_generation_MASK 0x3u
#define L2C_reg2_ev_counter1_cfg_Event_counter_interrupt_generation_SHIFT 0
#define L2C_reg2_ev_counter1_cfg_Event_counter_interrupt_generation(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter1_cfg_Event_counter_interrupt_generation_SHIFT))&L2C_reg2_ev_counter1_cfg_Event_counter_interrupt_generation_MASK)
#define L2C_reg2_ev_counter1_cfg_Counter_event_source_MASK 0x3Cu
#define L2C_reg2_ev_counter1_cfg_Counter_event_source_SHIFT 2
#define L2C_reg2_ev_counter1_cfg_Counter_event_source(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter1_cfg_Counter_event_source_SHIFT))&L2C_reg2_ev_counter1_cfg_Counter_event_source_MASK)
/* reg2_ev_counter0_cfg Bit Fields */
#define L2C_reg2_ev_counter0_cfg_Event_counter_interrupt_generation_MASK 0x3u
#define L2C_reg2_ev_counter0_cfg_Event_counter_interrupt_generation_SHIFT 0
#define L2C_reg2_ev_counter0_cfg_Event_counter_interrupt_generation(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter0_cfg_Event_counter_interrupt_generation_SHIFT))&L2C_reg2_ev_counter0_cfg_Event_counter_interrupt_generation_MASK)
#define L2C_reg2_ev_counter0_cfg_Counter_event_source_MASK 0x3Cu
#define L2C_reg2_ev_counter0_cfg_Counter_event_source_SHIFT 2
#define L2C_reg2_ev_counter0_cfg_Counter_event_source(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter0_cfg_Counter_event_source_SHIFT))&L2C_reg2_ev_counter0_cfg_Counter_event_source_MASK)
/* reg2_ev_counter1 Bit Fields */
#define L2C_reg2_ev_counter1_Counter_value_MASK  0xFFFFFFFFu
#define L2C_reg2_ev_counter1_Counter_value_SHIFT 0
#define L2C_reg2_ev_counter1_Counter_value(x)    (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter1_Counter_value_SHIFT))&L2C_reg2_ev_counter1_Counter_value_MASK)
/* reg2_ev_counter0 Bit Fields */
#define L2C_reg2_ev_counter0_Counter_value_MASK  0xFFFFFFFFu
#define L2C_reg2_ev_counter0_Counter_value_SHIFT 0
#define L2C_reg2_ev_counter0_Counter_value(x)    (((uint32_t)(((uint32_t)(x))<<L2C_reg2_ev_counter0_Counter_value_SHIFT))&L2C_reg2_ev_counter0_Counter_value_MASK)
/* reg2_int_mask Bit Fields */
#define L2C_reg2_int_mask_ECNTR_MASK             0x1u
#define L2C_reg2_int_mask_ECNTR_SHIFT            0
#define L2C_reg2_int_mask_PARRT_MASK             0x2u
#define L2C_reg2_int_mask_PARRT_SHIFT            1
#define L2C_reg2_int_mask_PARRD_MASK             0x4u
#define L2C_reg2_int_mask_PARRD_SHIFT            2
#define L2C_reg2_int_mask_ERRWT_MASK             0x8u
#define L2C_reg2_int_mask_ERRWT_SHIFT            3
#define L2C_reg2_int_mask_ERRWD_MASK             0x10u
#define L2C_reg2_int_mask_ERRWD_SHIFT            4
#define L2C_reg2_int_mask_ERRRT_MASK             0x20u
#define L2C_reg2_int_mask_ERRRT_SHIFT            5
#define L2C_reg2_int_mask_ERRRD_MASK             0x40u
#define L2C_reg2_int_mask_ERRRD_SHIFT            6
#define L2C_reg2_int_mask_SLVERR_MASK            0x80u
#define L2C_reg2_int_mask_SLVERR_SHIFT           7
#define L2C_reg2_int_mask_DECERR_MASK            0x100u
#define L2C_reg2_int_mask_DECERR_SHIFT           8
/* reg2_int_mask_status Bit Fields */
#define L2C_reg2_int_mask_status_ECNTR_MASK      0x1u
#define L2C_reg2_int_mask_status_ECNTR_SHIFT     0
#define L2C_reg2_int_mask_status_PARRT_MASK      0x2u
#define L2C_reg2_int_mask_status_PARRT_SHIFT     1
#define L2C_reg2_int_mask_status_PARRD_MASK      0x4u
#define L2C_reg2_int_mask_status_PARRD_SHIFT     2
#define L2C_reg2_int_mask_status_ERRWT_MASK      0x8u
#define L2C_reg2_int_mask_status_ERRWT_SHIFT     3
#define L2C_reg2_int_mask_status_ERRWD_MASK      0x10u
#define L2C_reg2_int_mask_status_ERRWD_SHIFT     4
#define L2C_reg2_int_mask_status_ERRRT_MASK      0x20u
#define L2C_reg2_int_mask_status_ERRRT_SHIFT     5
#define L2C_reg2_int_mask_status_ERRRD_MASK      0x40u
#define L2C_reg2_int_mask_status_ERRRD_SHIFT     6
#define L2C_reg2_int_mask_status_SLVERR_MASK     0x80u
#define L2C_reg2_int_mask_status_SLVERR_SHIFT    7
#define L2C_reg2_int_mask_status_DECERR_MASK     0x100u
#define L2C_reg2_int_mask_status_DECERR_SHIFT    8
/* reg2_int_raw_status Bit Fields */
#define L2C_reg2_int_raw_status_ECNTR_MASK       0x1u
#define L2C_reg2_int_raw_status_ECNTR_SHIFT      0
#define L2C_reg2_int_raw_status_PARRT_MASK       0x2u
#define L2C_reg2_int_raw_status_PARRT_SHIFT      1
#define L2C_reg2_int_raw_status_PARRD_MASK       0x4u
#define L2C_reg2_int_raw_status_PARRD_SHIFT      2
#define L2C_reg2_int_raw_status_ERRWT_MASK       0x8u
#define L2C_reg2_int_raw_status_ERRWT_SHIFT      3
#define L2C_reg2_int_raw_status_ERRWD_MASK       0x10u
#define L2C_reg2_int_raw_status_ERRWD_SHIFT      4
#define L2C_reg2_int_raw_status_ERRRT_MASK       0x20u
#define L2C_reg2_int_raw_status_ERRRT_SHIFT      5
#define L2C_reg2_int_raw_status_ERRRD_MASK       0x40u
#define L2C_reg2_int_raw_status_ERRRD_SHIFT      6
#define L2C_reg2_int_raw_status_SLVERR_MASK      0x80u
#define L2C_reg2_int_raw_status_SLVERR_SHIFT     7
#define L2C_reg2_int_raw_status_DECERR_MASK      0x100u
#define L2C_reg2_int_raw_status_DECERR_SHIFT     8
/* reg2_int_clear Bit Fields */
#define L2C_reg2_int_clear_ECNTR_MASK            0x1u
#define L2C_reg2_int_clear_ECNTR_SHIFT           0
#define L2C_reg2_int_clear_PARRT_MASK            0x2u
#define L2C_reg2_int_clear_PARRT_SHIFT           1
#define L2C_reg2_int_clear_PARRD_MASK            0x4u
#define L2C_reg2_int_clear_PARRD_SHIFT           2
#define L2C_reg2_int_clear_ERRWT_MASK            0x8u
#define L2C_reg2_int_clear_ERRWT_SHIFT           3
#define L2C_reg2_int_clear_ERRWD_MASK            0x10u
#define L2C_reg2_int_clear_ERRWD_SHIFT           4
#define L2C_reg2_int_clear_ERRRT_MASK            0x20u
#define L2C_reg2_int_clear_ERRRT_SHIFT           5
#define L2C_reg2_int_clear_ERRRD_MASK            0x40u
#define L2C_reg2_int_clear_ERRRD_SHIFT           6
#define L2C_reg2_int_clear_SLVERR_MASK           0x80u
#define L2C_reg2_int_clear_SLVERR_SHIFT          7
#define L2C_reg2_int_clear_DECERR_MASK           0x100u
#define L2C_reg2_int_clear_DECERR_SHIFT          8
/* reg7_cache_sync Bit Fields */
#define L2C_reg7_cache_sync_C_MASK               0x1u
#define L2C_reg7_cache_sync_C_SHIFT              0
/* reg7_inv_pa Bit Fields */
#define L2C_reg7_inv_pa_C_MASK                   0x1u
#define L2C_reg7_inv_pa_C_SHIFT                  0
#define L2C_reg7_inv_pa_Index_MASK               0xFFE0u
#define L2C_reg7_inv_pa_Index_SHIFT              5
#define L2C_reg7_inv_pa_Index(x)                 (((uint32_t)(((uint32_t)(x))<<L2C_reg7_inv_pa_Index_SHIFT))&L2C_reg7_inv_pa_Index_MASK)
#define L2C_reg7_inv_pa_Tag_MASK                 0xFFFF0000u
#define L2C_reg7_inv_pa_Tag_SHIFT                16
#define L2C_reg7_inv_pa_Tag(x)                   (((uint32_t)(((uint32_t)(x))<<L2C_reg7_inv_pa_Tag_SHIFT))&L2C_reg7_inv_pa_Tag_MASK)
/* reg7_inv_way Bit Fields */
#define L2C_reg7_inv_way_Way_MASK                0xFFFFu
#define L2C_reg7_inv_way_Way_SHIFT               0
#define L2C_reg7_inv_way_Way(x)                  (((uint32_t)(((uint32_t)(x))<<L2C_reg7_inv_way_Way_SHIFT))&L2C_reg7_inv_way_Way_MASK)
/* reg7_clean_pa Bit Fields */
#define L2C_reg7_clean_pa_C_MASK                 0x1u
#define L2C_reg7_clean_pa_C_SHIFT                0
#define L2C_reg7_clean_pa_Index_MASK             0xFFE0u
#define L2C_reg7_clean_pa_Index_SHIFT            5
#define L2C_reg7_clean_pa_Index(x)               (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_pa_Index_SHIFT))&L2C_reg7_clean_pa_Index_MASK)
#define L2C_reg7_clean_pa_Tag_MASK               0xFFFF0000u
#define L2C_reg7_clean_pa_Tag_SHIFT              16
#define L2C_reg7_clean_pa_Tag(x)                 (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_pa_Tag_SHIFT))&L2C_reg7_clean_pa_Tag_MASK)
/* reg7_clean_index Bit Fields */
#define L2C_reg7_clean_index_C_MASK              0x1u
#define L2C_reg7_clean_index_C_SHIFT             0
#define L2C_reg7_clean_index_Index_MASK          0xFFE0u
#define L2C_reg7_clean_index_Index_SHIFT         5
#define L2C_reg7_clean_index_Index(x)            (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_index_Index_SHIFT))&L2C_reg7_clean_index_Index_MASK)
#define L2C_reg7_clean_index_Way_MASK            0xFFFF0000u
#define L2C_reg7_clean_index_Way_SHIFT           16
#define L2C_reg7_clean_index_Way(x)              (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_index_Way_SHIFT))&L2C_reg7_clean_index_Way_MASK)
/* reg7_clean_way Bit Fields */
#define L2C_reg7_clean_way_Way_MASK              0xFFFFu
#define L2C_reg7_clean_way_Way_SHIFT             0
#define L2C_reg7_clean_way_Way(x)                (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_way_Way_SHIFT))&L2C_reg7_clean_way_Way_MASK)
/* reg7_clean_inv_pa Bit Fields */
#define L2C_reg7_clean_inv_pa_C_MASK             0x1u
#define L2C_reg7_clean_inv_pa_C_SHIFT            0
#define L2C_reg7_clean_inv_pa_Index_MASK         0xFFE0u
#define L2C_reg7_clean_inv_pa_Index_SHIFT        5
#define L2C_reg7_clean_inv_pa_Index(x)           (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_inv_pa_Index_SHIFT))&L2C_reg7_clean_inv_pa_Index_MASK)
#define L2C_reg7_clean_inv_pa_Tag_MASK           0xFFFF0000u
#define L2C_reg7_clean_inv_pa_Tag_SHIFT          16
#define L2C_reg7_clean_inv_pa_Tag(x)             (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_inv_pa_Tag_SHIFT))&L2C_reg7_clean_inv_pa_Tag_MASK)
/* reg7_clean_inv_index Bit Fields */
#define L2C_reg7_clean_inv_index_C_MASK          0x1u
#define L2C_reg7_clean_inv_index_C_SHIFT         0
#define L2C_reg7_clean_inv_index_Index_MASK      0xFFE0u
#define L2C_reg7_clean_inv_index_Index_SHIFT     5
#define L2C_reg7_clean_inv_index_Index(x)        (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_inv_index_Index_SHIFT))&L2C_reg7_clean_inv_index_Index_MASK)
#define L2C_reg7_clean_inv_index_Way_MASK        0xF0000000u
#define L2C_reg7_clean_inv_index_Way_SHIFT       28
#define L2C_reg7_clean_inv_index_Way(x)          (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_inv_index_Way_SHIFT))&L2C_reg7_clean_inv_index_Way_MASK)
/* reg7_clean_inv_way Bit Fields */
#define L2C_reg7_clean_inv_way_Way_MASK          0xFFFFu
#define L2C_reg7_clean_inv_way_Way_SHIFT         0
#define L2C_reg7_clean_inv_way_Way(x)            (((uint32_t)(((uint32_t)(x))<<L2C_reg7_clean_inv_way_Way_SHIFT))&L2C_reg7_clean_inv_way_Way_MASK)
/* reg9_d_lockdown0 Bit Fields */
#define L2C_reg9_d_lockdown0_DATALOCK000_MASK    0xFFFFu
#define L2C_reg9_d_lockdown0_DATALOCK000_SHIFT   0
#define L2C_reg9_d_lockdown0_DATALOCK000(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown0_DATALOCK000_SHIFT))&L2C_reg9_d_lockdown0_DATALOCK000_MASK)
/* reg9_i_lockdown0 Bit Fields */
#define L2C_reg9_i_lockdown0_INSTRLOCK000_MASK   0xFFFFu
#define L2C_reg9_i_lockdown0_INSTRLOCK000_SHIFT  0
#define L2C_reg9_i_lockdown0_INSTRLOCK000(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown0_INSTRLOCK000_SHIFT))&L2C_reg9_i_lockdown0_INSTRLOCK000_MASK)
/* reg9_d_lockdown1 Bit Fields */
#define L2C_reg9_d_lockdown1_DATALOCK001_MASK    0xFFFFu
#define L2C_reg9_d_lockdown1_DATALOCK001_SHIFT   0
#define L2C_reg9_d_lockdown1_DATALOCK001(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown1_DATALOCK001_SHIFT))&L2C_reg9_d_lockdown1_DATALOCK001_MASK)
/* reg9_i_lockdown1 Bit Fields */
#define L2C_reg9_i_lockdown1_INSTRLOCK001_MASK   0xFFFFu
#define L2C_reg9_i_lockdown1_INSTRLOCK001_SHIFT  0
#define L2C_reg9_i_lockdown1_INSTRLOCK001(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown1_INSTRLOCK001_SHIFT))&L2C_reg9_i_lockdown1_INSTRLOCK001_MASK)
/* reg9_d_lockdown2 Bit Fields */
#define L2C_reg9_d_lockdown2_DATALOCK010_MASK    0xFFFFu
#define L2C_reg9_d_lockdown2_DATALOCK010_SHIFT   0
#define L2C_reg9_d_lockdown2_DATALOCK010(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown2_DATALOCK010_SHIFT))&L2C_reg9_d_lockdown2_DATALOCK010_MASK)
/* reg9_i_lockdown2 Bit Fields */
#define L2C_reg9_i_lockdown2_INSTRLOCK010_MASK   0xFFFFu
#define L2C_reg9_i_lockdown2_INSTRLOCK010_SHIFT  0
#define L2C_reg9_i_lockdown2_INSTRLOCK010(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown2_INSTRLOCK010_SHIFT))&L2C_reg9_i_lockdown2_INSTRLOCK010_MASK)
/* reg9_d_lockdown3 Bit Fields */
#define L2C_reg9_d_lockdown3_DATALOCK011_MASK    0xFFFFu
#define L2C_reg9_d_lockdown3_DATALOCK011_SHIFT   0
#define L2C_reg9_d_lockdown3_DATALOCK011(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown3_DATALOCK011_SHIFT))&L2C_reg9_d_lockdown3_DATALOCK011_MASK)
/* reg9_i_lockdown3 Bit Fields */
#define L2C_reg9_i_lockdown3_INSTRLOCK011_MASK   0xFFFFu
#define L2C_reg9_i_lockdown3_INSTRLOCK011_SHIFT  0
#define L2C_reg9_i_lockdown3_INSTRLOCK011(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown3_INSTRLOCK011_SHIFT))&L2C_reg9_i_lockdown3_INSTRLOCK011_MASK)
/* reg9_d_lockdown4 Bit Fields */
#define L2C_reg9_d_lockdown4_DATALOCK100_MASK    0xFFFFu
#define L2C_reg9_d_lockdown4_DATALOCK100_SHIFT   0
#define L2C_reg9_d_lockdown4_DATALOCK100(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown4_DATALOCK100_SHIFT))&L2C_reg9_d_lockdown4_DATALOCK100_MASK)
/* reg9_i_lockdown4 Bit Fields */
#define L2C_reg9_i_lockdown4_INSTRLOCK100_MASK   0xFFFFu
#define L2C_reg9_i_lockdown4_INSTRLOCK100_SHIFT  0
#define L2C_reg9_i_lockdown4_INSTRLOCK100(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown4_INSTRLOCK100_SHIFT))&L2C_reg9_i_lockdown4_INSTRLOCK100_MASK)
/* reg9_d_lockdown5 Bit Fields */
#define L2C_reg9_d_lockdown5_DATALOCK101_MASK    0xFFFFu
#define L2C_reg9_d_lockdown5_DATALOCK101_SHIFT   0
#define L2C_reg9_d_lockdown5_DATALOCK101(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown5_DATALOCK101_SHIFT))&L2C_reg9_d_lockdown5_DATALOCK101_MASK)
/* reg9_i_lockdown5 Bit Fields */
#define L2C_reg9_i_lockdown5_INSTRLOCK101_MASK   0xFFFFu
#define L2C_reg9_i_lockdown5_INSTRLOCK101_SHIFT  0
#define L2C_reg9_i_lockdown5_INSTRLOCK101(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown5_INSTRLOCK101_SHIFT))&L2C_reg9_i_lockdown5_INSTRLOCK101_MASK)
/* reg9_d_lockdown6 Bit Fields */
#define L2C_reg9_d_lockdown6_DATALOCK110_MASK    0xFFFFu
#define L2C_reg9_d_lockdown6_DATALOCK110_SHIFT   0
#define L2C_reg9_d_lockdown6_DATALOCK110(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown6_DATALOCK110_SHIFT))&L2C_reg9_d_lockdown6_DATALOCK110_MASK)
/* reg9_i_lockdown6 Bit Fields */
#define L2C_reg9_i_lockdown6_INSTRLOCK110_MASK   0xFFFFu
#define L2C_reg9_i_lockdown6_INSTRLOCK110_SHIFT  0
#define L2C_reg9_i_lockdown6_INSTRLOCK110(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown6_INSTRLOCK110_SHIFT))&L2C_reg9_i_lockdown6_INSTRLOCK110_MASK)
/* reg9_d_lockdown7 Bit Fields */
#define L2C_reg9_d_lockdown7_DATALOCK111_MASK    0xFFFFu
#define L2C_reg9_d_lockdown7_DATALOCK111_SHIFT   0
#define L2C_reg9_d_lockdown7_DATALOCK111(x)      (((uint32_t)(((uint32_t)(x))<<L2C_reg9_d_lockdown7_DATALOCK111_SHIFT))&L2C_reg9_d_lockdown7_DATALOCK111_MASK)
/* reg9_i_lockdown7 Bit Fields */
#define L2C_reg9_i_lockdown7_INSTRLOCK111_MASK   0xFFFFu
#define L2C_reg9_i_lockdown7_INSTRLOCK111_SHIFT  0
#define L2C_reg9_i_lockdown7_INSTRLOCK111(x)     (((uint32_t)(((uint32_t)(x))<<L2C_reg9_i_lockdown7_INSTRLOCK111_SHIFT))&L2C_reg9_i_lockdown7_INSTRLOCK111_MASK)
/* reg12_addr_filtering_start Bit Fields */
#define L2C_reg12_addr_filtering_start_address_filtering_enable_MASK 0x1u
#define L2C_reg12_addr_filtering_start_address_filtering_enable_SHIFT 0
#define L2C_reg12_addr_filtering_start_address_filtering_start_MASK 0xFFF00000u
#define L2C_reg12_addr_filtering_start_address_filtering_start_SHIFT 20
#define L2C_reg12_addr_filtering_start_address_filtering_start(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg12_addr_filtering_start_address_filtering_start_SHIFT))&L2C_reg12_addr_filtering_start_address_filtering_start_MASK)
/* reg12_addr_filtering_end Bit Fields */
#define L2C_reg12_addr_filtering_end_address_filtering_end_MASK 0x100000u
#define L2C_reg12_addr_filtering_end_address_filtering_end_SHIFT 20
/* reg15_debug_ctrl Bit Fields */
#define L2C_reg15_debug_ctrl_DCL_MASK            0x1u
#define L2C_reg15_debug_ctrl_DCL_SHIFT           0
#define L2C_reg15_debug_ctrl_DWB_MASK            0x2u
#define L2C_reg15_debug_ctrl_DWB_SHIFT           1
#define L2C_reg15_debug_ctrl_SPNIDEN_MASK        0x4u
#define L2C_reg15_debug_ctrl_SPNIDEN_SHIFT       2
/* reg15_prefetch_ctrl Bit Fields */
#define L2C_reg15_prefetch_ctrl_Prefetch_offset_MASK 0x1Fu
#define L2C_reg15_prefetch_ctrl_Prefetch_offset_SHIFT 0
#define L2C_reg15_prefetch_ctrl_Prefetch_offset(x) (((uint32_t)(((uint32_t)(x))<<L2C_reg15_prefetch_ctrl_Prefetch_offset_SHIFT))&L2C_reg15_prefetch_ctrl_Prefetch_offset_MASK)
#define L2C_reg15_prefetch_ctrl_Not_same_ID_on_exclusive_sequence_enable_MASK 0x200000u
#define L2C_reg15_prefetch_ctrl_Not_same_ID_on_exclusive_sequence_enable_SHIFT 21
#define L2C_reg15_prefetch_ctrl_Incr_double_Linefill_enable_MASK 0x800000u
#define L2C_reg15_prefetch_ctrl_Incr_double_Linefill_enable_SHIFT 23
#define L2C_reg15_prefetch_ctrl_Prefetch_drop_enable_MASK 0x1000000u
#define L2C_reg15_prefetch_ctrl_Prefetch_drop_enable_SHIFT 24
#define L2C_reg15_prefetch_ctrl_Double_linefill_on_WRAP_read_disable_MASK 0x8000000u
#define L2C_reg15_prefetch_ctrl_Double_linefill_on_WRAP_read_disable_SHIFT 27
#define L2C_reg15_prefetch_ctrl_Data_prefetch_enable_MASK 0x10000000u
#define L2C_reg15_prefetch_ctrl_Data_prefetch_enable_SHIFT 28
#define L2C_reg15_prefetch_ctrl_Instruction_prefetch_enable_MASK 0x20000000u
#define L2C_reg15_prefetch_ctrl_Instruction_prefetch_enable_SHIFT 29
#define L2C_reg15_prefetch_ctrl_Double_linefill_enable_MASK 0x40000000u
#define L2C_reg15_prefetch_ctrl_Double_linefill_enable_SHIFT 30
/* reg15_power_ctrl Bit Fields */
#define L2C_reg15_power_ctrl_standby_mode_en_MASK 0x1u
#define L2C_reg15_power_ctrl_standby_mode_en_SHIFT 0
#define L2C_reg15_power_ctrl_dynamic_clk_gating_en_MASK 0x2u
#define L2C_reg15_power_ctrl_dynamic_clk_gating_en_SHIFT 1

/**
 * @}
 */ /* end of group L2C_Register_Masks */


/* L2C - Peripheral instance base addresses */
/** Peripheral CA5L2C base pointer */
#define CA5L2C_BASE_PTR                          ((L2C_MemMapPtr)0x40006000u)
/** Array initializer of L2C peripheral base pointers */
#define L2C_BASE_PTRS                            { CA5L2C_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- L2C - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup L2C_Register_Accessor_Macros L2C - Register accessor macros
 * @{
 */


/* L2C - Register instance definitions */
/* CA5L2C */
#define CA5L2C_reg0_cache_id                     L2C_reg0_cache_id_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg0_cache_type                   L2C_reg0_cache_type_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg1_control                      L2C_reg1_control_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg1_aux_control                  L2C_reg1_aux_control_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg1_tag_ram_control              L2C_reg1_tag_ram_control_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg1_data_ram_control             L2C_reg1_data_ram_control_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_ev_counter_ctrl              L2C_reg2_ev_counter_ctrl_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_ev_counter1_cfg              L2C_reg2_ev_counter1_cfg_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_ev_counter0_cfg              L2C_reg2_ev_counter0_cfg_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_ev_counter1                  L2C_reg2_ev_counter1_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_ev_counter0                  L2C_reg2_ev_counter0_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_int_mask                     L2C_reg2_int_mask_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_int_mask_status              L2C_reg2_int_mask_status_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_int_raw_status               L2C_reg2_int_raw_status_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg2_int_clear                    L2C_reg2_int_clear_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_cache_sync                   L2C_reg7_cache_sync_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_inv_pa                       L2C_reg7_inv_pa_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_inv_way                      L2C_reg7_inv_way_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_pa                     L2C_reg7_clean_pa_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_index                  L2C_reg7_clean_index_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_way                    L2C_reg7_clean_way_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_inv_pa                 L2C_reg7_clean_inv_pa_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_inv_index              L2C_reg7_clean_inv_index_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg7_clean_inv_way                L2C_reg7_clean_inv_way_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown0                  L2C_reg9_d_lockdown0_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown0                  L2C_reg9_i_lockdown0_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown1                  L2C_reg9_d_lockdown1_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown1                  L2C_reg9_i_lockdown1_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown2                  L2C_reg9_d_lockdown2_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown2                  L2C_reg9_i_lockdown2_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown3                  L2C_reg9_d_lockdown3_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown3                  L2C_reg9_i_lockdown3_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown4                  L2C_reg9_d_lockdown4_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown4                  L2C_reg9_i_lockdown4_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown5                  L2C_reg9_d_lockdown5_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown5                  L2C_reg9_i_lockdown5_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown6                  L2C_reg9_d_lockdown6_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown6                  L2C_reg9_i_lockdown6_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_d_lockdown7                  L2C_reg9_d_lockdown7_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_i_lockdown7                  L2C_reg9_i_lockdown7_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_lock_line_en                 L2C_reg9_lock_line_en_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg9_unlock_way                   L2C_reg9_unlock_way_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg12_addr_filtering_start        L2C_reg12_addr_filtering_start_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg12_addr_filtering_end          L2C_reg12_addr_filtering_end_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg15_debug_ctrl                  L2C_reg15_debug_ctrl_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg15_prefetch_ctrl               L2C_reg15_prefetch_ctrl_REG(CA5L2C_BASE_PTR)
#define CA5L2C_reg15_power_ctrl                  L2C_reg15_power_ctrl_REG(CA5L2C_BASE_PTR)

/**
 * @}
 */ /* end of group L2C_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group L2C_Peripheral */

 /* ----------------------------------------------------------------------------
   -- LMEM
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LMEM_Peripheral LMEM
 * @{
 */

/** LMEM - Peripheral register structure */
typedef struct LMEM_MemMap {
  uint32_t PCCCR;                                  /**< Cache control register, offset: 0x0 */
  uint32_t PCCLCR;                                 /**< Cache line control register, offset: 0x4 */
  uint32_t PCCSAR;                                 /**< Cache search address register, offset: 0x8 */
  uint32_t PCCCVR;                                 /**< Cache read/write value register, offset: 0xC */
  uint8_t RESERVED_0[2032];
  uint32_t PSCCR;                                  /**< Cache control register, offset: 0x800 */
  uint32_t PSCLCR;                                 /**< Cache line control register, offset: 0x804 */
  uint32_t PSCSAR;                                 /**< Cache search address register, offset: 0x808 */
  uint32_t PSCCVR;                                 /**< Cache read/write value register, offset: 0x80C */
} volatile *LMEM_MemMapPtr;

/* ----------------------------------------------------------------------------
   -- LMEM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LMEM_Register_Accessor_Macros LMEM - Register accessor macros
 * @{
 */


/* LMEM - Register accessors */
#define LMEM_PCCCR_REG(base)                     ((base)->PCCCR)
#define LMEM_PCCLCR_REG(base)                    ((base)->PCCLCR)
#define LMEM_PCCSAR_REG(base)                    ((base)->PCCSAR)
#define LMEM_PCCCVR_REG(base)                    ((base)->PCCCVR)
#define LMEM_PSCCR_REG(base)                     ((base)->PSCCR)
#define LMEM_PSCLCR_REG(base)                    ((base)->PSCLCR)
#define LMEM_PSCSAR_REG(base)                    ((base)->PSCSAR)
#define LMEM_PSCCVR_REG(base)                    ((base)->PSCCVR)

/**
 * @}
 */ /* end of group LMEM_Register_Accessor_Macros */


/* ----------------------------------------------------------------------------
   -- LMEM Register Masks
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LMEM_Register_Masks LMEM Register Masks
 * @{
 */

/* PCCCR Bit Fields */
#define LMEM_PCCCR_ENCACHE_MASK                  0x1u
#define LMEM_PCCCR_ENCACHE_SHIFT                 0
#define LMEM_PCCCR_ENWRBUF_MASK                  0x2u
#define LMEM_PCCCR_ENWRBUF_SHIFT                 1
#define LMEM_PCCCR_INVW0_MASK                    0x1000000u
#define LMEM_PCCCR_INVW0_SHIFT                   24
#define LMEM_PCCCR_PUSHW0_MASK                   0x2000000u
#define LMEM_PCCCR_PUSHW0_SHIFT                  25
#define LMEM_PCCCR_INVW1_MASK                    0x4000000u
#define LMEM_PCCCR_INVW1_SHIFT                   26
#define LMEM_PCCCR_PUSHW1_MASK                   0x8000000u
#define LMEM_PCCCR_PUSHW1_SHIFT                  27
#define LMEM_PCCCR_GO_MASK                       0x80000000u
#define LMEM_PCCCR_GO_SHIFT                      31
/* PCCLCR Bit Fields */
#define LMEM_PCCLCR_LGO_MASK                     0x1u
#define LMEM_PCCLCR_LGO_SHIFT                    0
#define LMEM_PCCLCR_CACHEADDR_MASK               0x1FFCu
#define LMEM_PCCLCR_CACHEADDR_SHIFT              2
#define LMEM_PCCLCR_CACHEADDR(x)                 (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_CACHEADDR_SHIFT))&LMEM_PCCLCR_CACHEADDR_MASK)
#define LMEM_PCCLCR_WSEL_MASK                    0x4000u
#define LMEM_PCCLCR_WSEL_SHIFT                   14
#define LMEM_PCCLCR_TDSEL_MASK                   0x10000u
#define LMEM_PCCLCR_TDSEL_SHIFT                  16
#define LMEM_PCCLCR_LCIVB_MASK                   0x100000u
#define LMEM_PCCLCR_LCIVB_SHIFT                  20
#define LMEM_PCCLCR_LCIMB_MASK                   0x200000u
#define LMEM_PCCLCR_LCIMB_SHIFT                  21
#define LMEM_PCCLCR_LCWAY_MASK                   0x400000u
#define LMEM_PCCLCR_LCWAY_SHIFT                  22
#define LMEM_PCCLCR_LCMD_MASK                    0x3000000u
#define LMEM_PCCLCR_LCMD_SHIFT                   24
#define LMEM_PCCLCR_LCMD(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LCMD_SHIFT))&LMEM_PCCLCR_LCMD_MASK)
#define LMEM_PCCLCR_LADSEL_MASK                  0x4000000u
#define LMEM_PCCLCR_LADSEL_SHIFT                 26
#define LMEM_PCCLCR_LACC_MASK                    0x8000000u
#define LMEM_PCCLCR_LACC_SHIFT                   27
/* PCCSAR Bit Fields */
#define LMEM_PCCSAR_LGO_MASK                     0x1u
#define LMEM_PCCSAR_LGO_SHIFT                    0
#define LMEM_PCCSAR_PHYADDR_MASK                 0xFFFFFFFCu
#define LMEM_PCCSAR_PHYADDR_SHIFT                2
#define LMEM_PCCSAR_PHYADDR(x)                   (((uint32_t)(((uint32_t)(x))<<LMEM_PCCSAR_PHYADDR_SHIFT))&LMEM_PCCSAR_PHYADDR_MASK)
/* PCCCVR Bit Fields */
#define LMEM_PCCCVR_DATA_MASK                    0xFFFFFFFFu
#define LMEM_PCCCVR_DATA_SHIFT                   0
#define LMEM_PCCCVR_DATA(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCVR_DATA_SHIFT))&LMEM_PCCCVR_DATA_MASK)
/* PSCCR Bit Fields */
#define LMEM_PSCCR_ENCACHE_MASK                  0x1u
#define LMEM_PSCCR_ENCACHE_SHIFT                 0
#define LMEM_PSCCR_ENWRBUF_MASK                  0x2u
#define LMEM_PSCCR_ENWRBUF_SHIFT                 1
#define LMEM_PSCCR_INVW0_MASK                    0x1000000u
#define LMEM_PSCCR_INVW0_SHIFT                   24
#define LMEM_PSCCR_PUSHW0_MASK                   0x2000000u
#define LMEM_PSCCR_PUSHW0_SHIFT                  25
#define LMEM_PSCCR_INVW1_MASK                    0x4000000u
#define LMEM_PSCCR_INVW1_SHIFT                   26
#define LMEM_PSCCR_PUSHW1_MASK                   0x8000000u
#define LMEM_PSCCR_PUSHW1_SHIFT                  27
#define LMEM_PSCCR_GO_MASK                       0x80000000u
#define LMEM_PSCCR_GO_SHIFT                      31
/* PSCLCR Bit Fields */
#define LMEM_PSCLCR_LGO_MASK                     0x1u
#define LMEM_PSCLCR_LGO_SHIFT                    0
#define LMEM_PSCLCR_CACHEADDR_MASK               0x1FFCu
#define LMEM_PSCLCR_CACHEADDR_SHIFT              2
#define LMEM_PSCLCR_CACHEADDR(x)                 (((uint32_t)(((uint32_t)(x))<<LMEM_PSCLCR_CACHEADDR_SHIFT))&LMEM_PSCLCR_CACHEADDR_MASK)
#define LMEM_PSCLCR_WSEL_MASK                    0x4000u
#define LMEM_PSCLCR_WSEL_SHIFT                   14
#define LMEM_PSCLCR_TDSEL_MASK                   0x10000u
#define LMEM_PSCLCR_TDSEL_SHIFT                  16
#define LMEM_PSCLCR_LCIVB_MASK                   0x100000u
#define LMEM_PSCLCR_LCIVB_SHIFT                  20
#define LMEM_PSCLCR_LCIMB_MASK                   0x200000u
#define LMEM_PSCLCR_LCIMB_SHIFT                  21
#define LMEM_PSCLCR_LCWAY_MASK                   0x400000u
#define LMEM_PSCLCR_LCWAY_SHIFT                  22
#define LMEM_PSCLCR_LCMD_MASK                    0x3000000u
#define LMEM_PSCLCR_LCMD_SHIFT                   24
#define LMEM_PSCLCR_LCMD(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PSCLCR_LCMD_SHIFT))&LMEM_PSCLCR_LCMD_MASK)
#define LMEM_PSCLCR_LADSEL_MASK                  0x4000000u
#define LMEM_PSCLCR_LADSEL_SHIFT                 26
#define LMEM_PSCLCR_LACC_MASK                    0x8000000u
#define LMEM_PSCLCR_LACC_SHIFT                   27
/* PSCSAR Bit Fields */
#define LMEM_PSCSAR_LGO_MASK                     0x1u
#define LMEM_PSCSAR_LGO_SHIFT                    0
#define LMEM_PSCSAR_PHYADDR_MASK                 0xFFFFFFFCu
#define LMEM_PSCSAR_PHYADDR_SHIFT                2
#define LMEM_PSCSAR_PHYADDR(x)                   (((uint32_t)(((uint32_t)(x))<<LMEM_PSCSAR_PHYADDR_SHIFT))&LMEM_PSCSAR_PHYADDR_MASK)
/* PSCCVR Bit Fields */
#define LMEM_PSCCVR_DATA_MASK                    0xFFFFFFFFu
#define LMEM_PSCCVR_DATA_SHIFT                   0
#define LMEM_PSCCVR_DATA(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PSCCVR_DATA_SHIFT))&LMEM_PSCCVR_DATA_MASK)

/**
 * @}
 */ /* end of group LMEM_Register_Masks */


/* LMEM - Peripheral instance base addresses */
/** Peripheral LMEM base pointer */
#define LMEM_BASE_PTR                            ((LMEM_MemMapPtr)0xE0082000u)
/** Array initializer of LMEM peripheral base pointers */
#define LMEM_BASE_PTRS                           { LMEM_BASE_PTR }

/* ----------------------------------------------------------------------------
   -- LMEM - Register accessor macros
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup LMEM_Register_Accessor_Macros LMEM - Register accessor macros
 * @{
 */


/* LMEM - Register instance definitions */
/* LMEM */
#define LMEM_PCCCR                               LMEM_PCCCR_REG(LMEM_BASE_PTR)
#define LMEM_PCCLCR                              LMEM_PCCLCR_REG(LMEM_BASE_PTR)
#define LMEM_PCCSAR                              LMEM_PCCSAR_REG(LMEM_BASE_PTR)
#define LMEM_PCCCVR                              LMEM_PCCCVR_REG(LMEM_BASE_PTR)
#define LMEM_PSCCR                               LMEM_PSCCR_REG(LMEM_BASE_PTR)
#define LMEM_PSCLCR                              LMEM_PSCLCR_REG(LMEM_BASE_PTR)
#define LMEM_PSCSAR                              LMEM_PSCSAR_REG(LMEM_BASE_PTR)
#define LMEM_PSCCVR                              LMEM_PSCCVR_REG(LMEM_BASE_PTR)

/**
 * @}
 */ /* end of group LMEM_Register_Accessor_Macros */


/**
 * @}
 */ /* end of group LMEM_Peripheral */

/*
** End of section using anonymous unions
*/

#if defined(__GNUC__)
  /* leave anonymous unions enabled */
#elif defined(__IAR_SYSTEMS_ICC__)
  #pragma language=default
#elif defined(__ARMCC_VERSION)
  #pragma pop
#else
  #error Not supported compiler type
#endif

/**
 * @}
 */ /* end of group Peripheral_defines */


/* ----------------------------------------------------------------------------
   -- Backward Compatibility
   ---------------------------------------------------------------------------- */

/**
 * @addtogroup Backward_Compatibility_Symbols Backward Compatibility
 * @{
 */

/* No backward compatibility issues. */

/**
 * @}
 */ /* end of group Backward_Compatibility_Symbols */


#else /* #if !defined(MCU_MVF50GS10MK50) */
  /* There is already included the same memory map. Check if it is compatible (has the same major version) */
  #if (MCU_MEM_MAP_VERSION != 0x0000u)
    #if (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING))
      #warning There are included two not compatible versions of memory maps. Please check possible differences.
    #endif /* (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING)) */
  #endif /* (MCU_MEM_MAP_VERSION != 0x0000u) */
#endif  /* #if !defined(MCU_MVF50GS10MK50) */

/* MVF50GS10MK50.h, eof. */
